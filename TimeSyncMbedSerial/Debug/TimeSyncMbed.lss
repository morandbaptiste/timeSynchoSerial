
TimeSyncMbed.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000e70c  00000000  00000000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     000000c4  200000b0  0000e70c  000180b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00004318  20000174  0000e7d0  00018174  2**2
                  ALLOC
  3 .heap         00001b74  2000448c  00012ae8  00018174  2**0
                  ALLOC
  4 .stack        00002000  20006000  0001465c  00018174  2**0
                  ALLOC
  5 .ARM.attributes 00000028  00000000  00000000  00018174  2**0
                  CONTENTS, READONLY
  6 .comment      000000cb  00000000  00000000  0001819c  2**0
                  CONTENTS, READONLY
  7 .debug_info   0001ba03  00000000  00000000  00018267  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002e69  00000000  00000000  00033c6a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000027c3  00000000  00000000  00036ad3  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000004b0  00000000  00000000  00039296  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000438  00000000  00000000  00039746  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001c5ba  00000000  00000000  00039b7e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0001005f  00000000  00000000  00056138  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0008550b  00000000  00000000  00066197  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002398  00000000  00000000  000eb6a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .stabstr      00000076  00000000  00000000  000eda3c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <_sfixed>:
       0:	20008000 	.word	0x20008000
       4:	00002ca5 	.word	0x00002ca5
       8:	00002ca1 	.word	0x00002ca1
       c:	00002ca1 	.word	0x00002ca1
	...
      2c:	00000ef5 	.word	0x00000ef5
	...
      38:	00000f61 	.word	0x00000f61
      3c:	00000fa5 	.word	0x00000fa5
      40:	00002ca1 	.word	0x00002ca1
      44:	00002ca1 	.word	0x00002ca1
      48:	00002ca1 	.word	0x00002ca1
      4c:	00001641 	.word	0x00001641
      50:	00002d65 	.word	0x00002d65
      54:	00002ca1 	.word	0x00002ca1
      58:	00002ca1 	.word	0x00002ca1
      5c:	00000000 	.word	0x00000000
      60:	00002ca1 	.word	0x00002ca1
      64:	00002f11 	.word	0x00002f11
      68:	00002f21 	.word	0x00002f21
      6c:	00002f31 	.word	0x00002f31
      70:	00002f41 	.word	0x00002f41
	...
      7c:	00002ca1 	.word	0x00002ca1
      80:	00002ca1 	.word	0x00002ca1
      84:	00002ca1 	.word	0x00002ca1
      88:	00004de9 	.word	0x00004de9
      8c:	00004df5 	.word	0x00004df5
      90:	00004e01 	.word	0x00004e01
	...
      ac:	00002ca1 	.word	0x00002ca1
      b0:	00000000 	.word	0x00000000

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	20000174 	.word	0x20000174
      d4:	00000000 	.word	0x00000000
      d8:	0000e70c 	.word	0x0000e70c

000000dc <frame_dummy>:
      dc:	b508      	push	{r3, lr}
      de:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4807      	ldr	r0, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4908      	ldr	r1, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd08      	pop	{r3, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	0000e70c 	.word	0x0000e70c
     108:	20000178 	.word	0x20000178
     10c:	0000e70c 	.word	0x0000e70c
     110:	00000000 	.word	0x00000000

00000114 <prvCopyDataToQueue>:

#endif /* configUSE_TRACE_FACILITY */
/*-----------------------------------------------------------*/

static void prvCopyDataToQueue( xQUEUE *pxQueue, const void *pvItemToQueue, portBASE_TYPE xPosition )
{
     114:	b510      	push	{r4, lr}
     116:	1c04      	adds	r4, r0, #0
	if( pxQueue->uxItemSize == ( unsigned portBASE_TYPE ) 0 )
     118:	6c03      	ldr	r3, [r0, #64]	; 0x40
     11a:	2b00      	cmp	r3, #0
     11c:	d108      	bne.n	130 <prvCopyDataToQueue+0x1c>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
     11e:	6803      	ldr	r3, [r0, #0]
     120:	2b00      	cmp	r3, #0
     122:	d126      	bne.n	172 <prvCopyDataToQueue+0x5e>
			{
				/* The mutex is no longer being held. */
				vTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
     124:	6840      	ldr	r0, [r0, #4]
     126:	4b15      	ldr	r3, [pc, #84]	; (17c <prvCopyDataToQueue+0x68>)
     128:	4798      	blx	r3
				pxQueue->pxMutexHolder = NULL;
     12a:	2300      	movs	r3, #0
     12c:	6063      	str	r3, [r4, #4]
     12e:	e020      	b.n	172 <prvCopyDataToQueue+0x5e>
			}
		}
		#endif
	}
	else if( xPosition == queueSEND_TO_BACK )
     130:	2a00      	cmp	r2, #0
     132:	d10e      	bne.n	152 <prvCopyDataToQueue+0x3e>
	{
		memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
     134:	6880      	ldr	r0, [r0, #8]
     136:	1c1a      	adds	r2, r3, #0
     138:	4b11      	ldr	r3, [pc, #68]	; (180 <prvCopyDataToQueue+0x6c>)
     13a:	4798      	blx	r3
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
     13c:	68a3      	ldr	r3, [r4, #8]
     13e:	6c22      	ldr	r2, [r4, #64]	; 0x40
     140:	4694      	mov	ip, r2
     142:	4463      	add	r3, ip
     144:	60a3      	str	r3, [r4, #8]
		if( pxQueue->pcWriteTo >= pxQueue->pcTail )
     146:	6862      	ldr	r2, [r4, #4]
     148:	4293      	cmp	r3, r2
     14a:	d312      	bcc.n	172 <prvCopyDataToQueue+0x5e>
		{
			pxQueue->pcWriteTo = pxQueue->pcHead;
     14c:	6823      	ldr	r3, [r4, #0]
     14e:	60a3      	str	r3, [r4, #8]
     150:	e00f      	b.n	172 <prvCopyDataToQueue+0x5e>
		}
	}
	else
	{
		memcpy( ( void * ) pxQueue->pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
     152:	68c0      	ldr	r0, [r0, #12]
     154:	1c1a      	adds	r2, r3, #0
     156:	4b0a      	ldr	r3, [pc, #40]	; (180 <prvCopyDataToQueue+0x6c>)
     158:	4798      	blx	r3
		pxQueue->pcReadFrom -= pxQueue->uxItemSize;
     15a:	6c23      	ldr	r3, [r4, #64]	; 0x40
     15c:	425b      	negs	r3, r3
     15e:	68e2      	ldr	r2, [r4, #12]
     160:	18d2      	adds	r2, r2, r3
     162:	60e2      	str	r2, [r4, #12]
		if( pxQueue->pcReadFrom < pxQueue->pcHead )
     164:	6821      	ldr	r1, [r4, #0]
     166:	428a      	cmp	r2, r1
     168:	d203      	bcs.n	172 <prvCopyDataToQueue+0x5e>
		{
			pxQueue->pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
     16a:	6862      	ldr	r2, [r4, #4]
     16c:	4694      	mov	ip, r2
     16e:	4463      	add	r3, ip
     170:	60e3      	str	r3, [r4, #12]
		}
	}

	++( pxQueue->uxMessagesWaiting );
     172:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     174:	3301      	adds	r3, #1
     176:	63a3      	str	r3, [r4, #56]	; 0x38
}
     178:	bd10      	pop	{r4, pc}
     17a:	46c0      	nop			; (mov r8, r8)
     17c:	00000e6d 	.word	0x00000e6d
     180:	0000898f 	.word	0x0000898f

00000184 <prvCopyDataFromQueue>:
/*-----------------------------------------------------------*/

static void prvCopyDataFromQueue( xQUEUE * const pxQueue, const void *pvBuffer )
{
     184:	b538      	push	{r3, r4, r5, lr}
	if( pxQueue->uxQueueType != queueQUEUE_IS_MUTEX )
     186:	6804      	ldr	r4, [r0, #0]
     188:	2c00      	cmp	r4, #0
     18a:	d00c      	beq.n	1a6 <prvCopyDataFromQueue+0x22>
	{
		pxQueue->pcReadFrom += pxQueue->uxItemSize;
     18c:	6c02      	ldr	r2, [r0, #64]	; 0x40
     18e:	68c3      	ldr	r3, [r0, #12]
     190:	189b      	adds	r3, r3, r2
     192:	60c3      	str	r3, [r0, #12]
		if( pxQueue->pcReadFrom >= pxQueue->pcTail )
     194:	6845      	ldr	r5, [r0, #4]
     196:	42ab      	cmp	r3, r5
     198:	d300      	bcc.n	19c <prvCopyDataFromQueue+0x18>
		{
			pxQueue->pcReadFrom = pxQueue->pcHead;
     19a:	60c4      	str	r4, [r0, #12]
     19c:	1c0b      	adds	r3, r1, #0
		}
		memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->pcReadFrom, ( size_t ) pxQueue->uxItemSize );
     19e:	68c1      	ldr	r1, [r0, #12]
     1a0:	1c18      	adds	r0, r3, #0
     1a2:	4b01      	ldr	r3, [pc, #4]	; (1a8 <prvCopyDataFromQueue+0x24>)
     1a4:	4798      	blx	r3
	}
}
     1a6:	bd38      	pop	{r3, r4, r5, pc}
     1a8:	0000898f 	.word	0x0000898f

000001ac <prvUnlockQueue>:
/*-----------------------------------------------------------*/

static void prvUnlockQueue( xQUEUE *pxQueue )
{
     1ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     1ae:	1c04      	adds	r4, r0, #0

	/* The lock counts contains the number of extra data items placed or
	removed from the queue while the queue was locked.  When a queue is
	locked items can be added or removed, but the event lists cannot be
	updated. */
	taskENTER_CRITICAL();
     1b0:	4b21      	ldr	r3, [pc, #132]	; (238 <prvUnlockQueue+0x8c>)
     1b2:	4798      	blx	r3
	{
		/* See if data was added to the queue while it was locked. */
		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
     1b4:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     1b6:	2b00      	cmp	r3, #0
     1b8:	dd16      	ble.n	1e8 <prvUnlockQueue+0x3c>
			}
			#else /* configUSE_QUEUE_SETS */
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     1ba:	6a63      	ldr	r3, [r4, #36]	; 0x24
     1bc:	2b00      	cmp	r3, #0
     1be:	d104      	bne.n	1ca <prvUnlockQueue+0x1e>
     1c0:	e012      	b.n	1e8 <prvUnlockQueue+0x3c>
     1c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
     1c4:	2b00      	cmp	r3, #0
     1c6:	d104      	bne.n	1d2 <prvUnlockQueue+0x26>
     1c8:	e00e      	b.n	1e8 <prvUnlockQueue+0x3c>
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     1ca:	1c25      	adds	r5, r4, #0
     1cc:	3524      	adds	r5, #36	; 0x24
     1ce:	4f1b      	ldr	r7, [pc, #108]	; (23c <prvUnlockQueue+0x90>)
					{
						/* The task waiting has a higher priority so record that a
						context	switch is required. */
						vTaskMissedYield();
     1d0:	4e1b      	ldr	r6, [pc, #108]	; (240 <prvUnlockQueue+0x94>)
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     1d2:	1c28      	adds	r0, r5, #0
     1d4:	47b8      	blx	r7
     1d6:	2800      	cmp	r0, #0
     1d8:	d000      	beq.n	1dc <prvUnlockQueue+0x30>
					{
						/* The task waiting has a higher priority so record that a
						context	switch is required. */
						vTaskMissedYield();
     1da:	47b0      	blx	r6
					break;
				}
			}
			#endif /* configUSE_QUEUE_SETS */

			--( pxQueue->xTxLock );
     1dc:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     1de:	3b01      	subs	r3, #1
     1e0:	64a3      	str	r3, [r4, #72]	; 0x48
	locked items can be added or removed, but the event lists cannot be
	updated. */
	taskENTER_CRITICAL();
	{
		/* See if data was added to the queue while it was locked. */
		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
     1e2:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     1e4:	2b00      	cmp	r3, #0
     1e6:	dcec      	bgt.n	1c2 <prvUnlockQueue+0x16>
			#endif /* configUSE_QUEUE_SETS */

			--( pxQueue->xTxLock );
		}

		pxQueue->xTxLock = queueUNLOCKED;
     1e8:	2301      	movs	r3, #1
     1ea:	425b      	negs	r3, r3
     1ec:	64a3      	str	r3, [r4, #72]	; 0x48
	}
	taskEXIT_CRITICAL();
     1ee:	4b15      	ldr	r3, [pc, #84]	; (244 <prvUnlockQueue+0x98>)
     1f0:	4798      	blx	r3

	/* Do the same for the Rx lock. */
	taskENTER_CRITICAL();
     1f2:	4b11      	ldr	r3, [pc, #68]	; (238 <prvUnlockQueue+0x8c>)
     1f4:	4798      	blx	r3
	{
		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
     1f6:	6c63      	ldr	r3, [r4, #68]	; 0x44
     1f8:	2b00      	cmp	r3, #0
     1fa:	dd16      	ble.n	22a <prvUnlockQueue+0x7e>
		{
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     1fc:	6923      	ldr	r3, [r4, #16]
     1fe:	2b00      	cmp	r3, #0
     200:	d104      	bne.n	20c <prvUnlockQueue+0x60>
     202:	e012      	b.n	22a <prvUnlockQueue+0x7e>
     204:	6923      	ldr	r3, [r4, #16]
     206:	2b00      	cmp	r3, #0
     208:	d104      	bne.n	214 <prvUnlockQueue+0x68>
     20a:	e00e      	b.n	22a <prvUnlockQueue+0x7e>
			{
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
     20c:	1c25      	adds	r5, r4, #0
     20e:	3510      	adds	r5, #16
     210:	4f0a      	ldr	r7, [pc, #40]	; (23c <prvUnlockQueue+0x90>)
				{
					vTaskMissedYield();
     212:	4e0b      	ldr	r6, [pc, #44]	; (240 <prvUnlockQueue+0x94>)
	{
		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
		{
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
			{
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
     214:	1c28      	adds	r0, r5, #0
     216:	47b8      	blx	r7
     218:	2800      	cmp	r0, #0
     21a:	d000      	beq.n	21e <prvUnlockQueue+0x72>
				{
					vTaskMissedYield();
     21c:	47b0      	blx	r6
				}

				--( pxQueue->xRxLock );
     21e:	6c63      	ldr	r3, [r4, #68]	; 0x44
     220:	3b01      	subs	r3, #1
     222:	6463      	str	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();

	/* Do the same for the Rx lock. */
	taskENTER_CRITICAL();
	{
		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
     224:	6c63      	ldr	r3, [r4, #68]	; 0x44
     226:	2b00      	cmp	r3, #0
     228:	dcec      	bgt.n	204 <prvUnlockQueue+0x58>
			{
				break;
			}
		}

		pxQueue->xRxLock = queueUNLOCKED;
     22a:	2301      	movs	r3, #1
     22c:	425b      	negs	r3, r3
     22e:	6463      	str	r3, [r4, #68]	; 0x44
	}
	taskEXIT_CRITICAL();
     230:	4b04      	ldr	r3, [pc, #16]	; (244 <prvUnlockQueue+0x98>)
     232:	4798      	blx	r3
}
     234:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     236:	46c0      	nop			; (mov r8, r8)
     238:	00000f35 	.word	0x00000f35
     23c:	00000ccd 	.word	0x00000ccd
     240:	00000dd9 	.word	0x00000dd9
     244:	00000f4d 	.word	0x00000f4d

00000248 <xQueueGenericReset>:
	}														\
	taskEXIT_CRITICAL()
/*-----------------------------------------------------------*/

portBASE_TYPE xQueueGenericReset( xQueueHandle xQueue, portBASE_TYPE xNewQueue )
{
     248:	b538      	push	{r3, r4, r5, lr}
xQUEUE *pxQueue;

	pxQueue = ( xQUEUE * ) xQueue;
	configASSERT( pxQueue );
     24a:	2800      	cmp	r0, #0
     24c:	d101      	bne.n	252 <xQueueGenericReset+0xa>
     24e:	b672      	cpsid	i
     250:	e7fe      	b.n	250 <xQueueGenericReset+0x8>
     252:	1c0d      	adds	r5, r1, #0
     254:	1c04      	adds	r4, r0, #0

	taskENTER_CRITICAL();
     256:	4b15      	ldr	r3, [pc, #84]	; (2ac <xQueueGenericReset+0x64>)
     258:	4798      	blx	r3
	{
		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
     25a:	6822      	ldr	r2, [r4, #0]
     25c:	6c21      	ldr	r1, [r4, #64]	; 0x40
     25e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
     260:	434b      	muls	r3, r1
     262:	18d0      	adds	r0, r2, r3
     264:	6060      	str	r0, [r4, #4]
		pxQueue->uxMessagesWaiting = ( unsigned portBASE_TYPE ) 0U;
     266:	2000      	movs	r0, #0
     268:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
     26a:	60a2      	str	r2, [r4, #8]
		pxQueue->pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( unsigned portBASE_TYPE ) 1U ) * pxQueue->uxItemSize );
     26c:	1a5b      	subs	r3, r3, r1
     26e:	18d3      	adds	r3, r2, r3
     270:	60e3      	str	r3, [r4, #12]
		pxQueue->xRxLock = queueUNLOCKED;
     272:	2301      	movs	r3, #1
     274:	425b      	negs	r3, r3
     276:	6463      	str	r3, [r4, #68]	; 0x44
		pxQueue->xTxLock = queueUNLOCKED;
     278:	64a3      	str	r3, [r4, #72]	; 0x48

		if( xNewQueue == pdFALSE )
     27a:	2d00      	cmp	r5, #0
     27c:	d10b      	bne.n	296 <xQueueGenericReset+0x4e>
			/* If there are tasks blocked waiting to read from the queue, then
			the tasks will remain blocked as after this function exits the queue
			will still be empty.  If there are tasks blocked waiting to	write to
			the queue, then one should be unblocked as after this function exits
			it will be possible to write to it. */
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     27e:	6923      	ldr	r3, [r4, #16]
     280:	2b00      	cmp	r3, #0
     282:	d00f      	beq.n	2a4 <xQueueGenericReset+0x5c>
			{
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
     284:	1c20      	adds	r0, r4, #0
     286:	3010      	adds	r0, #16
     288:	4b09      	ldr	r3, [pc, #36]	; (2b0 <xQueueGenericReset+0x68>)
     28a:	4798      	blx	r3
     28c:	2801      	cmp	r0, #1
     28e:	d109      	bne.n	2a4 <xQueueGenericReset+0x5c>
				{
					portYIELD_WITHIN_API();
     290:	4b08      	ldr	r3, [pc, #32]	; (2b4 <xQueueGenericReset+0x6c>)
     292:	4798      	blx	r3
     294:	e006      	b.n	2a4 <xQueueGenericReset+0x5c>
			}
		}
		else
		{
			/* Ensure the event queues start in the correct state. */
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
     296:	1c20      	adds	r0, r4, #0
     298:	3010      	adds	r0, #16
     29a:	4d07      	ldr	r5, [pc, #28]	; (2b8 <xQueueGenericReset+0x70>)
     29c:	47a8      	blx	r5
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
     29e:	1c20      	adds	r0, r4, #0
     2a0:	3024      	adds	r0, #36	; 0x24
     2a2:	47a8      	blx	r5
		}
	}
	taskEXIT_CRITICAL();
     2a4:	4b05      	ldr	r3, [pc, #20]	; (2bc <xQueueGenericReset+0x74>)
     2a6:	4798      	blx	r3

	/* A value is returned for calling semantic consistency with previous
	versions. */
	return pdPASS;
}
     2a8:	2001      	movs	r0, #1
     2aa:	bd38      	pop	{r3, r4, r5, pc}
     2ac:	00000f35 	.word	0x00000f35
     2b0:	00000ccd 	.word	0x00000ccd
     2b4:	00000f1d 	.word	0x00000f1d
     2b8:	00000611 	.word	0x00000611
     2bc:	00000f4d 	.word	0x00000f4d

000002c0 <xQueueGenericCreate>:
/*-----------------------------------------------------------*/

xQueueHandle xQueueGenericCreate( unsigned portBASE_TYPE uxQueueLength, unsigned portBASE_TYPE uxItemSize, unsigned char ucQueueType )
{
     2c0:	b570      	push	{r4, r5, r6, lr}
	/* Remove compiler warnings about unused parameters should
	configUSE_TRACE_FACILITY not be set to 1. */
	( void ) ucQueueType;

	/* Allocate the new queue structure. */
	if( uxQueueLength > ( unsigned portBASE_TYPE ) 0 )
     2c2:	2800      	cmp	r0, #0
     2c4:	d013      	beq.n	2ee <xQueueGenericCreate+0x2e>
     2c6:	1c0e      	adds	r6, r1, #0
     2c8:	1c05      	adds	r5, r0, #0
	{
		pxNewQueue = ( xQUEUE * ) pvPortMalloc( sizeof( xQUEUE ) );
     2ca:	204c      	movs	r0, #76	; 0x4c
     2cc:	4b0d      	ldr	r3, [pc, #52]	; (304 <xQueueGenericCreate+0x44>)
     2ce:	4798      	blx	r3
     2d0:	1e04      	subs	r4, r0, #0
		if( pxNewQueue != NULL )
     2d2:	d00c      	beq.n	2ee <xQueueGenericCreate+0x2e>
		{
			/* Create the list of pointers to queue items.  The queue is one byte
			longer than asked for to make wrap checking easier/faster. */
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ) + ( size_t ) 1;
     2d4:	1c30      	adds	r0, r6, #0
     2d6:	4368      	muls	r0, r5
     2d8:	3001      	adds	r0, #1

			pxNewQueue->pcHead = ( signed char * ) pvPortMalloc( xQueueSizeInBytes );
     2da:	4b0a      	ldr	r3, [pc, #40]	; (304 <xQueueGenericCreate+0x44>)
     2dc:	4798      	blx	r3
     2de:	6020      	str	r0, [r4, #0]
			if( pxNewQueue->pcHead != NULL )
     2e0:	2800      	cmp	r0, #0
     2e2:	d106      	bne.n	2f2 <xQueueGenericCreate+0x32>
				xReturn = pxNewQueue;
			}
			else
			{
				traceQUEUE_CREATE_FAILED( ucQueueType );
				vPortFree( pxNewQueue );
     2e4:	1c20      	adds	r0, r4, #0
     2e6:	4b08      	ldr	r3, [pc, #32]	; (308 <xQueueGenericCreate+0x48>)
     2e8:	4798      	blx	r3
     2ea:	e000      	b.n	2ee <xQueueGenericCreate+0x2e>
			}
		}
	}

	configASSERT( xReturn );
     2ec:	e7fe      	b.n	2ec <xQueueGenericCreate+0x2c>
     2ee:	b672      	cpsid	i
     2f0:	e7fc      	b.n	2ec <xQueueGenericCreate+0x2c>
			pxNewQueue->pcHead = ( signed char * ) pvPortMalloc( xQueueSizeInBytes );
			if( pxNewQueue->pcHead != NULL )
			{
				/* Initialise the queue members as described above where the
				queue type is defined. */
				pxNewQueue->uxLength = uxQueueLength;
     2f2:	63e5      	str	r5, [r4, #60]	; 0x3c
				pxNewQueue->uxItemSize = uxItemSize;
     2f4:	6426      	str	r6, [r4, #64]	; 0x40
				xQueueGenericReset( pxNewQueue, pdTRUE );
     2f6:	1c20      	adds	r0, r4, #0
     2f8:	2101      	movs	r1, #1
     2fa:	4b04      	ldr	r3, [pc, #16]	; (30c <xQueueGenericCreate+0x4c>)
     2fc:	4798      	blx	r3
	}

	configASSERT( xReturn );

	return xReturn;
}
     2fe:	1c20      	adds	r0, r4, #0
     300:	bd70      	pop	{r4, r5, r6, pc}
     302:	46c0      	nop			; (mov r8, r8)
     304:	00001029 	.word	0x00001029
     308:	00001091 	.word	0x00001091
     30c:	00000249 	.word	0x00000249

00000310 <xQueueGenericSend>:

#endif /* configUSE_COUNTING_SEMAPHORES */
/*-----------------------------------------------------------*/

signed portBASE_TYPE xQueueGenericSend( xQueueHandle xQueue, const void * const pvItemToQueue, portTickType xTicksToWait, portBASE_TYPE xCopyPosition )
{
     310:	b5f0      	push	{r4, r5, r6, r7, lr}
     312:	4657      	mov	r7, sl
     314:	b480      	push	{r7}
     316:	b086      	sub	sp, #24
     318:	9203      	str	r2, [sp, #12]
signed portBASE_TYPE xEntryTimeSet = pdFALSE;
xTimeOutType xTimeOut;
xQUEUE *pxQueue;

	pxQueue = ( xQUEUE * ) xQueue;
	configASSERT( pxQueue );
     31a:	2800      	cmp	r0, #0
     31c:	d101      	bne.n	322 <xQueueGenericSend+0x12>
     31e:	b672      	cpsid	i
     320:	e7fe      	b.n	320 <xQueueGenericSend+0x10>
     322:	2700      	movs	r7, #0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 0U ) ) );
     324:	2900      	cmp	r1, #0
     326:	d105      	bne.n	334 <xQueueGenericSend+0x24>
     328:	6c02      	ldr	r2, [r0, #64]	; 0x40
     32a:	2a00      	cmp	r2, #0
     32c:	d001      	beq.n	332 <xQueueGenericSend+0x22>
     32e:	b672      	cpsid	i
     330:	e7fe      	b.n	330 <xQueueGenericSend+0x20>
     332:	2700      	movs	r7, #0
     334:	9302      	str	r3, [sp, #8]
     336:	9101      	str	r1, [sp, #4]
     338:	1c04      	adds	r4, r0, #0
	/* This function relaxes the coding standard somewhat to allow return
	statements within the function itself.  This is done in the interest
	of execution time efficiency. */
	for( ;; )
	{
		taskENTER_CRITICAL();
     33a:	4d33      	ldr	r5, [pc, #204]	; (408 <xQueueGenericSend+0xf8>)
     33c:	47a8      	blx	r5
		{
			/* Is there room on the queue now?  To be running we must be
			the highest priority task wanting to access the queue. */
			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
     33e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     340:	6be2      	ldr	r2, [r4, #60]	; 0x3c
     342:	4293      	cmp	r3, r2
     344:	d213      	bcs.n	36e <xQueueGenericSend+0x5e>
			{
				traceQUEUE_SEND( pxQueue );
				prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
     346:	1c20      	adds	r0, r4, #0
     348:	9901      	ldr	r1, [sp, #4]
     34a:	9a02      	ldr	r2, [sp, #8]
     34c:	4b2f      	ldr	r3, [pc, #188]	; (40c <xQueueGenericSend+0xfc>)
     34e:	4798      	blx	r3
				}
				#else /* configUSE_QUEUE_SETS */
				{
					/* If there was a task waiting for data to arrive on the
					queue then unblock it now. */
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     350:	6a63      	ldr	r3, [r4, #36]	; 0x24
     352:	2b00      	cmp	r3, #0
     354:	d007      	beq.n	366 <xQueueGenericSend+0x56>
					{
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
     356:	1c20      	adds	r0, r4, #0
     358:	3024      	adds	r0, #36	; 0x24
     35a:	4b2d      	ldr	r3, [pc, #180]	; (410 <xQueueGenericSend+0x100>)
     35c:	4798      	blx	r3
     35e:	2801      	cmp	r0, #1
     360:	d101      	bne.n	366 <xQueueGenericSend+0x56>
						{
							/* The unblocked task has a priority higher than
							our own so yield immediately.  Yes it is ok to do
							this from within the critical section - the kernel
							takes care of that. */
							portYIELD_WITHIN_API();
     362:	4b2c      	ldr	r3, [pc, #176]	; (414 <xQueueGenericSend+0x104>)
     364:	4798      	blx	r3
						}
					}
				}
				#endif /* configUSE_QUEUE_SETS */

				taskEXIT_CRITICAL();
     366:	4b2c      	ldr	r3, [pc, #176]	; (418 <xQueueGenericSend+0x108>)
     368:	4798      	blx	r3

				/* Return to the original privilege level before exiting the
				function. */
				return pdPASS;
     36a:	2001      	movs	r0, #1
     36c:	e048      	b.n	400 <xQueueGenericSend+0xf0>
			}
			else
			{
				if( xTicksToWait == ( portTickType ) 0 )
     36e:	9b03      	ldr	r3, [sp, #12]
     370:	2b00      	cmp	r3, #0
     372:	d103      	bne.n	37c <xQueueGenericSend+0x6c>
				{
					/* The queue was full and no block time is specified (or
					the block time has expired) so leave now. */
					taskEXIT_CRITICAL();
     374:	4b28      	ldr	r3, [pc, #160]	; (418 <xQueueGenericSend+0x108>)
     376:	4798      	blx	r3

					/* Return to the original privilege level before exiting
					the function. */
					traceQUEUE_SEND_FAILED( pxQueue );
					return errQUEUE_FULL;
     378:	2000      	movs	r0, #0
     37a:	e041      	b.n	400 <xQueueGenericSend+0xf0>
				}
				else if( xEntryTimeSet == pdFALSE )
     37c:	2f00      	cmp	r7, #0
     37e:	d103      	bne.n	388 <xQueueGenericSend+0x78>
				{
					/* The queue was full and a block time was specified so
					configure the timeout structure. */
					vTaskSetTimeOutState( &xTimeOut );
     380:	a804      	add	r0, sp, #16
     382:	4b26      	ldr	r3, [pc, #152]	; (41c <xQueueGenericSend+0x10c>)
     384:	4798      	blx	r3
					xEntryTimeSet = pdTRUE;
     386:	3701      	adds	r7, #1
				}
			}
		}
		taskEXIT_CRITICAL();
     388:	4b23      	ldr	r3, [pc, #140]	; (418 <xQueueGenericSend+0x108>)
     38a:	4798      	blx	r3

		/* Interrupts and other tasks can send to and receive from the queue
		now the critical section has been exited. */

		vTaskSuspendAll();
     38c:	4b24      	ldr	r3, [pc, #144]	; (420 <xQueueGenericSend+0x110>)
     38e:	4798      	blx	r3
		prvLockQueue( pxQueue );
     390:	4b1d      	ldr	r3, [pc, #116]	; (408 <xQueueGenericSend+0xf8>)
     392:	4798      	blx	r3
     394:	6c63      	ldr	r3, [r4, #68]	; 0x44
     396:	3301      	adds	r3, #1
     398:	d101      	bne.n	39e <xQueueGenericSend+0x8e>
     39a:	2300      	movs	r3, #0
     39c:	6463      	str	r3, [r4, #68]	; 0x44
     39e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     3a0:	3301      	adds	r3, #1
     3a2:	d101      	bne.n	3a8 <xQueueGenericSend+0x98>
     3a4:	2300      	movs	r3, #0
     3a6:	64a3      	str	r3, [r4, #72]	; 0x48
     3a8:	4b1b      	ldr	r3, [pc, #108]	; (418 <xQueueGenericSend+0x108>)
     3aa:	4798      	blx	r3

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
     3ac:	a804      	add	r0, sp, #16
     3ae:	a903      	add	r1, sp, #12
     3b0:	4b1c      	ldr	r3, [pc, #112]	; (424 <xQueueGenericSend+0x114>)
     3b2:	4798      	blx	r3
     3b4:	2800      	cmp	r0, #0
     3b6:	d11d      	bne.n	3f4 <xQueueGenericSend+0xe4>

static signed portBASE_TYPE prvIsQueueFull( const xQUEUE *pxQueue )
{
signed portBASE_TYPE xReturn;

	taskENTER_CRITICAL();
     3b8:	4b13      	ldr	r3, [pc, #76]	; (408 <xQueueGenericSend+0xf8>)
     3ba:	4798      	blx	r3
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
     3bc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     3be:	469a      	mov	sl, r3
     3c0:	6be6      	ldr	r6, [r4, #60]	; 0x3c
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
     3c2:	4b15      	ldr	r3, [pc, #84]	; (418 <xQueueGenericSend+0x108>)
     3c4:	4798      	blx	r3
		prvLockQueue( pxQueue );

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
		{
			if( prvIsQueueFull( pxQueue ) != pdFALSE )
     3c6:	45b2      	cmp	sl, r6
     3c8:	d10e      	bne.n	3e8 <xQueueGenericSend+0xd8>
			{
				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
     3ca:	1c20      	adds	r0, r4, #0
     3cc:	3010      	adds	r0, #16
     3ce:	9903      	ldr	r1, [sp, #12]
     3d0:	4b15      	ldr	r3, [pc, #84]	; (428 <xQueueGenericSend+0x118>)
     3d2:	4798      	blx	r3
				/* Unlocking the queue means queue events can effect the
				event list.  It is possible	that interrupts occurring now
				remove this task from the event	list again - but as the
				scheduler is suspended the task will go onto the pending
				ready last instead of the actual ready list. */
				prvUnlockQueue( pxQueue );
     3d4:	1c20      	adds	r0, r4, #0
     3d6:	4b15      	ldr	r3, [pc, #84]	; (42c <xQueueGenericSend+0x11c>)
     3d8:	4798      	blx	r3
				/* Resuming the scheduler will move tasks from the pending
				ready list into the ready list - so it is feasible that this
				task is already in a ready list before it yields - in which
				case the yield will not cause a context switch unless there
				is also a higher priority task in the pending ready list. */
				if( xTaskResumeAll() == pdFALSE )
     3da:	4b15      	ldr	r3, [pc, #84]	; (430 <xQueueGenericSend+0x120>)
     3dc:	4798      	blx	r3
     3de:	2800      	cmp	r0, #0
     3e0:	d1ac      	bne.n	33c <xQueueGenericSend+0x2c>
				{
					portYIELD_WITHIN_API();
     3e2:	4b0c      	ldr	r3, [pc, #48]	; (414 <xQueueGenericSend+0x104>)
     3e4:	4798      	blx	r3
     3e6:	e7a9      	b.n	33c <xQueueGenericSend+0x2c>
				}
			}
			else
			{
				/* Try again. */
				prvUnlockQueue( pxQueue );
     3e8:	1c20      	adds	r0, r4, #0
     3ea:	4b10      	ldr	r3, [pc, #64]	; (42c <xQueueGenericSend+0x11c>)
     3ec:	4798      	blx	r3
				( void ) xTaskResumeAll();
     3ee:	4b10      	ldr	r3, [pc, #64]	; (430 <xQueueGenericSend+0x120>)
     3f0:	4798      	blx	r3
     3f2:	e7a3      	b.n	33c <xQueueGenericSend+0x2c>
			}
		}
		else
		{
			/* The timeout has expired. */
			prvUnlockQueue( pxQueue );
     3f4:	1c20      	adds	r0, r4, #0
     3f6:	4b0d      	ldr	r3, [pc, #52]	; (42c <xQueueGenericSend+0x11c>)
     3f8:	4798      	blx	r3
			( void ) xTaskResumeAll();
     3fa:	4b0d      	ldr	r3, [pc, #52]	; (430 <xQueueGenericSend+0x120>)
     3fc:	4798      	blx	r3

			/* Return to the original privilege level before exiting the
			function. */
			traceQUEUE_SEND_FAILED( pxQueue );
			return errQUEUE_FULL;
     3fe:	2000      	movs	r0, #0
		}
	}
}
     400:	b006      	add	sp, #24
     402:	bc04      	pop	{r2}
     404:	4692      	mov	sl, r2
     406:	bdf0      	pop	{r4, r5, r6, r7, pc}
     408:	00000f35 	.word	0x00000f35
     40c:	00000115 	.word	0x00000115
     410:	00000ccd 	.word	0x00000ccd
     414:	00000f1d 	.word	0x00000f1d
     418:	00000f4d 	.word	0x00000f4d
     41c:	00000d49 	.word	0x00000d49
     420:	00000955 	.word	0x00000955
     424:	00000d69 	.word	0x00000d69
     428:	00000c8d 	.word	0x00000c8d
     42c:	000001ad 	.word	0x000001ad
     430:	00000aa1 	.word	0x00000aa1

00000434 <xQueueGenericSendFromISR>:

#endif /* configUSE_ALTERNATIVE_API */
/*-----------------------------------------------------------*/

signed portBASE_TYPE xQueueGenericSendFromISR( xQueueHandle xQueue, const void * const pvItemToQueue, signed portBASE_TYPE *pxHigherPriorityTaskWoken, portBASE_TYPE xCopyPosition )
{
     434:	b570      	push	{r4, r5, r6, lr}
signed portBASE_TYPE xReturn;
unsigned portBASE_TYPE uxSavedInterruptStatus;
xQUEUE *pxQueue;

	pxQueue = ( xQUEUE * ) xQueue;
	configASSERT( pxQueue );
     436:	2800      	cmp	r0, #0
     438:	d101      	bne.n	43e <xQueueGenericSendFromISR+0xa>
     43a:	b672      	cpsid	i
     43c:	e7fe      	b.n	43c <xQueueGenericSendFromISR+0x8>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 0U ) ) );
     43e:	2900      	cmp	r1, #0
     440:	d104      	bne.n	44c <xQueueGenericSendFromISR+0x18>
     442:	6c04      	ldr	r4, [r0, #64]	; 0x40
     444:	2c00      	cmp	r4, #0
     446:	d001      	beq.n	44c <xQueueGenericSendFromISR+0x18>
     448:	b672      	cpsid	i
     44a:	e7fe      	b.n	44a <xQueueGenericSendFromISR+0x16>
	/* Similar to xQueueGenericSend, except we don't block if there is no room
	in the queue.  Also we don't directly wake a task that was blocked on a
	queue read, instead we return a flag to say whether a context switch is
	required or not (i.e. has a task with a higher priority than us been woken
	by this	post). */
	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
     44c:	b672      	cpsid	i
	{
		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
     44e:	6b84      	ldr	r4, [r0, #56]	; 0x38
			xReturn = pdPASS;
		}
		else
		{
			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
			xReturn = errQUEUE_FULL;
     450:	2500      	movs	r5, #0
	queue read, instead we return a flag to say whether a context switch is
	required or not (i.e. has a task with a higher priority than us been woken
	by this	post). */
	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
	{
		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
     452:	6bc6      	ldr	r6, [r0, #60]	; 0x3c
     454:	42b4      	cmp	r4, r6
     456:	d21c      	bcs.n	492 <xQueueGenericSendFromISR+0x5e>
     458:	1c16      	adds	r6, r2, #0
     45a:	1c04      	adds	r4, r0, #0
		{
			traceQUEUE_SEND_FROM_ISR( pxQueue );

			prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
     45c:	1c1a      	adds	r2, r3, #0
     45e:	4b0e      	ldr	r3, [pc, #56]	; (498 <xQueueGenericSendFromISR+0x64>)
     460:	4798      	blx	r3

			/* If the queue is locked we do not alter the event list.  This will
			be done when the queue is unlocked later. */
			if( pxQueue->xTxLock == queueUNLOCKED )
     462:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     464:	3301      	adds	r3, #1
     466:	d10e      	bne.n	486 <xQueueGenericSendFromISR+0x52>
						}
					}
				}
				#else /* configUSE_QUEUE_SETS */
				{
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     468:	6a63      	ldr	r3, [r4, #36]	; 0x24
				/* Increment the lock count so the task that unlocks the queue
				knows that data was posted while it was locked. */
				++( pxQueue->xTxLock );
			}

			xReturn = pdPASS;
     46a:	3501      	adds	r5, #1
						}
					}
				}
				#else /* configUSE_QUEUE_SETS */
				{
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     46c:	2b00      	cmp	r3, #0
     46e:	d010      	beq.n	492 <xQueueGenericSendFromISR+0x5e>
					{
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     470:	1c20      	adds	r0, r4, #0
     472:	3024      	adds	r0, #36	; 0x24
     474:	4b09      	ldr	r3, [pc, #36]	; (49c <xQueueGenericSendFromISR+0x68>)
     476:	4798      	blx	r3
     478:	2800      	cmp	r0, #0
     47a:	d00a      	beq.n	492 <xQueueGenericSendFromISR+0x5e>
						{
							/* The task waiting has a higher priority so record that a
							context	switch is required. */
							if( pxHigherPriorityTaskWoken != NULL )
     47c:	2e00      	cmp	r6, #0
     47e:	d007      	beq.n	490 <xQueueGenericSendFromISR+0x5c>
							{
								*pxHigherPriorityTaskWoken = pdTRUE;
     480:	2301      	movs	r3, #1
     482:	6033      	str	r3, [r6, #0]
     484:	e005      	b.n	492 <xQueueGenericSendFromISR+0x5e>
			}
			else
			{
				/* Increment the lock count so the task that unlocks the queue
				knows that data was posted while it was locked. */
				++( pxQueue->xTxLock );
     486:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     488:	3301      	adds	r3, #1
     48a:	64a3      	str	r3, [r4, #72]	; 0x48
			}

			xReturn = pdPASS;
     48c:	2501      	movs	r5, #1
     48e:	e000      	b.n	492 <xQueueGenericSendFromISR+0x5e>
     490:	2501      	movs	r5, #1
		{
			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
			xReturn = errQUEUE_FULL;
		}
	}
	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
     492:	b662      	cpsie	i

	return xReturn;
}
     494:	1c28      	adds	r0, r5, #0
     496:	bd70      	pop	{r4, r5, r6, pc}
     498:	00000115 	.word	0x00000115
     49c:	00000ccd 	.word	0x00000ccd

000004a0 <xQueueGenericReceive>:
/*-----------------------------------------------------------*/

signed portBASE_TYPE xQueueGenericReceive( xQueueHandle xQueue, void * const pvBuffer, portTickType xTicksToWait, portBASE_TYPE xJustPeeking )
{
     4a0:	b5f0      	push	{r4, r5, r6, r7, lr}
     4a2:	464f      	mov	r7, r9
     4a4:	b480      	push	{r7}
     4a6:	b084      	sub	sp, #16
     4a8:	9201      	str	r2, [sp, #4]
xTimeOutType xTimeOut;
signed char *pcOriginalReadPosition;
xQUEUE *pxQueue;

	pxQueue = ( xQUEUE * ) xQueue;
	configASSERT( pxQueue );
     4aa:	2800      	cmp	r0, #0
     4ac:	d101      	bne.n	4b2 <xQueueGenericReceive+0x12>
     4ae:	b672      	cpsid	i
     4b0:	e7fe      	b.n	4b0 <xQueueGenericReceive+0x10>
     4b2:	2700      	movs	r7, #0
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 0U ) ) );
     4b4:	2900      	cmp	r1, #0
     4b6:	d105      	bne.n	4c4 <xQueueGenericReceive+0x24>
     4b8:	6c02      	ldr	r2, [r0, #64]	; 0x40
     4ba:	2a00      	cmp	r2, #0
     4bc:	d001      	beq.n	4c2 <xQueueGenericReceive+0x22>
     4be:	b672      	cpsid	i
     4c0:	e7fe      	b.n	4c0 <xQueueGenericReceive+0x20>
     4c2:	2700      	movs	r7, #0
     4c4:	1c1d      	adds	r5, r3, #0
     4c6:	9100      	str	r1, [sp, #0]
     4c8:	1c04      	adds	r4, r0, #0
	statements within the function itself.  This is done in the interest
	of execution time efficiency. */

	for( ;; )
	{
		taskENTER_CRITICAL();
     4ca:	4e44      	ldr	r6, [pc, #272]	; (5dc <xQueueGenericReceive+0x13c>)
     4cc:	47b0      	blx	r6
		{
			/* Is there data in the queue now?  To be running we must be
			the highest priority task wanting to access the queue. */
			if( pxQueue->uxMessagesWaiting > ( unsigned portBASE_TYPE ) 0 )
     4ce:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     4d0:	2b00      	cmp	r3, #0
     4d2:	d02b      	beq.n	52c <xQueueGenericReceive+0x8c>
			{
				/* Remember our read position in case we are just peeking. */
				pcOriginalReadPosition = pxQueue->pcReadFrom;
     4d4:	68e7      	ldr	r7, [r4, #12]

				prvCopyDataFromQueue( pxQueue, pvBuffer );
     4d6:	1c20      	adds	r0, r4, #0
     4d8:	9900      	ldr	r1, [sp, #0]
     4da:	4b41      	ldr	r3, [pc, #260]	; (5e0 <xQueueGenericReceive+0x140>)
     4dc:	4798      	blx	r3

				if( xJustPeeking == pdFALSE )
     4de:	2d00      	cmp	r5, #0
     4e0:	d114      	bne.n	50c <xQueueGenericReceive+0x6c>
				{
					traceQUEUE_RECEIVE( pxQueue );

					/* We are actually removing data. */
					--( pxQueue->uxMessagesWaiting );
     4e2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     4e4:	3b01      	subs	r3, #1
     4e6:	63a3      	str	r3, [r4, #56]	; 0x38

					#if ( configUSE_MUTEXES == 1 )
					{
						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
     4e8:	6823      	ldr	r3, [r4, #0]
     4ea:	2b00      	cmp	r3, #0
     4ec:	d102      	bne.n	4f4 <xQueueGenericReceive+0x54>
						{
							/* Record the information required to implement
							priority inheritance should it become necessary. */
							pxQueue->pxMutexHolder = xTaskGetCurrentTaskHandle();
     4ee:	4b3d      	ldr	r3, [pc, #244]	; (5e4 <xQueueGenericReceive+0x144>)
     4f0:	4798      	blx	r3
     4f2:	6060      	str	r0, [r4, #4]
						}
					}
					#endif

					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     4f4:	6923      	ldr	r3, [r4, #16]
     4f6:	2b00      	cmp	r3, #0
     4f8:	d014      	beq.n	524 <xQueueGenericReceive+0x84>
					{
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
     4fa:	1c20      	adds	r0, r4, #0
     4fc:	3010      	adds	r0, #16
     4fe:	4b3a      	ldr	r3, [pc, #232]	; (5e8 <xQueueGenericReceive+0x148>)
     500:	4798      	blx	r3
     502:	2801      	cmp	r0, #1
     504:	d10e      	bne.n	524 <xQueueGenericReceive+0x84>
						{
							portYIELD_WITHIN_API();
     506:	4b39      	ldr	r3, [pc, #228]	; (5ec <xQueueGenericReceive+0x14c>)
     508:	4798      	blx	r3
     50a:	e00b      	b.n	524 <xQueueGenericReceive+0x84>
				{
					traceQUEUE_PEEK( pxQueue );

					/* The data is not being removed, so reset the read
					pointer. */
					pxQueue->pcReadFrom = pcOriginalReadPosition;
     50c:	60e7      	str	r7, [r4, #12]

					/* The data is being left in the queue, so see if there are
					any other tasks waiting for the data. */
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     50e:	6a63      	ldr	r3, [r4, #36]	; 0x24
     510:	2b00      	cmp	r3, #0
     512:	d007      	beq.n	524 <xQueueGenericReceive+0x84>
					{
						/* Tasks that are removed from the event list will get added to
						the pending ready list as the scheduler is still suspended. */
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     514:	1c20      	adds	r0, r4, #0
     516:	3024      	adds	r0, #36	; 0x24
     518:	4b33      	ldr	r3, [pc, #204]	; (5e8 <xQueueGenericReceive+0x148>)
     51a:	4798      	blx	r3
     51c:	2800      	cmp	r0, #0
     51e:	d001      	beq.n	524 <xQueueGenericReceive+0x84>
						{
							/* The task waiting has a higher priority than this task. */
							portYIELD_WITHIN_API();
     520:	4b32      	ldr	r3, [pc, #200]	; (5ec <xQueueGenericReceive+0x14c>)
     522:	4798      	blx	r3
						}
					}
				}

				taskEXIT_CRITICAL();
     524:	4b32      	ldr	r3, [pc, #200]	; (5f0 <xQueueGenericReceive+0x150>)
     526:	4798      	blx	r3
				return pdPASS;
     528:	2001      	movs	r0, #1
     52a:	e052      	b.n	5d2 <xQueueGenericReceive+0x132>
			}
			else
			{
				if( xTicksToWait == ( portTickType ) 0 )
     52c:	9b01      	ldr	r3, [sp, #4]
     52e:	2b00      	cmp	r3, #0
     530:	d103      	bne.n	53a <xQueueGenericReceive+0x9a>
				{
					/* The queue was empty and no block time is specified (or
					the block time has expired) so leave now. */
					taskEXIT_CRITICAL();
     532:	4b2f      	ldr	r3, [pc, #188]	; (5f0 <xQueueGenericReceive+0x150>)
     534:	4798      	blx	r3
					traceQUEUE_RECEIVE_FAILED( pxQueue );
					return errQUEUE_EMPTY;
     536:	2000      	movs	r0, #0
     538:	e04b      	b.n	5d2 <xQueueGenericReceive+0x132>
				}
				else if( xEntryTimeSet == pdFALSE )
     53a:	2f00      	cmp	r7, #0
     53c:	d103      	bne.n	546 <xQueueGenericReceive+0xa6>
				{
					/* The queue was empty and a block time was specified so
					configure the timeout structure. */
					vTaskSetTimeOutState( &xTimeOut );
     53e:	a802      	add	r0, sp, #8
     540:	4b2c      	ldr	r3, [pc, #176]	; (5f4 <xQueueGenericReceive+0x154>)
     542:	4798      	blx	r3
					xEntryTimeSet = pdTRUE;
     544:	3701      	adds	r7, #1
				}
			}
		}
		taskEXIT_CRITICAL();
     546:	4b2a      	ldr	r3, [pc, #168]	; (5f0 <xQueueGenericReceive+0x150>)
     548:	4798      	blx	r3

		/* Interrupts and other tasks can send to and receive from the queue
		now the critical section has been exited. */

		vTaskSuspendAll();
     54a:	4b2b      	ldr	r3, [pc, #172]	; (5f8 <xQueueGenericReceive+0x158>)
     54c:	4798      	blx	r3
		prvLockQueue( pxQueue );
     54e:	4b23      	ldr	r3, [pc, #140]	; (5dc <xQueueGenericReceive+0x13c>)
     550:	4798      	blx	r3
     552:	6c63      	ldr	r3, [r4, #68]	; 0x44
     554:	3301      	adds	r3, #1
     556:	d101      	bne.n	55c <xQueueGenericReceive+0xbc>
     558:	2300      	movs	r3, #0
     55a:	6463      	str	r3, [r4, #68]	; 0x44
     55c:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     55e:	3301      	adds	r3, #1
     560:	d101      	bne.n	566 <xQueueGenericReceive+0xc6>
     562:	2300      	movs	r3, #0
     564:	64a3      	str	r3, [r4, #72]	; 0x48
     566:	4b22      	ldr	r3, [pc, #136]	; (5f0 <xQueueGenericReceive+0x150>)
     568:	4798      	blx	r3

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
     56a:	a802      	add	r0, sp, #8
     56c:	a901      	add	r1, sp, #4
     56e:	4b23      	ldr	r3, [pc, #140]	; (5fc <xQueueGenericReceive+0x15c>)
     570:	4798      	blx	r3
     572:	2800      	cmp	r0, #0
     574:	d127      	bne.n	5c6 <xQueueGenericReceive+0x126>

static signed portBASE_TYPE prvIsQueueEmpty( const xQUEUE *pxQueue )
{
signed portBASE_TYPE xReturn;

	taskENTER_CRITICAL();
     576:	4b19      	ldr	r3, [pc, #100]	; (5dc <xQueueGenericReceive+0x13c>)
     578:	4798      	blx	r3
	{
		if( pxQueue->uxMessagesWaiting == 0 )
     57a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     57c:	4699      	mov	r9, r3
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
     57e:	4b1c      	ldr	r3, [pc, #112]	; (5f0 <xQueueGenericReceive+0x150>)
     580:	4798      	blx	r3
		prvLockQueue( pxQueue );

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
		{
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
     582:	464b      	mov	r3, r9
     584:	2b00      	cmp	r3, #0
     586:	d118      	bne.n	5ba <xQueueGenericReceive+0x11a>
			{
				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );

				#if ( configUSE_MUTEXES == 1 )
				{
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
     588:	6823      	ldr	r3, [r4, #0]
     58a:	2b00      	cmp	r3, #0
     58c:	d106      	bne.n	59c <xQueueGenericReceive+0xfc>
					{
						portENTER_CRITICAL();
     58e:	4b13      	ldr	r3, [pc, #76]	; (5dc <xQueueGenericReceive+0x13c>)
     590:	4798      	blx	r3
						{
							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
     592:	6860      	ldr	r0, [r4, #4]
     594:	4b1a      	ldr	r3, [pc, #104]	; (600 <xQueueGenericReceive+0x160>)
     596:	4798      	blx	r3
						}
						portEXIT_CRITICAL();
     598:	4b15      	ldr	r3, [pc, #84]	; (5f0 <xQueueGenericReceive+0x150>)
     59a:	4798      	blx	r3
					}
				}
				#endif

				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
     59c:	1c20      	adds	r0, r4, #0
     59e:	3024      	adds	r0, #36	; 0x24
     5a0:	9901      	ldr	r1, [sp, #4]
     5a2:	4b18      	ldr	r3, [pc, #96]	; (604 <xQueueGenericReceive+0x164>)
     5a4:	4798      	blx	r3
				prvUnlockQueue( pxQueue );
     5a6:	1c20      	adds	r0, r4, #0
     5a8:	4b17      	ldr	r3, [pc, #92]	; (608 <xQueueGenericReceive+0x168>)
     5aa:	4798      	blx	r3
				if( xTaskResumeAll() == pdFALSE )
     5ac:	4b17      	ldr	r3, [pc, #92]	; (60c <xQueueGenericReceive+0x16c>)
     5ae:	4798      	blx	r3
     5b0:	2800      	cmp	r0, #0
     5b2:	d18b      	bne.n	4cc <xQueueGenericReceive+0x2c>
				{
					portYIELD_WITHIN_API();
     5b4:	4b0d      	ldr	r3, [pc, #52]	; (5ec <xQueueGenericReceive+0x14c>)
     5b6:	4798      	blx	r3
     5b8:	e788      	b.n	4cc <xQueueGenericReceive+0x2c>
				}
			}
			else
			{
				/* Try again. */
				prvUnlockQueue( pxQueue );
     5ba:	1c20      	adds	r0, r4, #0
     5bc:	4b12      	ldr	r3, [pc, #72]	; (608 <xQueueGenericReceive+0x168>)
     5be:	4798      	blx	r3
				( void ) xTaskResumeAll();
     5c0:	4b12      	ldr	r3, [pc, #72]	; (60c <xQueueGenericReceive+0x16c>)
     5c2:	4798      	blx	r3
     5c4:	e782      	b.n	4cc <xQueueGenericReceive+0x2c>
			}
		}
		else
		{
			prvUnlockQueue( pxQueue );
     5c6:	1c20      	adds	r0, r4, #0
     5c8:	4b0f      	ldr	r3, [pc, #60]	; (608 <xQueueGenericReceive+0x168>)
     5ca:	4798      	blx	r3
			( void ) xTaskResumeAll();
     5cc:	4b0f      	ldr	r3, [pc, #60]	; (60c <xQueueGenericReceive+0x16c>)
     5ce:	4798      	blx	r3
			traceQUEUE_RECEIVE_FAILED( pxQueue );
			return errQUEUE_EMPTY;
     5d0:	2000      	movs	r0, #0
		}
	}
}
     5d2:	b004      	add	sp, #16
     5d4:	bc04      	pop	{r2}
     5d6:	4691      	mov	r9, r2
     5d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
     5da:	46c0      	nop			; (mov r8, r8)
     5dc:	00000f35 	.word	0x00000f35
     5e0:	00000185 	.word	0x00000185
     5e4:	00000de5 	.word	0x00000de5
     5e8:	00000ccd 	.word	0x00000ccd
     5ec:	00000f1d 	.word	0x00000f1d
     5f0:	00000f4d 	.word	0x00000f4d
     5f4:	00000d49 	.word	0x00000d49
     5f8:	00000955 	.word	0x00000955
     5fc:	00000d69 	.word	0x00000d69
     600:	00000df1 	.word	0x00000df1
     604:	00000c8d 	.word	0x00000c8d
     608:	000001ad 	.word	0x000001ad
     60c:	00000aa1 	.word	0x00000aa1

00000610 <vListInitialise>:
void vListInitialise( xList *pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( xListItem * ) &( pxList->xListEnd );
     610:	1c03      	adds	r3, r0, #0
     612:	3308      	adds	r3, #8
     614:	6043      	str	r3, [r0, #4]

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
     616:	2201      	movs	r2, #1
     618:	4252      	negs	r2, r2
     61a:	6082      	str	r2, [r0, #8]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( xListItem * ) &( pxList->xListEnd );
     61c:	60c3      	str	r3, [r0, #12]
	pxList->xListEnd.pxPrevious = ( xListItem * ) &( pxList->xListEnd );
     61e:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( unsigned portBASE_TYPE ) 0U;
     620:	2300      	movs	r3, #0
     622:	6003      	str	r3, [r0, #0]
}
     624:	4770      	bx	lr
     626:	46c0      	nop			; (mov r8, r8)

00000628 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( xListItem *pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pvContainer = NULL;
     628:	2300      	movs	r3, #0
     62a:	6103      	str	r3, [r0, #16]
}
     62c:	4770      	bx	lr
     62e:	46c0      	nop			; (mov r8, r8)

00000630 <vListInsertEnd>:

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	pvListGetOwnerOfNextEntry.  This means it has to be the item pointed to by
	the pxIndex member. */
	pxIndex = pxList->pxIndex;
     630:	6843      	ldr	r3, [r0, #4]

	pxNewListItem->pxNext = pxIndex->pxNext;
     632:	685a      	ldr	r2, [r3, #4]
     634:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxPrevious = pxList->pxIndex;
     636:	6842      	ldr	r2, [r0, #4]
     638:	608a      	str	r2, [r1, #8]
	pxIndex->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
     63a:	685a      	ldr	r2, [r3, #4]
     63c:	6091      	str	r1, [r2, #8]
	pxIndex->pxNext = ( volatile xListItem * ) pxNewListItem;
     63e:	6059      	str	r1, [r3, #4]
	pxList->pxIndex = ( volatile xListItem * ) pxNewListItem;
     640:	6041      	str	r1, [r0, #4]

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;
     642:	6108      	str	r0, [r1, #16]

	( pxList->uxNumberOfItems )++;
     644:	6803      	ldr	r3, [r0, #0]
     646:	3301      	adds	r3, #1
     648:	6003      	str	r3, [r0, #0]
}
     64a:	4770      	bx	lr

0000064c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( xList *pxList, xListItem *pxNewListItem )
{
     64c:	b510      	push	{r4, lr}
volatile xListItem *pxIterator;
portTickType xValueOfInsertion;

	/* Insert the new list item into the list, sorted in ulListItem order. */
	xValueOfInsertion = pxNewListItem->xItemValue;
     64e:	680c      	ldr	r4, [r1, #0]
	are stored in ready lists (all of which have the same ulListItem value)
	get an equal share of the CPU.  However, if the xItemValue is the same as
	the back marker the iteration loop below will not end.  This means we need
	to guard against this by checking the value first and modifying the
	algorithm slightly if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
     650:	1c63      	adds	r3, r4, #1
     652:	d101      	bne.n	658 <vListInsert+0xc>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
     654:	6903      	ldr	r3, [r0, #16]
     656:	e00a      	b.n	66e <vListInsert+0x22>
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		See http://www.freertos.org/FAQHelp.html for more tips.
		**********************************************************************/

		for( pxIterator = ( xListItem * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext )
     658:	1c03      	adds	r3, r0, #0
     65a:	3308      	adds	r3, #8
     65c:	68c2      	ldr	r2, [r0, #12]
     65e:	6812      	ldr	r2, [r2, #0]
     660:	4294      	cmp	r4, r2
     662:	d304      	bcc.n	66e <vListInsert+0x22>
     664:	685b      	ldr	r3, [r3, #4]
     666:	685a      	ldr	r2, [r3, #4]
     668:	6812      	ldr	r2, [r2, #0]
     66a:	4294      	cmp	r4, r2
     66c:	d2fa      	bcs.n	664 <vListInsert+0x18>
			/* There is nothing to do here, we are just iterating to the
			wanted insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
     66e:	685a      	ldr	r2, [r3, #4]
     670:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
     672:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
     674:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = ( volatile xListItem * ) pxNewListItem;
     676:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;
     678:	6108      	str	r0, [r1, #16]

	( pxList->uxNumberOfItems )++;
     67a:	6803      	ldr	r3, [r0, #0]
     67c:	3301      	adds	r3, #1
     67e:	6003      	str	r3, [r0, #0]
}
     680:	bd10      	pop	{r4, pc}
     682:	46c0      	nop			; (mov r8, r8)

00000684 <uxListRemove>:

unsigned portBASE_TYPE uxListRemove( xListItem *pxItemToRemove )
{
xList * pxList;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
     684:	6843      	ldr	r3, [r0, #4]
     686:	6882      	ldr	r2, [r0, #8]
     688:	609a      	str	r2, [r3, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
     68a:	6883      	ldr	r3, [r0, #8]
     68c:	6842      	ldr	r2, [r0, #4]
     68e:	605a      	str	r2, [r3, #4]

	/* The list item knows which list it is in.  Obtain the list from the list
	item. */
	pxList = ( xList * ) pxItemToRemove->pvContainer;
     690:	6903      	ldr	r3, [r0, #16]

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
     692:	685a      	ldr	r2, [r3, #4]
     694:	4282      	cmp	r2, r0
     696:	d101      	bne.n	69c <uxListRemove+0x18>
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
     698:	6882      	ldr	r2, [r0, #8]
     69a:	605a      	str	r2, [r3, #4]
	}

	pxItemToRemove->pvContainer = NULL;
     69c:	2200      	movs	r2, #0
     69e:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
     6a0:	681a      	ldr	r2, [r3, #0]
     6a2:	3a01      	subs	r2, #1
     6a4:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
     6a6:	6818      	ldr	r0, [r3, #0]
}
     6a8:	4770      	bx	lr
     6aa:	46c0      	nop			; (mov r8, r8)

000006ac <prvIdleTask>:
 *
 * void prvIdleTask( void *pvParameters );
 *
 */
static portTASK_FUNCTION( prvIdleTask, pvParameters )
{
     6ac:	b510      	push	{r4, lr}
		{
			/* If we are not using preemption we keep forcing a task switch to
			see if any other task has become available.  If we are using
			preemption we don't need to do this as any task becoming available
			will automatically get the processor anyway. */
			taskYIELD();
     6ae:	4c01      	ldr	r4, [pc, #4]	; (6b4 <prvIdleTask+0x8>)
     6b0:	47a0      	blx	r4
				}
				xTaskResumeAll();
			}
		}
		#endif /* configUSE_TICKLESS_IDLE */
	}
     6b2:	e7fd      	b.n	6b0 <prvIdleTask+0x4>
     6b4:	00000f1d 	.word	0x00000f1d

000006b8 <prvAddCurrentTaskToDelayedList>:
	#endif /* vTaskDelete */
}
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( portTickType xTimeToWake )
{
     6b8:	b510      	push	{r4, lr}
     6ba:	1e04      	subs	r4, r0, #0
	/* The list item will be inserted in wake time order. */
	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
     6bc:	4b0e      	ldr	r3, [pc, #56]	; (6f8 <prvAddCurrentTaskToDelayedList+0x40>)
     6be:	681b      	ldr	r3, [r3, #0]
     6c0:	6058      	str	r0, [r3, #4]

	if( xTimeToWake < xTickCount )
     6c2:	4b0e      	ldr	r3, [pc, #56]	; (6fc <prvAddCurrentTaskToDelayedList+0x44>)
     6c4:	681b      	ldr	r3, [r3, #0]
     6c6:	429c      	cmp	r4, r3
     6c8:	d207      	bcs.n	6da <prvAddCurrentTaskToDelayedList+0x22>
	{
		/* Wake time has overflowed.  Place this item in the overflow list. */
		vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
     6ca:	4b0d      	ldr	r3, [pc, #52]	; (700 <prvAddCurrentTaskToDelayedList+0x48>)
     6cc:	6818      	ldr	r0, [r3, #0]
     6ce:	4b0a      	ldr	r3, [pc, #40]	; (6f8 <prvAddCurrentTaskToDelayedList+0x40>)
     6d0:	6819      	ldr	r1, [r3, #0]
     6d2:	3104      	adds	r1, #4
     6d4:	4b0b      	ldr	r3, [pc, #44]	; (704 <prvAddCurrentTaskToDelayedList+0x4c>)
     6d6:	4798      	blx	r3
     6d8:	e00c      	b.n	6f4 <prvAddCurrentTaskToDelayedList+0x3c>
	}
	else
	{
		/* The wake time has not overflowed, so we can use the current block list. */
		vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
     6da:	4b0b      	ldr	r3, [pc, #44]	; (708 <prvAddCurrentTaskToDelayedList+0x50>)
     6dc:	6818      	ldr	r0, [r3, #0]
     6de:	4b06      	ldr	r3, [pc, #24]	; (6f8 <prvAddCurrentTaskToDelayedList+0x40>)
     6e0:	6819      	ldr	r1, [r3, #0]
     6e2:	3104      	adds	r1, #4
     6e4:	4b07      	ldr	r3, [pc, #28]	; (704 <prvAddCurrentTaskToDelayedList+0x4c>)
     6e6:	4798      	blx	r3

		/* If the task entering the blocked state was placed at the head of the
		list of blocked tasks then xNextTaskUnblockTime needs to be updated
		too. */
		if( xTimeToWake < xNextTaskUnblockTime )
     6e8:	4b08      	ldr	r3, [pc, #32]	; (70c <prvAddCurrentTaskToDelayedList+0x54>)
     6ea:	681b      	ldr	r3, [r3, #0]
     6ec:	429c      	cmp	r4, r3
     6ee:	d201      	bcs.n	6f4 <prvAddCurrentTaskToDelayedList+0x3c>
		{
			xNextTaskUnblockTime = xTimeToWake;
     6f0:	4b06      	ldr	r3, [pc, #24]	; (70c <prvAddCurrentTaskToDelayedList+0x54>)
     6f2:	601c      	str	r4, [r3, #0]
		}
	}
}
     6f4:	bd10      	pop	{r4, pc}
     6f6:	46c0      	nop			; (mov r8, r8)
     6f8:	20000230 	.word	0x20000230
     6fc:	20000248 	.word	0x20000248
     700:	2000024c 	.word	0x2000024c
     704:	0000064d 	.word	0x0000064d
     708:	20000194 	.word	0x20000194
     70c:	200000b4 	.word	0x200000b4

00000710 <xTaskGenericCreate>:
#endif

/*lint +e956 */

signed portBASE_TYPE xTaskGenericCreate( pdTASK_CODE pxTaskCode, const signed char * const pcName, unsigned short usStackDepth, void *pvParameters, unsigned portBASE_TYPE uxPriority, xTaskHandle *pxCreatedTask, portSTACK_TYPE *puxStackBuffer, const xMemoryRegion * const xRegions )
{
     710:	b5f0      	push	{r4, r5, r6, r7, lr}
     712:	464f      	mov	r7, r9
     714:	4646      	mov	r6, r8
     716:	b4c0      	push	{r6, r7}
     718:	b085      	sub	sp, #20
     71a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
signed portBASE_TYPE xReturn;
tskTCB * pxNewTCB;

	configASSERT( pxTaskCode );
     71c:	2800      	cmp	r0, #0
     71e:	d101      	bne.n	724 <xTaskGenericCreate+0x14>
     720:	b672      	cpsid	i
     722:	e7fe      	b.n	722 <xTaskGenericCreate+0x12>
	configASSERT( ( ( uxPriority & ( ~portPRIVILEGE_BIT ) ) < configMAX_PRIORITIES ) );
     724:	2c05      	cmp	r4, #5
     726:	d901      	bls.n	72c <xTaskGenericCreate+0x1c>
     728:	b672      	cpsid	i
     72a:	e7fe      	b.n	72a <xTaskGenericCreate+0x1a>
     72c:	9303      	str	r3, [sp, #12]
     72e:	1c16      	adds	r6, r2, #0
     730:	1c0f      	adds	r7, r1, #0
     732:	9002      	str	r0, [sp, #8]
{
tskTCB *pxNewTCB;

	/* Allocate space for the TCB.  Where the memory comes from depends on
	the implementation of the port malloc function. */
	pxNewTCB = ( tskTCB * ) pvPortMalloc( sizeof( tskTCB ) );
     734:	2040      	movs	r0, #64	; 0x40
     736:	4b59      	ldr	r3, [pc, #356]	; (89c <xTaskGenericCreate+0x18c>)
     738:	4798      	blx	r3
     73a:	1e05      	subs	r5, r0, #0

	if( pxNewTCB != NULL )
     73c:	d100      	bne.n	740 <xTaskGenericCreate+0x30>
     73e:	e0a5      	b.n	88c <xTaskGenericCreate+0x17c>
	{
		/* Allocate space for the stack used by the task being created.
		The base of the stack memory stored in the TCB so the task can
		be deleted later if required. */
		pxNewTCB->pxStack = ( portSTACK_TYPE * ) pvPortMallocAligned( ( ( ( size_t )usStackDepth ) * sizeof( portSTACK_TYPE ) ), puxStackBuffer );
     740:	9b0e      	ldr	r3, [sp, #56]	; 0x38
     742:	2b00      	cmp	r3, #0
     744:	d000      	beq.n	748 <xTaskGenericCreate+0x38>
     746:	e09d      	b.n	884 <xTaskGenericCreate+0x174>
     748:	00b0      	lsls	r0, r6, #2
     74a:	4b54      	ldr	r3, [pc, #336]	; (89c <xTaskGenericCreate+0x18c>)
     74c:	4798      	blx	r3
     74e:	6328      	str	r0, [r5, #48]	; 0x30

		if( pxNewTCB->pxStack == NULL )
     750:	2800      	cmp	r0, #0
     752:	d103      	bne.n	75c <xTaskGenericCreate+0x4c>
		{
			/* Could not allocate the stack.  Delete the allocated TCB. */
			vPortFree( pxNewTCB );
     754:	1c28      	adds	r0, r5, #0
     756:	4b52      	ldr	r3, [pc, #328]	; (8a0 <xTaskGenericCreate+0x190>)
     758:	4798      	blx	r3
     75a:	e097      	b.n	88c <xTaskGenericCreate+0x17c>
			pxNewTCB = NULL;
		}
		else
		{
			/* Just to help debugging. */
			memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) usStackDepth * sizeof( portSTACK_TYPE ) );
     75c:	00b2      	lsls	r2, r6, #2
     75e:	21a5      	movs	r1, #165	; 0xa5
     760:	4b50      	ldr	r3, [pc, #320]	; (8a4 <xTaskGenericCreate+0x194>)
     762:	4798      	blx	r3
		stack grows from high memory to low (as per the 80x86) or visa versa.
		portSTACK_GROWTH is used to make the result positive or negative as
		required by the port. */
		#if( portSTACK_GROWTH < 0 )
		{
			pxTopOfStack = pxNewTCB->pxStack + ( usStackDepth - ( unsigned short ) 1 );
     764:	4b50      	ldr	r3, [pc, #320]	; (8a8 <xTaskGenericCreate+0x198>)
     766:	18f3      	adds	r3, r6, r3
     768:	009b      	lsls	r3, r3, #2
     76a:	6b2a      	ldr	r2, [r5, #48]	; 0x30
     76c:	4694      	mov	ip, r2
     76e:	4463      	add	r3, ip
			pxTopOfStack = ( portSTACK_TYPE * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ( portPOINTER_SIZE_TYPE ) ~portBYTE_ALIGNMENT_MASK  ) );
     770:	2207      	movs	r2, #7
     772:	4393      	bics	r3, r2
     774:	4698      	mov	r8, r3
{
	/* Store the function name in the TCB. */
	#if configMAX_TASK_NAME_LEN > 1
	{
		/* Don't bring strncpy into the build unnecessarily. */
		strncpy( ( char * ) pxTCB->pcTaskName, ( const char * ) pcName, ( unsigned short ) configMAX_TASK_NAME_LEN );
     776:	1c28      	adds	r0, r5, #0
     778:	3034      	adds	r0, #52	; 0x34
     77a:	1c39      	adds	r1, r7, #0
     77c:	3201      	adds	r2, #1
     77e:	4b4b      	ldr	r3, [pc, #300]	; (8ac <xTaskGenericCreate+0x19c>)
     780:	4798      	blx	r3
	}
	#endif /* configMAX_TASK_NAME_LEN */
	pxTCB->pcTaskName[ ( unsigned short ) configMAX_TASK_NAME_LEN - ( unsigned short ) 1 ] = ( signed char ) '\0';
     782:	2200      	movs	r2, #0
     784:	233b      	movs	r3, #59	; 0x3b
     786:	54ea      	strb	r2, [r5, r3]
     788:	1e27      	subs	r7, r4, #0
     78a:	2f05      	cmp	r7, #5
     78c:	d900      	bls.n	790 <xTaskGenericCreate+0x80>
     78e:	2705      	movs	r7, #5
	if( uxPriority >= configMAX_PRIORITIES )
	{
		uxPriority = configMAX_PRIORITIES - ( unsigned portBASE_TYPE ) 1U;
	}

	pxTCB->uxPriority = uxPriority;
     790:	62ef      	str	r7, [r5, #44]	; 0x2c
	#if ( configUSE_MUTEXES == 1 )
	{
		pxTCB->uxBasePriority = uxPriority;
     792:	63ef      	str	r7, [r5, #60]	; 0x3c
	}
	#endif /* configUSE_MUTEXES */

	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
     794:	1d2b      	adds	r3, r5, #4
     796:	9301      	str	r3, [sp, #4]
     798:	1c18      	adds	r0, r3, #0
     79a:	4e45      	ldr	r6, [pc, #276]	; (8b0 <xTaskGenericCreate+0x1a0>)
     79c:	47b0      	blx	r6
	vListInitialiseItem( &( pxTCB->xEventListItem ) );
     79e:	1c28      	adds	r0, r5, #0
     7a0:	3018      	adds	r0, #24
     7a2:	47b0      	blx	r6

	/* Set the pxTCB as a link back from the xListItem.  This is so we can get
	back to	the containing TCB from a generic item in a list. */
	listSET_LIST_ITEM_OWNER( &( pxTCB->xGenericListItem ), pxTCB );
     7a4:	612d      	str	r5, [r5, #16]

	/* Event lists are always in priority order. */
	listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) uxPriority );
     7a6:	2306      	movs	r3, #6
     7a8:	1bdb      	subs	r3, r3, r7
     7aa:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxTCB->xEventListItem ), pxTCB );
     7ac:	626d      	str	r5, [r5, #36]	; 0x24
		{
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivileged );
		}
		#else /* portUSING_MPU_WRAPPERS */
		{
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
     7ae:	4640      	mov	r0, r8
     7b0:	9902      	ldr	r1, [sp, #8]
     7b2:	9a03      	ldr	r2, [sp, #12]
     7b4:	4b3f      	ldr	r3, [pc, #252]	; (8b4 <xTaskGenericCreate+0x1a4>)
     7b6:	4798      	blx	r3
     7b8:	6028      	str	r0, [r5, #0]
		}
		#endif /* portUSING_MPU_WRAPPERS */

		/* Check the alignment of the initialised stack. */
		portALIGNMENT_ASSERT_pxCurrentTCB( ( ( ( unsigned long ) pxNewTCB->pxTopOfStack & ( unsigned long ) portBYTE_ALIGNMENT_MASK ) == 0UL ) );
     7ba:	0743      	lsls	r3, r0, #29
     7bc:	d001      	beq.n	7c2 <xTaskGenericCreate+0xb2>
     7be:	b672      	cpsid	i
     7c0:	e7fe      	b.n	7c0 <xTaskGenericCreate+0xb0>

		if( ( void * ) pxCreatedTask != NULL )
     7c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
     7c4:	2b00      	cmp	r3, #0
     7c6:	d000      	beq.n	7ca <xTaskGenericCreate+0xba>
		{
			/* Pass the TCB out - in an anonymous way.  The calling function/
			task can use this as a handle to delete the task later if
			required.*/
			*pxCreatedTask = ( xTaskHandle ) pxNewTCB;
     7c8:	601d      	str	r5, [r3, #0]
		}

		/* We are going to manipulate the task queues to add this task to a
		ready list, so must make sure no interrupts occur. */
		taskENTER_CRITICAL();
     7ca:	4b3b      	ldr	r3, [pc, #236]	; (8b8 <xTaskGenericCreate+0x1a8>)
     7cc:	4798      	blx	r3
		{
			uxCurrentNumberOfTasks++;
     7ce:	4a3b      	ldr	r2, [pc, #236]	; (8bc <xTaskGenericCreate+0x1ac>)
     7d0:	6813      	ldr	r3, [r2, #0]
     7d2:	3301      	adds	r3, #1
     7d4:	6013      	str	r3, [r2, #0]
			if( pxCurrentTCB == NULL )
     7d6:	4b3a      	ldr	r3, [pc, #232]	; (8c0 <xTaskGenericCreate+0x1b0>)
     7d8:	681b      	ldr	r3, [r3, #0]
     7da:	2b00      	cmp	r3, #0
     7dc:	d11e      	bne.n	81c <xTaskGenericCreate+0x10c>
			{
				/* There are no other tasks, or all the other tasks are in
				the suspended state - make this the current task. */
				pxCurrentTCB =  pxNewTCB;
     7de:	4b38      	ldr	r3, [pc, #224]	; (8c0 <xTaskGenericCreate+0x1b0>)
     7e0:	601d      	str	r5, [r3, #0]

				if( uxCurrentNumberOfTasks == ( unsigned portBASE_TYPE ) 1 )
     7e2:	6813      	ldr	r3, [r2, #0]
     7e4:	2b01      	cmp	r3, #1
     7e6:	d124      	bne.n	832 <xTaskGenericCreate+0x122>
     7e8:	4e36      	ldr	r6, [pc, #216]	; (8c4 <xTaskGenericCreate+0x1b4>)
     7ea:	3377      	adds	r3, #119	; 0x77
     7ec:	4699      	mov	r9, r3
     7ee:	44b1      	add	r9, r6
{
unsigned portBASE_TYPE uxPriority;

	for( uxPriority = ( unsigned portBASE_TYPE ) 0U; uxPriority < configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( ( xList * ) &( pxReadyTasksLists[ uxPriority ] ) );
     7f0:	4f35      	ldr	r7, [pc, #212]	; (8c8 <xTaskGenericCreate+0x1b8>)
     7f2:	1c30      	adds	r0, r6, #0
     7f4:	47b8      	blx	r7
     7f6:	3614      	adds	r6, #20

static void prvInitialiseTaskLists( void )
{
unsigned portBASE_TYPE uxPriority;

	for( uxPriority = ( unsigned portBASE_TYPE ) 0U; uxPriority < configMAX_PRIORITIES; uxPriority++ )
     7f8:	454e      	cmp	r6, r9
     7fa:	d1fa      	bne.n	7f2 <xTaskGenericCreate+0xe2>
	{
		vListInitialise( ( xList * ) &( pxReadyTasksLists[ uxPriority ] ) );
	}

	vListInitialise( ( xList * ) &xDelayedTaskList1 );
     7fc:	4b33      	ldr	r3, [pc, #204]	; (8cc <xTaskGenericCreate+0x1bc>)
     7fe:	4699      	mov	r9, r3
     800:	1c18      	adds	r0, r3, #0
     802:	4e31      	ldr	r6, [pc, #196]	; (8c8 <xTaskGenericCreate+0x1b8>)
     804:	47b0      	blx	r6
	vListInitialise( ( xList * ) &xDelayedTaskList2 );
     806:	4f32      	ldr	r7, [pc, #200]	; (8d0 <xTaskGenericCreate+0x1c0>)
     808:	1c38      	adds	r0, r7, #0
     80a:	47b0      	blx	r6
	vListInitialise( ( xList * ) &xPendingReadyList );
     80c:	4831      	ldr	r0, [pc, #196]	; (8d4 <xTaskGenericCreate+0x1c4>)
     80e:	47b0      	blx	r6
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
     810:	4b31      	ldr	r3, [pc, #196]	; (8d8 <xTaskGenericCreate+0x1c8>)
     812:	464a      	mov	r2, r9
     814:	601a      	str	r2, [r3, #0]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
     816:	4b31      	ldr	r3, [pc, #196]	; (8dc <xTaskGenericCreate+0x1cc>)
     818:	601f      	str	r7, [r3, #0]
     81a:	e00a      	b.n	832 <xTaskGenericCreate+0x122>
			else
			{
				/* If the scheduler is not already running, make this task the
				current task if it is the highest priority task to be created
				so far. */
				if( xSchedulerRunning == pdFALSE )
     81c:	4b30      	ldr	r3, [pc, #192]	; (8e0 <xTaskGenericCreate+0x1d0>)
     81e:	681b      	ldr	r3, [r3, #0]
     820:	2b00      	cmp	r3, #0
     822:	d106      	bne.n	832 <xTaskGenericCreate+0x122>
				{
					if( pxCurrentTCB->uxPriority <= uxPriority )
     824:	4b26      	ldr	r3, [pc, #152]	; (8c0 <xTaskGenericCreate+0x1b0>)
     826:	681b      	ldr	r3, [r3, #0]
     828:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     82a:	429c      	cmp	r4, r3
     82c:	d301      	bcc.n	832 <xTaskGenericCreate+0x122>
					{
						pxCurrentTCB = pxNewTCB;
     82e:	4b24      	ldr	r3, [pc, #144]	; (8c0 <xTaskGenericCreate+0x1b0>)
     830:	601d      	str	r5, [r3, #0]
				}
			}

			/* Remember the top priority to make context switching faster.  Use
			the priority in pxNewTCB as this has been capped to a valid value. */
			if( pxNewTCB->uxPriority > uxTopUsedPriority )
     832:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
     834:	4a2b      	ldr	r2, [pc, #172]	; (8e4 <xTaskGenericCreate+0x1d4>)
     836:	6812      	ldr	r2, [r2, #0]
     838:	4293      	cmp	r3, r2
     83a:	d901      	bls.n	840 <xTaskGenericCreate+0x130>
			{
				uxTopUsedPriority = pxNewTCB->uxPriority;
     83c:	4a29      	ldr	r2, [pc, #164]	; (8e4 <xTaskGenericCreate+0x1d4>)
     83e:	6013      	str	r3, [r2, #0]
			}

			uxTaskNumber++;
     840:	4929      	ldr	r1, [pc, #164]	; (8e8 <xTaskGenericCreate+0x1d8>)
     842:	680a      	ldr	r2, [r1, #0]
     844:	3201      	adds	r2, #1
     846:	600a      	str	r2, [r1, #0]
				pxNewTCB->uxTCBNumber = uxTaskNumber;
			}
			#endif /* configUSE_TRACE_FACILITY */
			traceTASK_CREATE( pxNewTCB );

			prvAddTaskToReadyQueue( pxNewTCB );
     848:	4a28      	ldr	r2, [pc, #160]	; (8ec <xTaskGenericCreate+0x1dc>)
     84a:	6812      	ldr	r2, [r2, #0]
     84c:	4293      	cmp	r3, r2
     84e:	d901      	bls.n	854 <xTaskGenericCreate+0x144>
     850:	4a26      	ldr	r2, [pc, #152]	; (8ec <xTaskGenericCreate+0x1dc>)
     852:	6013      	str	r3, [r2, #0]
     854:	0098      	lsls	r0, r3, #2
     856:	18c3      	adds	r3, r0, r3
     858:	009b      	lsls	r3, r3, #2
     85a:	481a      	ldr	r0, [pc, #104]	; (8c4 <xTaskGenericCreate+0x1b4>)
     85c:	18c0      	adds	r0, r0, r3
     85e:	9901      	ldr	r1, [sp, #4]
     860:	4b23      	ldr	r3, [pc, #140]	; (8f0 <xTaskGenericCreate+0x1e0>)
     862:	4798      	blx	r3

			xReturn = pdPASS;
			portSETUP_TCB( pxNewTCB );
		}
		taskEXIT_CRITICAL();
     864:	4b23      	ldr	r3, [pc, #140]	; (8f4 <xTaskGenericCreate+0x1e4>)
     866:	4798      	blx	r3
		traceTASK_CREATE_FAILED();
	}

	if( xReturn == pdPASS )
	{
		if( xSchedulerRunning != pdFALSE )
     868:	4b1d      	ldr	r3, [pc, #116]	; (8e0 <xTaskGenericCreate+0x1d0>)
     86a:	681b      	ldr	r3, [r3, #0]
     86c:	2001      	movs	r0, #1
     86e:	2b00      	cmp	r3, #0
     870:	d00e      	beq.n	890 <xTaskGenericCreate+0x180>
		{
			/* If the created task is of a higher priority than the current task
			then it should run now. */
			if( pxCurrentTCB->uxPriority < uxPriority )
     872:	4b13      	ldr	r3, [pc, #76]	; (8c0 <xTaskGenericCreate+0x1b0>)
     874:	681b      	ldr	r3, [r3, #0]
     876:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     878:	429c      	cmp	r4, r3
     87a:	d909      	bls.n	890 <xTaskGenericCreate+0x180>
			{
				portYIELD_WITHIN_API();
     87c:	4b1e      	ldr	r3, [pc, #120]	; (8f8 <xTaskGenericCreate+0x1e8>)
     87e:	4798      	blx	r3
     880:	2001      	movs	r0, #1
     882:	e005      	b.n	890 <xTaskGenericCreate+0x180>
	if( pxNewTCB != NULL )
	{
		/* Allocate space for the stack used by the task being created.
		The base of the stack memory stored in the TCB so the task can
		be deleted later if required. */
		pxNewTCB->pxStack = ( portSTACK_TYPE * ) pvPortMallocAligned( ( ( ( size_t )usStackDepth ) * sizeof( portSTACK_TYPE ) ), puxStackBuffer );
     884:	9b0e      	ldr	r3, [sp, #56]	; 0x38
     886:	6303      	str	r3, [r0, #48]	; 0x30
     888:	1c18      	adds	r0, r3, #0
     88a:	e767      	b.n	75c <xTaskGenericCreate+0x4c>
		}
		taskEXIT_CRITICAL();
	}
	else
	{
		xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
     88c:	2001      	movs	r0, #1
     88e:	4240      	negs	r0, r0
			}
		}
	}

	return xReturn;
}
     890:	b005      	add	sp, #20
     892:	bc0c      	pop	{r2, r3}
     894:	4690      	mov	r8, r2
     896:	4699      	mov	r9, r3
     898:	bdf0      	pop	{r4, r5, r6, r7, pc}
     89a:	46c0      	nop			; (mov r8, r8)
     89c:	00001029 	.word	0x00001029
     8a0:	00001091 	.word	0x00001091
     8a4:	000089a1 	.word	0x000089a1
     8a8:	3fffffff 	.word	0x3fffffff
     8ac:	0000a15f 	.word	0x0000a15f
     8b0:	00000629 	.word	0x00000629
     8b4:	00000edd 	.word	0x00000edd
     8b8:	00000f35 	.word	0x00000f35
     8bc:	20000270 	.word	0x20000270
     8c0:	20000230 	.word	0x20000230
     8c4:	200001b4 	.word	0x200001b4
     8c8:	00000611 	.word	0x00000611
     8cc:	20000258 	.word	0x20000258
     8d0:	200001a0 	.word	0x200001a0
     8d4:	20000234 	.word	0x20000234
     8d8:	20000194 	.word	0x20000194
     8dc:	2000024c 	.word	0x2000024c
     8e0:	20000198 	.word	0x20000198
     8e4:	20000274 	.word	0x20000274
     8e8:	20000254 	.word	0x20000254
     8ec:	20000250 	.word	0x20000250
     8f0:	00000631 	.word	0x00000631
     8f4:	00000f4d 	.word	0x00000f4d
     8f8:	00000f1d 	.word	0x00000f1d

000008fc <vTaskStartScheduler>:

#endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
/*-----------------------------------------------------------*/

void vTaskStartScheduler( void )
{
     8fc:	b510      	push	{r4, lr}
     8fe:	b084      	sub	sp, #16
		xReturn = xTaskCreate( prvIdleTask, ( signed char * ) "IDLE", tskIDLE_STACK_SIZE, ( void * ) NULL, ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), &xIdleTaskHandle );
	}
	#else
	{
		/* Create the idle task without storing its handle. */
		xReturn = xTaskCreate( prvIdleTask, ( signed char * ) "IDLE", tskIDLE_STACK_SIZE, ( void * ) NULL, ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), NULL );
     900:	2300      	movs	r3, #0
     902:	9300      	str	r3, [sp, #0]
     904:	9301      	str	r3, [sp, #4]
     906:	9302      	str	r3, [sp, #8]
     908:	9303      	str	r3, [sp, #12]
     90a:	480c      	ldr	r0, [pc, #48]	; (93c <vTaskStartScheduler+0x40>)
     90c:	490c      	ldr	r1, [pc, #48]	; (940 <vTaskStartScheduler+0x44>)
     90e:	2296      	movs	r2, #150	; 0x96
     910:	0052      	lsls	r2, r2, #1
     912:	4c0c      	ldr	r4, [pc, #48]	; (944 <vTaskStartScheduler+0x48>)
     914:	47a0      	blx	r4
			xReturn = xTimerCreateTimerTask();
		}
	}
	#endif /* configUSE_TIMERS */

	if( xReturn == pdPASS )
     916:	2801      	cmp	r0, #1
     918:	d109      	bne.n	92e <vTaskStartScheduler+0x32>
		so interrupts will automatically get re-enabled when the first task
		starts to run.

		STEPPING THROUGH HERE USING A DEBUGGER CAN CAUSE BIG PROBLEMS IF THE
		DEBUGGER ALLOWS INTERRUPTS TO BE PROCESSED. */
		portDISABLE_INTERRUPTS();
     91a:	b672      	cpsid	i

		xSchedulerRunning = pdTRUE;
     91c:	2201      	movs	r2, #1
     91e:	4b0a      	ldr	r3, [pc, #40]	; (948 <vTaskStartScheduler+0x4c>)
     920:	601a      	str	r2, [r3, #0]
		xTickCount = ( portTickType ) 0U;
     922:	2200      	movs	r2, #0
     924:	4b09      	ldr	r3, [pc, #36]	; (94c <vTaskStartScheduler+0x50>)
     926:	601a      	str	r2, [r3, #0]
		the run time counter time base. */
		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();

		/* Setting up the timer tick is hardware specific and thus in the
		portable interface. */
		if( xPortStartScheduler() != pdFALSE )
     928:	4b09      	ldr	r3, [pc, #36]	; (950 <vTaskStartScheduler+0x54>)
     92a:	4798      	blx	r3
     92c:	e003      	b.n	936 <vTaskStartScheduler+0x3a>
	else
	{
		/* This line will only be reached if the kernel could not be started,
		because there was not enough FreeRTOS heap to create the idle task
		or the timer task. */
		configASSERT( xReturn );
     92e:	2800      	cmp	r0, #0
     930:	d101      	bne.n	936 <vTaskStartScheduler+0x3a>
     932:	b672      	cpsid	i
     934:	e7fe      	b.n	934 <vTaskStartScheduler+0x38>
	}
}
     936:	b004      	add	sp, #16
     938:	bd10      	pop	{r4, pc}
     93a:	46c0      	nop			; (mov r8, r8)
     93c:	000006ad 	.word	0x000006ad
     940:	0000d5fc 	.word	0x0000d5fc
     944:	00000711 	.word	0x00000711
     948:	20000198 	.word	0x20000198
     94c:	20000248 	.word	0x20000248
     950:	00000fed 	.word	0x00000fed

00000954 <vTaskSuspendAll>:

void vTaskSuspendAll( void )
{
	/* A critical section is not required as the variable is of type
	portBASE_TYPE. */
	++uxSchedulerSuspended;
     954:	4a02      	ldr	r2, [pc, #8]	; (960 <vTaskSuspendAll+0xc>)
     956:	6813      	ldr	r3, [r2, #0]
     958:	3301      	adds	r3, #1
     95a:	6013      	str	r3, [r2, #0]
}
     95c:	4770      	bx	lr
     95e:	46c0      	nop			; (mov r8, r8)
     960:	2000022c 	.word	0x2000022c

00000964 <xTaskGetTickCount>:
	return xAlreadyYielded;
}
/*-----------------------------------------------------------*/

portTickType xTaskGetTickCount( void )
{
     964:	b510      	push	{r4, lr}
portTickType xTicks;

	/* Critical section required if running on a 16 bit processor. */
	taskENTER_CRITICAL();
     966:	4b04      	ldr	r3, [pc, #16]	; (978 <xTaskGetTickCount+0x14>)
     968:	4798      	blx	r3
	{
		xTicks = xTickCount;
     96a:	4b04      	ldr	r3, [pc, #16]	; (97c <xTaskGetTickCount+0x18>)
     96c:	681c      	ldr	r4, [r3, #0]
	}
	taskEXIT_CRITICAL();
     96e:	4b04      	ldr	r3, [pc, #16]	; (980 <xTaskGetTickCount+0x1c>)
     970:	4798      	blx	r3

	return xTicks;
}
     972:	1c20      	adds	r0, r4, #0
     974:	bd10      	pop	{r4, pc}
     976:	46c0      	nop			; (mov r8, r8)
     978:	00000f35 	.word	0x00000f35
     97c:	20000248 	.word	0x20000248
     980:	00000f4d 	.word	0x00000f4d

00000984 <vTaskIncrementTick>:

#endif /* configUSE_TICKLESS_IDLE */
/*----------------------------------------------------------*/

void vTaskIncrementTick( void )
{
     984:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

	/* Called by the portable layer each time a tick interrupt occurs.
	Increments the tick then checks to see if the new tick value will cause any
	tasks to be unblocked. */
	traceTASK_INCREMENT_TICK( xTickCount );
	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
     986:	4b3b      	ldr	r3, [pc, #236]	; (a74 <vTaskIncrementTick+0xf0>)
     988:	681b      	ldr	r3, [r3, #0]
     98a:	2b00      	cmp	r3, #0
     98c:	d16d      	bne.n	a6a <vTaskIncrementTick+0xe6>
	{
		++xTickCount;
     98e:	4b3a      	ldr	r3, [pc, #232]	; (a78 <vTaskIncrementTick+0xf4>)
     990:	681a      	ldr	r2, [r3, #0]
     992:	3201      	adds	r2, #1
     994:	601a      	str	r2, [r3, #0]
		if( xTickCount == ( portTickType ) 0U )
     996:	681b      	ldr	r3, [r3, #0]
     998:	2b00      	cmp	r3, #0
     99a:	d120      	bne.n	9de <vTaskIncrementTick+0x5a>
			xList *pxTemp;

			/* Tick count has overflowed so we need to swap the delay lists.
			If there are any items in pxDelayedTaskList here then there is
			an error! */
			configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );
     99c:	4b37      	ldr	r3, [pc, #220]	; (a7c <vTaskIncrementTick+0xf8>)
     99e:	681b      	ldr	r3, [r3, #0]
     9a0:	681b      	ldr	r3, [r3, #0]
     9a2:	2b00      	cmp	r3, #0
     9a4:	d001      	beq.n	9aa <vTaskIncrementTick+0x26>
     9a6:	b672      	cpsid	i
     9a8:	e7fe      	b.n	9a8 <vTaskIncrementTick+0x24>

			pxTemp = pxDelayedTaskList;
     9aa:	4b34      	ldr	r3, [pc, #208]	; (a7c <vTaskIncrementTick+0xf8>)
     9ac:	6819      	ldr	r1, [r3, #0]
			pxDelayedTaskList = pxOverflowDelayedTaskList;
     9ae:	4a34      	ldr	r2, [pc, #208]	; (a80 <vTaskIncrementTick+0xfc>)
     9b0:	6810      	ldr	r0, [r2, #0]
     9b2:	6018      	str	r0, [r3, #0]
			pxOverflowDelayedTaskList = pxTemp;
     9b4:	6011      	str	r1, [r2, #0]
			xNumOfOverflows++;
     9b6:	4933      	ldr	r1, [pc, #204]	; (a84 <vTaskIncrementTick+0x100>)
     9b8:	680a      	ldr	r2, [r1, #0]
     9ba:	3201      	adds	r2, #1
     9bc:	600a      	str	r2, [r1, #0]

			if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
     9be:	681b      	ldr	r3, [r3, #0]
     9c0:	681b      	ldr	r3, [r3, #0]
     9c2:	2b00      	cmp	r3, #0
     9c4:	d104      	bne.n	9d0 <vTaskIncrementTick+0x4c>
				/* The new current delayed list is empty.  Set
				xNextTaskUnblockTime to the maximum possible value so it is
				extremely unlikely that the
				if( xTickCount >= xNextTaskUnblockTime ) test will pass until
				there is an item in the delayed list. */
				xNextTaskUnblockTime = portMAX_DELAY;
     9c6:	2201      	movs	r2, #1
     9c8:	4252      	negs	r2, r2
     9ca:	4b2f      	ldr	r3, [pc, #188]	; (a88 <vTaskIncrementTick+0x104>)
     9cc:	601a      	str	r2, [r3, #0]
     9ce:	e006      	b.n	9de <vTaskIncrementTick+0x5a>
			{
				/* The new current delayed list is not empty, get the value of
				the item at the head of the delayed list.  This is the time at
				which the task at the head of the delayed list should be removed
				from the Blocked state. */
				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
     9d0:	4b2a      	ldr	r3, [pc, #168]	; (a7c <vTaskIncrementTick+0xf8>)
     9d2:	681b      	ldr	r3, [r3, #0]
     9d4:	68db      	ldr	r3, [r3, #12]
     9d6:	68db      	ldr	r3, [r3, #12]
				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
     9d8:	685a      	ldr	r2, [r3, #4]
     9da:	4b2b      	ldr	r3, [pc, #172]	; (a88 <vTaskIncrementTick+0x104>)
     9dc:	601a      	str	r2, [r3, #0]
			}
		}

		/* See if this tick has made a timeout expire. */
		prvCheckDelayedTasks();
     9de:	4b26      	ldr	r3, [pc, #152]	; (a78 <vTaskIncrementTick+0xf4>)
     9e0:	681a      	ldr	r2, [r3, #0]
     9e2:	4b29      	ldr	r3, [pc, #164]	; (a88 <vTaskIncrementTick+0x104>)
     9e4:	681b      	ldr	r3, [r3, #0]
     9e6:	429a      	cmp	r2, r3
     9e8:	d343      	bcc.n	a72 <vTaskIncrementTick+0xee>
     9ea:	4b24      	ldr	r3, [pc, #144]	; (a7c <vTaskIncrementTick+0xf8>)
     9ec:	681b      	ldr	r3, [r3, #0]
     9ee:	681b      	ldr	r3, [r3, #0]
     9f0:	2b00      	cmp	r3, #0
     9f2:	d00b      	beq.n	a0c <vTaskIncrementTick+0x88>
     9f4:	4b21      	ldr	r3, [pc, #132]	; (a7c <vTaskIncrementTick+0xf8>)
     9f6:	681b      	ldr	r3, [r3, #0]
     9f8:	68db      	ldr	r3, [r3, #12]
     9fa:	68dd      	ldr	r5, [r3, #12]
     9fc:	686b      	ldr	r3, [r5, #4]
     9fe:	4a1e      	ldr	r2, [pc, #120]	; (a78 <vTaskIncrementTick+0xf4>)
     a00:	6812      	ldr	r2, [r2, #0]
     a02:	4293      	cmp	r3, r2
     a04:	d810      	bhi.n	a28 <vTaskIncrementTick+0xa4>
     a06:	4f21      	ldr	r7, [pc, #132]	; (a8c <vTaskIncrementTick+0x108>)
     a08:	4e21      	ldr	r6, [pc, #132]	; (a90 <vTaskIncrementTick+0x10c>)
     a0a:	e010      	b.n	a2e <vTaskIncrementTick+0xaa>
     a0c:	2201      	movs	r2, #1
     a0e:	4252      	negs	r2, r2
     a10:	4b1d      	ldr	r3, [pc, #116]	; (a88 <vTaskIncrementTick+0x104>)
     a12:	601a      	str	r2, [r3, #0]
     a14:	e02d      	b.n	a72 <vTaskIncrementTick+0xee>
     a16:	4b19      	ldr	r3, [pc, #100]	; (a7c <vTaskIncrementTick+0xf8>)
     a18:	681b      	ldr	r3, [r3, #0]
     a1a:	68db      	ldr	r3, [r3, #12]
     a1c:	68dd      	ldr	r5, [r3, #12]
     a1e:	686b      	ldr	r3, [r5, #4]
     a20:	4a15      	ldr	r2, [pc, #84]	; (a78 <vTaskIncrementTick+0xf4>)
     a22:	6812      	ldr	r2, [r2, #0]
     a24:	4293      	cmp	r3, r2
     a26:	d902      	bls.n	a2e <vTaskIncrementTick+0xaa>
     a28:	4a17      	ldr	r2, [pc, #92]	; (a88 <vTaskIncrementTick+0x104>)
     a2a:	6013      	str	r3, [r2, #0]
     a2c:	e021      	b.n	a72 <vTaskIncrementTick+0xee>
     a2e:	1d2c      	adds	r4, r5, #4
     a30:	1c20      	adds	r0, r4, #0
     a32:	47b8      	blx	r7
     a34:	6aab      	ldr	r3, [r5, #40]	; 0x28
     a36:	2b00      	cmp	r3, #0
     a38:	d003      	beq.n	a42 <vTaskIncrementTick+0xbe>
     a3a:	1c28      	adds	r0, r5, #0
     a3c:	3018      	adds	r0, #24
     a3e:	4b13      	ldr	r3, [pc, #76]	; (a8c <vTaskIncrementTick+0x108>)
     a40:	4798      	blx	r3
     a42:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
     a44:	6832      	ldr	r2, [r6, #0]
     a46:	4293      	cmp	r3, r2
     a48:	d901      	bls.n	a4e <vTaskIncrementTick+0xca>
     a4a:	4a11      	ldr	r2, [pc, #68]	; (a90 <vTaskIncrementTick+0x10c>)
     a4c:	6013      	str	r3, [r2, #0]
     a4e:	0098      	lsls	r0, r3, #2
     a50:	18c3      	adds	r3, r0, r3
     a52:	009b      	lsls	r3, r3, #2
     a54:	480f      	ldr	r0, [pc, #60]	; (a94 <vTaskIncrementTick+0x110>)
     a56:	18c0      	adds	r0, r0, r3
     a58:	1c21      	adds	r1, r4, #0
     a5a:	4b0f      	ldr	r3, [pc, #60]	; (a98 <vTaskIncrementTick+0x114>)
     a5c:	4798      	blx	r3
     a5e:	4b07      	ldr	r3, [pc, #28]	; (a7c <vTaskIncrementTick+0xf8>)
     a60:	681b      	ldr	r3, [r3, #0]
     a62:	681b      	ldr	r3, [r3, #0]
     a64:	2b00      	cmp	r3, #0
     a66:	d1d6      	bne.n	a16 <vTaskIncrementTick+0x92>
     a68:	e7d0      	b.n	a0c <vTaskIncrementTick+0x88>
	}
	else
	{
		++uxMissedTicks;
     a6a:	4a0c      	ldr	r2, [pc, #48]	; (a9c <vTaskIncrementTick+0x118>)
     a6c:	6813      	ldr	r3, [r2, #0]
     a6e:	3301      	adds	r3, #1
     a70:	6013      	str	r3, [r2, #0]
		{
			vApplicationTickHook();
		}
	}
	#endif /* configUSE_TICK_HOOK */
}
     a72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     a74:	2000022c 	.word	0x2000022c
     a78:	20000248 	.word	0x20000248
     a7c:	20000194 	.word	0x20000194
     a80:	2000024c 	.word	0x2000024c
     a84:	2000019c 	.word	0x2000019c
     a88:	200000b4 	.word	0x200000b4
     a8c:	00000685 	.word	0x00000685
     a90:	20000250 	.word	0x20000250
     a94:	200001b4 	.word	0x200001b4
     a98:	00000631 	.word	0x00000631
     a9c:	20000190 	.word	0x20000190

00000aa0 <xTaskResumeAll>:

#endif /* configUSE_TICKLESS_IDLE */
/*----------------------------------------------------------*/

signed portBASE_TYPE xTaskResumeAll( void )
{
     aa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
register tskTCB *pxTCB;
signed portBASE_TYPE xAlreadyYielded = pdFALSE;

	/* If uxSchedulerSuspended is zero then this function does not match a
	previous call to vTaskSuspendAll(). */
	configASSERT( uxSchedulerSuspended );
     aa2:	4b2f      	ldr	r3, [pc, #188]	; (b60 <xTaskResumeAll+0xc0>)
     aa4:	681b      	ldr	r3, [r3, #0]
     aa6:	2b00      	cmp	r3, #0
     aa8:	d101      	bne.n	aae <xTaskResumeAll+0xe>
     aaa:	b672      	cpsid	i
     aac:	e7fe      	b.n	aac <xTaskResumeAll+0xc>
	/* It is possible that an ISR caused a task to be removed from an event
	list while the scheduler was suspended.  If this was the case then the
	removed task will have been added to the xPendingReadyList.  Once the
	scheduler has been resumed it is safe to move all the pending ready
	tasks from this list into their appropriate ready list. */
	taskENTER_CRITICAL();
     aae:	4b2d      	ldr	r3, [pc, #180]	; (b64 <xTaskResumeAll+0xc4>)
     ab0:	4798      	blx	r3
	{
		--uxSchedulerSuspended;
     ab2:	4b2b      	ldr	r3, [pc, #172]	; (b60 <xTaskResumeAll+0xc0>)
     ab4:	681a      	ldr	r2, [r3, #0]
     ab6:	3a01      	subs	r2, #1
     ab8:	601a      	str	r2, [r3, #0]

		if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
     aba:	681b      	ldr	r3, [r3, #0]
/*----------------------------------------------------------*/

signed portBASE_TYPE xTaskResumeAll( void )
{
register tskTCB *pxTCB;
signed portBASE_TYPE xAlreadyYielded = pdFALSE;
     abc:	2400      	movs	r4, #0
	tasks from this list into their appropriate ready list. */
	taskENTER_CRITICAL();
	{
		--uxSchedulerSuspended;

		if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
     abe:	2b00      	cmp	r3, #0
     ac0:	d149      	bne.n	b56 <xTaskResumeAll+0xb6>
		{
			if( uxCurrentNumberOfTasks > ( unsigned portBASE_TYPE ) 0U )
     ac2:	4b29      	ldr	r3, [pc, #164]	; (b68 <xTaskResumeAll+0xc8>)
     ac4:	681b      	ldr	r3, [r3, #0]
     ac6:	2600      	movs	r6, #0
     ac8:	2b00      	cmp	r3, #0
     aca:	d122      	bne.n	b12 <xTaskResumeAll+0x72>
     acc:	e043      	b.n	b56 <xTaskResumeAll+0xb6>

				/* Move any readied tasks from the pending list into the
				appropriate ready list. */
				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
				{
					pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY(  ( ( xList * ) &xPendingReadyList ) );
     ace:	4b27      	ldr	r3, [pc, #156]	; (b6c <xTaskResumeAll+0xcc>)
     ad0:	68db      	ldr	r3, [r3, #12]
     ad2:	68df      	ldr	r7, [r3, #12]
					uxListRemove( &( pxTCB->xEventListItem ) );
     ad4:	1c38      	adds	r0, r7, #0
     ad6:	3018      	adds	r0, #24
     ad8:	4b25      	ldr	r3, [pc, #148]	; (b70 <xTaskResumeAll+0xd0>)
     ada:	4798      	blx	r3
					uxListRemove( &( pxTCB->xGenericListItem ) );
     adc:	1d3d      	adds	r5, r7, #4
     ade:	1c28      	adds	r0, r5, #0
     ae0:	4b23      	ldr	r3, [pc, #140]	; (b70 <xTaskResumeAll+0xd0>)
     ae2:	4798      	blx	r3
					prvAddTaskToReadyQueue( pxTCB );
     ae4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
     ae6:	4a23      	ldr	r2, [pc, #140]	; (b74 <xTaskResumeAll+0xd4>)
     ae8:	6812      	ldr	r2, [r2, #0]
     aea:	4293      	cmp	r3, r2
     aec:	d901      	bls.n	af2 <xTaskResumeAll+0x52>
     aee:	4a21      	ldr	r2, [pc, #132]	; (b74 <xTaskResumeAll+0xd4>)
     af0:	6013      	str	r3, [r2, #0]
     af2:	0098      	lsls	r0, r3, #2
     af4:	18c3      	adds	r3, r0, r3
     af6:	009b      	lsls	r3, r3, #2
     af8:	481f      	ldr	r0, [pc, #124]	; (b78 <xTaskResumeAll+0xd8>)
     afa:	18c0      	adds	r0, r0, r3
     afc:	1c29      	adds	r1, r5, #0
     afe:	4b1f      	ldr	r3, [pc, #124]	; (b7c <xTaskResumeAll+0xdc>)
     b00:	4798      	blx	r3

					/* If we have moved a task that has a priority higher than
					the current task then we should yield. */
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
     b02:	4b1f      	ldr	r3, [pc, #124]	; (b80 <xTaskResumeAll+0xe0>)
     b04:	681b      	ldr	r3, [r3, #0]
     b06:	6afa      	ldr	r2, [r7, #44]	; 0x2c
     b08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     b0a:	429a      	cmp	r2, r3
     b0c:	d302      	bcc.n	b14 <xTaskResumeAll+0x74>
					{
						xYieldRequired = pdTRUE;
     b0e:	2601      	movs	r6, #1
     b10:	e000      	b.n	b14 <xTaskResumeAll+0x74>
			{
				portBASE_TYPE xYieldRequired = pdFALSE;

				/* Move any readied tasks from the pending list into the
				appropriate ready list. */
				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
     b12:	4c16      	ldr	r4, [pc, #88]	; (b6c <xTaskResumeAll+0xcc>)
     b14:	6823      	ldr	r3, [r4, #0]
     b16:	2b00      	cmp	r3, #0
     b18:	d1d9      	bne.n	ace <xTaskResumeAll+0x2e>
				}

				/* If any ticks occurred while the scheduler was suspended then
				they should be processed now.  This ensures the tick count does not
				slip, and that any delayed tasks are resumed at the correct time. */
				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
     b1a:	4b1a      	ldr	r3, [pc, #104]	; (b84 <xTaskResumeAll+0xe4>)
     b1c:	681b      	ldr	r3, [r3, #0]
     b1e:	2b00      	cmp	r3, #0
     b20:	d00c      	beq.n	b3c <xTaskResumeAll+0x9c>
				{
					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
     b22:	4b18      	ldr	r3, [pc, #96]	; (b84 <xTaskResumeAll+0xe4>)
     b24:	681b      	ldr	r3, [r3, #0]
     b26:	2b00      	cmp	r3, #0
     b28:	d008      	beq.n	b3c <xTaskResumeAll+0x9c>
					{
						vTaskIncrementTick();
     b2a:	4d17      	ldr	r5, [pc, #92]	; (b88 <xTaskResumeAll+0xe8>)
						--uxMissedTicks;
     b2c:	4c15      	ldr	r4, [pc, #84]	; (b84 <xTaskResumeAll+0xe4>)
				slip, and that any delayed tasks are resumed at the correct time. */
				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
				{
					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
					{
						vTaskIncrementTick();
     b2e:	47a8      	blx	r5
						--uxMissedTicks;
     b30:	6823      	ldr	r3, [r4, #0]
     b32:	3b01      	subs	r3, #1
     b34:	6023      	str	r3, [r4, #0]
				/* If any ticks occurred while the scheduler was suspended then
				they should be processed now.  This ensures the tick count does not
				slip, and that any delayed tasks are resumed at the correct time. */
				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
				{
					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
     b36:	6823      	ldr	r3, [r4, #0]
     b38:	2b00      	cmp	r3, #0
     b3a:	d1f8      	bne.n	b2e <xTaskResumeAll+0x8e>
						xYieldRequired = pdTRUE;
					}
					#endif
				}

				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
     b3c:	2e01      	cmp	r6, #1
     b3e:	d004      	beq.n	b4a <xTaskResumeAll+0xaa>
     b40:	4b12      	ldr	r3, [pc, #72]	; (b8c <xTaskResumeAll+0xec>)
     b42:	681b      	ldr	r3, [r3, #0]
/*----------------------------------------------------------*/

signed portBASE_TYPE xTaskResumeAll( void )
{
register tskTCB *pxTCB;
signed portBASE_TYPE xAlreadyYielded = pdFALSE;
     b44:	2400      	movs	r4, #0
						xYieldRequired = pdTRUE;
					}
					#endif
				}

				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
     b46:	2b01      	cmp	r3, #1
     b48:	d105      	bne.n	b56 <xTaskResumeAll+0xb6>
				{
					xAlreadyYielded = pdTRUE;
					xMissedYield = pdFALSE;
     b4a:	2200      	movs	r2, #0
     b4c:	4b0f      	ldr	r3, [pc, #60]	; (b8c <xTaskResumeAll+0xec>)
     b4e:	601a      	str	r2, [r3, #0]
					portYIELD_WITHIN_API();
     b50:	4b0f      	ldr	r3, [pc, #60]	; (b90 <xTaskResumeAll+0xf0>)
     b52:	4798      	blx	r3
					#endif
				}

				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
				{
					xAlreadyYielded = pdTRUE;
     b54:	2401      	movs	r4, #1
					portYIELD_WITHIN_API();
				}
			}
		}
	}
	taskEXIT_CRITICAL();
     b56:	4b0f      	ldr	r3, [pc, #60]	; (b94 <xTaskResumeAll+0xf4>)
     b58:	4798      	blx	r3

	return xAlreadyYielded;
}
     b5a:	1c20      	adds	r0, r4, #0
     b5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     b5e:	46c0      	nop			; (mov r8, r8)
     b60:	2000022c 	.word	0x2000022c
     b64:	00000f35 	.word	0x00000f35
     b68:	20000270 	.word	0x20000270
     b6c:	20000234 	.word	0x20000234
     b70:	00000685 	.word	0x00000685
     b74:	20000250 	.word	0x20000250
     b78:	200001b4 	.word	0x200001b4
     b7c:	00000631 	.word	0x00000631
     b80:	20000230 	.word	0x20000230
     b84:	20000190 	.word	0x20000190
     b88:	00000985 	.word	0x00000985
     b8c:	2000026c 	.word	0x2000026c
     b90:	00000f1d 	.word	0x00000f1d
     b94:	00000f4d 	.word	0x00000f4d

00000b98 <vTaskDelay>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelay == 1 )

	void vTaskDelay( portTickType xTicksToDelay )
	{
     b98:	b510      	push	{r4, lr}
     b9a:	1e04      	subs	r4, r0, #0
	portTickType xTimeToWake;
	signed portBASE_TYPE xAlreadyYielded = pdFALSE;

		/* A delay time of zero just forces a reschedule. */
		if( xTicksToDelay > ( portTickType ) 0U )
     b9c:	d010      	beq.n	bc0 <vTaskDelay+0x28>
		{
			vTaskSuspendAll();
     b9e:	4b0a      	ldr	r3, [pc, #40]	; (bc8 <vTaskDelay+0x30>)
     ba0:	4798      	blx	r3
				This task cannot be in an event list as it is the currently
				executing task. */

				/* Calculate the time to wake - this may overflow but this is
				not a problem. */
				xTimeToWake = xTickCount + xTicksToDelay;
     ba2:	4b0a      	ldr	r3, [pc, #40]	; (bcc <vTaskDelay+0x34>)
     ba4:	681b      	ldr	r3, [r3, #0]
     ba6:	18e4      	adds	r4, r4, r3

				/* We must remove ourselves from the ready list before adding
				ourselves to the blocked list as the same list item is used for
				both lists. */
				if( uxListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) ) == 0 )
     ba8:	4b09      	ldr	r3, [pc, #36]	; (bd0 <vTaskDelay+0x38>)
     baa:	6818      	ldr	r0, [r3, #0]
     bac:	3004      	adds	r0, #4
     bae:	4b09      	ldr	r3, [pc, #36]	; (bd4 <vTaskDelay+0x3c>)
     bb0:	4798      	blx	r3
					/* The current task must be in a ready list, so there is
					no need to check, and the port reset macro can be called
					directly. */
					portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
				}
				prvAddCurrentTaskToDelayedList( xTimeToWake );
     bb2:	1c20      	adds	r0, r4, #0
     bb4:	4b08      	ldr	r3, [pc, #32]	; (bd8 <vTaskDelay+0x40>)
     bb6:	4798      	blx	r3
			}
			xAlreadyYielded = xTaskResumeAll();
     bb8:	4b08      	ldr	r3, [pc, #32]	; (bdc <vTaskDelay+0x44>)
     bba:	4798      	blx	r3
		}

		/* Force a reschedule if xTaskResumeAll has not already done so, we may
		have put ourselves to sleep. */
		if( xAlreadyYielded == pdFALSE )
     bbc:	2800      	cmp	r0, #0
     bbe:	d101      	bne.n	bc4 <vTaskDelay+0x2c>
		{
			portYIELD_WITHIN_API();
     bc0:	4b07      	ldr	r3, [pc, #28]	; (be0 <vTaskDelay+0x48>)
     bc2:	4798      	blx	r3
		}
	}
     bc4:	bd10      	pop	{r4, pc}
     bc6:	46c0      	nop			; (mov r8, r8)
     bc8:	00000955 	.word	0x00000955
     bcc:	20000248 	.word	0x20000248
     bd0:	20000230 	.word	0x20000230
     bd4:	00000685 	.word	0x00000685
     bd8:	000006b9 	.word	0x000006b9
     bdc:	00000aa1 	.word	0x00000aa1
     be0:	00000f1d 	.word	0x00000f1d

00000be4 <vTaskSwitchContext>:

#endif /* configUSE_APPLICATION_TASK_TAG */
/*-----------------------------------------------------------*/

void vTaskSwitchContext( void )
{
     be4:	b510      	push	{r4, lr}
	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
     be6:	4b24      	ldr	r3, [pc, #144]	; (c78 <vTaskSwitchContext+0x94>)
     be8:	681b      	ldr	r3, [r3, #0]
     bea:	2b00      	cmp	r3, #0
     bec:	d110      	bne.n	c10 <vTaskSwitchContext+0x2c>
		#endif /* configGENERATE_RUN_TIME_STATS */

		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();

		taskSELECT_HIGHEST_PRIORITY_TASK();
     bee:	4b23      	ldr	r3, [pc, #140]	; (c7c <vTaskSwitchContext+0x98>)
     bf0:	681b      	ldr	r3, [r3, #0]
     bf2:	009a      	lsls	r2, r3, #2
     bf4:	18d3      	adds	r3, r2, r3
     bf6:	009b      	lsls	r3, r3, #2
     bf8:	4a21      	ldr	r2, [pc, #132]	; (c80 <vTaskSwitchContext+0x9c>)
     bfa:	589b      	ldr	r3, [r3, r2]
     bfc:	2b00      	cmp	r3, #0
     bfe:	d11a      	bne.n	c36 <vTaskSwitchContext+0x52>
     c00:	4b1e      	ldr	r3, [pc, #120]	; (c7c <vTaskSwitchContext+0x98>)
     c02:	681b      	ldr	r3, [r3, #0]
     c04:	2b00      	cmp	r3, #0
     c06:	d00a      	beq.n	c1e <vTaskSwitchContext+0x3a>
     c08:	4a1c      	ldr	r2, [pc, #112]	; (c7c <vTaskSwitchContext+0x98>)
     c0a:	4c1d      	ldr	r4, [pc, #116]	; (c80 <vTaskSwitchContext+0x9c>)
     c0c:	1c10      	adds	r0, r2, #0
     c0e:	e008      	b.n	c22 <vTaskSwitchContext+0x3e>
{
	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
	{
		/* The scheduler is currently suspended - do not allow a context
		switch. */
		xMissedYield = pdTRUE;
     c10:	2201      	movs	r2, #1
     c12:	4b1c      	ldr	r3, [pc, #112]	; (c84 <vTaskSwitchContext+0xa0>)
     c14:	601a      	str	r2, [r3, #0]
     c16:	e02d      	b.n	c74 <vTaskSwitchContext+0x90>
		#endif /* configGENERATE_RUN_TIME_STATS */

		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();

		taskSELECT_HIGHEST_PRIORITY_TASK();
     c18:	6803      	ldr	r3, [r0, #0]
     c1a:	2b00      	cmp	r3, #0
     c1c:	d101      	bne.n	c22 <vTaskSwitchContext+0x3e>
     c1e:	b672      	cpsid	i
     c20:	e7fe      	b.n	c20 <vTaskSwitchContext+0x3c>
     c22:	6813      	ldr	r3, [r2, #0]
     c24:	3b01      	subs	r3, #1
     c26:	6013      	str	r3, [r2, #0]
     c28:	6813      	ldr	r3, [r2, #0]
     c2a:	0099      	lsls	r1, r3, #2
     c2c:	18cb      	adds	r3, r1, r3
     c2e:	009b      	lsls	r3, r3, #2
     c30:	591b      	ldr	r3, [r3, r4]
     c32:	2b00      	cmp	r3, #0
     c34:	d0f0      	beq.n	c18 <vTaskSwitchContext+0x34>
     c36:	4b11      	ldr	r3, [pc, #68]	; (c7c <vTaskSwitchContext+0x98>)
     c38:	681b      	ldr	r3, [r3, #0]
     c3a:	4c11      	ldr	r4, [pc, #68]	; (c80 <vTaskSwitchContext+0x9c>)
     c3c:	009a      	lsls	r2, r3, #2
     c3e:	18d1      	adds	r1, r2, r3
     c40:	0089      	lsls	r1, r1, #2
     c42:	1861      	adds	r1, r4, r1
     c44:	6848      	ldr	r0, [r1, #4]
     c46:	6840      	ldr	r0, [r0, #4]
     c48:	6048      	str	r0, [r1, #4]
     c4a:	18d2      	adds	r2, r2, r3
     c4c:	0092      	lsls	r2, r2, #2
     c4e:	3208      	adds	r2, #8
     c50:	18a2      	adds	r2, r4, r2
     c52:	4290      	cmp	r0, r2
     c54:	d105      	bne.n	c62 <vTaskSwitchContext+0x7e>
     c56:	6841      	ldr	r1, [r0, #4]
     c58:	009a      	lsls	r2, r3, #2
     c5a:	18d2      	adds	r2, r2, r3
     c5c:	0092      	lsls	r2, r2, #2
     c5e:	18a2      	adds	r2, r4, r2
     c60:	6051      	str	r1, [r2, #4]
     c62:	009a      	lsls	r2, r3, #2
     c64:	18d3      	adds	r3, r2, r3
     c66:	009b      	lsls	r3, r3, #2
     c68:	4a05      	ldr	r2, [pc, #20]	; (c80 <vTaskSwitchContext+0x9c>)
     c6a:	18d3      	adds	r3, r2, r3
     c6c:	685b      	ldr	r3, [r3, #4]
     c6e:	68da      	ldr	r2, [r3, #12]
     c70:	4b05      	ldr	r3, [pc, #20]	; (c88 <vTaskSwitchContext+0xa4>)
     c72:	601a      	str	r2, [r3, #0]

		traceTASK_SWITCHED_IN();
	}
}
     c74:	bd10      	pop	{r4, pc}
     c76:	46c0      	nop			; (mov r8, r8)
     c78:	2000022c 	.word	0x2000022c
     c7c:	20000250 	.word	0x20000250
     c80:	200001b4 	.word	0x200001b4
     c84:	2000026c 	.word	0x2000026c
     c88:	20000230 	.word	0x20000230

00000c8c <vTaskPlaceOnEventList>:
/*-----------------------------------------------------------*/

void vTaskPlaceOnEventList( const xList * const pxEventList, portTickType xTicksToWait )
{
     c8c:	b538      	push	{r3, r4, r5, lr}
portTickType xTimeToWake;

	configASSERT( pxEventList );
     c8e:	2800      	cmp	r0, #0
     c90:	d101      	bne.n	c96 <vTaskPlaceOnEventList+0xa>
     c92:	b672      	cpsid	i
     c94:	e7fe      	b.n	c94 <vTaskPlaceOnEventList+0x8>
     c96:	1c0c      	adds	r4, r1, #0
	SCHEDULER SUSPENDED. */

	/* Place the event list item of the TCB in the appropriate event list.
	This is placed in the list in priority order so the highest priority task
	is the first to be woken by the event. */
	vListInsert( ( xList * ) pxEventList, ( xListItem * ) &( pxCurrentTCB->xEventListItem ) );
     c98:	4d07      	ldr	r5, [pc, #28]	; (cb8 <vTaskPlaceOnEventList+0x2c>)
     c9a:	6829      	ldr	r1, [r5, #0]
     c9c:	3118      	adds	r1, #24
     c9e:	4b07      	ldr	r3, [pc, #28]	; (cbc <vTaskPlaceOnEventList+0x30>)
     ca0:	4798      	blx	r3

	/* We must remove ourselves from the ready list before adding ourselves
	to the blocked list as the same list item is used for both lists.  We have
	exclusive access to the ready lists as the scheduler is locked. */
	if( uxListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) ) == 0 )
     ca2:	6828      	ldr	r0, [r5, #0]
     ca4:	3004      	adds	r0, #4
     ca6:	4b06      	ldr	r3, [pc, #24]	; (cc0 <vTaskPlaceOnEventList+0x34>)
     ca8:	4798      	blx	r3
	}
	#else /* INCLUDE_vTaskSuspend */
	{
			/* Calculate the time at which the task should be woken if the event does
			not occur.  This may overflow but this doesn't matter. */
			xTimeToWake = xTickCount + xTicksToWait;
     caa:	4b06      	ldr	r3, [pc, #24]	; (cc4 <vTaskPlaceOnEventList+0x38>)
     cac:	6818      	ldr	r0, [r3, #0]
     cae:	1820      	adds	r0, r4, r0
			prvAddCurrentTaskToDelayedList( xTimeToWake );
     cb0:	4b05      	ldr	r3, [pc, #20]	; (cc8 <vTaskPlaceOnEventList+0x3c>)
     cb2:	4798      	blx	r3
	}
	#endif /* INCLUDE_vTaskSuspend */
}
     cb4:	bd38      	pop	{r3, r4, r5, pc}
     cb6:	46c0      	nop			; (mov r8, r8)
     cb8:	20000230 	.word	0x20000230
     cbc:	0000064d 	.word	0x0000064d
     cc0:	00000685 	.word	0x00000685
     cc4:	20000248 	.word	0x20000248
     cc8:	000006b9 	.word	0x000006b9

00000ccc <xTaskRemoveFromEventList>:

#endif /* configUSE_TIMERS */
/*-----------------------------------------------------------*/

signed portBASE_TYPE xTaskRemoveFromEventList( const xList * const pxEventList )
{
     ccc:	b538      	push	{r3, r4, r5, lr}
	get called - the lock count on the queue will get modified instead.  This
	means we can always expect exclusive access to the event list here.

	This function assumes that a check has already been made to ensure that
	pxEventList is not empty. */
	pxUnblockedTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
     cce:	68c3      	ldr	r3, [r0, #12]
     cd0:	68dd      	ldr	r5, [r3, #12]
	configASSERT( pxUnblockedTCB );
     cd2:	2d00      	cmp	r5, #0
     cd4:	d101      	bne.n	cda <xTaskRemoveFromEventList+0xe>
     cd6:	b672      	cpsid	i
     cd8:	e7fe      	b.n	cd8 <xTaskRemoveFromEventList+0xc>
	uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
     cda:	1c2c      	adds	r4, r5, #0
     cdc:	3418      	adds	r4, #24
     cde:	1c20      	adds	r0, r4, #0
     ce0:	4b12      	ldr	r3, [pc, #72]	; (d2c <xTaskRemoveFromEventList+0x60>)
     ce2:	4798      	blx	r3

	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
     ce4:	4b12      	ldr	r3, [pc, #72]	; (d30 <xTaskRemoveFromEventList+0x64>)
     ce6:	681b      	ldr	r3, [r3, #0]
     ce8:	2b00      	cmp	r3, #0
     cea:	d113      	bne.n	d14 <xTaskRemoveFromEventList+0x48>
	{
		uxListRemove( &( pxUnblockedTCB->xGenericListItem ) );
     cec:	1d2c      	adds	r4, r5, #4
     cee:	1c20      	adds	r0, r4, #0
     cf0:	4b0e      	ldr	r3, [pc, #56]	; (d2c <xTaskRemoveFromEventList+0x60>)
     cf2:	4798      	blx	r3
		prvAddTaskToReadyQueue( pxUnblockedTCB );
     cf4:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
     cf6:	4a0f      	ldr	r2, [pc, #60]	; (d34 <xTaskRemoveFromEventList+0x68>)
     cf8:	6812      	ldr	r2, [r2, #0]
     cfa:	4293      	cmp	r3, r2
     cfc:	d901      	bls.n	d02 <xTaskRemoveFromEventList+0x36>
     cfe:	4a0d      	ldr	r2, [pc, #52]	; (d34 <xTaskRemoveFromEventList+0x68>)
     d00:	6013      	str	r3, [r2, #0]
     d02:	0098      	lsls	r0, r3, #2
     d04:	18c3      	adds	r3, r0, r3
     d06:	009b      	lsls	r3, r3, #2
     d08:	480b      	ldr	r0, [pc, #44]	; (d38 <xTaskRemoveFromEventList+0x6c>)
     d0a:	18c0      	adds	r0, r0, r3
     d0c:	1c21      	adds	r1, r4, #0
     d0e:	4b0b      	ldr	r3, [pc, #44]	; (d3c <xTaskRemoveFromEventList+0x70>)
     d10:	4798      	blx	r3
     d12:	e003      	b.n	d1c <xTaskRemoveFromEventList+0x50>
	}
	else
	{
		/* We cannot access the delayed or ready lists, so will hold this
		task pending until the scheduler is resumed. */
		vListInsertEnd( ( xList * ) &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
     d14:	480a      	ldr	r0, [pc, #40]	; (d40 <xTaskRemoveFromEventList+0x74>)
     d16:	1c21      	adds	r1, r4, #0
     d18:	4b08      	ldr	r3, [pc, #32]	; (d3c <xTaskRemoveFromEventList+0x70>)
     d1a:	4798      	blx	r3
	}

	if( pxUnblockedTCB->uxPriority >= pxCurrentTCB->uxPriority )
     d1c:	4b09      	ldr	r3, [pc, #36]	; (d44 <xTaskRemoveFromEventList+0x78>)
     d1e:	681b      	ldr	r3, [r3, #0]
     d20:	6aea      	ldr	r2, [r5, #44]	; 0x2c
     d22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     d24:	2000      	movs	r0, #0
     d26:	429a      	cmp	r2, r3
     d28:	4140      	adcs	r0, r0
	{
		xReturn = pdFALSE;
	}

	return xReturn;
}
     d2a:	bd38      	pop	{r3, r4, r5, pc}
     d2c:	00000685 	.word	0x00000685
     d30:	2000022c 	.word	0x2000022c
     d34:	20000250 	.word	0x20000250
     d38:	200001b4 	.word	0x200001b4
     d3c:	00000631 	.word	0x00000631
     d40:	20000234 	.word	0x20000234
     d44:	20000230 	.word	0x20000230

00000d48 <vTaskSetTimeOutState>:
/*-----------------------------------------------------------*/

void vTaskSetTimeOutState( xTimeOutType * const pxTimeOut )
{
	configASSERT( pxTimeOut );
     d48:	2800      	cmp	r0, #0
     d4a:	d101      	bne.n	d50 <vTaskSetTimeOutState+0x8>
     d4c:	b672      	cpsid	i
     d4e:	e7fe      	b.n	d4e <vTaskSetTimeOutState+0x6>
	pxTimeOut->xOverflowCount = xNumOfOverflows;
     d50:	4b03      	ldr	r3, [pc, #12]	; (d60 <vTaskSetTimeOutState+0x18>)
     d52:	681b      	ldr	r3, [r3, #0]
     d54:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
     d56:	4b03      	ldr	r3, [pc, #12]	; (d64 <vTaskSetTimeOutState+0x1c>)
     d58:	681b      	ldr	r3, [r3, #0]
     d5a:	6043      	str	r3, [r0, #4]
}
     d5c:	4770      	bx	lr
     d5e:	46c0      	nop			; (mov r8, r8)
     d60:	2000019c 	.word	0x2000019c
     d64:	20000248 	.word	0x20000248

00000d68 <xTaskCheckForTimeOut>:
/*-----------------------------------------------------------*/

portBASE_TYPE xTaskCheckForTimeOut( xTimeOutType * const pxTimeOut, portTickType * const pxTicksToWait )
{
     d68:	b570      	push	{r4, r5, r6, lr}
portBASE_TYPE xReturn;

	configASSERT( pxTimeOut );
     d6a:	2800      	cmp	r0, #0
     d6c:	d101      	bne.n	d72 <xTaskCheckForTimeOut+0xa>
     d6e:	b672      	cpsid	i
     d70:	e7fe      	b.n	d70 <xTaskCheckForTimeOut+0x8>
	configASSERT( pxTicksToWait );
     d72:	2900      	cmp	r1, #0
     d74:	d101      	bne.n	d7a <xTaskCheckForTimeOut+0x12>
     d76:	b672      	cpsid	i
     d78:	e7fe      	b.n	d78 <xTaskCheckForTimeOut+0x10>
     d7a:	1c0d      	adds	r5, r1, #0
     d7c:	1c04      	adds	r4, r0, #0

	taskENTER_CRITICAL();
     d7e:	4b11      	ldr	r3, [pc, #68]	; (dc4 <xTaskCheckForTimeOut+0x5c>)
     d80:	4798      	blx	r3
				xReturn = pdFALSE;
			}
			else /* We are not blocking indefinitely, perform the checks below. */
		#endif

		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( ( portTickType ) xTickCount >= ( portTickType ) pxTimeOut->xTimeOnEntering ) )
     d82:	4b11      	ldr	r3, [pc, #68]	; (dc8 <xTaskCheckForTimeOut+0x60>)
     d84:	681b      	ldr	r3, [r3, #0]
     d86:	6822      	ldr	r2, [r4, #0]
     d88:	429a      	cmp	r2, r3
     d8a:	d005      	beq.n	d98 <xTaskCheckForTimeOut+0x30>
     d8c:	4b0f      	ldr	r3, [pc, #60]	; (dcc <xTaskCheckForTimeOut+0x64>)
     d8e:	681b      	ldr	r3, [r3, #0]
		{
			/* The tick count is greater than the time at which vTaskSetTimeout()
			was called, but has also overflowed since vTaskSetTimeOut() was called.
			It must have wrapped all the way around and gone past us again. This
			passed since vTaskSetTimeout() was called. */
			xReturn = pdTRUE;
     d90:	2601      	movs	r6, #1
				xReturn = pdFALSE;
			}
			else /* We are not blocking indefinitely, perform the checks below. */
		#endif

		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( ( portTickType ) xTickCount >= ( portTickType ) pxTimeOut->xTimeOnEntering ) )
     d92:	6862      	ldr	r2, [r4, #4]
     d94:	429a      	cmp	r2, r3
     d96:	d910      	bls.n	dba <xTaskCheckForTimeOut+0x52>
			was called, but has also overflowed since vTaskSetTimeOut() was called.
			It must have wrapped all the way around and gone past us again. This
			passed since vTaskSetTimeout() was called. */
			xReturn = pdTRUE;
		}
		else if( ( ( portTickType ) ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEntering ) ) < ( portTickType ) *pxTicksToWait )
     d98:	4b0c      	ldr	r3, [pc, #48]	; (dcc <xTaskCheckForTimeOut+0x64>)
     d9a:	6819      	ldr	r1, [r3, #0]
     d9c:	6860      	ldr	r0, [r4, #4]
     d9e:	682b      	ldr	r3, [r5, #0]
     da0:	1a09      	subs	r1, r1, r0
			vTaskSetTimeOutState( pxTimeOut );
			xReturn = pdFALSE;
		}
		else
		{
			xReturn = pdTRUE;
     da2:	2601      	movs	r6, #1
			was called, but has also overflowed since vTaskSetTimeOut() was called.
			It must have wrapped all the way around and gone past us again. This
			passed since vTaskSetTimeout() was called. */
			xReturn = pdTRUE;
		}
		else if( ( ( portTickType ) ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEntering ) ) < ( portTickType ) *pxTicksToWait )
     da4:	4299      	cmp	r1, r3
     da6:	d208      	bcs.n	dba <xTaskCheckForTimeOut+0x52>
		{
			/* Not a genuine timeout. Adjust parameters for time remaining. */
			*pxTicksToWait -= ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEntering );
     da8:	4a08      	ldr	r2, [pc, #32]	; (dcc <xTaskCheckForTimeOut+0x64>)
     daa:	6812      	ldr	r2, [r2, #0]
     dac:	1a12      	subs	r2, r2, r0
     dae:	1a9b      	subs	r3, r3, r2
     db0:	602b      	str	r3, [r5, #0]
			vTaskSetTimeOutState( pxTimeOut );
     db2:	1c20      	adds	r0, r4, #0
     db4:	4b06      	ldr	r3, [pc, #24]	; (dd0 <xTaskCheckForTimeOut+0x68>)
     db6:	4798      	blx	r3
			xReturn = pdFALSE;
     db8:	2600      	movs	r6, #0
		else
		{
			xReturn = pdTRUE;
		}
	}
	taskEXIT_CRITICAL();
     dba:	4b06      	ldr	r3, [pc, #24]	; (dd4 <xTaskCheckForTimeOut+0x6c>)
     dbc:	4798      	blx	r3

	return xReturn;
}
     dbe:	1c30      	adds	r0, r6, #0
     dc0:	bd70      	pop	{r4, r5, r6, pc}
     dc2:	46c0      	nop			; (mov r8, r8)
     dc4:	00000f35 	.word	0x00000f35
     dc8:	2000019c 	.word	0x2000019c
     dcc:	20000248 	.word	0x20000248
     dd0:	00000d49 	.word	0x00000d49
     dd4:	00000f4d 	.word	0x00000f4d

00000dd8 <vTaskMissedYield>:
/*-----------------------------------------------------------*/

void vTaskMissedYield( void )
{
	xMissedYield = pdTRUE;
     dd8:	2201      	movs	r2, #1
     dda:	4b01      	ldr	r3, [pc, #4]	; (de0 <vTaskMissedYield+0x8>)
     ddc:	601a      	str	r2, [r3, #0]
}
     dde:	4770      	bx	lr
     de0:	2000026c 	.word	0x2000026c

00000de4 <xTaskGetCurrentTaskHandle>:
	xTaskHandle xReturn;

		/* A critical section is not required as this is not called from
		an interrupt and the current TCB will always be the same for any
		individual execution thread. */
		xReturn = pxCurrentTCB;
     de4:	4b01      	ldr	r3, [pc, #4]	; (dec <xTaskGetCurrentTaskHandle+0x8>)
     de6:	6818      	ldr	r0, [r3, #0]

		return xReturn;
	}
     de8:	4770      	bx	lr
     dea:	46c0      	nop			; (mov r8, r8)
     dec:	20000230 	.word	0x20000230

00000df0 <vTaskPriorityInherit>:
/*-----------------------------------------------------------*/

#if ( configUSE_MUTEXES == 1 )

	void vTaskPriorityInherit( xTaskHandle * const pxMutexHolder )
	{
     df0:	b538      	push	{r3, r4, r5, lr}
	tskTCB * const pxTCB = ( tskTCB * ) pxMutexHolder;

		/* If the mutex was given back by an interrupt while the queue was
		locked then the mutex holder might now be NULL. */
		if( pxMutexHolder != NULL )
     df2:	2800      	cmp	r0, #0
     df4:	d02f      	beq.n	e56 <vTaskPriorityInherit+0x66>
		{
			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
     df6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
     df8:	4a17      	ldr	r2, [pc, #92]	; (e58 <vTaskPriorityInherit+0x68>)
     dfa:	6812      	ldr	r2, [r2, #0]
     dfc:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
     dfe:	4293      	cmp	r3, r2
     e00:	d229      	bcs.n	e56 <vTaskPriorityInherit+0x66>
			{
				/* Adjust the mutex holder state to account for its new priority. */
				listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) pxCurrentTCB->uxPriority );
     e02:	4a15      	ldr	r2, [pc, #84]	; (e58 <vTaskPriorityInherit+0x68>)
     e04:	6812      	ldr	r2, [r2, #0]
     e06:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
     e08:	2206      	movs	r2, #6
     e0a:	1a52      	subs	r2, r2, r1
     e0c:	6182      	str	r2, [r0, #24]

				/* If the task being modified is in the ready state it will need to
				be moved into a new list. */
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xGenericListItem ) ) != pdFALSE )
     e0e:	009a      	lsls	r2, r3, #2
     e10:	18d3      	adds	r3, r2, r3
     e12:	009b      	lsls	r3, r3, #2
     e14:	4a11      	ldr	r2, [pc, #68]	; (e5c <vTaskPriorityInherit+0x6c>)
     e16:	18d3      	adds	r3, r2, r3
     e18:	6942      	ldr	r2, [r0, #20]
     e1a:	429a      	cmp	r2, r3
     e1c:	d117      	bne.n	e4e <vTaskPriorityInherit+0x5e>
     e1e:	1c05      	adds	r5, r0, #0
				{
					if( uxListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) ) == 0 )
     e20:	1d04      	adds	r4, r0, #4
     e22:	1c20      	adds	r0, r4, #0
     e24:	4b0e      	ldr	r3, [pc, #56]	; (e60 <vTaskPriorityInherit+0x70>)
     e26:	4798      	blx	r3
					{
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
					}

					/* Inherit the priority before being moved into the new list. */
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
     e28:	4b0b      	ldr	r3, [pc, #44]	; (e58 <vTaskPriorityInherit+0x68>)
     e2a:	681b      	ldr	r3, [r3, #0]
     e2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     e2e:	62eb      	str	r3, [r5, #44]	; 0x2c
					prvAddTaskToReadyQueue( pxTCB );
     e30:	4a0c      	ldr	r2, [pc, #48]	; (e64 <vTaskPriorityInherit+0x74>)
     e32:	6812      	ldr	r2, [r2, #0]
     e34:	4293      	cmp	r3, r2
     e36:	d901      	bls.n	e3c <vTaskPriorityInherit+0x4c>
     e38:	4a0a      	ldr	r2, [pc, #40]	; (e64 <vTaskPriorityInherit+0x74>)
     e3a:	6013      	str	r3, [r2, #0]
     e3c:	0098      	lsls	r0, r3, #2
     e3e:	18c0      	adds	r0, r0, r3
     e40:	0083      	lsls	r3, r0, #2
     e42:	4806      	ldr	r0, [pc, #24]	; (e5c <vTaskPriorityInherit+0x6c>)
     e44:	18c0      	adds	r0, r0, r3
     e46:	1c21      	adds	r1, r4, #0
     e48:	4b07      	ldr	r3, [pc, #28]	; (e68 <vTaskPriorityInherit+0x78>)
     e4a:	4798      	blx	r3
     e4c:	e003      	b.n	e56 <vTaskPriorityInherit+0x66>
				}
				else
				{
					/* Just inherit the priority. */
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
     e4e:	4b02      	ldr	r3, [pc, #8]	; (e58 <vTaskPriorityInherit+0x68>)
     e50:	681b      	ldr	r3, [r3, #0]
     e52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     e54:	62c3      	str	r3, [r0, #44]	; 0x2c
				}

				traceTASK_PRIORITY_INHERIT( pxTCB, pxCurrentTCB->uxPriority );
			}
		}
	}
     e56:	bd38      	pop	{r3, r4, r5, pc}
     e58:	20000230 	.word	0x20000230
     e5c:	200001b4 	.word	0x200001b4
     e60:	00000685 	.word	0x00000685
     e64:	20000250 	.word	0x20000250
     e68:	00000631 	.word	0x00000631

00000e6c <vTaskPriorityDisinherit>:
/*-----------------------------------------------------------*/

#if ( configUSE_MUTEXES == 1 )

	void vTaskPriorityDisinherit( xTaskHandle * const pxMutexHolder )
	{
     e6c:	b538      	push	{r3, r4, r5, lr}
	tskTCB * const pxTCB = ( tskTCB * ) pxMutexHolder;

		if( pxMutexHolder != NULL )
     e6e:	2800      	cmp	r0, #0
     e70:	d01b      	beq.n	eaa <vTaskPriorityDisinherit+0x3e>
		{
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
     e72:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
     e74:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
     e76:	4293      	cmp	r3, r2
     e78:	d017      	beq.n	eaa <vTaskPriorityDisinherit+0x3e>
     e7a:	1c04      	adds	r4, r0, #0
			{
				/* We must be the running task to be able to give the mutex back.
				Remove ourselves from the ready list we currently appear in. */
				if( uxListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) ) == 0 )
     e7c:	1d05      	adds	r5, r0, #4
     e7e:	1c28      	adds	r0, r5, #0
     e80:	4b0a      	ldr	r3, [pc, #40]	; (eac <vTaskPriorityDisinherit+0x40>)
     e82:	4798      	blx	r3
				}

				/* Disinherit the priority before adding the task into the new
				ready list. */
				traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
				pxTCB->uxPriority = pxTCB->uxBasePriority;
     e84:	6be3      	ldr	r3, [r4, #60]	; 0x3c
     e86:	62e3      	str	r3, [r4, #44]	; 0x2c
				listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) pxTCB->uxPriority );
     e88:	2206      	movs	r2, #6
     e8a:	1ad2      	subs	r2, r2, r3
     e8c:	61a2      	str	r2, [r4, #24]
				prvAddTaskToReadyQueue( pxTCB );
     e8e:	4a08      	ldr	r2, [pc, #32]	; (eb0 <vTaskPriorityDisinherit+0x44>)
     e90:	6812      	ldr	r2, [r2, #0]
     e92:	4293      	cmp	r3, r2
     e94:	d901      	bls.n	e9a <vTaskPriorityDisinherit+0x2e>
     e96:	4a06      	ldr	r2, [pc, #24]	; (eb0 <vTaskPriorityDisinherit+0x44>)
     e98:	6013      	str	r3, [r2, #0]
     e9a:	0098      	lsls	r0, r3, #2
     e9c:	18c0      	adds	r0, r0, r3
     e9e:	0083      	lsls	r3, r0, #2
     ea0:	4804      	ldr	r0, [pc, #16]	; (eb4 <vTaskPriorityDisinherit+0x48>)
     ea2:	18c0      	adds	r0, r0, r3
     ea4:	1c29      	adds	r1, r5, #0
     ea6:	4b04      	ldr	r3, [pc, #16]	; (eb8 <vTaskPriorityDisinherit+0x4c>)
     ea8:	4798      	blx	r3
			}
		}
	}
     eaa:	bd38      	pop	{r3, r4, r5, pc}
     eac:	00000685 	.word	0x00000685
     eb0:	20000250 	.word	0x20000250
     eb4:	200001b4 	.word	0x200001b4
     eb8:	00000631 	.word	0x00000631

00000ebc <vPortStartFirstTask>:
void vPortStartFirstTask( void )
{
	/* The MSP stack is not reset as, unlike on M3/4 parts, there is no vector
	table offset register that can be used to locate the initial stack value.
	Not all M0 parts have the application vector table at address 0. */
	__asm volatile(
     ebc:	4a06      	ldr	r2, [pc, #24]	; (ed8 <pxCurrentTCBConst3>)
     ebe:	6813      	ldr	r3, [r2, #0]
     ec0:	6818      	ldr	r0, [r3, #0]
     ec2:	3020      	adds	r0, #32
     ec4:	f380 8809 	msr	PSP, r0
     ec8:	2002      	movs	r0, #2
     eca:	f380 8814 	msr	CONTROL, r0
     ece:	bc3f      	pop	{r0, r1, r2, r3, r4, r5}
     ed0:	46ae      	mov	lr, r5
     ed2:	b662      	cpsie	i
     ed4:	bd00      	pop	{pc}
     ed6:	46c0      	nop			; (mov r8, r8)

00000ed8 <pxCurrentTCBConst3>:
     ed8:	20000230 	.word	0x20000230

00000edc <pxPortInitialiseStack>:

/*
 * See header file for description.
 */
portSTACK_TYPE *pxPortInitialiseStack( portSTACK_TYPE *pxTopOfStack, pdTASK_CODE pxCode, void *pvParameters )
{
     edc:	b510      	push	{r4, lr}
	/* Simulate the stack frame as it would be created by a context switch
	interrupt. */
	pxTopOfStack--; /* Offset added to account for the way the MCU uses the stack on entry/exit of interrupts. */
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
     ede:	1f03      	subs	r3, r0, #4
     ee0:	2480      	movs	r4, #128	; 0x80
     ee2:	0464      	lsls	r4, r4, #17
     ee4:	601c      	str	r4, [r3, #0]
	pxTopOfStack--;
	*pxTopOfStack = ( portSTACK_TYPE ) pxCode;	/* PC */
     ee6:	3b04      	subs	r3, #4
     ee8:	6019      	str	r1, [r3, #0]
	pxTopOfStack -= 6;	/* LR, R12, R3..R1 */
	*pxTopOfStack = ( portSTACK_TYPE ) pvParameters;	/* R0 */
     eea:	3b18      	subs	r3, #24
     eec:	601a      	str	r2, [r3, #0]
	pxTopOfStack -= 8; /* R11..R4. */
     eee:	3840      	subs	r0, #64	; 0x40

	return pxTopOfStack;
}
     ef0:	bd10      	pop	{r4, pc}
     ef2:	46c0      	nop			; (mov r8, r8)

00000ef4 <SVC_Handler>:
/*-----------------------------------------------------------*/

void vPortSVCHandler( void )
{
	__asm volatile (
     ef4:	4b08      	ldr	r3, [pc, #32]	; (f18 <pxCurrentTCBConst2>)
     ef6:	6819      	ldr	r1, [r3, #0]
     ef8:	6808      	ldr	r0, [r1, #0]
     efa:	3010      	adds	r0, #16
     efc:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
     efe:	46a0      	mov	r8, r4
     f00:	46a9      	mov	r9, r5
     f02:	46b2      	mov	sl, r6
     f04:	46bb      	mov	fp, r7
     f06:	f380 8809 	msr	PSP, r0
     f0a:	3820      	subs	r0, #32
     f0c:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
     f0e:	4671      	mov	r1, lr
     f10:	200d      	movs	r0, #13
     f12:	4301      	orrs	r1, r0
     f14:	4708      	bx	r1
     f16:	46c0      	nop			; (mov r8, r8)

00000f18 <pxCurrentTCBConst2>:
     f18:	20000230 	.word	0x20000230

00000f1c <vPortYield>:
/*-----------------------------------------------------------*/

void vPortYield( void )
{
	/* Set a PendSV to request a context switch. */
	*( portNVIC_INT_CTRL ) = portNVIC_PENDSVSET;
     f1c:	2280      	movs	r2, #128	; 0x80
     f1e:	0552      	lsls	r2, r2, #21
     f20:	4b03      	ldr	r3, [pc, #12]	; (f30 <vPortYield+0x14>)
     f22:	601a      	str	r2, [r3, #0]

	/* Barriers are normally not required but do ensure the code is completely
	within the specified behaviour for the architecture. */
	__asm volatile( "dsb" );
     f24:	f3bf 8f4f 	dsb	sy
	__asm volatile( "isb" );
     f28:	f3bf 8f6f 	isb	sy
}
     f2c:	4770      	bx	lr
     f2e:	46c0      	nop			; (mov r8, r8)
     f30:	e000ed04 	.word	0xe000ed04

00000f34 <vPortEnterCritical>:
/*-----------------------------------------------------------*/

void vPortEnterCritical( void )
{
    portDISABLE_INTERRUPTS();
     f34:	b672      	cpsid	i
    uxCriticalNesting++;
     f36:	4a04      	ldr	r2, [pc, #16]	; (f48 <vPortEnterCritical+0x14>)
     f38:	6813      	ldr	r3, [r2, #0]
     f3a:	3301      	adds	r3, #1
     f3c:	6013      	str	r3, [r2, #0]
	__asm volatile( "dsb" );
     f3e:	f3bf 8f4f 	dsb	sy
	__asm volatile( "isb" );
     f42:	f3bf 8f6f 	isb	sy
}
     f46:	4770      	bx	lr
     f48:	200000b8 	.word	0x200000b8

00000f4c <vPortExitCritical>:
/*-----------------------------------------------------------*/

void vPortExitCritical( void )
{
    uxCriticalNesting--;
     f4c:	4a03      	ldr	r2, [pc, #12]	; (f5c <vPortExitCritical+0x10>)
     f4e:	6813      	ldr	r3, [r2, #0]
     f50:	3b01      	subs	r3, #1
     f52:	6013      	str	r3, [r2, #0]
    if( uxCriticalNesting == 0 )
     f54:	2b00      	cmp	r3, #0
     f56:	d100      	bne.n	f5a <vPortExitCritical+0xe>
    {
        portENABLE_INTERRUPTS();
     f58:	b662      	cpsie	i
    }
}
     f5a:	4770      	bx	lr
     f5c:	200000b8 	.word	0x200000b8

00000f60 <PendSV_Handler>:

void xPortPendSVHandler( void )
{
	/* This is a naked function. */

	__asm volatile
     f60:	f3ef 8009 	mrs	r0, PSP
     f64:	4b0e      	ldr	r3, [pc, #56]	; (fa0 <pxCurrentTCBConst>)
     f66:	681a      	ldr	r2, [r3, #0]
     f68:	3820      	subs	r0, #32
     f6a:	6010      	str	r0, [r2, #0]
     f6c:	c0f0      	stmia	r0!, {r4, r5, r6, r7}
     f6e:	4644      	mov	r4, r8
     f70:	464d      	mov	r5, r9
     f72:	4656      	mov	r6, sl
     f74:	465f      	mov	r7, fp
     f76:	c0f0      	stmia	r0!, {r4, r5, r6, r7}
     f78:	b508      	push	{r3, lr}
     f7a:	b672      	cpsid	i
     f7c:	f7ff fe32 	bl	be4 <vTaskSwitchContext>
     f80:	b662      	cpsie	i
     f82:	bc0c      	pop	{r2, r3}
     f84:	6811      	ldr	r1, [r2, #0]
     f86:	6808      	ldr	r0, [r1, #0]
     f88:	3010      	adds	r0, #16
     f8a:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
     f8c:	46a0      	mov	r8, r4
     f8e:	46a9      	mov	r9, r5
     f90:	46b2      	mov	sl, r6
     f92:	46bb      	mov	fp, r7
     f94:	f380 8809 	msr	PSP, r0
     f98:	3820      	subs	r0, #32
     f9a:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
     f9c:	4718      	bx	r3
     f9e:	46c0      	nop			; (mov r8, r8)

00000fa0 <pxCurrentTCBConst>:
     fa0:	20000230 	.word	0x20000230

00000fa4 <SysTick_Handler>:
	);
}
/*-----------------------------------------------------------*/

void xPortSysTickHandler( void )
{
     fa4:	b508      	push	{r3, lr}
	/* If using preemption, also force a context switch. */
	#if configUSE_PREEMPTION == 1
		*(portNVIC_INT_CTRL) = portNVIC_PENDSVSET;
	#endif

	ulDummy = portSET_INTERRUPT_MASK_FROM_ISR();
     fa6:	b672      	cpsid	i
	{
		vTaskIncrementTick();
     fa8:	4b01      	ldr	r3, [pc, #4]	; (fb0 <SysTick_Handler+0xc>)
     faa:	4798      	blx	r3
	}
	portCLEAR_INTERRUPT_MASK_FROM_ISR( ulDummy );
     fac:	b662      	cpsie	i
}
     fae:	bd08      	pop	{r3, pc}
     fb0:	00000985 	.word	0x00000985

00000fb4 <vPortSetupTimerInterrupt>:
/*
 * Setup the systick timer to generate the tick interrupts at the required
 * frequency.
 */
__attribute__(( weak )) void vPortSetupTimerInterrupt( void )
{
     fb4:	b508      	push	{r3, lr}
	/* Configure SysTick to interrupt at the requested rate. */
	*(portNVIC_SYSTICK_VAL)  = 0; /* Load the SysTick Counter Value */
     fb6:	2200      	movs	r2, #0
     fb8:	4b07      	ldr	r3, [pc, #28]	; (fd8 <vPortSetupTimerInterrupt+0x24>)
     fba:	601a      	str	r2, [r3, #0]
	*(portNVIC_SYSTICK_LOAD) = ( configCPU_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
     fbc:	2000      	movs	r0, #0
     fbe:	4b07      	ldr	r3, [pc, #28]	; (fdc <vPortSetupTimerInterrupt+0x28>)
     fc0:	4798      	blx	r3
     fc2:	21fa      	movs	r1, #250	; 0xfa
     fc4:	0089      	lsls	r1, r1, #2
     fc6:	4b06      	ldr	r3, [pc, #24]	; (fe0 <vPortSetupTimerInterrupt+0x2c>)
     fc8:	4798      	blx	r3
     fca:	3801      	subs	r0, #1
     fcc:	4b05      	ldr	r3, [pc, #20]	; (fe4 <vPortSetupTimerInterrupt+0x30>)
     fce:	6018      	str	r0, [r3, #0]
	*(portNVIC_SYSTICK_CTRL) = portNVIC_SYSTICK_CLK | portNVIC_SYSTICK_INT | portNVIC_SYSTICK_ENABLE;
     fd0:	2207      	movs	r2, #7
     fd2:	4b05      	ldr	r3, [pc, #20]	; (fe8 <vPortSetupTimerInterrupt+0x34>)
     fd4:	601a      	str	r2, [r3, #0]
}
     fd6:	bd08      	pop	{r3, pc}
     fd8:	e000e018 	.word	0xe000e018
     fdc:	00003701 	.word	0x00003701
     fe0:	000051d1 	.word	0x000051d1
     fe4:	e000e014 	.word	0xe000e014
     fe8:	e000e010 	.word	0xe000e010

00000fec <xPortStartScheduler>:

/*
 * See header file for description.
 */
portBASE_TYPE xPortStartScheduler( void )
{
     fec:	b508      	push	{r3, lr}
	/* Make PendSV, CallSV and SysTick the same priroity as the kernel. */
	*(portNVIC_SYSPRI2) |= portNVIC_PENDSV_PRI;
     fee:	4b0a      	ldr	r3, [pc, #40]	; (1018 <xPortStartScheduler+0x2c>)
     ff0:	681a      	ldr	r2, [r3, #0]
     ff2:	21ff      	movs	r1, #255	; 0xff
     ff4:	0409      	lsls	r1, r1, #16
     ff6:	430a      	orrs	r2, r1
     ff8:	601a      	str	r2, [r3, #0]
	*(portNVIC_SYSPRI2) |= portNVIC_SYSTICK_PRI;
     ffa:	681a      	ldr	r2, [r3, #0]
     ffc:	21ff      	movs	r1, #255	; 0xff
     ffe:	0609      	lsls	r1, r1, #24
    1000:	430a      	orrs	r2, r1
    1002:	601a      	str	r2, [r3, #0]

	/* Start the timer that generates the tick ISR.  Interrupts are disabled
	here already. */
	vPortSetupTimerInterrupt();
    1004:	4b05      	ldr	r3, [pc, #20]	; (101c <xPortStartScheduler+0x30>)
    1006:	4798      	blx	r3

	/* Initialise the critical nesting count ready for the first task. */
	uxCriticalNesting = 0;
    1008:	2200      	movs	r2, #0
    100a:	4b05      	ldr	r3, [pc, #20]	; (1020 <xPortStartScheduler+0x34>)
    100c:	601a      	str	r2, [r3, #0]

	/* Start the first task. */
	vPortStartFirstTask();
    100e:	4b05      	ldr	r3, [pc, #20]	; (1024 <xPortStartScheduler+0x38>)
    1010:	4798      	blx	r3

	/* Should not get here! */
	return 0;
}
    1012:	2000      	movs	r0, #0
    1014:	bd08      	pop	{r3, pc}
    1016:	46c0      	nop			; (mov r8, r8)
    1018:	e000ed20 	.word	0xe000ed20
    101c:	00000fb5 	.word	0x00000fb5
    1020:	200000b8 	.word	0x200000b8
    1024:	00000ebd 	.word	0x00000ebd

00001028 <pvPortMalloc>:
static size_t xNextFreeByte = ( size_t ) 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
    1028:	b538      	push	{r3, r4, r5, lr}
    102a:	1c04      	adds	r4, r0, #0
void *pvReturn = NULL;
static unsigned char *pucAlignedHeap = NULL;

	/* Ensure that blocks are always aligned to the required number of bytes. */
	#if portBYTE_ALIGNMENT != 1
		if( xWantedSize & portBYTE_ALIGNMENT_MASK )
    102c:	0743      	lsls	r3, r0, #29
    102e:	d002      	beq.n	1036 <pvPortMalloc+0xe>
		{
			/* Byte alignment required. */
			xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
    1030:	2307      	movs	r3, #7
    1032:	439c      	bics	r4, r3
    1034:	3408      	adds	r4, #8
		}
	#endif

	vTaskSuspendAll();
    1036:	4b10      	ldr	r3, [pc, #64]	; (1078 <pvPortMalloc+0x50>)
    1038:	4798      	blx	r3
	{
		if( pucAlignedHeap == NULL )
    103a:	4b10      	ldr	r3, [pc, #64]	; (107c <pvPortMalloc+0x54>)
    103c:	681b      	ldr	r3, [r3, #0]
    103e:	2b00      	cmp	r3, #0
    1040:	d105      	bne.n	104e <pvPortMalloc+0x26>
		{
			/* Ensure the heap starts on a correctly aligned boundary. */
			pucAlignedHeap = ( unsigned char * ) ( ( ( portPOINTER_SIZE_TYPE ) &ucHeap[ portBYTE_ALIGNMENT ] ) & ( ( portPOINTER_SIZE_TYPE ) ~portBYTE_ALIGNMENT_MASK ) );
    1042:	2207      	movs	r2, #7
    1044:	4b0e      	ldr	r3, [pc, #56]	; (1080 <pvPortMalloc+0x58>)
    1046:	3308      	adds	r3, #8
    1048:	4393      	bics	r3, r2
    104a:	4a0c      	ldr	r2, [pc, #48]	; (107c <pvPortMalloc+0x54>)
    104c:	6013      	str	r3, [r2, #0]
		}

		/* Check there is enough room left for the allocation. */
		if( ( ( xNextFreeByte + xWantedSize ) < configADJUSTED_HEAP_SIZE ) &&
    104e:	4b0d      	ldr	r3, [pc, #52]	; (1084 <pvPortMalloc+0x5c>)
    1050:	681b      	ldr	r3, [r3, #0]
    1052:	18e4      	adds	r4, r4, r3
    1054:	4a0c      	ldr	r2, [pc, #48]	; (1088 <pvPortMalloc+0x60>)
    1056:	4294      	cmp	r4, r2
    1058:	d807      	bhi.n	106a <pvPortMalloc+0x42>
    105a:	42a3      	cmp	r3, r4
    105c:	d207      	bcs.n	106e <pvPortMalloc+0x46>
			( ( xNextFreeByte + xWantedSize ) > xNextFreeByte )	)/* Check for overflow. */
		{
			/* Return the next free byte then increment the index past this
			block. */
			pvReturn = pucAlignedHeap + xNextFreeByte;
    105e:	4a07      	ldr	r2, [pc, #28]	; (107c <pvPortMalloc+0x54>)
    1060:	6815      	ldr	r5, [r2, #0]
    1062:	18ed      	adds	r5, r5, r3
			xNextFreeByte += xWantedSize;
    1064:	4b07      	ldr	r3, [pc, #28]	; (1084 <pvPortMalloc+0x5c>)
    1066:	601c      	str	r4, [r3, #0]
    1068:	e002      	b.n	1070 <pvPortMalloc+0x48>

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
void *pvReturn = NULL;
    106a:	2500      	movs	r5, #0
    106c:	e000      	b.n	1070 <pvPortMalloc+0x48>
    106e:	2500      	movs	r5, #0
			block. */
			pvReturn = pucAlignedHeap + xNextFreeByte;
			xNextFreeByte += xWantedSize;
		}
	}
	xTaskResumeAll();
    1070:	4b06      	ldr	r3, [pc, #24]	; (108c <pvPortMalloc+0x64>)
    1072:	4798      	blx	r3
		}
	}
	#endif

	return pvReturn;
}
    1074:	1c28      	adds	r0, r5, #0
    1076:	bd38      	pop	{r3, r4, r5, pc}
    1078:	00000955 	.word	0x00000955
    107c:	20003d14 	.word	0x20003d14
    1080:	2000027c 	.word	0x2000027c
    1084:	20000278 	.word	0x20000278
    1088:	00003a8f 	.word	0x00003a8f
    108c:	00000aa1 	.word	0x00000aa1

00001090 <vPortFree>:
	heap_4.c for alternative implementations, and the memory management pages of
	http://www.FreeRTOS.org for more information. */
	( void ) pv;

	/* Force an assert as it is invalid to call this function. */
	configASSERT( pv == NULL );
    1090:	2800      	cmp	r0, #0
    1092:	d001      	beq.n	1098 <vPortFree+0x8>
    1094:	b672      	cpsid	i
    1096:	e7fe      	b.n	1096 <vPortFree+0x6>
}
    1098:	4770      	bx	lr
    109a:	46c0      	nop			; (mov r8, r8)

0000109c <_Z3sup11structClockS_>:



Clock timeManage={0,0,true};

bool sup(Clock clock1,Clock clock2){
    109c:	b082      	sub	sp, #8
    109e:	b084      	sub	sp, #16
    10a0:	9001      	str	r0, [sp, #4]
    10a2:	9102      	str	r1, [sp, #8]
    10a4:	9203      	str	r2, [sp, #12]
    10a6:	9305      	str	r3, [sp, #20]
		if(clock1.second>clock2.second){//clock1>clock2
    10a8:	9a01      	ldr	r2, [sp, #4]
    10aa:	9b05      	ldr	r3, [sp, #20]
			return true;
    10ac:	2001      	movs	r0, #1


Clock timeManage={0,0,true};

bool sup(Clock clock1,Clock clock2){
		if(clock1.second>clock2.second){//clock1>clock2
    10ae:	429a      	cmp	r2, r3
    10b0:	d809      	bhi.n	10c6 <_Z3sup11structClockS_+0x2a>
			return true;
		}
		else{
			if(clock1.second<clock2.second){
    10b2:	9a01      	ldr	r2, [sp, #4]
    10b4:	9b05      	ldr	r3, [sp, #20]
				return false;
    10b6:	2000      	movs	r0, #0
bool sup(Clock clock1,Clock clock2){
		if(clock1.second>clock2.second){//clock1>clock2
			return true;
		}
		else{
			if(clock1.second<clock2.second){
    10b8:	429a      	cmp	r2, r3
    10ba:	d304      	bcc.n	10c6 <_Z3sup11structClockS_+0x2a>
				return false;
			}
			else{//egual
				if(clock1.halfmillis>clock2.halfmillis){
    10bc:	9802      	ldr	r0, [sp, #8]
    10be:	9b06      	ldr	r3, [sp, #24]
    10c0:	4283      	cmp	r3, r0
    10c2:	4180      	sbcs	r0, r0
    10c4:	4240      	negs	r0, r0
					return false;
				}
			}
		}

}
    10c6:	b004      	add	sp, #16
    10c8:	b002      	add	sp, #8
    10ca:	4770      	bx	lr

000010cc <_Z11subClockPos11structClockS_>:
	}

	
	return ret;
}
Clock subClockPos(Clock clock1,Clock clock2 ){
    10cc:	b084      	sub	sp, #16
    10ce:	9101      	str	r1, [sp, #4]
    10d0:	9202      	str	r2, [sp, #8]
    10d2:	9303      	str	r3, [sp, #12]
	Clock ret={0,0,true};
    10d4:	2300      	movs	r3, #0
    10d6:	6003      	str	r3, [r0, #0]
    10d8:	6043      	str	r3, [r0, #4]
    10da:	3301      	adds	r3, #1
    10dc:	7203      	strb	r3, [r0, #8]
	//clock1.second+=clock1.halfmillis/RTC_FREQ;
	//clock1.halfmillis=clock1.halfmillis%RTC_FREQ;	
		
	//clock2.second+=clock2.halfmillis/RTC_FREQ;
	//clock2.halfmillis=clock2.halfmillis%RTC_FREQ;
	long int halfmillis=clock2.halfmillis;
    10de:	9905      	ldr	r1, [sp, #20]
	ret.second=clock1.second-clock2.second;
    10e0:	9a01      	ldr	r2, [sp, #4]
    10e2:	9b04      	ldr	r3, [sp, #16]
    10e4:	1ad2      	subs	r2, r2, r3
    10e6:	6002      	str	r2, [r0, #0]
	halfmillis=(long int)clock1.halfmillis-halfmillis;
    10e8:	9b02      	ldr	r3, [sp, #8]
    10ea:	1a5b      	subs	r3, r3, r1
	
	
	
	if(halfmillis<0){
    10ec:	d50b      	bpl.n	1106 <_Z11subClockPos11structClockS_+0x3a>
		
		if(ret.second!=0){
    10ee:	6802      	ldr	r2, [r0, #0]
    10f0:	2a00      	cmp	r2, #0
    10f2:	d009      	beq.n	1108 <_Z11subClockPos11structClockS_+0x3c>
				pc.printf("c1:%ld,%ld",clock1.second,clock1.halfmillis);
				pc.printf("c2:%ld,%ld",clock2.second,clock2.halfmillis);*/
				//sendHMI("error clock");
			}
			
			ret.second--;
    10f4:	6802      	ldr	r2, [r0, #0]
    10f6:	3a01      	subs	r2, #1
    10f8:	6002      	str	r2, [r0, #0]
			ret.halfmillis=(unsigned int)(halfmillis+RTC_FREQ);
    10fa:	22fa      	movs	r2, #250	; 0xfa
    10fc:	01d2      	lsls	r2, r2, #7
    10fe:	4694      	mov	ip, r2
    1100:	4463      	add	r3, ip
    1102:	6043      	str	r3, [r0, #4]
    1104:	e000      	b.n	1108 <_Z11subClockPos11structClockS_+0x3c>
		}
	}
	else{
		ret.halfmillis=halfmillis;
    1106:	6043      	str	r3, [r0, #4]
	}
			
	return ret;
    1108:	b004      	add	sp, #16
    110a:	4770      	bx	lr

0000110c <_Z8subClock11structClockS_>:
	if(clk.sign==false){
		clk.sign=true;
	}
	return clk;
}
Clock subClock(Clock clock1,Clock clock2 ){
    110c:	b570      	push	{r4, r5, r6, lr}
    110e:	b08e      	sub	sp, #56	; 0x38
    1110:	1c04      	adds	r4, r0, #0
    1112:	a805      	add	r0, sp, #20
    1114:	9105      	str	r1, [sp, #20]
    1116:	9206      	str	r2, [sp, #24]
    1118:	9307      	str	r3, [sp, #28]
	Clock ret={0,0,true};
    111a:	2300      	movs	r3, #0
    111c:	6023      	str	r3, [r4, #0]
    111e:	6063      	str	r3, [r4, #4]
    1120:	3301      	adds	r3, #1
    1122:	7223      	strb	r3, [r4, #8]
	if(clock1.sign!=clock2.sign){
    1124:	7a03      	ldrb	r3, [r0, #8]
    1126:	aa12      	add	r2, sp, #72	; 0x48
    1128:	7a12      	ldrb	r2, [r2, #8]
    112a:	b2db      	uxtb	r3, r3
    112c:	4293      	cmp	r3, r2
    112e:	d020      	beq.n	1172 <_Z8subClock11structClockS_+0x66>
		if(clock1.sign==true){// + - -
    1130:	7a03      	ldrb	r3, [r0, #8]
    1132:	2b00      	cmp	r3, #0
    1134:	d00d      	beq.n	1152 <_Z8subClock11structClockS_+0x46>
			clock2.sign=true;
    1136:	2201      	movs	r2, #1
    1138:	ab12      	add	r3, sp, #72	; 0x48
    113a:	721a      	strb	r2, [r3, #8]
			ret=sumClock(clock1,clock2);
    113c:	466b      	mov	r3, sp
    113e:	aa12      	add	r2, sp, #72	; 0x48
    1140:	ca23      	ldmia	r2!, {r0, r1, r5}
    1142:	c323      	stmia	r3!, {r0, r1, r5}
    1144:	1c20      	adds	r0, r4, #0
    1146:	9905      	ldr	r1, [sp, #20]
    1148:	9a06      	ldr	r2, [sp, #24]
    114a:	9b07      	ldr	r3, [sp, #28]
    114c:	4d2e      	ldr	r5, [pc, #184]	; (1208 <_Z8subClock11structClockS_+0xfc>)
    114e:	47a8      	blx	r5
    1150:	e056      	b.n	1200 <_Z8subClock11structClockS_+0xf4>
		}
		else{// - - +
			clock1.sign=true;
    1152:	ab05      	add	r3, sp, #20
    1154:	2201      	movs	r2, #1
    1156:	721a      	strb	r2, [r3, #8]
			ret=sumClock(clock1,clock2);
    1158:	466a      	mov	r2, sp
    115a:	a912      	add	r1, sp, #72	; 0x48
    115c:	c961      	ldmia	r1!, {r0, r5, r6}
    115e:	c261      	stmia	r2!, {r0, r5, r6}
    1160:	1c20      	adds	r0, r4, #0
    1162:	9905      	ldr	r1, [sp, #20]
    1164:	9a06      	ldr	r2, [sp, #24]
    1166:	9b07      	ldr	r3, [sp, #28]
    1168:	4d27      	ldr	r5, [pc, #156]	; (1208 <_Z8subClock11structClockS_+0xfc>)
    116a:	47a8      	blx	r5
			ret.sign=false;
    116c:	2300      	movs	r3, #0
    116e:	7223      	strb	r3, [r4, #8]
    1170:	e046      	b.n	1200 <_Z8subClock11structClockS_+0xf4>
		}
	}
	else{
		if(clock1.sign==true){ //+ - +
    1172:	ab05      	add	r3, sp, #20
    1174:	7a1b      	ldrb	r3, [r3, #8]
    1176:	2b00      	cmp	r3, #0
    1178:	d02b      	beq.n	11d2 <_Z8subClock11structClockS_+0xc6>
    117a:	aa08      	add	r2, sp, #32
    117c:	ab05      	add	r3, sp, #20
    117e:	cb23      	ldmia	r3!, {r0, r1, r5}
    1180:	c223      	stmia	r2!, {r0, r1, r5}
    1182:	ab0b      	add	r3, sp, #44	; 0x2c
    1184:	aa12      	add	r2, sp, #72	; 0x48
    1186:	ca23      	ldmia	r2!, {r0, r1, r5}
    1188:	c323      	stmia	r3!, {r0, r1, r5}


Clock timeManage={0,0,true};

bool sup(Clock clock1,Clock clock2){
		if(clock1.second>clock2.second){//clock1>clock2
    118a:	9a08      	ldr	r2, [sp, #32]
    118c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    118e:	429a      	cmp	r2, r3
    1190:	d807      	bhi.n	11a2 <_Z8subClock11structClockS_+0x96>
			return true;
		}
		else{
			if(clock1.second<clock2.second){
    1192:	9a08      	ldr	r2, [sp, #32]
    1194:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    1196:	429a      	cmp	r2, r3
    1198:	d30e      	bcc.n	11b8 <_Z8subClock11structClockS_+0xac>
				return false;
			}
			else{//egual
				if(clock1.halfmillis>clock2.halfmillis){
    119a:	9a09      	ldr	r2, [sp, #36]	; 0x24
    119c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
			ret.sign=false;
		}
	}
	else{
		if(clock1.sign==true){ //+ - +
			if(sup(clock1,clock2)){//clock1>Clock2
    119e:	429a      	cmp	r2, r3
    11a0:	d90a      	bls.n	11b8 <_Z8subClock11structClockS_+0xac>
				
				ret=subClockPos(clock1,clock2);
    11a2:	466b      	mov	r3, sp
    11a4:	aa12      	add	r2, sp, #72	; 0x48
    11a6:	ca23      	ldmia	r2!, {r0, r1, r5}
    11a8:	c323      	stmia	r3!, {r0, r1, r5}
    11aa:	1c20      	adds	r0, r4, #0
    11ac:	9905      	ldr	r1, [sp, #20]
    11ae:	9a06      	ldr	r2, [sp, #24]
    11b0:	9b07      	ldr	r3, [sp, #28]
    11b2:	4d16      	ldr	r5, [pc, #88]	; (120c <_Z8subClock11structClockS_+0x100>)
    11b4:	47a8      	blx	r5
    11b6:	e023      	b.n	1200 <_Z8subClock11structClockS_+0xf4>
			}
			else{
				ret=subClockPos(clock2,clock1);
    11b8:	ab05      	add	r3, sp, #20
    11ba:	466a      	mov	r2, sp
    11bc:	cb23      	ldmia	r3!, {r0, r1, r5}
    11be:	c223      	stmia	r2!, {r0, r1, r5}
    11c0:	1c20      	adds	r0, r4, #0
    11c2:	9912      	ldr	r1, [sp, #72]	; 0x48
    11c4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    11c6:	9b14      	ldr	r3, [sp, #80]	; 0x50
    11c8:	4d10      	ldr	r5, [pc, #64]	; (120c <_Z8subClock11structClockS_+0x100>)
    11ca:	47a8      	blx	r5
				ret.sign=false;
    11cc:	2300      	movs	r3, #0
    11ce:	7223      	strb	r3, [r4, #8]
    11d0:	e016      	b.n	1200 <_Z8subClock11structClockS_+0xf4>
			}
		}
		else{// - - - 
			clock2.sign=true;
    11d2:	2201      	movs	r2, #1
    11d4:	ab12      	add	r3, sp, #72	; 0x48
    11d6:	721a      	strb	r2, [r3, #8]
			clock1.sign=true;	
    11d8:	ab05      	add	r3, sp, #20
    11da:	721a      	strb	r2, [r3, #8]
			ret=subClock(clock1,clock2);
    11dc:	466a      	mov	r2, sp
    11de:	a912      	add	r1, sp, #72	; 0x48
    11e0:	c961      	ldmia	r1!, {r0, r5, r6}
    11e2:	c261      	stmia	r2!, {r0, r5, r6}
    11e4:	1c20      	adds	r0, r4, #0
    11e6:	9905      	ldr	r1, [sp, #20]
    11e8:	9a06      	ldr	r2, [sp, #24]
    11ea:	9b07      	ldr	r3, [sp, #28]
    11ec:	f7ff ff8e 	bl	110c <_Z8subClock11structClockS_>
			if(ret.sign==true){
    11f0:	7a23      	ldrb	r3, [r4, #8]
    11f2:	2b00      	cmp	r3, #0
    11f4:	d002      	beq.n	11fc <_Z8subClock11structClockS_+0xf0>
				ret.sign=false;
    11f6:	2300      	movs	r3, #0
    11f8:	7223      	strb	r3, [r4, #8]
    11fa:	e001      	b.n	1200 <_Z8subClock11structClockS_+0xf4>
			}
			else{
				ret.sign=true;
    11fc:	2301      	movs	r3, #1
    11fe:	7223      	strb	r3, [r4, #8]
		}
	}

	
	return ret;
}
    1200:	1c20      	adds	r0, r4, #0
    1202:	b00e      	add	sp, #56	; 0x38
    1204:	bd70      	pop	{r4, r5, r6, pc}
    1206:	46c0      	nop			; (mov r8, r8)
    1208:	00001211 	.word	0x00001211
    120c:	000010cd 	.word	0x000010cd

00001210 <_Z8sumClock11structClockS_>:
	ret.second=ret.second+(halfmillis/RTC_FREQ);
	ret.halfmillis=halfmillis%RTC_FREQ;
	return ret;
	
}
Clock sumClock(Clock clock1,Clock clock2 ){
    1210:	b5f0      	push	{r4, r5, r6, r7, lr}
    1212:	4647      	mov	r7, r8
    1214:	b480      	push	{r7}
    1216:	b09a      	sub	sp, #104	; 0x68
    1218:	1c04      	adds	r4, r0, #0
    121a:	a805      	add	r0, sp, #20
    121c:	9105      	str	r1, [sp, #20]
    121e:	9206      	str	r2, [sp, #24]
    1220:	9307      	str	r3, [sp, #28]
	Clock ret={0,0,true};
    1222:	2300      	movs	r3, #0
    1224:	6023      	str	r3, [r4, #0]
    1226:	6063      	str	r3, [r4, #4]
    1228:	3301      	adds	r3, #1
    122a:	7223      	strb	r3, [r4, #8]
		
	if((clock1.sign==true)&&(clock2.sign==true)){// + + +
    122c:	7a03      	ldrb	r3, [r0, #8]
    122e:	2b00      	cmp	r3, #0
    1230:	d013      	beq.n	125a <_Z8sumClock11structClockS_+0x4a>
    1232:	ab20      	add	r3, sp, #128	; 0x80
    1234:	7a1b      	ldrb	r3, [r3, #8]
    1236:	2b00      	cmp	r3, #0
    1238:	d114      	bne.n	1264 <_Z8sumClock11structClockS_+0x54>
    123a:	e00e      	b.n	125a <_Z8sumClock11structClockS_+0x4a>
		ret=sumClockPos(clock1,clock2);
	}
	else{
		if((clock1.sign==true)&&(clock2.sign==false)){ // + + -
    123c:	ab20      	add	r3, sp, #128	; 0x80
    123e:	7a1b      	ldrb	r3, [r3, #8]
    1240:	2b00      	cmp	r3, #0
    1242:	d146      	bne.n	12d2 <_Z8sumClock11structClockS_+0xc2>
    1244:	e037      	b.n	12b6 <_Z8sumClock11structClockS_+0xa6>
			clock2.sign=true;
			ret=subClock(clock1,clock2);
		}
		else{
					if((clock1.sign==false)&&(clock2.sign==true)){ // - + + 
    1246:	ab20      	add	r3, sp, #128	; 0x80
    1248:	7a1b      	ldrb	r3, [r3, #8]
    124a:	2b00      	cmp	r3, #0
    124c:	d146      	bne.n	12dc <_Z8sumClock11structClockS_+0xcc>
    124e:	e052      	b.n	12f6 <_Z8sumClock11structClockS_+0xe6>
						clock1.sign=true;
						ret=subClock(clock2,clock1);
					}
					else{
						if((clock1.sign==false)&&(clock2.sign==false)){ // - + -
    1250:	ab20      	add	r3, sp, #128	; 0x80
    1252:	7a1b      	ldrb	r3, [r3, #8]
    1254:	2b00      	cmp	r3, #0
    1256:	d053      	beq.n	1300 <_Z8sumClock11structClockS_+0xf0>
    1258:	e081      	b.n	135e <_Z8sumClock11structClockS_+0x14e>
		
	if((clock1.sign==true)&&(clock2.sign==true)){// + + +
		ret=sumClockPos(clock1,clock2);
	}
	else{
		if((clock1.sign==true)&&(clock2.sign==false)){ // + + -
    125a:	ab05      	add	r3, sp, #20
    125c:	7a1b      	ldrb	r3, [r3, #8]
    125e:	2b00      	cmp	r3, #0
    1260:	d1ec      	bne.n	123c <_Z8sumClock11structClockS_+0x2c>
    1262:	e036      	b.n	12d2 <_Z8sumClock11structClockS_+0xc2>
    1264:	aa08      	add	r2, sp, #32
    1266:	ab05      	add	r3, sp, #20
    1268:	1c11      	adds	r1, r2, #0
    126a:	cb61      	ldmia	r3!, {r0, r5, r6}
    126c:	c161      	stmia	r1!, {r0, r5, r6}
    126e:	ab0b      	add	r3, sp, #44	; 0x2c
    1270:	1c19      	adds	r1, r3, #0
    1272:	a820      	add	r0, sp, #128	; 0x80
    1274:	c8e0      	ldmia	r0!, {r5, r6, r7}
    1276:	c1e0      	stmia	r1!, {r5, r6, r7}
			}
		}

}
Clock sumClockPos(Clock clock1,Clock clock2 ){
	Clock ret={0,0,true};
    1278:	ad14      	add	r5, sp, #80	; 0x50
    127a:	2100      	movs	r1, #0
    127c:	9114      	str	r1, [sp, #80]	; 0x50
    127e:	9115      	str	r1, [sp, #84]	; 0x54
    1280:	3101      	adds	r1, #1
    1282:	7229      	strb	r1, [r5, #8]
	unsigned long int halfmillis=clock1.halfmillis;
    1284:	9909      	ldr	r1, [sp, #36]	; 0x24
	ret.second=clock1.second+clock2.second;
    1286:	9a08      	ldr	r2, [sp, #32]
    1288:	980b      	ldr	r0, [sp, #44]	; 0x2c
    128a:	1882      	adds	r2, r0, r2
    128c:	9214      	str	r2, [sp, #80]	; 0x50
	halfmillis=halfmillis+clock2.halfmillis;
    128e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
    1290:	1876      	adds	r6, r6, r1
	ret.second=ret.second+(halfmillis/RTC_FREQ);
    1292:	9f14      	ldr	r7, [sp, #80]	; 0x50
    1294:	1c30      	adds	r0, r6, #0
    1296:	21fa      	movs	r1, #250	; 0xfa
    1298:	01c9      	lsls	r1, r1, #7
    129a:	4b3a      	ldr	r3, [pc, #232]	; (1384 <_Z8sumClock11structClockS_+0x174>)
    129c:	4798      	blx	r3
    129e:	19c7      	adds	r7, r0, r7
    12a0:	9714      	str	r7, [sp, #80]	; 0x50
	ret.halfmillis=halfmillis%RTC_FREQ;
    12a2:	1c30      	adds	r0, r6, #0
    12a4:	21fa      	movs	r1, #250	; 0xfa
    12a6:	01c9      	lsls	r1, r1, #7
    12a8:	4b37      	ldr	r3, [pc, #220]	; (1388 <_Z8sumClock11structClockS_+0x178>)
    12aa:	4798      	blx	r3
    12ac:	6069      	str	r1, [r5, #4]
}
Clock sumClock(Clock clock1,Clock clock2 ){
	Clock ret={0,0,true};
		
	if((clock1.sign==true)&&(clock2.sign==true)){// + + +
		ret=sumClockPos(clock1,clock2);
    12ae:	1c23      	adds	r3, r4, #0
    12b0:	cd07      	ldmia	r5!, {r0, r1, r2}
    12b2:	c307      	stmia	r3!, {r0, r1, r2}
    12b4:	e053      	b.n	135e <_Z8sumClock11structClockS_+0x14e>
	}
	else{
		if((clock1.sign==true)&&(clock2.sign==false)){ // + + -
			clock2.sign=true;
    12b6:	2201      	movs	r2, #1
    12b8:	ab20      	add	r3, sp, #128	; 0x80
    12ba:	721a      	strb	r2, [r3, #8]
			ret=subClock(clock1,clock2);
    12bc:	466b      	mov	r3, sp
    12be:	aa20      	add	r2, sp, #128	; 0x80
    12c0:	ca23      	ldmia	r2!, {r0, r1, r5}
    12c2:	c323      	stmia	r3!, {r0, r1, r5}
    12c4:	1c20      	adds	r0, r4, #0
    12c6:	9905      	ldr	r1, [sp, #20]
    12c8:	9a06      	ldr	r2, [sp, #24]
    12ca:	9b07      	ldr	r3, [sp, #28]
    12cc:	4d2f      	ldr	r5, [pc, #188]	; (138c <_Z8sumClock11structClockS_+0x17c>)
    12ce:	47a8      	blx	r5
    12d0:	e045      	b.n	135e <_Z8sumClock11structClockS_+0x14e>
		}
		else{
					if((clock1.sign==false)&&(clock2.sign==true)){ // - + + 
    12d2:	ab05      	add	r3, sp, #20
    12d4:	7a1b      	ldrb	r3, [r3, #8]
    12d6:	2b00      	cmp	r3, #0
    12d8:	d10d      	bne.n	12f6 <_Z8sumClock11structClockS_+0xe6>
    12da:	e7b4      	b.n	1246 <_Z8sumClock11structClockS_+0x36>
						clock1.sign=true;
    12dc:	ab05      	add	r3, sp, #20
    12de:	2201      	movs	r2, #1
    12e0:	721a      	strb	r2, [r3, #8]
						ret=subClock(clock2,clock1);
    12e2:	466a      	mov	r2, sp
    12e4:	cb23      	ldmia	r3!, {r0, r1, r5}
    12e6:	c223      	stmia	r2!, {r0, r1, r5}
    12e8:	1c20      	adds	r0, r4, #0
    12ea:	9920      	ldr	r1, [sp, #128]	; 0x80
    12ec:	9a21      	ldr	r2, [sp, #132]	; 0x84
    12ee:	9b22      	ldr	r3, [sp, #136]	; 0x88
    12f0:	4d26      	ldr	r5, [pc, #152]	; (138c <_Z8sumClock11structClockS_+0x17c>)
    12f2:	47a8      	blx	r5
    12f4:	e033      	b.n	135e <_Z8sumClock11structClockS_+0x14e>
					}
					else{
						if((clock1.sign==false)&&(clock2.sign==false)){ // - + -
    12f6:	ab05      	add	r3, sp, #20
    12f8:	7a1b      	ldrb	r3, [r3, #8]
    12fa:	2b00      	cmp	r3, #0
    12fc:	d12f      	bne.n	135e <_Z8sumClock11structClockS_+0x14e>
    12fe:	e7a7      	b.n	1250 <_Z8sumClock11structClockS_+0x40>
							clock1.sign=true;
    1300:	ab05      	add	r3, sp, #20
    1302:	2101      	movs	r1, #1
    1304:	7219      	strb	r1, [r3, #8]
							clock2.sign=true;
    1306:	aa20      	add	r2, sp, #128	; 0x80
    1308:	7211      	strb	r1, [r2, #8]
    130a:	aa0e      	add	r2, sp, #56	; 0x38
    130c:	1c10      	adds	r0, r2, #0
    130e:	cbe0      	ldmia	r3!, {r5, r6, r7}
    1310:	c0e0      	stmia	r0!, {r5, r6, r7}
    1312:	ab11      	add	r3, sp, #68	; 0x44
    1314:	469c      	mov	ip, r3
    1316:	1c18      	adds	r0, r3, #0
    1318:	ad20      	add	r5, sp, #128	; 0x80
    131a:	cdc8      	ldmia	r5!, {r3, r6, r7}
    131c:	c0c8      	stmia	r0!, {r3, r6, r7}
			}
		}

}
Clock sumClockPos(Clock clock1,Clock clock2 ){
	Clock ret={0,0,true};
    131e:	ad17      	add	r5, sp, #92	; 0x5c
    1320:	2700      	movs	r7, #0
    1322:	9717      	str	r7, [sp, #92]	; 0x5c
    1324:	9718      	str	r7, [sp, #96]	; 0x60
    1326:	7229      	strb	r1, [r5, #8]
	unsigned long int halfmillis=clock1.halfmillis;
    1328:	990f      	ldr	r1, [sp, #60]	; 0x3c
	ret.second=clock1.second+clock2.second;
    132a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    132c:	9811      	ldr	r0, [sp, #68]	; 0x44
    132e:	1882      	adds	r2, r0, r2
    1330:	9217      	str	r2, [sp, #92]	; 0x5c
	halfmillis=halfmillis+clock2.halfmillis;
    1332:	4663      	mov	r3, ip
    1334:	685e      	ldr	r6, [r3, #4]
    1336:	1876      	adds	r6, r6, r1
	ret.second=ret.second+(halfmillis/RTC_FREQ);
    1338:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    133a:	4698      	mov	r8, r3
    133c:	1c30      	adds	r0, r6, #0
    133e:	21fa      	movs	r1, #250	; 0xfa
    1340:	01c9      	lsls	r1, r1, #7
    1342:	4b10      	ldr	r3, [pc, #64]	; (1384 <_Z8sumClock11structClockS_+0x174>)
    1344:	4798      	blx	r3
    1346:	4440      	add	r0, r8
    1348:	9017      	str	r0, [sp, #92]	; 0x5c
	ret.halfmillis=halfmillis%RTC_FREQ;
    134a:	1c30      	adds	r0, r6, #0
    134c:	21fa      	movs	r1, #250	; 0xfa
    134e:	01c9      	lsls	r1, r1, #7
    1350:	4b0d      	ldr	r3, [pc, #52]	; (1388 <_Z8sumClock11structClockS_+0x178>)
    1352:	4798      	blx	r3
    1354:	6069      	str	r1, [r5, #4]
					}
					else{
						if((clock1.sign==false)&&(clock2.sign==false)){ // - + -
							clock1.sign=true;
							clock2.sign=true;
							ret=sumClockPos(clock1,clock2);
    1356:	1c23      	adds	r3, r4, #0
    1358:	cd07      	ldmia	r5!, {r0, r1, r2}
    135a:	c307      	stmia	r3!, {r0, r1, r2}
							ret.sign=false;
    135c:	7227      	strb	r7, [r4, #8]
						}
					}
		}
		
	}
	ret.second+=ret.halfmillis/RTC_FREQ;
    135e:	6860      	ldr	r0, [r4, #4]
    1360:	6825      	ldr	r5, [r4, #0]
    1362:	21fa      	movs	r1, #250	; 0xfa
    1364:	01c9      	lsls	r1, r1, #7
    1366:	4b07      	ldr	r3, [pc, #28]	; (1384 <_Z8sumClock11structClockS_+0x174>)
    1368:	4798      	blx	r3
    136a:	1945      	adds	r5, r0, r5
    136c:	6025      	str	r5, [r4, #0]
	ret.halfmillis=ret.halfmillis%RTC_FREQ;
    136e:	6860      	ldr	r0, [r4, #4]
    1370:	21fa      	movs	r1, #250	; 0xfa
    1372:	01c9      	lsls	r1, r1, #7
    1374:	4b04      	ldr	r3, [pc, #16]	; (1388 <_Z8sumClock11structClockS_+0x178>)
    1376:	4798      	blx	r3
    1378:	6061      	str	r1, [r4, #4]
	return ret;
}
    137a:	1c20      	adds	r0, r4, #0
    137c:	b01a      	add	sp, #104	; 0x68
    137e:	bc04      	pop	{r2}
    1380:	4690      	mov	r8, r2
    1382:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1384:	000051d1 	.word	0x000051d1
    1388:	000052dd 	.word	0x000052dd
    138c:	0000110d 	.word	0x0000110d

00001390 <_Z9readClockP11structClock>:
volatile int timeCorr;
volatile bool stateLed=false;
DigitalOut led(LED1);
struct rtc_module rtc_instance;

uint32_t  readClock(Clock* timeClock){
    1390:	b570      	push	{r4, r5, r6, lr}
    1392:	1c04      	adds	r4, r0, #0
	//rtc_count_disable(&rtc_instance);
	//Disable_global_interrupt();
	uint32_t timeCounter=0;
	RTC->MODE0.CTRL.reg &=  0b1111111111111101;
    1394:	4a16      	ldr	r2, [pc, #88]	; (13f0 <_Z9readClockP11structClock+0x60>)
    1396:	8813      	ldrh	r3, [r2, #0]
    1398:	2102      	movs	r1, #2
    139a:	438b      	bics	r3, r1
    139c:	8013      	strh	r3, [r2, #0]
	while(RTC->MODE0.STATUS.bit.SYNCBUSY==1);
    139e:	7a93      	ldrb	r3, [r2, #10]
    13a0:	09db      	lsrs	r3, r3, #7
    13a2:	d1fc      	bne.n	139e <_Z9readClockP11structClock+0xe>
	
	timeCounter=RTC->MODE0.COUNT.reg; 
    13a4:	4b12      	ldr	r3, [pc, #72]	; (13f0 <_Z9readClockP11structClock+0x60>)
    13a6:	691e      	ldr	r6, [r3, #16]
	
	//timeCounter=0;
	
	RTC->MODE0.CTRL.reg |= RTC_MODE0_CTRL_ENABLE;
    13a8:	8819      	ldrh	r1, [r3, #0]
    13aa:	2202      	movs	r2, #2
    13ac:	430a      	orrs	r2, r1
    13ae:	801a      	strh	r2, [r3, #0]
	
	timeClock->second=timeManage.second;	
    13b0:	4b10      	ldr	r3, [pc, #64]	; (13f4 <_Z9readClockP11structClock+0x64>)
    13b2:	681a      	ldr	r2, [r3, #0]
    13b4:	6022      	str	r2, [r4, #0]
	timeClock->halfmillis=timeManage.halfmillis;	
    13b6:	685b      	ldr	r3, [r3, #4]
    13b8:	6063      	str	r3, [r4, #4]
	Enable_global_interrupt();
    13ba:	2301      	movs	r3, #1
    13bc:	4a0e      	ldr	r2, [pc, #56]	; (13f8 <_Z9readClockP11structClock+0x68>)
    13be:	7013      	strb	r3, [r2, #0]
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
    13c0:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
    13c4:	b662      	cpsie	i
	timeClock->sign=true;	
    13c6:	7223      	strb	r3, [r4, #8]
	
	//	rtc_count_enable(&rtc_instance); 
	timeClock->halfmillis+=timeCounter;
    13c8:	6863      	ldr	r3, [r4, #4]
    13ca:	199b      	adds	r3, r3, r6
    13cc:	6063      	str	r3, [r4, #4]
	timeClock->second+=timeClock->halfmillis/RTC_FREQ;
    13ce:	6860      	ldr	r0, [r4, #4]
    13d0:	6825      	ldr	r5, [r4, #0]
    13d2:	21fa      	movs	r1, #250	; 0xfa
    13d4:	01c9      	lsls	r1, r1, #7
    13d6:	4b09      	ldr	r3, [pc, #36]	; (13fc <_Z9readClockP11structClock+0x6c>)
    13d8:	4798      	blx	r3
    13da:	1945      	adds	r5, r0, r5
    13dc:	6025      	str	r5, [r4, #0]
	timeClock->halfmillis=timeClock->halfmillis%RTC_FREQ;
    13de:	6860      	ldr	r0, [r4, #4]
    13e0:	21fa      	movs	r1, #250	; 0xfa
    13e2:	01c9      	lsls	r1, r1, #7
    13e4:	4b06      	ldr	r3, [pc, #24]	; (1400 <_Z9readClockP11structClock+0x70>)
    13e6:	4798      	blx	r3
    13e8:	6061      	str	r1, [r4, #4]
	
	return timeCounter;
}
    13ea:	1c30      	adds	r0, r6, #0
    13ec:	bd70      	pop	{r4, r5, r6, pc}
    13ee:	46c0      	nop			; (mov r8, r8)
    13f0:	40001400 	.word	0x40001400
    13f4:	200000bc 	.word	0x200000bc
    13f8:	200000d0 	.word	0x200000d0
    13fc:	000051d1 	.word	0x000051d1
    1400:	000052dd 	.word	0x000052dd

00001404 <_Z10writeClock11structClock>:
void writeClock(Clock clk){
    1404:	b570      	push	{r4, r5, r6, lr}
    1406:	b084      	sub	sp, #16
    1408:	9001      	str	r0, [sp, #4]
    140a:	9102      	str	r1, [sp, #8]
    140c:	9203      	str	r2, [sp, #12]
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
    140e:	b672      	cpsid	i
    1410:	f3bf 8f5f 	dmb	sy
	//rtc_count_disable(&rtc_instance);
	Disable_global_interrupt();
    1414:	2200      	movs	r2, #0
    1416:	4b1a      	ldr	r3, [pc, #104]	; (1480 <_Z10writeClock11structClock+0x7c>)
    1418:	701a      	strb	r2, [r3, #0]
	timeManage.second=clk.second;
    141a:	9b01      	ldr	r3, [sp, #4]
    141c:	4c19      	ldr	r4, [pc, #100]	; (1484 <_Z10writeClock11structClock+0x80>)
    141e:	6023      	str	r3, [r4, #0]
	timeManage.halfmillis=(int)(clk.halfmillis/VALUE_TIMER)*VALUE_TIMER;
    1420:	9802      	ldr	r0, [sp, #8]
    1422:	2196      	movs	r1, #150	; 0x96
    1424:	4b18      	ldr	r3, [pc, #96]	; (1488 <_Z10writeClock11structClock+0x84>)
    1426:	4798      	blx	r3
    1428:	2396      	movs	r3, #150	; 0x96
    142a:	4358      	muls	r0, r3
    142c:	6060      	str	r0, [r4, #4]
	RTC->MODE0.CTRL.reg &=  0b1111111111111101;
    142e:	4a17      	ldr	r2, [pc, #92]	; (148c <_Z10writeClock11structClock+0x88>)
    1430:	8813      	ldrh	r3, [r2, #0]
    1432:	2102      	movs	r1, #2
    1434:	438b      	bics	r3, r1
    1436:	8013      	strh	r3, [r2, #0]
	while(RTC->MODE0.STATUS.bit.SYNCBUSY==1);
    1438:	7a93      	ldrb	r3, [r2, #10]
    143a:	09db      	lsrs	r3, r3, #7
    143c:	d1fc      	bne.n	1438 <_Z10writeClock11structClock+0x34>
	RTC->MODE0.COUNT.reg=clk.halfmillis%VALUE_TIMER;
    143e:	9802      	ldr	r0, [sp, #8]
    1440:	4e13      	ldr	r6, [pc, #76]	; (1490 <_Z10writeClock11structClock+0x8c>)
    1442:	2196      	movs	r1, #150	; 0x96
    1444:	47b0      	blx	r6
    1446:	4b11      	ldr	r3, [pc, #68]	; (148c <_Z10writeClock11structClock+0x88>)
    1448:	6119      	str	r1, [r3, #16]
	RTC->MODE0.CTRL.reg |= RTC_MODE0_CTRL_ENABLE;
    144a:	8819      	ldrh	r1, [r3, #0]
    144c:	2202      	movs	r2, #2
    144e:	430a      	orrs	r2, r1
    1450:	801a      	strh	r2, [r3, #0]
	Enable_global_interrupt();
    1452:	2201      	movs	r2, #1
    1454:	4b0a      	ldr	r3, [pc, #40]	; (1480 <_Z10writeClock11structClock+0x7c>)
    1456:	701a      	strb	r2, [r3, #0]
    1458:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
    145c:	b662      	cpsie	i
	timeManage.second+=timeManage.halfmillis/RTC_FREQ;
    145e:	4c09      	ldr	r4, [pc, #36]	; (1484 <_Z10writeClock11structClock+0x80>)
    1460:	6860      	ldr	r0, [r4, #4]
    1462:	6825      	ldr	r5, [r4, #0]
    1464:	21fa      	movs	r1, #250	; 0xfa
    1466:	01c9      	lsls	r1, r1, #7
    1468:	4b07      	ldr	r3, [pc, #28]	; (1488 <_Z10writeClock11structClock+0x84>)
    146a:	4798      	blx	r3
    146c:	1945      	adds	r5, r0, r5
    146e:	6025      	str	r5, [r4, #0]
	timeManage.halfmillis=timeManage.halfmillis%RTC_FREQ;
    1470:	6860      	ldr	r0, [r4, #4]
    1472:	21fa      	movs	r1, #250	; 0xfa
    1474:	01c9      	lsls	r1, r1, #7
    1476:	47b0      	blx	r6
    1478:	6061      	str	r1, [r4, #4]
	
	
}
    147a:	b004      	add	sp, #16
    147c:	bd70      	pop	{r4, r5, r6, pc}
    147e:	46c0      	nop			; (mov r8, r8)
    1480:	200000d0 	.word	0x200000d0
    1484:	200000bc 	.word	0x200000bc
    1488:	000051d1 	.word	0x000051d1
    148c:	40001400 	.word	0x40001400
    1490:	000052dd 	.word	0x000052dd

00001494 <_Z15isrInternalClokv>:
void isrInternalClok(void){
    1494:	b5f0      	push	{r4, r5, r6, r7, lr}
    1496:	b08d      	sub	sp, #52	; 0x34
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
    1498:	b672      	cpsid	i
    149a:	f3bf 8f5f 	dmb	sy
			Disable_global_interrupt();
    149e:	2200      	movs	r2, #0
    14a0:	4b57      	ldr	r3, [pc, #348]	; (1600 <_Z15isrInternalClokv+0x16c>)
    14a2:	701a      	strb	r2, [r3, #0]
			//printf("+");
			static bool state;
			state=stateLed;
    14a4:	4b57      	ldr	r3, [pc, #348]	; (1604 <_Z15isrInternalClokv+0x170>)
    14a6:	781a      	ldrb	r2, [r3, #0]
    14a8:	4b57      	ldr	r3, [pc, #348]	; (1608 <_Z15isrInternalClokv+0x174>)
    14aa:	701a      	strb	r2, [r3, #0]
			

			timeManage.halfmillis+=VALUE_TIMER;
    14ac:	4b57      	ldr	r3, [pc, #348]	; (160c <_Z15isrInternalClokv+0x178>)
    14ae:	685a      	ldr	r2, [r3, #4]
    14b0:	3296      	adds	r2, #150	; 0x96
    14b2:	605a      	str	r2, [r3, #4]

		
			if(timeManage.halfmillis<(RTC_FREQ/2)){//all 500ms
    14b4:	685a      	ldr	r2, [r3, #4]
    14b6:	4b56      	ldr	r3, [pc, #344]	; (1610 <_Z15isrInternalClokv+0x17c>)
    14b8:	429a      	cmp	r2, r3
    14ba:	d803      	bhi.n	14c4 <_Z15isrInternalClokv+0x30>
				stateLed=LOW;
    14bc:	2200      	movs	r2, #0
    14be:	4b51      	ldr	r3, [pc, #324]	; (1604 <_Z15isrInternalClokv+0x170>)
    14c0:	701a      	strb	r2, [r3, #0]
    14c2:	e002      	b.n	14ca <_Z15isrInternalClokv+0x36>
			}
			else{
				stateLed=HIGH;
    14c4:	2201      	movs	r2, #1
    14c6:	4b4f      	ldr	r3, [pc, #316]	; (1604 <_Z15isrInternalClokv+0x170>)
    14c8:	701a      	strb	r2, [r3, #0]
			}
			if(state!=stateLed){
    14ca:	4b4e      	ldr	r3, [pc, #312]	; (1604 <_Z15isrInternalClokv+0x170>)
    14cc:	781b      	ldrb	r3, [r3, #0]
    14ce:	b2db      	uxtb	r3, r3
    14d0:	4a4d      	ldr	r2, [pc, #308]	; (1608 <_Z15isrInternalClokv+0x174>)
    14d2:	7812      	ldrb	r2, [r2, #0]
    14d4:	429a      	cmp	r2, r3
    14d6:	d017      	beq.n	1508 <_Z15isrInternalClokv+0x74>
				led = stateLed;
    14d8:	4b4a      	ldr	r3, [pc, #296]	; (1604 <_Z15isrInternalClokv+0x170>)
    14da:	781c      	ldrb	r4, [r3, #0]
    14dc:	b2e4      	uxtb	r4, r4
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    14de:	4b4d      	ldr	r3, [pc, #308]	; (1614 <_Z15isrInternalClokv+0x180>)
    14e0:	781b      	ldrb	r3, [r3, #0]
    14e2:	b25b      	sxtb	r3, r3
    14e4:	3301      	adds	r3, #1
    14e6:	d104      	bne.n	14f2 <_Z15isrInternalClokv+0x5e>
    14e8:	484b      	ldr	r0, [pc, #300]	; (1618 <_Z15isrInternalClokv+0x184>)
    14ea:	494c      	ldr	r1, [pc, #304]	; (161c <_Z15isrInternalClokv+0x188>)
    14ec:	2228      	movs	r2, #40	; 0x28
    14ee:	4b4c      	ldr	r3, [pc, #304]	; (1620 <_Z15isrInternalClokv+0x18c>)
    14f0:	4798      	blx	r3
    if (value)
    14f2:	2c00      	cmp	r4, #0
    14f4:	d004      	beq.n	1500 <_Z15isrInternalClokv+0x6c>
        *obj->OUTSET = obj->mask;
    14f6:	4b47      	ldr	r3, [pc, #284]	; (1614 <_Z15isrInternalClokv+0x180>)
    14f8:	691a      	ldr	r2, [r3, #16]
    14fa:	685b      	ldr	r3, [r3, #4]
    14fc:	6013      	str	r3, [r2, #0]
    14fe:	e003      	b.n	1508 <_Z15isrInternalClokv+0x74>
    else
        *obj->OUTCLR = obj->mask;
    1500:	4b44      	ldr	r3, [pc, #272]	; (1614 <_Z15isrInternalClokv+0x180>)
    1502:	68da      	ldr	r2, [r3, #12]
    1504:	685b      	ldr	r3, [r3, #4]
    1506:	6013      	str	r3, [r2, #0]
				//		xSemaphoreGiveFromISR( synchroLed,NULL);
				//	}
			}

			
		timeManage.second+=timeManage.halfmillis/RTC_FREQ;
    1508:	4c40      	ldr	r4, [pc, #256]	; (160c <_Z15isrInternalClokv+0x178>)
    150a:	6860      	ldr	r0, [r4, #4]
    150c:	6825      	ldr	r5, [r4, #0]
    150e:	21fa      	movs	r1, #250	; 0xfa
    1510:	01c9      	lsls	r1, r1, #7
    1512:	4b44      	ldr	r3, [pc, #272]	; (1624 <_Z15isrInternalClokv+0x190>)
    1514:	4798      	blx	r3
    1516:	1945      	adds	r5, r0, r5
    1518:	6025      	str	r5, [r4, #0]
		timeManage.halfmillis=timeManage.halfmillis%RTC_FREQ;
    151a:	6860      	ldr	r0, [r4, #4]
    151c:	21fa      	movs	r1, #250	; 0xfa
    151e:	01c9      	lsls	r1, r1, #7
    1520:	4b41      	ldr	r3, [pc, #260]	; (1628 <_Z15isrInternalClokv+0x194>)
    1522:	4798      	blx	r3
    1524:	6061      	str	r1, [r4, #4]
			if((valueCor!=0)){
    1526:	4b41      	ldr	r3, [pc, #260]	; (162c <_Z15isrInternalClokv+0x198>)
    1528:	681b      	ldr	r3, [r3, #0]
    152a:	2b00      	cmp	r3, #0
    152c:	d060      	beq.n	15f0 <_Z15isrInternalClokv+0x15c>
				if (timeCorr==0){
    152e:	4b40      	ldr	r3, [pc, #256]	; (1630 <_Z15isrInternalClokv+0x19c>)
    1530:	681b      	ldr	r3, [r3, #0]
    1532:	2b00      	cmp	r3, #0
    1534:	d13c      	bne.n	15b0 <_Z15isrInternalClokv+0x11c>
					timeCorr=timeCorrection;
    1536:	4b3f      	ldr	r3, [pc, #252]	; (1634 <_Z15isrInternalClokv+0x1a0>)
    1538:	681a      	ldr	r2, [r3, #0]
    153a:	4b3d      	ldr	r3, [pc, #244]	; (1630 <_Z15isrInternalClokv+0x19c>)
    153c:	601a      	str	r2, [r3, #0]
					Clock off;
					off.second=(unsigned int )abs(valueCor)/RTC_FREQ;
    153e:	4c3b      	ldr	r4, [pc, #236]	; (162c <_Z15isrInternalClokv+0x198>)
    1540:	6820      	ldr	r0, [r4, #0]
    1542:	17c3      	asrs	r3, r0, #31
    1544:	18c0      	adds	r0, r0, r3
    1546:	4058      	eors	r0, r3
    1548:	21fa      	movs	r1, #250	; 0xfa
    154a:	01c9      	lsls	r1, r1, #7
    154c:	4b35      	ldr	r3, [pc, #212]	; (1624 <_Z15isrInternalClokv+0x190>)
    154e:	4798      	blx	r3
    1550:	9009      	str	r0, [sp, #36]	; 0x24
					off.halfmillis=(unsigned int)abs(valueCor)%RTC_FREQ;
    1552:	6820      	ldr	r0, [r4, #0]
    1554:	17c3      	asrs	r3, r0, #31
    1556:	18c0      	adds	r0, r0, r3
    1558:	4058      	eors	r0, r3
    155a:	21fa      	movs	r1, #250	; 0xfa
    155c:	01c9      	lsls	r1, r1, #7
    155e:	4b32      	ldr	r3, [pc, #200]	; (1628 <_Z15isrInternalClokv+0x194>)
    1560:	4798      	blx	r3
    1562:	910a      	str	r1, [sp, #40]	; 0x28
					if(valueCor<0){
    1564:	6823      	ldr	r3, [r4, #0]
    1566:	2b00      	cmp	r3, #0
    1568:	da03      	bge.n	1572 <_Z15isrInternalClokv+0xde>
						off.sign=false;
    156a:	2200      	movs	r2, #0
    156c:	ab09      	add	r3, sp, #36	; 0x24
    156e:	721a      	strb	r2, [r3, #8]
    1570:	e002      	b.n	1578 <_Z15isrInternalClokv+0xe4>
					}
					else{
						off.sign=true;
    1572:	2201      	movs	r2, #1
    1574:	ab09      	add	r3, sp, #36	; 0x24
    1576:	721a      	strb	r2, [r3, #8]
					}
					//change the time
					timeManage=sumClock(timeManage,off);
    1578:	4e24      	ldr	r6, [pc, #144]	; (160c <_Z15isrInternalClokv+0x178>)
    157a:	ac04      	add	r4, sp, #16
    157c:	ad09      	add	r5, sp, #36	; 0x24
    157e:	466b      	mov	r3, sp
    1580:	1c2a      	adds	r2, r5, #0
    1582:	ca83      	ldmia	r2!, {r0, r1, r7}
    1584:	c383      	stmia	r3!, {r0, r1, r7}
    1586:	1c20      	adds	r0, r4, #0
    1588:	6831      	ldr	r1, [r6, #0]
    158a:	6872      	ldr	r2, [r6, #4]
    158c:	68b3      	ldr	r3, [r6, #8]
    158e:	4f2a      	ldr	r7, [pc, #168]	; (1638 <_Z15isrInternalClokv+0x1a4>)
    1590:	47b8      	blx	r7
    1592:	1c23      	adds	r3, r4, #0
    1594:	cb07      	ldmia	r3!, {r0, r1, r2}
    1596:	c607      	stmia	r6!, {r0, r1, r2}
					//change the correction offset
					sumOffset=sumClock(sumOffset,off);//ok
    1598:	4e28      	ldr	r6, [pc, #160]	; (163c <_Z15isrInternalClokv+0x1a8>)
    159a:	466b      	mov	r3, sp
    159c:	cd07      	ldmia	r5!, {r0, r1, r2}
    159e:	c307      	stmia	r3!, {r0, r1, r2}
    15a0:	1c20      	adds	r0, r4, #0
    15a2:	6831      	ldr	r1, [r6, #0]
    15a4:	6872      	ldr	r2, [r6, #4]
    15a6:	68b3      	ldr	r3, [r6, #8]
    15a8:	47b8      	blx	r7
    15aa:	cc0e      	ldmia	r4!, {r1, r2, r3}
    15ac:	c60e      	stmia	r6!, {r1, r2, r3}
    15ae:	e003      	b.n	15b8 <_Z15isrInternalClokv+0x124>
				}
				else{
					timeCorr--;
    15b0:	4a1f      	ldr	r2, [pc, #124]	; (1630 <_Z15isrInternalClokv+0x19c>)
    15b2:	6813      	ldr	r3, [r2, #0]
    15b4:	3b01      	subs	r3, #1
    15b6:	6013      	str	r3, [r2, #0]
				}	
				sumOffset.second+=sumOffset.halfmillis/RTC_FREQ;
    15b8:	4c20      	ldr	r4, [pc, #128]	; (163c <_Z15isrInternalClokv+0x1a8>)
    15ba:	6860      	ldr	r0, [r4, #4]
    15bc:	6825      	ldr	r5, [r4, #0]
    15be:	4f19      	ldr	r7, [pc, #100]	; (1624 <_Z15isrInternalClokv+0x190>)
    15c0:	21fa      	movs	r1, #250	; 0xfa
    15c2:	01c9      	lsls	r1, r1, #7
    15c4:	47b8      	blx	r7
    15c6:	1945      	adds	r5, r0, r5
    15c8:	6025      	str	r5, [r4, #0]
				sumOffset.halfmillis=sumOffset.halfmillis%RTC_FREQ;
    15ca:	6860      	ldr	r0, [r4, #4]
    15cc:	4e16      	ldr	r6, [pc, #88]	; (1628 <_Z15isrInternalClokv+0x194>)
    15ce:	21fa      	movs	r1, #250	; 0xfa
    15d0:	01c9      	lsls	r1, r1, #7
    15d2:	47b0      	blx	r6
    15d4:	6061      	str	r1, [r4, #4]
				timeManage.second+=timeManage.halfmillis/RTC_FREQ;
    15d6:	4c0d      	ldr	r4, [pc, #52]	; (160c <_Z15isrInternalClokv+0x178>)
    15d8:	6860      	ldr	r0, [r4, #4]
    15da:	6825      	ldr	r5, [r4, #0]
    15dc:	21fa      	movs	r1, #250	; 0xfa
    15de:	01c9      	lsls	r1, r1, #7
    15e0:	47b8      	blx	r7
    15e2:	1945      	adds	r5, r0, r5
    15e4:	6025      	str	r5, [r4, #0]
				timeManage.halfmillis=timeManage.halfmillis%RTC_FREQ;
    15e6:	6860      	ldr	r0, [r4, #4]
    15e8:	21fa      	movs	r1, #250	; 0xfa
    15ea:	01c9      	lsls	r1, r1, #7
    15ec:	47b0      	blx	r6
    15ee:	6061      	str	r1, [r4, #4]
			
			}
			

			
	Enable_global_interrupt();
    15f0:	2201      	movs	r2, #1
    15f2:	4b03      	ldr	r3, [pc, #12]	; (1600 <_Z15isrInternalClokv+0x16c>)
    15f4:	701a      	strb	r2, [r3, #0]
    15f6:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
    15fa:	b662      	cpsie	i
}
    15fc:	b00d      	add	sp, #52	; 0x34
    15fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1600:	200000d0 	.word	0x200000d0
    1604:	20003d20 	.word	0x20003d20
    1608:	20003d18 	.word	0x20003d18
    160c:	200000bc 	.word	0x200000bc
    1610:	00003e7f 	.word	0x00003e7f
    1614:	20003d28 	.word	0x20003d28
    1618:	0000d604 	.word	0x0000d604
    161c:	0000d61c 	.word	0x0000d61c
    1620:	00004111 	.word	0x00004111
    1624:	000051d1 	.word	0x000051d1
    1628:	000052dd 	.word	0x000052dd
    162c:	20003d44 	.word	0x20003d44
    1630:	20003d24 	.word	0x20003d24
    1634:	20003d1c 	.word	0x20003d1c
    1638:	00001211 	.word	0x00001211
    163c:	20003e88 	.word	0x20003e88

00001640 <RTC_Handler>:
void RTC_Handler( void ){
    1640:	b508      	push	{r3, lr}
	RTC->MODE0.INTFLAG.bit.CMP0=1;		//disable the flag COMPARE
    1642:	4b06      	ldr	r3, [pc, #24]	; (165c <RTC_Handler+0x1c>)
    1644:	7a19      	ldrb	r1, [r3, #8]
    1646:	2201      	movs	r2, #1
    1648:	430a      	orrs	r2, r1
    164a:	721a      	strb	r2, [r3, #8]
	RTC->MODE0.INTFLAG.bit.OVF=1;		//disable the flag COMPARE
    164c:	7a1a      	ldrb	r2, [r3, #8]
    164e:	2180      	movs	r1, #128	; 0x80
    1650:	4249      	negs	r1, r1
    1652:	430a      	orrs	r2, r1
    1654:	721a      	strb	r2, [r3, #8]
	isrInternalClok();
    1656:	4b02      	ldr	r3, [pc, #8]	; (1660 <RTC_Handler+0x20>)
    1658:	4798      	blx	r3
}
    165a:	bd08      	pop	{r3, pc}
    165c:	40001400 	.word	0x40001400
    1660:	00001495 	.word	0x00001495

00001664 <_Z22configureInternalClockv>:
void configureInternalClock(void){
	//gENERIC CLOCK GENRERATOR
	GCLK->GENCTRL.reg=0b00000000000000010000010000000010;
    1664:	4b1e      	ldr	r3, [pc, #120]	; (16e0 <_Z22configureInternalClockv+0x7c>)
    1666:	4a1f      	ldr	r2, [pc, #124]	; (16e4 <_Z22configureInternalClockv+0x80>)
    1668:	605a      	str	r2, [r3, #4]
	//Generic Clock Generator Division
	GCLK->GENDIV.reg= 0b00000000000000000000000100000010;
    166a:	2281      	movs	r2, #129	; 0x81
    166c:	0052      	lsls	r2, r2, #1
    166e:	609a      	str	r2, [r3, #8]
	GCLK->CLKCTRL.reg=0x4204;
    1670:	4a1d      	ldr	r2, [pc, #116]	; (16e8 <_Z22configureInternalClockv+0x84>)
    1672:	805a      	strh	r2, [r3, #2]
	//peripheral configuration
	
	RTC->MODE0.CTRL.bit.PRESCALER=0x0;	//prescaller at 0
    1674:	4b1d      	ldr	r3, [pc, #116]	; (16ec <_Z22configureInternalClockv+0x88>)
    1676:	8819      	ldrh	r1, [r3, #0]
    1678:	4a1d      	ldr	r2, [pc, #116]	; (16f0 <_Z22configureInternalClockv+0x8c>)
    167a:	400a      	ands	r2, r1
    167c:	801a      	strh	r2, [r3, #0]
	RTC->MODE0.CTRL.bit.MODE=0x0;			//mode 0 : 32 bit counter
    167e:	881a      	ldrh	r2, [r3, #0]
    1680:	210c      	movs	r1, #12
    1682:	438a      	bics	r2, r1
    1684:	801a      	strh	r2, [r3, #0]
	RTC->MODE0.CTRL.bit.SWRST=0;			//no software reset
    1686:	881a      	ldrh	r2, [r3, #0]
    1688:	390b      	subs	r1, #11
    168a:	438a      	bics	r2, r1
    168c:	801a      	strh	r2, [r3, #0]
	RTC->MODE0.CTRL.bit.MATCHCLR=1;			//automatic reset counter
    168e:	8819      	ldrh	r1, [r3, #0]
    1690:	2280      	movs	r2, #128	; 0x80
    1692:	430a      	orrs	r2, r1
    1694:	801a      	strh	r2, [r3, #0]
	
	//event configuration
	RTC->MODE0.INTENSET.bit.OVF=1;		//enable the event overflow
    1696:	79d9      	ldrb	r1, [r3, #7]
    1698:	2080      	movs	r0, #128	; 0x80
    169a:	4240      	negs	r0, r0
    169c:	4301      	orrs	r1, r0
    169e:	71d9      	strb	r1, [r3, #7]
	RTC->MODE0.INTENSET.bit.CMP0=1;		//enable the event compare
    16a0:	79d9      	ldrb	r1, [r3, #7]
    16a2:	2201      	movs	r2, #1
    16a4:	4311      	orrs	r1, r2
    16a6:	71d9      	strb	r1, [r3, #7]
	RTC->MODE0.INTFLAG.bit.CMP0=1;		//disable the flag COMPARE
    16a8:	7a19      	ldrb	r1, [r3, #8]
    16aa:	430a      	orrs	r2, r1
    16ac:	721a      	strb	r2, [r3, #8]
	RTC->MODE0.INTFLAG.bit.OVF=1;		//disable the flag COMPARE
    16ae:	7a1a      	ldrb	r2, [r3, #8]
    16b0:	4302      	orrs	r2, r0
    16b2:	721a      	strb	r2, [r3, #8]
	RTC->MODE0.COUNT.bit.COUNT=0;			//set the RTC value
    16b4:	2200      	movs	r2, #0
    16b6:	611a      	str	r2, [r3, #16]
	RTC->MODE0.COMP[0].reg = count_set_period;
    16b8:	4a0e      	ldr	r2, [pc, #56]	; (16f4 <_Z22configureInternalClockv+0x90>)
    16ba:	6812      	ldr	r2, [r2, #0]
    16bc:	619a      	str	r2, [r3, #24]

	RTC->MODE0.CTRL.reg |= RTC_MODE0_CTRL_ENABLE;
    16be:	8819      	ldrh	r1, [r3, #0]
    16c0:	2202      	movs	r2, #2
    16c2:	430a      	orrs	r2, r1
    16c4:	801a      	strh	r2, [r3, #0]
  if((int32_t)(IRQn) < 0) {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8 - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
  else {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
    16c6:	4a0c      	ldr	r2, [pc, #48]	; (16f8 <_Z22configureInternalClockv+0x94>)
    16c8:	21c0      	movs	r1, #192	; 0xc0
    16ca:	0089      	lsls	r1, r1, #2
    16cc:	5853      	ldr	r3, [r2, r1]
    16ce:	021b      	lsls	r3, r3, #8
    16d0:	0a1b      	lsrs	r3, r3, #8
    16d2:	20c0      	movs	r0, #192	; 0xc0
    16d4:	0600      	lsls	r0, r0, #24
    16d6:	4303      	orrs	r3, r0
       (((priority << (8 - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
    16d8:	5053      	str	r3, [r2, r1]

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[0] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
    16da:	2308      	movs	r3, #8
    16dc:	6013      	str	r3, [r2, #0]

	NVIC_SetPriority(RTC_IRQn, (1<<__NVIC_PRIO_BITS) - 1);
	NVIC_EnableIRQ(RTC_IRQn);
    16de:	4770      	bx	lr
    16e0:	40000c00 	.word	0x40000c00
    16e4:	00010402 	.word	0x00010402
    16e8:	00004204 	.word	0x00004204
    16ec:	40001400 	.word	0x40001400
    16f0:	fffff0ff 	.word	0xfffff0ff
    16f4:	200000c8 	.word	0x200000c8
    16f8:	e000e100 	.word	0xe000e100

000016fc <_GLOBAL__sub_I_count_set_period>:
    16fc:	b508      	push	{r3, lr}
public:
    /** Create a DigitalOut connected to the specified pin
     *
     *  @param pin DigitalOut pin to connect to
     */
    DigitalOut(PinName pin) : gpio() {
    16fe:	4807      	ldr	r0, [pc, #28]	; (171c <_GLOBAL__sub_I_count_set_period+0x20>)
    1700:	2300      	movs	r3, #0
    1702:	7003      	strb	r3, [r0, #0]
    1704:	6043      	str	r3, [r0, #4]
    1706:	7203      	strb	r3, [r0, #8]
    1708:	7243      	strb	r3, [r0, #9]
    170a:	7283      	strb	r3, [r0, #10]
    170c:	60c3      	str	r3, [r0, #12]
    170e:	6103      	str	r3, [r0, #16]
    1710:	6143      	str	r3, [r0, #20]
    1712:	6183      	str	r3, [r0, #24]
        gpio_init_out(&gpio, pin);
    1714:	2113      	movs	r1, #19
    1716:	4b02      	ldr	r3, [pc, #8]	; (1720 <_GLOBAL__sub_I_count_set_period+0x24>)
    1718:	4798      	blx	r3
    171a:	bd08      	pop	{r3, pc}
    171c:	20003d28 	.word	0x20003d28
    1720:	00004135 	.word	0x00004135

00001724 <_Z11gpsUartTaskv>:
 *
 * Created: 16/05/2016 15:57:41
 *  Author: MORAND Baptiste
 */ 
#include "uartGPS.h"
void gpsUartTask(void){
    1724:	b570      	push	{r4, r5, r6, lr}
		while(1){
			sendHMI("gps Uart task.");
    1726:	4e04      	ldr	r6, [pc, #16]	; (1738 <_Z11gpsUartTaskv+0x14>)
    1728:	4d04      	ldr	r5, [pc, #16]	; (173c <_Z11gpsUartTaskv+0x18>)
			vTaskDelay(100000/portTICK_RATE_MS);
    172a:	4c05      	ldr	r4, [pc, #20]	; (1740 <_Z11gpsUartTaskv+0x1c>)
 *  Author: MORAND Baptiste
 */ 
#include "uartGPS.h"
void gpsUartTask(void){
		while(1){
			sendHMI("gps Uart task.");
    172c:	1c30      	adds	r0, r6, #0
    172e:	47a8      	blx	r5
			vTaskDelay(100000/portTICK_RATE_MS);
    1730:	4804      	ldr	r0, [pc, #16]	; (1744 <_Z11gpsUartTaskv+0x20>)
    1732:	47a0      	blx	r4
 *
 * Created: 16/05/2016 15:57:41
 *  Author: MORAND Baptiste
 */ 
#include "uartGPS.h"
void gpsUartTask(void){
    1734:	e7fa      	b.n	172c <_Z11gpsUartTaskv+0x8>
    1736:	46c0      	nop			; (mov r8, r8)
    1738:	0000d668 	.word	0x0000d668
    173c:	00002881 	.word	0x00002881
    1740:	00000b99 	.word	0x00000b99
    1744:	000186a0 	.word	0x000186a0

00001748 <_Z22ISRNetworkTransmissionv>:
}

void ISRNetworkTransmission(void){
	//puts("t\r\n");
	
}
    1748:	4770      	bx	lr
    174a:	46c0      	nop			; (mov r8, r8)

0000174c <_Z19ISRNetworkReceptionv>:
 uint16_t rx;
volatile circularBuffer buffer;
/************************************************************************/
/* GLOBAL FUNCTION                                                      */
/************************************************************************/
void ISRNetworkReception(void){
    174c:	b530      	push	{r4, r5, lr}
    174e:	b085      	sub	sp, #20
	
	//Disable_global_interrupt();
	usart_read_job(&usart_instance,&rx);
    1750:	4828      	ldr	r0, [pc, #160]	; (17f4 <_Z19ISRNetworkReceptionv+0xa8>)
    1752:	4929      	ldr	r1, [pc, #164]	; (17f8 <_Z19ISRNetworkReceptionv+0xac>)
    1754:	4b29      	ldr	r3, [pc, #164]	; (17fc <_Z19ISRNetworkReceptionv+0xb0>)
    1756:	4798      	blx	r3
	//synchro semaphore with a task
	if(timeProt.synchroTime!=NULL){
    1758:	2394      	movs	r3, #148	; 0x94
    175a:	4a29      	ldr	r2, [pc, #164]	; (1800 <_Z19ISRNetworkReceptionv+0xb4>)
    175c:	58d0      	ldr	r0, [r2, r3]
    175e:	2800      	cmp	r0, #0
    1760:	d004      	beq.n	176c <_Z19ISRNetworkReceptionv+0x20>
		xSemaphoreGiveFromISR(timeProt.synchroTime,NULL);
    1762:	2100      	movs	r1, #0
    1764:	2200      	movs	r2, #0
    1766:	2300      	movs	r3, #0
    1768:	4c26      	ldr	r4, [pc, #152]	; (1804 <_Z19ISRNetworkReceptionv+0xb8>)
    176a:	47a0      	blx	r4
	}
	
	buffer.buffer[buffer.indice]=rx;
    176c:	4a26      	ldr	r2, [pc, #152]	; (1808 <_Z19ISRNetworkReceptionv+0xbc>)
    176e:	2032      	movs	r0, #50	; 0x32
    1770:	5c11      	ldrb	r1, [r2, r0]
    1772:	b2c9      	uxtb	r1, r1
    1774:	4b20      	ldr	r3, [pc, #128]	; (17f8 <_Z19ISRNetworkReceptionv+0xac>)
    1776:	881b      	ldrh	r3, [r3, #0]
    1778:	b2dc      	uxtb	r4, r3
    177a:	5454      	strb	r4, [r2, r1]
	
	buffer.indice++;
    177c:	5c11      	ldrb	r1, [r2, r0]
    177e:	3101      	adds	r1, #1
    1780:	b2c9      	uxtb	r1, r1
    1782:	5411      	strb	r1, [r2, r0]
	if(buffer.indice>=CIRCULAR_BUFFER_LENGTH){
    1784:	5c12      	ldrb	r2, [r2, r0]
    1786:	b2d2      	uxtb	r2, r2
    1788:	2a31      	cmp	r2, #49	; 0x31
    178a:	d903      	bls.n	1794 <_Z19ISRNetworkReceptionv+0x48>
		buffer.indice=0;
    178c:	2000      	movs	r0, #0
    178e:	2232      	movs	r2, #50	; 0x32
    1790:	491d      	ldr	r1, [pc, #116]	; (1808 <_Z19ISRNetworkReceptionv+0xbc>)
    1792:	5488      	strb	r0, [r1, r2]
	}

	if(rx==HEADER){
    1794:	2b55      	cmp	r3, #85	; 0x55
    1796:	d116      	bne.n	17c6 <_Z19ISRNetworkReceptionv+0x7a>
		timeProt.waitIdentifier=true;
    1798:	4c19      	ldr	r4, [pc, #100]	; (1800 <_Z19ISRNetworkReceptionv+0xb4>)
    179a:	2201      	movs	r2, #1
    179c:	332f      	adds	r3, #47	; 0x2f
    179e:	54e2      	strb	r2, [r4, r3]

		#ifdef MASTERMODE
			Clock save;
			save.second=timeProt.saveTime[0].second;
    17a0:	6823      	ldr	r3, [r4, #0]
    17a2:	ad01      	add	r5, sp, #4
    17a4:	9301      	str	r3, [sp, #4]
			save.halfmillis=timeProt.saveTime[0].halfmillis;
    17a6:	6863      	ldr	r3, [r4, #4]
    17a8:	9302      	str	r3, [sp, #8]
			save.sign=timeProt.saveTime[0].sign;
    17aa:	7a23      	ldrb	r3, [r4, #8]
    17ac:	b2db      	uxtb	r3, r3
    17ae:	722b      	strb	r3, [r5, #8]
			readClock(&save);
    17b0:	1c28      	adds	r0, r5, #0
    17b2:	4b16      	ldr	r3, [pc, #88]	; (180c <_Z19ISRNetworkReceptionv+0xc0>)
    17b4:	4798      	blx	r3
			timeProt.saveTime[0].second=save.second;
    17b6:	9b01      	ldr	r3, [sp, #4]
    17b8:	6023      	str	r3, [r4, #0]
			timeProt.saveTime[0].halfmillis=save.halfmillis;
    17ba:	686b      	ldr	r3, [r5, #4]
    17bc:	6063      	str	r3, [r4, #4]
			timeProt.saveTime[0].sign=save.sign;
    17be:	7a2b      	ldrb	r3, [r5, #8]
    17c0:	b2db      	uxtb	r3, r3
    17c2:	7223      	strb	r3, [r4, #8]
    17c4:	e014      	b.n	17f0 <_Z19ISRNetworkReceptionv+0xa4>
			readClock(&timeProt.rx);
		#endif
		return;
	}
	#ifdef MASTERMODE
	if(timeProt.waitIdentifier==true){
    17c6:	2284      	movs	r2, #132	; 0x84
    17c8:	490d      	ldr	r1, [pc, #52]	; (1800 <_Z19ISRNetworkReceptionv+0xb4>)
    17ca:	5c8a      	ldrb	r2, [r1, r2]
    17cc:	2a00      	cmp	r2, #0
    17ce:	d00f      	beq.n	17f0 <_Z19ISRNetworkReceptionv+0xa4>
		timeProt.waitIdentifier=false;
    17d0:	2000      	movs	r0, #0
    17d2:	2284      	movs	r2, #132	; 0x84
    17d4:	5488      	strb	r0, [r1, r2]
		
		if(rx<MAX_SLAVE_CLOCK){
    17d6:	2b09      	cmp	r3, #9
    17d8:	d80a      	bhi.n	17f0 <_Z19ISRNetworkReceptionv+0xa4>
			timeProt.saveTime[rx].second=timeProt.saveTime[0].second;
    17da:	1c0a      	adds	r2, r1, #0
    17dc:	680c      	ldr	r4, [r1, #0]
    17de:	0058      	lsls	r0, r3, #1
    17e0:	18c1      	adds	r1, r0, r3
    17e2:	0089      	lsls	r1, r1, #2
    17e4:	508c      	str	r4, [r1, r2]
			timeProt.saveTime[rx].halfmillis=timeProt.saveTime[0].halfmillis;
    17e6:	6851      	ldr	r1, [r2, #4]
    17e8:	18c3      	adds	r3, r0, r3
    17ea:	009b      	lsls	r3, r3, #2
    17ec:	18d3      	adds	r3, r2, r3
    17ee:	6059      	str	r1, [r3, #4]

	#endif
	
	//Enable_global_interrupt();

}
    17f0:	b005      	add	sp, #20
    17f2:	bd30      	pop	{r4, r5, pc}
    17f4:	20003d80 	.word	0x20003d80
    17f8:	20003d48 	.word	0x20003d48
    17fc:	00002fb1 	.word	0x00002fb1
    1800:	20003f5c 	.word	0x20003f5c
    1804:	00000435 	.word	0x00000435
    1808:	20003d4c 	.word	0x20003d4c
    180c:	00001391 	.word	0x00001391

00001810 <_Z16networkAvailablev>:
}

bool networkAvailable(void){


	if(buffer.currentIndice!=buffer.indice){
    1810:	4a04      	ldr	r2, [pc, #16]	; (1824 <_Z16networkAvailablev+0x14>)
    1812:	2333      	movs	r3, #51	; 0x33
    1814:	5cd3      	ldrb	r3, [r2, r3]
    1816:	2132      	movs	r1, #50	; 0x32
    1818:	5c50      	ldrb	r0, [r2, r1]
    181a:	1a18      	subs	r0, r3, r0
    181c:	1e43      	subs	r3, r0, #1
    181e:	4198      	sbcs	r0, r3
    1820:	b2c0      	uxtb	r0, r0
	else{
			
		return false;
	}

}
    1822:	4770      	bx	lr
    1824:	20003d4c 	.word	0x20003d4c

00001828 <_Z12networkFlushv>:
void networkFlush(void){
	//usart_disable_callback(&usart_instance, USART_CALLBACK_BUFFER_RECEIVED);//momo
	buffer.currentIndice=buffer.indice;
    1828:	4a03      	ldr	r2, [pc, #12]	; (1838 <_Z12networkFlushv+0x10>)
    182a:	2332      	movs	r3, #50	; 0x32
    182c:	5cd3      	ldrb	r3, [r2, r3]
    182e:	b2db      	uxtb	r3, r3
    1830:	2133      	movs	r1, #51	; 0x33
    1832:	5453      	strb	r3, [r2, r1]
	//usart_enable_callback(&usart_instance, USART_CALLBACK_BUFFER_RECEIVED); //momo
}
    1834:	4770      	bx	lr
    1836:	46c0      	nop			; (mov r8, r8)
    1838:	20003d4c 	.word	0x20003d4c

0000183c <_Z9networkTxPKhh>:
void networkTx(const uint8_t send[],const uint8_t length){
    183c:	b508      	push	{r3, lr}
    183e:	1c03      	adds	r3, r0, #0
	//usart_unlock(&usart_instance);
	
		usart_write_buffer_wait(&usart_instance, send,length);
    1840:	b28a      	uxth	r2, r1
    1842:	4802      	ldr	r0, [pc, #8]	; (184c <_Z9networkTxPKhh+0x10>)
    1844:	1c19      	adds	r1, r3, #0
    1846:	4b02      	ldr	r3, [pc, #8]	; (1850 <_Z9networkTxPKhh+0x14>)
    1848:	4798      	blx	r3
		//Enable_global_interrupt();
		//usart_write_buffer_job(&usart_instance, send, length);
}
    184a:	bd08      	pop	{r3, pc}
    184c:	20003d80 	.word	0x20003d80
    1850:	00003475 	.word	0x00003475

00001854 <_Z11networkReadv>:
uint8_t networkRead(void){
    1854:	b508      	push	{r3, lr}
	if(networkAvailable()){
    1856:	4b0d      	ldr	r3, [pc, #52]	; (188c <_Z11networkReadv+0x38>)
    1858:	4798      	blx	r3
			buffer.currentIndice=0;
		}
		return recu; 
	}
	else{
		return 0;
    185a:	2300      	movs	r3, #0
		usart_write_buffer_wait(&usart_instance, send,length);
		//Enable_global_interrupt();
		//usart_write_buffer_job(&usart_instance, send, length);
}
uint8_t networkRead(void){
	if(networkAvailable()){
    185c:	2800      	cmp	r0, #0
    185e:	d013      	beq.n	1888 <_Z11networkReadv+0x34>
		uint8_t recu;
		recu=buffer.buffer[buffer.currentIndice];
    1860:	4b0b      	ldr	r3, [pc, #44]	; (1890 <_Z11networkReadv+0x3c>)
    1862:	2133      	movs	r1, #51	; 0x33
    1864:	5c5a      	ldrb	r2, [r3, r1]
    1866:	b2d2      	uxtb	r2, r2
    1868:	5c98      	ldrb	r0, [r3, r2]
    186a:	b2c0      	uxtb	r0, r0
		buffer.currentIndice++;
    186c:	5c5a      	ldrb	r2, [r3, r1]
    186e:	3201      	adds	r2, #1
    1870:	b2d2      	uxtb	r2, r2
    1872:	545a      	strb	r2, [r3, r1]
		if(buffer.currentIndice>=CIRCULAR_BUFFER_LENGTH){
    1874:	5c5a      	ldrb	r2, [r3, r1]
    1876:	b2d2      	uxtb	r2, r2
			buffer.currentIndice=0;
		}
		return recu; 
    1878:	1c03      	adds	r3, r0, #0
uint8_t networkRead(void){
	if(networkAvailable()){
		uint8_t recu;
		recu=buffer.buffer[buffer.currentIndice];
		buffer.currentIndice++;
		if(buffer.currentIndice>=CIRCULAR_BUFFER_LENGTH){
    187a:	2a31      	cmp	r2, #49	; 0x31
    187c:	d904      	bls.n	1888 <_Z11networkReadv+0x34>
			buffer.currentIndice=0;
    187e:	2100      	movs	r1, #0
    1880:	2333      	movs	r3, #51	; 0x33
    1882:	4a03      	ldr	r2, [pc, #12]	; (1890 <_Z11networkReadv+0x3c>)
    1884:	54d1      	strb	r1, [r2, r3]
		}
		return recu; 
    1886:	1c03      	adds	r3, r0, #0
	else{
		return 0;
	}

	
}
    1888:	1c18      	adds	r0, r3, #0
    188a:	bd08      	pop	{r3, pc}
    188c:	00001811 	.word	0x00001811
    1890:	20003d4c 	.word	0x20003d4c

00001894 <_Z20configurationNetworkv>:

void configurationNetwork(){
    1894:	b570      	push	{r4, r5, r6, lr}
    1896:	b090      	sub	sp, #64	; 0x40
	buffer.currentIndice=0;
    1898:	4933      	ldr	r1, [pc, #204]	; (1968 <_Z20configurationNetworkv+0xd4>)
    189a:	2300      	movs	r3, #0
    189c:	2200      	movs	r2, #0
    189e:	2033      	movs	r0, #51	; 0x33
    18a0:	540b      	strb	r3, [r1, r0]
	buffer.indice=0;
    18a2:	3801      	subs	r0, #1
    18a4:	540b      	strb	r3, [r1, r0]
{
    /* Sanity check arguments */
    Assert(config);

    /* Set default config in the config struct */
    config->data_order       = USART_DATAORDER_LSB;
    18a6:	2180      	movs	r1, #128	; 0x80
    18a8:	05c9      	lsls	r1, r1, #23
    18aa:	9100      	str	r1, [sp, #0]
    config->transfer_mode    = USART_TRANSFER_ASYNCHRONOUSLY;
    18ac:	9301      	str	r3, [sp, #4]
    config->parity           = USART_PARITY_NONE;
    18ae:	21ff      	movs	r1, #255	; 0xff
    18b0:	4668      	mov	r0, sp
    18b2:	8101      	strh	r1, [r0, #8]
    config->stopbits         = USART_STOPBITS_1;
    18b4:	7283      	strb	r3, [r0, #10]
    config->character_size   = USART_CHARACTER_SIZE_8BIT;
    18b6:	72c3      	strb	r3, [r0, #11]
    config->baudrate         = 9600;
    config->receiver_enable  = true;
    18b8:	2101      	movs	r1, #1
    18ba:	2024      	movs	r0, #36	; 0x24
    18bc:	466c      	mov	r4, sp
    18be:	5421      	strb	r1, [r4, r0]
    config->transmitter_enable = true;
    18c0:	3001      	adds	r0, #1
    18c2:	5421      	strb	r1, [r4, r0]
    config->clock_polarity_inverted = false;
    18c4:	3125      	adds	r1, #37	; 0x25
    18c6:	5463      	strb	r3, [r4, r1]
    config->use_external_clock = false;
    18c8:	3101      	adds	r1, #1
    18ca:	5463      	strb	r3, [r4, r1]
    config->ext_clock_freq   = 0;
    18cc:	930a      	str	r3, [sp, #40]	; 0x28
    config->mux_setting      = USART_RX_1_TX_2_XCK_3;
    config->run_in_standby   = false;
    18ce:	3105      	adds	r1, #5
    18d0:	5463      	strb	r3, [r4, r1]
    config->generator_source = GCLK_GENERATOR_0;
    18d2:	3101      	adds	r1, #1
    18d4:	5463      	strb	r3, [r4, r1]
    config->pinmux_pad0      = PINMUX_DEFAULT;
    config->pinmux_pad1      = PINMUX_DEFAULT;
    config->pinmux_pad2      = PINMUX_DEFAULT;
    config->pinmux_pad3      = PINMUX_DEFAULT;
#ifdef FEATURE_USART_OVER_SAMPLE
    config->sample_adjustment     = USART_SAMPLE_ADJUSTMENT_7_8_9;
    18d6:	9305      	str	r3, [sp, #20]
    config->sample_rate           = USART_SAMPLE_RATE_16X_ARITHMETIC;
    18d8:	8223      	strh	r3, [r4, #16]
#endif
#ifdef FEATURE_USART_LIN_SLAVE
    config->lin_slave_enable      = false;
    18da:	76e3      	strb	r3, [r4, #27]
    config->lin_header_delay = LIN_MASTER_HEADER_DELAY_0;
    config->lin_break_length = LIN_MASTER_BREAK_LENGTH_13_BIT;
#endif

#ifdef FEATURE_USART_IMMEDIATE_BUFFER_OVERFLOW_NOTIFICATION
    config->immediate_buffer_overflow_notification      = false;
    18dc:	7622      	strb	r2, [r4, #24]
#endif
#ifdef FEATURE_USART_START_FRAME_DECTION
    config->start_frame_detection_enable                = false;
    18de:	7722      	strb	r2, [r4, #28]
#endif
#ifdef FEATURE_USART_IRDA
    config->encoding_format_enable                      = false;
    18e0:	7662      	strb	r2, [r4, #25]
    config->receive_pulse_length                        = 19;
    18e2:	2313      	movs	r3, #19
    18e4:	76a3      	strb	r3, [r4, #26]
#endif
#ifdef FEATURE_USART_COLLISION_DECTION
    config->collision_detection_enable                  = false;
    18e6:	7762      	strb	r2, [r4, #29]
	//GCLK generator 0 as clock source
	//Default pin configurationc
	usart_get_config_defaults(&config_usart);
	//baudrate 9600
	
	config_usart.baudrate    = 19200;
    18e8:	2396      	movs	r3, #150	; 0x96
    18ea:	01db      	lsls	r3, r3, #7
    18ec:	9308      	str	r3, [sp, #32]
	config_usart.mux_setting = USART_RX_1_TX_0_XCK_1 ;//Rx on PAD1 Tx on PAD0
    18ee:	2380      	movs	r3, #128	; 0x80
    18f0:	035b      	lsls	r3, r3, #13
    18f2:	9303      	str	r3, [sp, #12]
	config_usart.pinmux_pad0 = PINMUX_PA16D_SERCOM3_PAD0;//MUX D
    18f4:	4b1d      	ldr	r3, [pc, #116]	; (196c <_Z20configurationNetworkv+0xd8>)
    18f6:	930c      	str	r3, [sp, #48]	; 0x30
	config_usart.pinmux_pad1 = PINMUX_PA17D_SERCOM3_PAD1;// MUX D
    18f8:	4b1d      	ldr	r3, [pc, #116]	; (1970 <_Z20configurationNetworkv+0xdc>)
    18fa:	930d      	str	r3, [sp, #52]	; 0x34
	config_usart.pinmux_pad2 = PINMUX_UNUSED;
    18fc:	2301      	movs	r3, #1
    18fe:	425b      	negs	r3, r3
    1900:	930e      	str	r3, [sp, #56]	; 0x38
	config_usart.pinmux_pad3 = PINMUX_UNUSED;
    1902:	930f      	str	r3, [sp, #60]	; 0x3c
	
	while (usart_init(&usart_instance,SERCOM3, &config_usart) != STATUS_OK) ;
    1904:	4e1b      	ldr	r6, [pc, #108]	; (1974 <_Z20configurationNetworkv+0xe0>)
    1906:	4d1c      	ldr	r5, [pc, #112]	; (1978 <_Z20configurationNetworkv+0xe4>)
    1908:	4c1c      	ldr	r4, [pc, #112]	; (197c <_Z20configurationNetworkv+0xe8>)
    190a:	1c30      	adds	r0, r6, #0
    190c:	1c29      	adds	r1, r5, #0
    190e:	466a      	mov	r2, sp
    1910:	47a0      	blx	r4
    1912:	2800      	cmp	r0, #0
    1914:	d1f9      	bne.n	190a <_Z20configurationNetworkv+0x76>
    /* Sanity check arguments */
    Assert(module);
    Assert(module->hw);

    /* Get a pointer to the hardware module instance */
    SercomUsart *const usart_hw = &(module->hw->USART);
    1916:	4d17      	ldr	r5, [pc, #92]	; (1974 <_Z20configurationNetworkv+0xe0>)
    1918:	682c      	ldr	r4, [r5, #0]

#if USART_CALLBACK_MODE == true
    /* Enable Global interrupt for module */
    system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
    191a:	1c20      	adds	r0, r4, #0
    191c:	4b18      	ldr	r3, [pc, #96]	; (1980 <_Z20configurationNetworkv+0xec>)
    191e:	4798      	blx	r3
 * \param[in] vector Interrupt vector to enable
 */
static inline void system_interrupt_enable(
    const enum system_interrupt_vector vector)
{
    NVIC->ISER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
    1920:	231f      	movs	r3, #31
    1922:	4018      	ands	r0, r3
    1924:	3b1e      	subs	r3, #30
    1926:	4083      	lsls	r3, r0
    1928:	1c18      	adds	r0, r3, #0
    192a:	4b16      	ldr	r3, [pc, #88]	; (1984 <_Z20configurationNetworkv+0xf0>)
    192c:	6018      	str	r0, [r3, #0]
{
    /* Sanity check arguments */
    Assert(module);
    Assert(module->hw);

    SercomUsart *const usart_hw = &(module->hw->USART);
    192e:	682a      	ldr	r2, [r5, #0]

#ifdef FEATURE_USART_SYNC_SCHEME_V2
    return (usart_hw->SYNCBUSY.reg);
    1930:	69d3      	ldr	r3, [r2, #28]
    const struct usart_module *const module)
{
    /* Sanity check. */
    Assert(module);

    while (usart_is_syncing(module)) {
    1932:	2b00      	cmp	r3, #0
    1934:	d1fc      	bne.n	1930 <_Z20configurationNetworkv+0x9c>

    /* Wait until synchronization is complete */
    _usart_wait_for_sync(module);

    /* Enable USART module */
    usart_hw->CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    1936:	6822      	ldr	r2, [r4, #0]
    1938:	3302      	adds	r3, #2
    193a:	4313      	orrs	r3, r2
    193c:	6023      	str	r3, [r4, #0]

	usart_enable(&usart_instance);
	//config callback
		//config register
	usart_register_callback(&usart_instance,(usart_callback_t)ISRNetworkTransmission, USART_CALLBACK_BUFFER_TRANSMITTED);
    193e:	4c0d      	ldr	r4, [pc, #52]	; (1974 <_Z20configurationNetworkv+0xe0>)
    1940:	1c20      	adds	r0, r4, #0
    1942:	4911      	ldr	r1, [pc, #68]	; (1988 <_Z20configurationNetworkv+0xf4>)
    1944:	2200      	movs	r2, #0
    1946:	4d11      	ldr	r5, [pc, #68]	; (198c <_Z20configurationNetworkv+0xf8>)
    1948:	47a8      	blx	r5
	usart_register_callback(&usart_instance,(usart_callback_t)ISRNetworkReception, USART_CALLBACK_BUFFER_RECEIVED);
    194a:	1c20      	adds	r0, r4, #0
    194c:	4910      	ldr	r1, [pc, #64]	; (1990 <_Z20configurationNetworkv+0xfc>)
    194e:	2201      	movs	r2, #1
    1950:	47a8      	blx	r5
{
    /* Sanity check arguments */
    Assert(module);

    /* Enable callback */
    module->callback_enable_mask |= (1 << callback_type);
    1952:	2231      	movs	r2, #49	; 0x31
    1954:	5ca1      	ldrb	r1, [r4, r2]
    1956:	2303      	movs	r3, #3
    1958:	430b      	orrs	r3, r1
    195a:	54a3      	strb	r3, [r4, r2]

		//enable callback
	usart_enable_callback(&usart_instance, USART_CALLBACK_BUFFER_TRANSMITTED);
	usart_enable_callback(&usart_instance, USART_CALLBACK_BUFFER_RECEIVED);
	usart_read_job(&usart_instance,&rx);
    195c:	1c20      	adds	r0, r4, #0
    195e:	490d      	ldr	r1, [pc, #52]	; (1994 <_Z20configurationNetworkv+0x100>)
    1960:	4b0d      	ldr	r3, [pc, #52]	; (1998 <_Z20configurationNetworkv+0x104>)
    1962:	4798      	blx	r3

}
    1964:	b010      	add	sp, #64	; 0x40
    1966:	bd70      	pop	{r4, r5, r6, pc}
    1968:	20003d4c 	.word	0x20003d4c
    196c:	00100003 	.word	0x00100003
    1970:	00110003 	.word	0x00110003
    1974:	20003d80 	.word	0x20003d80
    1978:	42001400 	.word	0x42001400
    197c:	00003165 	.word	0x00003165
    1980:	00002eed 	.word	0x00002eed
    1984:	e000e100 	.word	0xe000e100
    1988:	00001749 	.word	0x00001749
    198c:	00002f99 	.word	0x00002f99
    1990:	0000174d 	.word	0x0000174d
    1994:	20003d48 	.word	0x20003d48
    1998:	00002fb1 	.word	0x00002fb1

0000199c <main>:
#include <ktrap.h>
#include <internalClock.h>
#include <ppsGPS.h>
#include <network.h>

int main (void ){
    199c:	b538      	push	{r3, r4, r5, lr}
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
    199e:	b672      	cpsid	i
    19a0:	f3bf 8f5f 	dmb	sy
 * Disabled global interrupts in the device, preventing any enabled interrupt
 * handlers from executing.
 */
static inline void system_interrupt_disable_global(void)
{
    cpu_irq_disable();
    19a4:	4d17      	ldr	r5, [pc, #92]	; (1a04 <main+0x68>)
    19a6:	2300      	movs	r3, #0
    19a8:	702b      	strb	r3, [r5, #0]
	 system_interrupt_disable_global();
    //configure HMI
    configureHMI();
    19aa:	4b17      	ldr	r3, [pc, #92]	; (1a08 <main+0x6c>)
    19ac:	4798      	blx	r3
    //RTC configure
	printf("internal clock config\r\n");
    19ae:	4817      	ldr	r0, [pc, #92]	; (1a0c <main+0x70>)
    19b0:	4c17      	ldr	r4, [pc, #92]	; (1a10 <main+0x74>)
    19b2:	47a0      	blx	r4
	configureInternalClock();
    19b4:	4b17      	ldr	r3, [pc, #92]	; (1a14 <main+0x78>)
    19b6:	4798      	blx	r3
    //configure external intrerrupt for pps
	printf("pps config\r\n");
    19b8:	4817      	ldr	r0, [pc, #92]	; (1a18 <main+0x7c>)
    19ba:	47a0      	blx	r4
   configurationPPS();
    19bc:	4b17      	ldr	r3, [pc, #92]	; (1a1c <main+0x80>)
    19be:	4798      	blx	r3
    //configure the network of the time SYNCHRONISATION
	printf("network config\r\n");
    19c0:	4817      	ldr	r0, [pc, #92]	; (1a20 <main+0x84>)
    19c2:	47a0      	blx	r4
   configurationNetwork();
    19c4:	4b17      	ldr	r3, [pc, #92]	; (1a24 <main+0x88>)
    19c6:	4798      	blx	r3
	printf("kernel config\r\n");
    19c8:	4817      	ldr	r0, [pc, #92]	; (1a28 <main+0x8c>)
    19ca:	47a0      	blx	r4
    // Initialize the demo..
    kernelConfig();
    19cc:	4b17      	ldr	r3, [pc, #92]	; (1a2c <main+0x90>)
    19ce:	4798      	blx	r3
 *
 * Enables global interrupts in the device to fire any enabled interrupt handlers.
 */
static inline void system_interrupt_enable_global(void)
{
    cpu_irq_enable();
    19d0:	2301      	movs	r3, #1
    19d2:	702b      	strb	r3, [r5, #0]
    19d4:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
    19d8:	b662      	cpsie	i
    //demask global interrupt
    system_interrupt_enable_global();
    printf("\r\n\r\n**********************************************************************\r\n");
    19da:	4815      	ldr	r0, [pc, #84]	; (1a30 <main+0x94>)
    19dc:	47a0      	blx	r4
    printf("tick time: %lu ms\r\n",portTICK_RATE_MS);   
    19de:	4815      	ldr	r0, [pc, #84]	; (1a34 <main+0x98>)
    19e0:	2101      	movs	r1, #1
    19e2:	4b15      	ldr	r3, [pc, #84]	; (1a38 <main+0x9c>)
    19e4:	4798      	blx	r3
    #ifdef MASTERMODE
        pc.printf("Master clock\r\n");
    19e6:	4d15      	ldr	r5, [pc, #84]	; (1a3c <main+0xa0>)
    19e8:	1c28      	adds	r0, r5, #0
    19ea:	4915      	ldr	r1, [pc, #84]	; (1a40 <main+0xa4>)
    19ec:	4c15      	ldr	r4, [pc, #84]	; (1a44 <main+0xa8>)
    19ee:	47a0      	blx	r4
    #else
        pc.printf("Slave Clock \r\n");
    #endif
    pc.printf("end config application begin\r\n");
    19f0:	1c28      	adds	r0, r5, #0
    19f2:	4915      	ldr	r1, [pc, #84]	; (1a48 <main+0xac>)
    19f4:	47a0      	blx	r4
    pc.printf("\r\n**********************************************************************\r\n\r\n");
    19f6:	1c28      	adds	r0, r5, #0
    19f8:	4914      	ldr	r1, [pc, #80]	; (1a4c <main+0xb0>)
    19fa:	47a0      	blx	r4
    //start the scheduler
    vTaskStartScheduler();
    19fc:	4b14      	ldr	r3, [pc, #80]	; (1a50 <main+0xb4>)
    19fe:	4798      	blx	r3
#include <ktrap.h>
#include <internalClock.h>
#include <ppsGPS.h>
#include <network.h>

int main (void ){
    1a00:	e7fe      	b.n	1a00 <main+0x64>
    1a02:	46c0      	nop			; (mov r8, r8)
    1a04:	200000d0 	.word	0x200000d0
    1a08:	00002815 	.word	0x00002815
    1a0c:	0000d678 	.word	0x0000d678
    1a10:	00009dd1 	.word	0x00009dd1
    1a14:	00001665 	.word	0x00001665
    1a18:	0000d690 	.word	0x0000d690
    1a1c:	00001b59 	.word	0x00001b59
    1a20:	0000d69c 	.word	0x0000d69c
    1a24:	00001895 	.word	0x00001895
    1a28:	0000d6ac 	.word	0x0000d6ac
    1a2c:	00001a55 	.word	0x00001a55
    1a30:	0000d6bc 	.word	0x0000d6bc
    1a34:	0000d708 	.word	0x0000d708
    1a38:	00009cd9 	.word	0x00009cd9
    1a3c:	20004224 	.word	0x20004224
    1a40:	0000d71c 	.word	0x0000d71c
    1a44:	000040e9 	.word	0x000040e9
    1a48:	0000d72c 	.word	0x0000d72c
    1a4c:	0000d74c 	.word	0x0000d74c
    1a50:	000008fd 	.word	0x000008fd

00001a54 <_Z12kernelConfigv>:
 * Created: 13/05/2016 16:34:52
 *  Author: MORAND Baptiste
 */ 
#include "utask.h"

void kernelConfig(void){
    1a54:	b570      	push	{r4, r5, r6, lr}
    1a56:	b084      	sub	sp, #16

	puts("task creation \r\n");
    1a58:	4813      	ldr	r0, [pc, #76]	; (1aa8 <_Z12kernelConfigv+0x54>)
    1a5a:	4b14      	ldr	r3, [pc, #80]	; (1aac <_Z12kernelConfigv+0x58>)
    1a5c:	4798      	blx	r3
	// tasks creations
	xTaskCreate((pdTASK_CODE)HMITask,(const signed char*)"HMI",configMINIMAL_STACK_SIZE,NULL, tskIDLE_PRIORITY +1, NULL);
    1a5e:	2696      	movs	r6, #150	; 0x96
    1a60:	0076      	lsls	r6, r6, #1
    1a62:	2301      	movs	r3, #1
    1a64:	9300      	str	r3, [sp, #0]
    1a66:	2400      	movs	r4, #0
    1a68:	9401      	str	r4, [sp, #4]
    1a6a:	9402      	str	r4, [sp, #8]
    1a6c:	9403      	str	r4, [sp, #12]
    1a6e:	4810      	ldr	r0, [pc, #64]	; (1ab0 <_Z12kernelConfigv+0x5c>)
    1a70:	4910      	ldr	r1, [pc, #64]	; (1ab4 <_Z12kernelConfigv+0x60>)
    1a72:	1c32      	adds	r2, r6, #0
    1a74:	2300      	movs	r3, #0
    1a76:	4d10      	ldr	r5, [pc, #64]	; (1ab8 <_Z12kernelConfigv+0x64>)
    1a78:	47a8      	blx	r5
	xTaskCreate((pdTASK_CODE)timeProtocolTask,(const signed char*)"time",configMINIMAL_STACK_SIZE+300,NULL, tskIDLE_PRIORITY +3, NULL);
    1a7a:	2303      	movs	r3, #3
    1a7c:	9300      	str	r3, [sp, #0]
    1a7e:	9401      	str	r4, [sp, #4]
    1a80:	9402      	str	r4, [sp, #8]
    1a82:	9403      	str	r4, [sp, #12]
    1a84:	480d      	ldr	r0, [pc, #52]	; (1abc <_Z12kernelConfigv+0x68>)
    1a86:	490e      	ldr	r1, [pc, #56]	; (1ac0 <_Z12kernelConfigv+0x6c>)
    1a88:	2296      	movs	r2, #150	; 0x96
    1a8a:	0092      	lsls	r2, r2, #2
    1a8c:	2300      	movs	r3, #0
    1a8e:	47a8      	blx	r5
	//xTaskCreate((pdTASK_CODE)ledBlinkTask,(const signed char*)"led",configMINIMAL_STACK_SIZE,NULL, tskIDLE_PRIORITY +4, NULL);
	xTaskCreate((pdTASK_CODE)gpsUartTask,(const signed char*)"gps",configMINIMAL_STACK_SIZE,NULL, tskIDLE_PRIORITY +2, NULL);
    1a90:	2302      	movs	r3, #2
    1a92:	9300      	str	r3, [sp, #0]
    1a94:	9401      	str	r4, [sp, #4]
    1a96:	9402      	str	r4, [sp, #8]
    1a98:	9403      	str	r4, [sp, #12]
    1a9a:	480a      	ldr	r0, [pc, #40]	; (1ac4 <_Z12kernelConfigv+0x70>)
    1a9c:	490a      	ldr	r1, [pc, #40]	; (1ac8 <_Z12kernelConfigv+0x74>)
    1a9e:	1c32      	adds	r2, r6, #0
    1aa0:	2300      	movs	r3, #0
    1aa2:	47a8      	blx	r5
}
    1aa4:	b004      	add	sp, #16
    1aa6:	bd70      	pop	{r4, r5, r6, pc}
    1aa8:	0000d79c 	.word	0x0000d79c
    1aac:	00009dd1 	.word	0x00009dd1
    1ab0:	00002819 	.word	0x00002819
    1ab4:	0000d7b0 	.word	0x0000d7b0
    1ab8:	00000711 	.word	0x00000711
    1abc:	000026bd 	.word	0x000026bd
    1ac0:	0000d7b4 	.word	0x0000d7b4
    1ac4:	00001725 	.word	0x00001725
    1ac8:	0000d7bc 	.word	0x0000d7bc

00001acc <_Z6ppsISRv>:
/** Callback function for the EXTINT driver, called when an external interrupt
 *  detection occurs.
 */

void ppsISR(void)
{	
    1acc:	b530      	push	{r4, r5, lr}
    1ace:	b08f      	sub	sp, #60	; 0x3c
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
    1ad0:	b672      	cpsid	i
    1ad2:	f3bf 8f5f 	dmb	sy
	Disable_global_interrupt();
    1ad6:	2300      	movs	r3, #0
    1ad8:	4a19      	ldr	r2, [pc, #100]	; (1b40 <_Z6ppsISRv+0x74>)
    1ada:	7013      	strb	r3, [r2, #0]
	Clock timeCopy={0,0,true};
    1adc:	ad08      	add	r5, sp, #32
    1ade:	9308      	str	r3, [sp, #32]
    1ae0:	9309      	str	r3, [sp, #36]	; 0x24
    1ae2:	2201      	movs	r2, #1
    1ae4:	722a      	strb	r2, [r5, #8]
	//Disable_global_interrupt();
	Clock timeMaster={0,0,true};
    1ae6:	ac0b      	add	r4, sp, #44	; 0x2c
    1ae8:	930b      	str	r3, [sp, #44]	; 0x2c
    1aea:	930c      	str	r3, [sp, #48]	; 0x30
    1aec:	7222      	strb	r2, [r4, #8]
	readClock(&timeCopy);
    1aee:	1c28      	adds	r0, r5, #0
    1af0:	4b14      	ldr	r3, [pc, #80]	; (1b44 <_Z6ppsISRv+0x78>)
    1af2:	4798      	blx	r3
	//Enable_global_interrupt();
	timeMaster.second=timeCopy.second;
    1af4:	9b08      	ldr	r3, [sp, #32]
    1af6:	930b      	str	r3, [sp, #44]	; 0x2c
	timeMaster.halfmillis=timeCopy.halfmillis;
    1af8:	686b      	ldr	r3, [r5, #4]
    1afa:	6063      	str	r3, [r4, #4]
	if(timeMaster.halfmillis>=RTC_FREQ/2){//for the accurate 500ms
    1afc:	6862      	ldr	r2, [r4, #4]
    1afe:	4b12      	ldr	r3, [pc, #72]	; (1b48 <_Z6ppsISRv+0x7c>)
    1b00:	429a      	cmp	r2, r3
    1b02:	d902      	bls.n	1b0a <_Z6ppsISRv+0x3e>
		timeMaster.second++;
    1b04:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    1b06:	3301      	adds	r3, #1
    1b08:	930b      	str	r3, [sp, #44]	; 0x2c
	}
	timeMaster.halfmillis=0;
    1b0a:	2300      	movs	r3, #0
    1b0c:	930c      	str	r3, [sp, #48]	; 0x30
	}
	if((timeCopy.halfmillis>RTC_FREQ)||(timeCopy.halfmillis<0)){
		printf("timeCopypps:'");
		printfClock(timeCopy);
	}*/
	timeProt.offset=subClock(timeMaster,timeCopy);
    1b0e:	ac04      	add	r4, sp, #16
    1b10:	ab08      	add	r3, sp, #32
    1b12:	466a      	mov	r2, sp
    1b14:	cb23      	ldmia	r3!, {r0, r1, r5}
    1b16:	c223      	stmia	r2!, {r0, r1, r5}
    1b18:	1c20      	adds	r0, r4, #0
    1b1a:	990b      	ldr	r1, [sp, #44]	; 0x2c
    1b1c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    1b1e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    1b20:	4d0a      	ldr	r5, [pc, #40]	; (1b4c <_Z6ppsISRv+0x80>)
    1b22:	47a8      	blx	r5
    1b24:	4b0a      	ldr	r3, [pc, #40]	; (1b50 <_Z6ppsISRv+0x84>)
    1b26:	3398      	adds	r3, #152	; 0x98
    1b28:	cc07      	ldmia	r4!, {r0, r1, r2}
    1b2a:	c307      	stmia	r3!, {r0, r1, r2}
	//timeProt.offset.second=0;
	#ifdef MASTERMODE
		updateClock();
    1b2c:	4b09      	ldr	r3, [pc, #36]	; (1b54 <_Z6ppsISRv+0x88>)
    1b2e:	4798      	blx	r3
		else{
			sprintf(messageHMIError,"		error pps: -%lus %u	t:%lus",timeProt.offset.second,(unsigned int)(timeProt.offset.halfmillis/2),timeMaster.second);
		}
		sendHMI(messageHMIError);
	#endif
	Enable_global_interrupt();
    1b30:	2201      	movs	r2, #1
    1b32:	4b03      	ldr	r3, [pc, #12]	; (1b40 <_Z6ppsISRv+0x74>)
    1b34:	701a      	strb	r2, [r3, #0]
    1b36:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
    1b3a:	b662      	cpsie	i
}
    1b3c:	b00f      	add	sp, #60	; 0x3c
    1b3e:	bd30      	pop	{r4, r5, pc}
    1b40:	200000d0 	.word	0x200000d0
    1b44:	00001391 	.word	0x00001391
    1b48:	00003e7f 	.word	0x00003e7f
    1b4c:	0000110d 	.word	0x0000110d
    1b50:	20003f5c 	.word	0x20003f5c
    1b54:	00002261 	.word	0x00002261

00001b58 <_Z16configurationPPSv>:
void configurationPPS(void){
    1b58:	b530      	push	{r4, r5, lr}
    1b5a:	b085      	sub	sp, #20

		struct extint_chan_conf eint_chan_conf;
		extint_chan_get_config_defaults(&eint_chan_conf);
    1b5c:	ac01      	add	r4, sp, #4
    1b5e:	1c20      	adds	r0, r4, #0
    1b60:	4b0c      	ldr	r3, [pc, #48]	; (1b94 <_Z16configurationPPSv+0x3c>)
    1b62:	4798      	blx	r3
		// put the button as EXTINT
		eint_chan_conf.gpio_pin           = PIN_PA28A_EIC_EXTINT8;
    1b64:	231c      	movs	r3, #28
    1b66:	9301      	str	r3, [sp, #4]
		eint_chan_conf.gpio_pin_mux       = MUX_PA28A_EIC_EXTINT8;
    1b68:	2500      	movs	r5, #0
    1b6a:	6065      	str	r5, [r4, #4]
		/** Detect rising signal edges */	 
		eint_chan_conf.detection_criteria = EXTINT_DETECT_RISING;
    1b6c:	3b1b      	subs	r3, #27
    1b6e:	72e3      	strb	r3, [r4, #11]
		eint_chan_conf.filter_input_signal = false;
    1b70:	72a5      	strb	r5, [r4, #10]
		extint_chan_set_config(8, &eint_chan_conf);
    1b72:	2008      	movs	r0, #8
    1b74:	1c21      	adds	r1, r4, #0
    1b76:	4b08      	ldr	r3, [pc, #32]	; (1b98 <_Z16configurationPPSv+0x40>)
    1b78:	4798      	blx	r3
		//configuration callback
		extint_register_callback(ppsISR,8,EXTINT_CALLBACK_TYPE_DETECT);
    1b7a:	4808      	ldr	r0, [pc, #32]	; (1b9c <_Z16configurationPPSv+0x44>)
    1b7c:	2108      	movs	r1, #8
    1b7e:	2200      	movs	r2, #0
    1b80:	4b07      	ldr	r3, [pc, #28]	; (1ba0 <_Z16configurationPPSv+0x48>)
    1b82:	4798      	blx	r3
		//activation callback
		extint_chan_enable_callback(8,EXTINT_CALLBACK_TYPE_DETECT);
    1b84:	2008      	movs	r0, #8
    1b86:	2100      	movs	r1, #0
    1b88:	4b06      	ldr	r3, [pc, #24]	; (1ba4 <_Z16configurationPPSv+0x4c>)
    1b8a:	4798      	blx	r3
		pin_state=false;
    1b8c:	4b06      	ldr	r3, [pc, #24]	; (1ba8 <_Z16configurationPPSv+0x50>)
    1b8e:	701d      	strb	r5, [r3, #0]
	
		
    1b90:	b005      	add	sp, #20
    1b92:	bd30      	pop	{r4, r5, pc}
    1b94:	00002e1d 	.word	0x00002e1d
    1b98:	00002e31 	.word	0x00002e31
    1b9c:	00001acd 	.word	0x00001acd
    1ba0:	00002d1d 	.word	0x00002d1d
    1ba4:	00002d45 	.word	0x00002d45
    1ba8:	20003db4 	.word	0x20003db4

00001bac <_Z4pgcdii>:
	}
	
}


int pgcd( int a ,int b){
    1bac:	b510      	push	{r4, lr}
	int i=0;
	while ((!(a*b == 0))&&(i<1000)) {
    1bae:	1c0b      	adds	r3, r1, #0
    1bb0:	4343      	muls	r3, r0
    1bb2:	2b00      	cmp	r3, #0
    1bb4:	d013      	beq.n	1bde <_Z4pgcdii+0x32>
    1bb6:	2300      	movs	r3, #0
    1bb8:	24fa      	movs	r4, #250	; 0xfa
    1bba:	00a4      	lsls	r4, r4, #2
		if (a>b) {
    1bbc:	4288      	cmp	r0, r1
    1bbe:	dd01      	ble.n	1bc4 <_Z4pgcdii+0x18>
			a = a - b ;
    1bc0:	1a40      	subs	r0, r0, r1
    1bc2:	e000      	b.n	1bc6 <_Z4pgcdii+0x1a>
		}
		else{
			b = b - a ;
    1bc4:	1a09      	subs	r1, r1, r0
		}
		i++;
    1bc6:	3301      	adds	r3, #1
}


int pgcd( int a ,int b){
	int i=0;
	while ((!(a*b == 0))&&(i<1000)) {
    1bc8:	1c0a      	adds	r2, r1, #0
    1bca:	4342      	muls	r2, r0
    1bcc:	2a00      	cmp	r2, #0
    1bce:	d003      	beq.n	1bd8 <_Z4pgcdii+0x2c>
    1bd0:	42a3      	cmp	r3, r4
    1bd2:	d1f3      	bne.n	1bbc <_Z4pgcdii+0x10>
			b = b - a ;
		}
		i++;
	}
	if(i>=1000){
		return 1;
    1bd4:	2101      	movs	r1, #1
    1bd6:	e007      	b.n	1be8 <_Z4pgcdii+0x3c>
		else{
			b = b - a ;
		}
		i++;
	}
	if(i>=1000){
    1bd8:	4a04      	ldr	r2, [pc, #16]	; (1bec <_Z4pgcdii+0x40>)
    1bda:	4293      	cmp	r3, r2
    1bdc:	dc03      	bgt.n	1be6 <_Z4pgcdii+0x3a>
		return 1;
	}
	if(a==0){
    1bde:	2800      	cmp	r0, #0
    1be0:	d002      	beq.n	1be8 <_Z4pgcdii+0x3c>
    1be2:	1c01      	adds	r1, r0, #0
    1be4:	e000      	b.n	1be8 <_Z4pgcdii+0x3c>
			b = b - a ;
		}
		i++;
	}
	if(i>=1000){
		return 1;
    1be6:	2101      	movs	r1, #1
	}
	else{
		return a;
	}
	return a;
}
    1be8:	1c08      	adds	r0, r1, #0
    1bea:	bd10      	pop	{r4, pc}
    1bec:	000003e7 	.word	0x000003e7

00001bf0 <_Z24resetSofftwareCorrectionv>:

void resetSofftwareCorrection(void){

		sumOffset.second=0;
    1bf0:	4a06      	ldr	r2, [pc, #24]	; (1c0c <_Z24resetSofftwareCorrectionv+0x1c>)
    1bf2:	2300      	movs	r3, #0
    1bf4:	6013      	str	r3, [r2, #0]
		sumOffset.halfmillis=0;
    1bf6:	6053      	str	r3, [r2, #4]
		timeProt.correction.nbCorrection=0;
    1bf8:	4a05      	ldr	r2, [pc, #20]	; (1c10 <_Z24resetSofftwareCorrectionv+0x20>)
    1bfa:	21a4      	movs	r1, #164	; 0xa4
    1bfc:	5053      	str	r3, [r2, r1]
		timeProt.correction.sumTime.second=0;
    1bfe:	3120      	adds	r1, #32
    1c00:	5053      	str	r3, [r2, r1]
		timeProt.correction.sumTime.halfmillis=0;
    1c02:	3104      	adds	r1, #4
    1c04:	5053      	str	r3, [r2, r1]
		timeProt.correction.currentTimeOffsetSync.second=0;// to not take the first value
    1c06:	3910      	subs	r1, #16
    1c08:	5053      	str	r3, [r2, r1]
}
    1c0a:	4770      	bx	lr
    1c0c:	20003e88 	.word	0x20003e88
    1c10:	20003f5c 	.word	0x20003f5c

00001c14 <_Z17sofwareCorrectionv>:
		
	}
	
}

void sofwareCorrection(){
    1c14:	b5f0      	push	{r4, r5, r6, r7, lr}
    1c16:	465f      	mov	r7, fp
    1c18:	4656      	mov	r6, sl
    1c1a:	464d      	mov	r5, r9
    1c1c:	4644      	mov	r4, r8
    1c1e:	b4f0      	push	{r4, r5, r6, r7}
    1c20:	b091      	sub	sp, #68	; 0x44
	if(timeProt.correction.nbCorrection!=0){
    1c22:	23a4      	movs	r3, #164	; 0xa4
    1c24:	4ac2      	ldr	r2, [pc, #776]	; (1f30 <_Z17sofwareCorrectionv+0x31c>)
    1c26:	58d3      	ldr	r3, [r2, r3]
    1c28:	2b00      	cmp	r3, #0
    1c2a:	d100      	bne.n	1c2e <_Z17sofwareCorrectionv+0x1a>
    1c2c:	e178      	b.n	1f20 <_Z17sofwareCorrectionv+0x30c>
	//	printf("nb corr : %d",timeProt.correction.nbCorrection);
		sendHMI("	Software Correction ");
    1c2e:	48c1      	ldr	r0, [pc, #772]	; (1f34 <_Z17sofwareCorrectionv+0x320>)
    1c30:	4bc1      	ldr	r3, [pc, #772]	; (1f38 <_Z17sofwareCorrectionv+0x324>)
    1c32:	4798      	blx	r3
		//interval of time
		Clock averageTime;
		Clock averageOffset;
		Clock sumOffsetl;
		float fcorr=0;
		int indice=timeProt.correction.indiceFull;
    1c34:	49be      	ldr	r1, [pc, #760]	; (1f30 <_Z17sofwareCorrectionv+0x31c>)
    1c36:	2322      	movs	r3, #34	; 0x22
    1c38:	33ff      	adds	r3, #255	; 0xff
    1c3a:	5cc8      	ldrb	r0, [r1, r3]
			

		sumOffsetl=sumOffset;
    1c3c:	ab0d      	add	r3, sp, #52	; 0x34
    1c3e:	4abf      	ldr	r2, [pc, #764]	; (1f3c <_Z17sofwareCorrectionv+0x328>)
    1c40:	1c1c      	adds	r4, r3, #0
    1c42:	cae0      	ldmia	r2!, {r5, r6, r7}
    1c44:	c4e0      	stmia	r4!, {r5, r6, r7}

		
		//sign change
		if(timeProt.correction.valueCor!=sumOffsetl.sign){//if the sum of the offset change of sign error ze reset the software corection 
    1c46:	22a8      	movs	r2, #168	; 0xa8
    1c48:	5c8a      	ldrb	r2, [r1, r2]
    1c4a:	7a19      	ldrb	r1, [r3, #8]
    1c4c:	b2d3      	uxtb	r3, r2
		//interval of time
		Clock averageTime;
		Clock averageOffset;
		Clock sumOffsetl;
		float fcorr=0;
		int indice=timeProt.correction.indiceFull;
    1c4e:	4680      	mov	r8, r0

		sumOffsetl=sumOffset;

		
		//sign change
		if(timeProt.correction.valueCor!=sumOffsetl.sign){//if the sum of the offset change of sign error ze reset the software corection 
    1c50:	428b      	cmp	r3, r1
    1c52:	d006      	beq.n	1c62 <_Z17sofwareCorrectionv+0x4e>
			indice=0;
			timeProt.correction.indiceMoySoftCor=0;
    1c54:	2100      	movs	r1, #0
    1c56:	2390      	movs	r3, #144	; 0x90
    1c58:	005b      	lsls	r3, r3, #1
    1c5a:	4ab5      	ldr	r2, [pc, #724]	; (1f30 <_Z17sofwareCorrectionv+0x31c>)
    1c5c:	54d1      	strb	r1, [r2, r3]
		sumOffsetl=sumOffset;

		
		//sign change
		if(timeProt.correction.valueCor!=sumOffsetl.sign){//if the sum of the offset change of sign error ze reset the software corection 
			indice=0;
    1c5e:	2300      	movs	r3, #0
    1c60:	4698      	mov	r8, r3
			timeProt.correction.indiceMoySoftCor=0;
		
		}
		
		float second=(float)timeProt.correction.sumTime.second/timeProt.correction.nbCorrection;
    1c62:	4fb3      	ldr	r7, [pc, #716]	; (1f30 <_Z17sofwareCorrectionv+0x31c>)
    1c64:	23c4      	movs	r3, #196	; 0xc4
    1c66:	58f8      	ldr	r0, [r7, r3]
    1c68:	3b20      	subs	r3, #32
    1c6a:	58fc      	ldr	r4, [r7, r3]
    1c6c:	4eb4      	ldr	r6, [pc, #720]	; (1f40 <_Z17sofwareCorrectionv+0x32c>)
    1c6e:	47b0      	blx	r6
    1c70:	1c05      	adds	r5, r0, #0
    1c72:	1c20      	adds	r0, r4, #0
    1c74:	47b0      	blx	r6
    1c76:	1c01      	adds	r1, r0, #0
    1c78:	1c28      	adds	r0, r5, #0
    1c7a:	4bb2      	ldr	r3, [pc, #712]	; (1f44 <_Z17sofwareCorrectionv+0x330>)
    1c7c:	4798      	blx	r3
    1c7e:	1c05      	adds	r5, r0, #0
		int secondi=(int)second;
    1c80:	4bb1      	ldr	r3, [pc, #708]	; (1f48 <_Z17sofwareCorrectionv+0x334>)
    1c82:	4798      	blx	r3
    1c84:	1c06      	adds	r6, r0, #0
				//calcul average time
				//printf("second : %d,%d",secondi,(int)((second-secondi)*1000.0));
				
		averageTime.second=secondi;
    1c86:	9007      	str	r0, [sp, #28]
		averageTime.halfmillis=(timeProt.correction.sumTime.halfmillis/timeProt.correction.nbCorrection)+RTC_FREQ*1.0*((float)(second-secondi));
    1c88:	23c8      	movs	r3, #200	; 0xc8
    1c8a:	58f8      	ldr	r0, [r7, r3]
    1c8c:	4faf      	ldr	r7, [pc, #700]	; (1f4c <_Z17sofwareCorrectionv+0x338>)
    1c8e:	1c21      	adds	r1, r4, #0
    1c90:	47b8      	blx	r7
    1c92:	4baf      	ldr	r3, [pc, #700]	; (1f50 <_Z17sofwareCorrectionv+0x33c>)
    1c94:	4798      	blx	r3
    1c96:	9002      	str	r0, [sp, #8]
    1c98:	9103      	str	r1, [sp, #12]
    1c9a:	1c30      	adds	r0, r6, #0
    1c9c:	4bad      	ldr	r3, [pc, #692]	; (1f54 <_Z17sofwareCorrectionv+0x340>)
    1c9e:	4798      	blx	r3
    1ca0:	1c01      	adds	r1, r0, #0
    1ca2:	1c28      	adds	r0, r5, #0
    1ca4:	4bac      	ldr	r3, [pc, #688]	; (1f58 <_Z17sofwareCorrectionv+0x344>)
    1ca6:	4798      	blx	r3
    1ca8:	4bac      	ldr	r3, [pc, #688]	; (1f5c <_Z17sofwareCorrectionv+0x348>)
    1caa:	4798      	blx	r3
    1cac:	2200      	movs	r2, #0
    1cae:	4bac      	ldr	r3, [pc, #688]	; (1f60 <_Z17sofwareCorrectionv+0x34c>)
    1cb0:	4dac      	ldr	r5, [pc, #688]	; (1f64 <_Z17sofwareCorrectionv+0x350>)
    1cb2:	47a8      	blx	r5
    1cb4:	1c02      	adds	r2, r0, #0
    1cb6:	1c0b      	adds	r3, r1, #0
    1cb8:	9802      	ldr	r0, [sp, #8]
    1cba:	9903      	ldr	r1, [sp, #12]
    1cbc:	4daa      	ldr	r5, [pc, #680]	; (1f68 <_Z17sofwareCorrectionv+0x354>)
    1cbe:	47a8      	blx	r5
    1cc0:	4baa      	ldr	r3, [pc, #680]	; (1f6c <_Z17sofwareCorrectionv+0x358>)
    1cc2:	4798      	blx	r3
    1cc4:	9008      	str	r0, [sp, #32]
		//unsigned long int averageTimeli=(averageTime.second*2000)+(averageTime.halfmillis);
		//calcul average offset
		averageOffset.second=sumOffset.second/timeProt.correction.nbCorrection;
    1cc6:	4e9d      	ldr	r6, [pc, #628]	; (1f3c <_Z17sofwareCorrectionv+0x328>)
    1cc8:	6830      	ldr	r0, [r6, #0]
    1cca:	1c21      	adds	r1, r4, #0
    1ccc:	47b8      	blx	r7
    1cce:	ad0a      	add	r5, sp, #40	; 0x28
    1cd0:	900a      	str	r0, [sp, #40]	; 0x28
		averageOffset.halfmillis=sumOffset.halfmillis/timeProt.correction.nbCorrection;
    1cd2:	6870      	ldr	r0, [r6, #4]
    1cd4:	1c21      	adds	r1, r4, #0
    1cd6:	47b8      	blx	r7
    1cd8:	6068      	str	r0, [r5, #4]
		averageOffset.sign=sumOffset.sign;
    1cda:	7a33      	ldrb	r3, [r6, #8]
    1cdc:	b2db      	uxtb	r3, r3
    1cde:	722b      	strb	r3, [r5, #8]
		printfClock(averageTime);
		printf("averageOffseet: ");
		printfClock(averageOffset);*/
		
		//calcul of average time in hms
		unsigned long int diffhms=averageTime.second*RTC_FREQ+averageTime.halfmillis;
    1ce0:	9807      	ldr	r0, [sp, #28]
    1ce2:	9a08      	ldr	r2, [sp, #32]
		//offset in hms
		long int offset=averageOffset.second*RTC_FREQ+averageOffset.halfmillis;
    1ce4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    1ce6:	6869      	ldr	r1, [r5, #4]
    1ce8:	23fa      	movs	r3, #250	; 0xfa
    1cea:	01db      	lsls	r3, r3, #7
    1cec:	4363      	muls	r3, r4
    1cee:	185f      	adds	r7, r3, r1
		if (averageOffset.sign==false)
    1cf0:	7a2b      	ldrb	r3, [r5, #8]
    1cf2:	2b00      	cmp	r3, #0
    1cf4:	d100      	bne.n	1cf8 <_Z17sofwareCorrectionv+0xe4>
		{
			offset=-offset;
    1cf6:	427f      	negs	r7, r7
		float correctionTime=0.0;
		int corr;
		int corrTime;
		int nbwait;
		
		corr=valueCor;
    1cf8:	4b9d      	ldr	r3, [pc, #628]	; (1f70 <_Z17sofwareCorrectionv+0x35c>)
    1cfa:	681b      	ldr	r3, [r3, #0]
		nbwait=timeCorrection;
    1cfc:	4b9d      	ldr	r3, [pc, #628]	; (1f74 <_Z17sofwareCorrectionv+0x360>)
    1cfe:	681c      	ldr	r4, [r3, #0]
		corrTime=nbwait;		

		if(offset!=0){
    1d00:	2f00      	cmp	r7, #0
    1d02:	d100      	bne.n	1d06 <_Z17sofwareCorrectionv+0xf2>
    1d04:	e0f8      	b.n	1ef8 <_Z17sofwareCorrectionv+0x2e4>
					//printf("correction need %d(%d)\r\n",(int)fcorr,nbwait);	
					if(fcorr<0){
						fcorr=-fcorr;
					}
					
					while((nbwait<1000)&&(fcorr<0.5)){
    1d06:	4b9c      	ldr	r3, [pc, #624]	; (1f78 <_Z17sofwareCorrectionv+0x364>)
    1d08:	429c      	cmp	r4, r3
    1d0a:	dc27      	bgt.n	1d5c <_Z17sofwareCorrectionv+0x148>
		printfClock(averageTime);
		printf("averageOffseet: ");
		printfClock(averageOffset);*/
		
		//calcul of average time in hms
		unsigned long int diffhms=averageTime.second*RTC_FREQ+averageTime.halfmillis;
    1d0c:	23fa      	movs	r3, #250	; 0xfa
    1d0e:	01db      	lsls	r3, r3, #7
    1d10:	4358      	muls	r0, r3
    1d12:	1880      	adds	r0, r0, r2
					if(fcorr<0){
						fcorr=-fcorr;
					}
					
					while((nbwait<1000)&&(fcorr<0.5)){
						fcorr=(float)((float)VALUE_TIMER*nbwait*offset*1.0)/(diffhms);
    1d14:	4b8a      	ldr	r3, [pc, #552]	; (1f40 <_Z17sofwareCorrectionv+0x32c>)
    1d16:	4798      	blx	r3
    1d18:	9002      	str	r0, [sp, #8]
    1d1a:	4e8e      	ldr	r6, [pc, #568]	; (1f54 <_Z17sofwareCorrectionv+0x340>)
    1d1c:	4d97      	ldr	r5, [pc, #604]	; (1f7c <_Z17sofwareCorrectionv+0x368>)
    1d1e:	4b89      	ldr	r3, [pc, #548]	; (1f44 <_Z17sofwareCorrectionv+0x330>)
    1d20:	469a      	mov	sl, r3
					//printf("correction need %d(%d)\r\n",(int)fcorr,nbwait);	
					if(fcorr<0){
						fcorr=-fcorr;
					}
					
					while((nbwait<1000)&&(fcorr<0.5)){
    1d22:	23fa      	movs	r3, #250	; 0xfa
    1d24:	009b      	lsls	r3, r3, #2
    1d26:	4699      	mov	r9, r3
    1d28:	4b95      	ldr	r3, [pc, #596]	; (1f80 <_Z17sofwareCorrectionv+0x36c>)
    1d2a:	469b      	mov	fp, r3
    1d2c:	9704      	str	r7, [sp, #16]
						fcorr=(float)((float)VALUE_TIMER*nbwait*offset*1.0)/(diffhms);
    1d2e:	1c20      	adds	r0, r4, #0
    1d30:	47b0      	blx	r6
    1d32:	4994      	ldr	r1, [pc, #592]	; (1f84 <_Z17sofwareCorrectionv+0x370>)
    1d34:	47a8      	blx	r5
    1d36:	1c07      	adds	r7, r0, #0
    1d38:	9804      	ldr	r0, [sp, #16]
    1d3a:	47b0      	blx	r6
    1d3c:	1c01      	adds	r1, r0, #0
    1d3e:	1c38      	adds	r0, r7, #0
    1d40:	47a8      	blx	r5
    1d42:	9902      	ldr	r1, [sp, #8]
    1d44:	47d0      	blx	sl
    1d46:	1c07      	adds	r7, r0, #0
						nbwait++;
    1d48:	3401      	adds	r4, #1
					//printf("correction need %d(%d)\r\n",(int)fcorr,nbwait);	
					if(fcorr<0){
						fcorr=-fcorr;
					}
					
					while((nbwait<1000)&&(fcorr<0.5)){
    1d4a:	454c      	cmp	r4, r9
    1d4c:	d009      	beq.n	1d62 <_Z17sofwareCorrectionv+0x14e>
    1d4e:	21fc      	movs	r1, #252	; 0xfc
    1d50:	0589      	lsls	r1, r1, #22
    1d52:	47d8      	blx	fp
    1d54:	2800      	cmp	r0, #0
    1d56:	d1ea      	bne.n	1d2e <_Z17sofwareCorrectionv+0x11a>
    1d58:	1c3a      	adds	r2, r7, #0
    1d5a:	e003      	b.n	1d64 <_Z17sofwareCorrectionv+0x150>
    1d5c:	2300      	movs	r3, #0
    1d5e:	1c1a      	adds	r2, r3, #0
    1d60:	e000      	b.n	1d64 <_Z17sofwareCorrectionv+0x150>
    1d62:	1c02      	adds	r2, r0, #0
					//fcorr=fcorr*RTC_FREQ;	
					

				//	printf("correction need %d/10(%d)\r\n",(int)fcorr*10,nbwait);			
					int i;
					timeProt.correction.moySoftCor[timeProt.correction.indiceMoySoftCor][0]=fcorr;
    1d64:	4e72      	ldr	r6, [pc, #456]	; (1f30 <_Z17sofwareCorrectionv+0x31c>)
    1d66:	2390      	movs	r3, #144	; 0x90
    1d68:	005b      	lsls	r3, r3, #1
    1d6a:	5cf5      	ldrb	r5, [r6, r3]
    1d6c:	1c2b      	adds	r3, r5, #0
    1d6e:	3319      	adds	r3, #25
    1d70:	00db      	lsls	r3, r3, #3
    1d72:	18f3      	adds	r3, r6, r3
    1d74:	609a      	str	r2, [r3, #8]
					timeProt.correction.moySoftCor[timeProt.correction.indiceMoySoftCor][1]=nbwait;
    1d76:	00eb      	lsls	r3, r5, #3
    1d78:	18f6      	adds	r6, r6, r3
    1d7a:	36cc      	adds	r6, #204	; 0xcc
    1d7c:	1c20      	adds	r0, r4, #0
    1d7e:	4b75      	ldr	r3, [pc, #468]	; (1f54 <_Z17sofwareCorrectionv+0x340>)
    1d80:	4798      	blx	r3
    1d82:	60b0      	str	r0, [r6, #8]
					timeProt.correction.indiceMoySoftCor++;
    1d84:	3501      	adds	r5, #1
    1d86:	b2ed      	uxtb	r5, r5
					if(indice<MOYCORLENGTH){//if ze have enougth space to sqve the value
						indice++;
    1d88:	2209      	movs	r2, #9
    1d8a:	4643      	mov	r3, r8
    1d8c:	0fd9      	lsrs	r1, r3, #31
    1d8e:	17d3      	asrs	r3, r2, #31
    1d90:	4640      	mov	r0, r8
    1d92:	4282      	cmp	r2, r0
    1d94:	414b      	adcs	r3, r1
    1d96:	4498      	add	r8, r3
					}
					if(timeProt.correction.indiceMoySoftCor>indice){
    1d98:	45a8      	cmp	r8, r5
    1d9a:	db04      	blt.n	1da6 <_Z17sofwareCorrectionv+0x192>

				//	printf("correction need %d/10(%d)\r\n",(int)fcorr*10,nbwait);			
					int i;
					timeProt.correction.moySoftCor[timeProt.correction.indiceMoySoftCor][0]=fcorr;
					timeProt.correction.moySoftCor[timeProt.correction.indiceMoySoftCor][1]=nbwait;
					timeProt.correction.indiceMoySoftCor++;
    1d9c:	2390      	movs	r3, #144	; 0x90
    1d9e:	005b      	lsls	r3, r3, #1
    1da0:	4a63      	ldr	r2, [pc, #396]	; (1f30 <_Z17sofwareCorrectionv+0x31c>)
    1da2:	54d5      	strb	r5, [r2, r3]
    1da4:	e004      	b.n	1db0 <_Z17sofwareCorrectionv+0x19c>
					if(indice<MOYCORLENGTH){//if ze have enougth space to sqve the value
						indice++;
					}
					if(timeProt.correction.indiceMoySoftCor>indice){
						timeProt.correction.indiceMoySoftCor=0;
    1da6:	2100      	movs	r1, #0
    1da8:	2390      	movs	r3, #144	; 0x90
    1daa:	005b      	lsls	r3, r3, #1
    1dac:	4a60      	ldr	r2, [pc, #384]	; (1f30 <_Z17sofwareCorrectionv+0x31c>)
    1dae:	54d1      	strb	r1, [r2, r3]
					}
					
					
					for(i=0;i<indice;i++){//go to the maximum value save
    1db0:	4643      	mov	r3, r8
    1db2:	2b00      	cmp	r3, #0
    1db4:	dd18      	ble.n	1de8 <_Z17sofwareCorrectionv+0x1d4>
    1db6:	4a5e      	ldr	r2, [pc, #376]	; (1f30 <_Z17sofwareCorrectionv+0x31c>)
    1db8:	1c16      	adds	r6, r2, #0
    1dba:	36d0      	adds	r6, #208	; 0xd0
    1dbc:	331a      	adds	r3, #26
    1dbe:	00db      	lsls	r3, r3, #3
    1dc0:	18d5      	adds	r5, r2, r3
    1dc2:	2400      	movs	r4, #0
    1dc4:	9402      	str	r4, [sp, #8]
						//	printf("i : %d, value : %d\r\n",i,(int)timeProt.correction.moySoftCor[i]);
							correctionSoft+=timeProt.correction.moySoftCor[i][0];
    1dc6:	4f70      	ldr	r7, [pc, #448]	; (1f88 <_Z17sofwareCorrectionv+0x374>)
    1dc8:	1c2b      	adds	r3, r5, #0
    1dca:	1c25      	adds	r5, r4, #0
    1dcc:	1c1c      	adds	r4, r3, #0
    1dce:	9802      	ldr	r0, [sp, #8]
    1dd0:	6831      	ldr	r1, [r6, #0]
    1dd2:	47b8      	blx	r7
    1dd4:	9002      	str	r0, [sp, #8]
							correctionTime+=timeProt.correction.moySoftCor[i][1];
    1dd6:	1c28      	adds	r0, r5, #0
    1dd8:	6871      	ldr	r1, [r6, #4]
    1dda:	47b8      	blx	r7
    1ddc:	1c05      	adds	r5, r0, #0
    1dde:	3608      	adds	r6, #8
					if(timeProt.correction.indiceMoySoftCor>indice){
						timeProt.correction.indiceMoySoftCor=0;
					}
					
					
					for(i=0;i<indice;i++){//go to the maximum value save
    1de0:	42a6      	cmp	r6, r4
    1de2:	d1f4      	bne.n	1dce <_Z17sofwareCorrectionv+0x1ba>
    1de4:	1c04      	adds	r4, r0, #0
    1de6:	e001      	b.n	1dec <_Z17sofwareCorrectionv+0x1d8>
			offset=-offset;
		}
		//printf("offset : %lu\r\n",offset);
		//printf("diffhms : %lu\r\n",diffhms);
		float correctionSoft=0.0;
		float correctionTime=0.0;
    1de8:	2400      	movs	r4, #0
		{
			offset=-offset;
		}
		//printf("offset : %lu\r\n",offset);
		//printf("diffhms : %lu\r\n",diffhms);
		float correctionSoft=0.0;
    1dea:	9402      	str	r4, [sp, #8]
							correctionSoft+=timeProt.correction.moySoftCor[i][0];
							correctionTime+=timeProt.correction.moySoftCor[i][1];
					}
				//	printf("sumCorr : %d",(int)correctionSoft);
					
					correctionSoft=(float)(1.0*correctionSoft)/(indice*1.0);//calcul the average value of the software correction 
    1dec:	4640      	mov	r0, r8
    1dee:	4b67      	ldr	r3, [pc, #412]	; (1f8c <_Z17sofwareCorrectionv+0x378>)
    1df0:	4798      	blx	r3
    1df2:	9004      	str	r0, [sp, #16]
    1df4:	9105      	str	r1, [sp, #20]
    1df6:	4f59      	ldr	r7, [pc, #356]	; (1f5c <_Z17sofwareCorrectionv+0x348>)
    1df8:	9802      	ldr	r0, [sp, #8]
    1dfa:	47b8      	blx	r7
    1dfc:	4e64      	ldr	r6, [pc, #400]	; (1f90 <_Z17sofwareCorrectionv+0x37c>)
    1dfe:	9a04      	ldr	r2, [sp, #16]
    1e00:	9b05      	ldr	r3, [sp, #20]
    1e02:	47b0      	blx	r6
    1e04:	4d63      	ldr	r5, [pc, #396]	; (1f94 <_Z17sofwareCorrectionv+0x380>)
    1e06:	47a8      	blx	r5
    1e08:	9002      	str	r0, [sp, #8]
					correctionTime=(float)(1.0*correctionTime)/(indice*1.0);//calcul the average value of the software correction 
    1e0a:	1c20      	adds	r0, r4, #0
    1e0c:	47b8      	blx	r7
    1e0e:	9a04      	ldr	r2, [sp, #16]
    1e10:	9b05      	ldr	r3, [sp, #20]
    1e12:	47b0      	blx	r6
    1e14:	47a8      	blx	r5
    1e16:	9004      	str	r0, [sp, #16]
					corr=(int)correctionSoft;//cast to int
					corrTime=(int)correctionTime;//cast to int
    1e18:	4a4b      	ldr	r2, [pc, #300]	; (1f48 <_Z17sofwareCorrectionv+0x334>)
    1e1a:	4693      	mov	fp, r2
    1e1c:	4790      	blx	r2
    1e1e:	1c04      	adds	r4, r0, #0
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
    1e20:	b672      	cpsid	i
    1e22:	f3bf 8f5f 	dmb	sy
					Disable_global_interrupt();
    1e26:	4d5c      	ldr	r5, [pc, #368]	; (1f98 <_Z17sofwareCorrectionv+0x384>)
    1e28:	2300      	movs	r3, #0
    1e2a:	702b      	strb	r3, [r5, #0]
					corr=valueCor+Coef_Software_Correction*(corr-valueCor);
    1e2c:	4f50      	ldr	r7, [pc, #320]	; (1f70 <_Z17sofwareCorrectionv+0x35c>)
    1e2e:	683e      	ldr	r6, [r7, #0]
					}
				//	printf("sumCorr : %d",(int)correctionSoft);
					
					correctionSoft=(float)(1.0*correctionSoft)/(indice*1.0);//calcul the average value of the software correction 
					correctionTime=(float)(1.0*correctionTime)/(indice*1.0);//calcul the average value of the software correction 
					corr=(int)correctionSoft;//cast to int
    1e30:	9802      	ldr	r0, [sp, #8]
    1e32:	47d8      	blx	fp
					corrTime=(int)correctionTime;//cast to int
					Disable_global_interrupt();
					corr=valueCor+Coef_Software_Correction*(corr-valueCor);
    1e34:	1b80      	subs	r0, r0, r6
    1e36:	683f      	ldr	r7, [r7, #0]
    1e38:	19c7      	adds	r7, r0, r7
					Enable_global_interrupt();
    1e3a:	2301      	movs	r3, #1
    1e3c:	702b      	strb	r3, [r5, #0]
    1e3e:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
    1e42:	b662      	cpsie	i
					if(corr<0){
    1e44:	2f00      	cmp	r7, #0
    1e46:	da0e      	bge.n	1e66 <_Z17sofwareCorrectionv+0x252>
							if(correctionSoft-corr<-0.5){//calculate int the most close to the real value
    1e48:	1c38      	adds	r0, r7, #0
    1e4a:	4b42      	ldr	r3, [pc, #264]	; (1f54 <_Z17sofwareCorrectionv+0x340>)
    1e4c:	4798      	blx	r3
    1e4e:	1c01      	adds	r1, r0, #0
    1e50:	9802      	ldr	r0, [sp, #8]
    1e52:	4b41      	ldr	r3, [pc, #260]	; (1f58 <_Z17sofwareCorrectionv+0x344>)
    1e54:	4798      	blx	r3
    1e56:	21bf      	movs	r1, #191	; 0xbf
    1e58:	0609      	lsls	r1, r1, #24
    1e5a:	4b49      	ldr	r3, [pc, #292]	; (1f80 <_Z17sofwareCorrectionv+0x36c>)
    1e5c:	4798      	blx	r3
								corr--;
    1e5e:	1e43      	subs	r3, r0, #1
    1e60:	4198      	sbcs	r0, r3
    1e62:	1a3f      	subs	r7, r7, r0
    1e64:	e00d      	b.n	1e82 <_Z17sofwareCorrectionv+0x26e>
							}
					//		printf("corr<0");
					}
					else{
							if(correctionSoft-corr>0.5){//calculate int the most close to the real value
    1e66:	1c38      	adds	r0, r7, #0
    1e68:	4b3a      	ldr	r3, [pc, #232]	; (1f54 <_Z17sofwareCorrectionv+0x340>)
    1e6a:	4798      	blx	r3
    1e6c:	1c01      	adds	r1, r0, #0
    1e6e:	9802      	ldr	r0, [sp, #8]
    1e70:	4b39      	ldr	r3, [pc, #228]	; (1f58 <_Z17sofwareCorrectionv+0x344>)
    1e72:	4798      	blx	r3
    1e74:	21fc      	movs	r1, #252	; 0xfc
    1e76:	0589      	lsls	r1, r1, #22
    1e78:	4b48      	ldr	r3, [pc, #288]	; (1f9c <_Z17sofwareCorrectionv+0x388>)
    1e7a:	4798      	blx	r3
								corr++;
    1e7c:	1e43      	subs	r3, r0, #1
    1e7e:	4198      	sbcs	r0, r3
    1e80:	183f      	adds	r7, r7, r0
							}
					//		printf("corr>0");
					}
					
					if(correctionTime-corrTime>0.5){//calculate int the most close to the real value
    1e82:	1c20      	adds	r0, r4, #0
    1e84:	4b33      	ldr	r3, [pc, #204]	; (1f54 <_Z17sofwareCorrectionv+0x340>)
    1e86:	4798      	blx	r3
    1e88:	1c01      	adds	r1, r0, #0
    1e8a:	9804      	ldr	r0, [sp, #16]
    1e8c:	4b32      	ldr	r3, [pc, #200]	; (1f58 <_Z17sofwareCorrectionv+0x344>)
    1e8e:	4798      	blx	r3
    1e90:	21fc      	movs	r1, #252	; 0xfc
    1e92:	0589      	lsls	r1, r1, #22
    1e94:	4b41      	ldr	r3, [pc, #260]	; (1f9c <_Z17sofwareCorrectionv+0x388>)
    1e96:	4798      	blx	r3
						corrTime++;
    1e98:	1e43      	subs	r3, r0, #1
    1e9a:	4198      	sbcs	r0, r3
    1e9c:	1824      	adds	r4, r4, r0
					}
					//	printf("moy : %d",(int)correctionSoft*1000);
					//	printf("corr: %u",corr);
					int pgcdi =pgcd(corrTime,corr);
    1e9e:	1c20      	adds	r0, r4, #0
    1ea0:	1c39      	adds	r1, r7, #0
    1ea2:	4b3f      	ldr	r3, [pc, #252]	; (1fa0 <_Z17sofwareCorrectionv+0x38c>)
    1ea4:	4798      	blx	r3
    1ea6:	1c03      	adds	r3, r0, #0
					corrTime=corrTime/pgcdi;
    1ea8:	4a3e      	ldr	r2, [pc, #248]	; (1fa4 <_Z17sofwareCorrectionv+0x390>)
    1eaa:	4692      	mov	sl, r2
    1eac:	1c20      	adds	r0, r4, #0
    1eae:	9302      	str	r3, [sp, #8]
    1eb0:	1c19      	adds	r1, r3, #0
    1eb2:	4790      	blx	r2
    1eb4:	1c04      	adds	r4, r0, #0
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
    1eb6:	b672      	cpsid	i
    1eb8:	f3bf 8f5f 	dmb	sy
					corr=corr/pgcdi;
					Disable_global_interrupt();
    1ebc:	4a36      	ldr	r2, [pc, #216]	; (1f98 <_Z17sofwareCorrectionv+0x384>)
    1ebe:	4691      	mov	r9, r2
    1ec0:	2300      	movs	r3, #0
    1ec2:	7013      	strb	r3, [r2, #0]
					
					valueCor=valueCor+Coef_Software_Correction*(corr-valueCor);
    1ec4:	4d2a      	ldr	r5, [pc, #168]	; (1f70 <_Z17sofwareCorrectionv+0x35c>)
    1ec6:	682a      	ldr	r2, [r5, #0]
    1ec8:	4693      	mov	fp, r2
    1eca:	682e      	ldr	r6, [r5, #0]
					}
					//	printf("moy : %d",(int)correctionSoft*1000);
					//	printf("corr: %u",corr);
					int pgcdi =pgcd(corrTime,corr);
					corrTime=corrTime/pgcdi;
					corr=corr/pgcdi;
    1ecc:	1c38      	adds	r0, r7, #0
    1ece:	9902      	ldr	r1, [sp, #8]
    1ed0:	47d0      	blx	sl
					Disable_global_interrupt();
					
					valueCor=valueCor+Coef_Software_Correction*(corr-valueCor);
    1ed2:	465b      	mov	r3, fp
    1ed4:	1ac0      	subs	r0, r0, r3
    1ed6:	1986      	adds	r6, r0, r6
    1ed8:	602e      	str	r6, [r5, #0]
					timeCorrection=corrTime;
    1eda:	4b26      	ldr	r3, [pc, #152]	; (1f74 <_Z17sofwareCorrectionv+0x360>)
    1edc:	601c      	str	r4, [r3, #0]
					timeCorr=corrTime;
    1ede:	4b32      	ldr	r3, [pc, #200]	; (1fa8 <_Z17sofwareCorrectionv+0x394>)
    1ee0:	601c      	str	r4, [r3, #0]
					Enable_global_interrupt();
    1ee2:	2301      	movs	r3, #1
    1ee4:	464a      	mov	r2, r9
    1ee6:	7013      	strb	r3, [r2, #0]
    1ee8:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
    1eec:	b662      	cpsie	i
						
					
					timeProt.correction.indiceFull=indice;
    1eee:	2322      	movs	r3, #34	; 0x22
    1ef0:	33ff      	adds	r3, #255	; 0xff
    1ef2:	4a0f      	ldr	r2, [pc, #60]	; (1f30 <_Z17sofwareCorrectionv+0x31c>)
    1ef4:	4641      	mov	r1, r8
    1ef6:	54d1      	strb	r1, [r2, r3]
		}
			
		resetSofftwareCorrection();
    1ef8:	4b2c      	ldr	r3, [pc, #176]	; (1fac <_Z17sofwareCorrectionv+0x398>)
    1efa:	4798      	blx	r3
		sprintf(messageHMICor,"		update time corr: %d(%d) sign : %d with %d sample",(int)valueCor,corrTime,averageOffset.sign,indice);
    1efc:	4b1c      	ldr	r3, [pc, #112]	; (1f70 <_Z17sofwareCorrectionv+0x35c>)
    1efe:	681a      	ldr	r2, [r3, #0]
    1f00:	ab0a      	add	r3, sp, #40	; 0x28
    1f02:	7a1b      	ldrb	r3, [r3, #8]
    1f04:	4d2a      	ldr	r5, [pc, #168]	; (1fb0 <_Z17sofwareCorrectionv+0x39c>)
    1f06:	9300      	str	r3, [sp, #0]
    1f08:	4643      	mov	r3, r8
    1f0a:	9301      	str	r3, [sp, #4]
    1f0c:	1c28      	adds	r0, r5, #0
    1f0e:	4929      	ldr	r1, [pc, #164]	; (1fb4 <_Z17sofwareCorrectionv+0x3a0>)
    1f10:	1c23      	adds	r3, r4, #0
    1f12:	4c29      	ldr	r4, [pc, #164]	; (1fb8 <_Z17sofwareCorrectionv+0x3a4>)
    1f14:	47a0      	blx	r4
		sendHMI(messageHMICor);
    1f16:	1c28      	adds	r0, r5, #0
    1f18:	4c07      	ldr	r4, [pc, #28]	; (1f38 <_Z17sofwareCorrectionv+0x324>)
    1f1a:	47a0      	blx	r4
		sendHMI("	end Software correction");
    1f1c:	4827      	ldr	r0, [pc, #156]	; (1fbc <_Z17sofwareCorrectionv+0x3a8>)
    1f1e:	47a0      	blx	r4
	}
	
}
    1f20:	b011      	add	sp, #68	; 0x44
    1f22:	bc3c      	pop	{r2, r3, r4, r5}
    1f24:	4690      	mov	r8, r2
    1f26:	4699      	mov	r9, r3
    1f28:	46a2      	mov	sl, r4
    1f2a:	46ab      	mov	fp, r5
    1f2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1f2e:	46c0      	nop			; (mov r8, r8)
    1f30:	20003f5c 	.word	0x20003f5c
    1f34:	0000d7c0 	.word	0x0000d7c0
    1f38:	00002881 	.word	0x00002881
    1f3c:	20003e88 	.word	0x20003e88
    1f40:	00006361 	.word	0x00006361
    1f44:	0000594d 	.word	0x0000594d
    1f48:	00006291 	.word	0x00006291
    1f4c:	000051d1 	.word	0x000051d1
    1f50:	00007fc9 	.word	0x00007fc9
    1f54:	000062d1 	.word	0x000062d1
    1f58:	00005f95 	.word	0x00005f95
    1f5c:	0000802d 	.word	0x0000802d
    1f60:	40df4000 	.word	0x40df4000
    1f64:	000072bd 	.word	0x000072bd
    1f68:	000063f1 	.word	0x000063f1
    1f6c:	00005619 	.word	0x00005619
    1f70:	20003d44 	.word	0x20003d44
    1f74:	20003d1c 	.word	0x20003d1c
    1f78:	000003e7 	.word	0x000003e7
    1f7c:	00005d31 	.word	0x00005d31
    1f80:	00005575 	.word	0x00005575
    1f84:	43160000 	.word	0x43160000
    1f88:	00005655 	.word	0x00005655
    1f8c:	00007f51 	.word	0x00007f51
    1f90:	00006a41 	.word	0x00006a41
    1f94:	000080d5 	.word	0x000080d5
    1f98:	200000d0 	.word	0x200000d0
    1f9c:	0000559d 	.word	0x0000559d
    1fa0:	00001bad 	.word	0x00001bad
    1fa4:	000052f1 	.word	0x000052f1
    1fa8:	20003d24 	.word	0x20003d24
    1fac:	00001bf1 	.word	0x00001bf1
    1fb0:	20003e94 	.word	0x20003e94
    1fb4:	0000d7d8 	.word	0x0000d7d8
    1fb8:	00009fe5 	.word	0x00009fe5
    1fbc:	0000d80c 	.word	0x0000d80c

00001fc0 <_Z18hardwareCorrectionv>:
		timeProt.correction.nbCorrection=0;
		timeProt.correction.sumTime.second=0;
		timeProt.correction.sumTime.halfmillis=0;
		timeProt.correction.currentTimeOffsetSync.second=0;// to not take the first value
}
bool hardwareCorrection(void){
    1fc0:	b5f0      	push	{r4, r5, r6, r7, lr}
    1fc2:	b08b      	sub	sp, #44	; 0x2c
	if(timeProt.correction.nbCorrection!=0){
    1fc4:	23a4      	movs	r3, #164	; 0xa4
    1fc6:	4a73      	ldr	r2, [pc, #460]	; (2194 <STACK_SIZE+0x194>)
    1fc8:	58d3      	ldr	r3, [r2, r3]
			sendHMI("	end correction");
			return false;
		}
		
	}
	return false;	
    1fca:	2000      	movs	r0, #0
		timeProt.correction.sumTime.second=0;
		timeProt.correction.sumTime.halfmillis=0;
		timeProt.correction.currentTimeOffsetSync.second=0;// to not take the first value
}
bool hardwareCorrection(void){
	if(timeProt.correction.nbCorrection!=0){
    1fcc:	2b00      	cmp	r3, #0
    1fce:	d100      	bne.n	1fd2 <_Z18hardwareCorrectionv+0x12>
    1fd0:	e0dd      	b.n	218e <STACK_SIZE+0x18e>
		sendHMI("	Hardware correction");
    1fd2:	4871      	ldr	r0, [pc, #452]	; (2198 <STACK_SIZE+0x198>)
    1fd4:	4b71      	ldr	r3, [pc, #452]	; (219c <STACK_SIZE+0x19c>)
    1fd6:	4798      	blx	r3
		long int sumOffsetl;
		Clock averageTime={0,0,true};
    1fd8:	af07      	add	r7, sp, #28
    1fda:	2300      	movs	r3, #0
    1fdc:	9307      	str	r3, [sp, #28]
    1fde:	9308      	str	r3, [sp, #32]
    1fe0:	3301      	adds	r3, #1
    1fe2:	723b      	strb	r3, [r7, #8]
		float second=(float)timeProt.correction.sumTime.second/timeProt.correction.nbCorrection;
    1fe4:	4c6b      	ldr	r4, [pc, #428]	; (2194 <STACK_SIZE+0x194>)
    1fe6:	33c3      	adds	r3, #195	; 0xc3
    1fe8:	58e0      	ldr	r0, [r4, r3]
    1fea:	3b20      	subs	r3, #32
    1fec:	58e3      	ldr	r3, [r4, r3]
    1fee:	9303      	str	r3, [sp, #12]
    1ff0:	4e6b      	ldr	r6, [pc, #428]	; (21a0 <STACK_SIZE+0x1a0>)
    1ff2:	47b0      	blx	r6
    1ff4:	1c05      	adds	r5, r0, #0
    1ff6:	9803      	ldr	r0, [sp, #12]
    1ff8:	47b0      	blx	r6
    1ffa:	1c01      	adds	r1, r0, #0
    1ffc:	1c28      	adds	r0, r5, #0
    1ffe:	4b69      	ldr	r3, [pc, #420]	; (21a4 <STACK_SIZE+0x1a4>)
    2000:	4798      	blx	r3
    2002:	1c05      	adds	r5, r0, #0
		int secondi=(int)second;
    2004:	4b68      	ldr	r3, [pc, #416]	; (21a8 <STACK_SIZE+0x1a8>)
    2006:	4798      	blx	r3
    2008:	1c06      	adds	r6, r0, #0
		//calcul average time
		//printf("second : %d,%d",secondi,(int)((second-secondi)*1000.0));
		
		averageTime.second=secondi;
    200a:	9007      	str	r0, [sp, #28]
		averageTime.halfmillis=(timeProt.correction.sumTime.halfmillis/timeProt.correction.nbCorrection)+RTC_FREQ*1.0*((float)(second-secondi));
    200c:	23c8      	movs	r3, #200	; 0xc8
    200e:	58e0      	ldr	r0, [r4, r3]
    2010:	9903      	ldr	r1, [sp, #12]
    2012:	4b66      	ldr	r3, [pc, #408]	; (21ac <STACK_SIZE+0x1ac>)
    2014:	4798      	blx	r3
    2016:	4c66      	ldr	r4, [pc, #408]	; (21b0 <STACK_SIZE+0x1b0>)
    2018:	47a0      	blx	r4
    201a:	9004      	str	r0, [sp, #16]
    201c:	9105      	str	r1, [sp, #20]
    201e:	1c30      	adds	r0, r6, #0
    2020:	4b64      	ldr	r3, [pc, #400]	; (21b4 <STACK_SIZE+0x1b4>)
    2022:	4798      	blx	r3
    2024:	1c01      	adds	r1, r0, #0
    2026:	1c28      	adds	r0, r5, #0
    2028:	4b63      	ldr	r3, [pc, #396]	; (21b8 <STACK_SIZE+0x1b8>)
    202a:	4798      	blx	r3
    202c:	4b63      	ldr	r3, [pc, #396]	; (21bc <STACK_SIZE+0x1bc>)
    202e:	4798      	blx	r3
    2030:	2200      	movs	r2, #0
    2032:	4b63      	ldr	r3, [pc, #396]	; (21c0 <STACK_SIZE+0x1c0>)
    2034:	4d63      	ldr	r5, [pc, #396]	; (21c4 <STACK_SIZE+0x1c4>)
    2036:	47a8      	blx	r5
    2038:	1c02      	adds	r2, r0, #0
    203a:	1c0b      	adds	r3, r1, #0
    203c:	9804      	ldr	r0, [sp, #16]
    203e:	9905      	ldr	r1, [sp, #20]
    2040:	4d61      	ldr	r5, [pc, #388]	; (21c8 <STACK_SIZE+0x1c8>)
    2042:	47a8      	blx	r5
    2044:	4b61      	ldr	r3, [pc, #388]	; (21cc <STACK_SIZE+0x1cc>)
    2046:	4798      	blx	r3
    2048:	6078      	str	r0, [r7, #4]
		unsigned long int averageTimeli=(averageTime.second*RTC_FREQ)+(averageTime.halfmillis);
    204a:	9b07      	ldr	r3, [sp, #28]
    204c:	687a      	ldr	r2, [r7, #4]
    204e:	26fa      	movs	r6, #250	; 0xfa
    2050:	01f6      	lsls	r6, r6, #7
    2052:	4373      	muls	r3, r6
    2054:	189f      	adds	r7, r3, r2
	
		//printf("averageTime : %lu\r\n",averageTime);
		float Fnow=(float)RTC_FREQ*1.0/count_set_period;
    2056:	4b5e      	ldr	r3, [pc, #376]	; (21d0 <STACK_SIZE+0x1d0>)
    2058:	6818      	ldr	r0, [r3, #0]
    205a:	47a0      	blx	r4
    205c:	1c02      	adds	r2, r0, #0
    205e:	1c0b      	adds	r3, r1, #0
    2060:	2000      	movs	r0, #0
    2062:	4957      	ldr	r1, [pc, #348]	; (21c0 <STACK_SIZE+0x1c0>)
    2064:	4d5b      	ldr	r5, [pc, #364]	; (21d4 <STACK_SIZE+0x1d4>)
    2066:	47a8      	blx	r5
    2068:	4b5b      	ldr	r3, [pc, #364]	; (21d8 <STACK_SIZE+0x1d8>)
    206a:	4798      	blx	r3
    206c:	9004      	str	r0, [sp, #16]
		float Fafter=0;
		//calcul of the sumOffset in ms

		sumOffsetl=(sumOffset.second*RTC_FREQ)+(sumOffset.halfmillis);
    206e:	4a5b      	ldr	r2, [pc, #364]	; (21dc <STACK_SIZE+0x1dc>)
    2070:	6810      	ldr	r0, [r2, #0]
    2072:	6853      	ldr	r3, [r2, #4]
    2074:	4370      	muls	r0, r6
    2076:	18c0      	adds	r0, r0, r3
		if(sumOffset.sign!=true){
    2078:	7a13      	ldrb	r3, [r2, #8]
    207a:	2b00      	cmp	r3, #0
    207c:	d100      	bne.n	2080 <STACK_SIZE+0x80>
			sumOffsetl=-sumOffsetl;
    207e:	4240      	negs	r0, r0
		

		//printf("correction nb : %d",timeProt.correction.nbCorrection);
		//average per period of sync
		int nbcor=timeProt.correction.nbCorrection;
		sumOffsetl=sumOffsetl/nbcor;
    2080:	9903      	ldr	r1, [sp, #12]
    2082:	4b57      	ldr	r3, [pc, #348]	; (21e0 <STACK_SIZE+0x1e0>)
    2084:	4798      	blx	r3
		
		//printf("sumOffsetmoy :  %ld\r\n",sumOffset/2);
		sumOffsetl=sumOffsetl/(float)(averageTimeli/(RTC_FREQ*1.0));
    2086:	4d4b      	ldr	r5, [pc, #300]	; (21b4 <STACK_SIZE+0x1b4>)
    2088:	47a8      	blx	r5
    208a:	1c06      	adds	r6, r0, #0
    208c:	1c38      	adds	r0, r7, #0
    208e:	4b48      	ldr	r3, [pc, #288]	; (21b0 <STACK_SIZE+0x1b0>)
    2090:	4798      	blx	r3
    2092:	2200      	movs	r2, #0
    2094:	4b4a      	ldr	r3, [pc, #296]	; (21c0 <STACK_SIZE+0x1c0>)
    2096:	4c4f      	ldr	r4, [pc, #316]	; (21d4 <STACK_SIZE+0x1d4>)
    2098:	47a0      	blx	r4
    209a:	4b4f      	ldr	r3, [pc, #316]	; (21d8 <STACK_SIZE+0x1d8>)
    209c:	4798      	blx	r3
    209e:	1c01      	adds	r1, r0, #0
    20a0:	4c40      	ldr	r4, [pc, #256]	; (21a4 <STACK_SIZE+0x1a4>)
    20a2:	1c30      	adds	r0, r6, #0
    20a4:	47a0      	blx	r4
    20a6:	4b40      	ldr	r3, [pc, #256]	; (21a8 <STACK_SIZE+0x1a8>)
    20a8:	4798      	blx	r3
		//printf("sumOffset/S :  %ld\r\n",sumOffset/2);
	

	
		//number of ms/tick
		float decPerPeriod=(float)sumOffsetl/(RTC_FREQ*1.0);
    20aa:	47a8      	blx	r5
    20ac:	494d      	ldr	r1, [pc, #308]	; (21e4 <STACK_SIZE+0x1e4>)
    20ae:	47a0      	blx	r4
    20b0:	1c04      	adds	r4, r0, #0
		
		if(decPerPeriod<1.0){
    20b2:	21fe      	movs	r1, #254	; 0xfe
    20b4:	0589      	lsls	r1, r1, #22
    20b6:	4b4c      	ldr	r3, [pc, #304]	; (21e8 <STACK_SIZE+0x1e8>)
    20b8:	4798      	blx	r3
    20ba:	2800      	cmp	r0, #0
    20bc:	d00a      	beq.n	20d4 <STACK_SIZE+0xd4>
			Fafter=Fnow/(double)(1-decPerPeriod);
    20be:	20fe      	movs	r0, #254	; 0xfe
    20c0:	0580      	lsls	r0, r0, #22
    20c2:	1c21      	adds	r1, r4, #0
    20c4:	4b3c      	ldr	r3, [pc, #240]	; (21b8 <STACK_SIZE+0x1b8>)
    20c6:	4798      	blx	r3
    20c8:	1c01      	adds	r1, r0, #0
    20ca:	9804      	ldr	r0, [sp, #16]
    20cc:	4b35      	ldr	r3, [pc, #212]	; (21a4 <STACK_SIZE+0x1a4>)
    20ce:	4798      	blx	r3
    20d0:	1c05      	adds	r5, r0, #0
    20d2:	e009      	b.n	20e8 <STACK_SIZE+0xe8>
		}
		else{
			Fafter=Fnow/(double)(1+decPerPeriod);
    20d4:	1c20      	adds	r0, r4, #0
    20d6:	21fe      	movs	r1, #254	; 0xfe
    20d8:	0589      	lsls	r1, r1, #22
    20da:	4b44      	ldr	r3, [pc, #272]	; (21ec <STACK_SIZE+0x1ec>)
    20dc:	4798      	blx	r3
    20de:	1c01      	adds	r1, r0, #0
    20e0:	9804      	ldr	r0, [sp, #16]
    20e2:	4b30      	ldr	r3, [pc, #192]	; (21a4 <STACK_SIZE+0x1a4>)
    20e4:	4798      	blx	r3
    20e6:	1c05      	adds	r5, r0, #0
		}
		double dcount_set_period=32000/Fafter;
    20e8:	483e      	ldr	r0, [pc, #248]	; (21e4 <STACK_SIZE+0x1e4>)
    20ea:	1c29      	adds	r1, r5, #0
    20ec:	4b2d      	ldr	r3, [pc, #180]	; (21a4 <STACK_SIZE+0x1a4>)
    20ee:	4798      	blx	r3
    20f0:	1c06      	adds	r6, r0, #0
		unsigned int count;
		count=(int)dcount_set_period;
    20f2:	4b2d      	ldr	r3, [pc, #180]	; (21a8 <STACK_SIZE+0x1a8>)
    20f4:	4798      	blx	r3
    20f6:	1c04      	adds	r4, r0, #0
			Fafter=Fnow/(double)(1-decPerPeriod);
		}
		else{
			Fafter=Fnow/(double)(1+decPerPeriod);
		}
		double dcount_set_period=32000/Fafter;
    20f8:	1c30      	adds	r0, r6, #0
    20fa:	4b30      	ldr	r3, [pc, #192]	; (21bc <STACK_SIZE+0x1bc>)
    20fc:	4798      	blx	r3
    20fe:	1c06      	adds	r6, r0, #0
    2100:	1c0f      	adds	r7, r1, #0
		unsigned int count;
		count=(int)dcount_set_period;
		if((dcount_set_period-count)>0.5){
    2102:	1c20      	adds	r0, r4, #0
    2104:	4b2a      	ldr	r3, [pc, #168]	; (21b0 <STACK_SIZE+0x1b0>)
    2106:	4798      	blx	r3
    2108:	1c02      	adds	r2, r0, #0
    210a:	1c0b      	adds	r3, r1, #0
    210c:	1c30      	adds	r0, r6, #0
    210e:	1c39      	adds	r1, r7, #0
    2110:	4e37      	ldr	r6, [pc, #220]	; (21f0 <STACK_SIZE+0x1f0>)
    2112:	47b0      	blx	r6
    2114:	2200      	movs	r2, #0
    2116:	4b37      	ldr	r3, [pc, #220]	; (21f4 <STACK_SIZE+0x1f4>)
    2118:	4e37      	ldr	r6, [pc, #220]	; (21f8 <STACK_SIZE+0x1f8>)
    211a:	47b0      	blx	r6
			count++;
    211c:	1e43      	subs	r3, r0, #1
    211e:	4198      	sbcs	r0, r3
    2120:	1824      	adds	r4, r4, r0
    2122:	23fa      	movs	r3, #250	; 0xfa
    2124:	01db      	lsls	r3, r3, #7
    2126:	429c      	cmp	r4, r3
    2128:	d900      	bls.n	212c <STACK_SIZE+0x12c>
    212a:	1c1c      	adds	r4, r3, #0
		}
		if(count>RTC_FREQ){//never <1Hz of frequency
			count=RTC_FREQ;
		
		}
		if(count_set_period!=count){
    212c:	4b28      	ldr	r3, [pc, #160]	; (21d0 <STACK_SIZE+0x1d0>)
    212e:	681b      	ldr	r3, [r3, #0]
    2130:	42a3      	cmp	r3, r4
    2132:	d028      	beq.n	2186 <STACK_SIZE+0x186>
			count_set_period=count;
    2134:	4e26      	ldr	r6, [pc, #152]	; (21d0 <STACK_SIZE+0x1d0>)
    2136:	6034      	str	r4, [r6, #0]
			resetSofftwareCorrection();
    2138:	4b30      	ldr	r3, [pc, #192]	; (21fc <STACK_SIZE+0x1fc>)
    213a:	4798      	blx	r3
			valueCor=0;
    213c:	2300      	movs	r3, #0
    213e:	4a30      	ldr	r2, [pc, #192]	; (2200 <STACK_SIZE+0x200>)
    2140:	6013      	str	r3, [r2, #0]
			timeProt.correction.indiceFull=0;
    2142:	4a14      	ldr	r2, [pc, #80]	; (2194 <STACK_SIZE+0x194>)
    2144:	2122      	movs	r1, #34	; 0x22
    2146:	31ff      	adds	r1, #255	; 0xff
    2148:	5453      	strb	r3, [r2, r1]
			timeProt.correction.indiceMoySoftCor=0;
    214a:	3901      	subs	r1, #1
    214c:	5453      	strb	r3, [r2, r1]
			//printf("count : %u",(unsigned int)count);
			//rtc_count_set_compare(&rtc_instance,VALUE_TIMER,RTC_COUNT_COMPARE_0 );
		//	rtc_count_set_period(&rtc_instance,count_set_period); //MOMO
			RTC->MODE0.COMP[0].reg = count_set_period;
    214e:	6832      	ldr	r2, [r6, #0]
    2150:	4b2c      	ldr	r3, [pc, #176]	; (2204 <STACK_SIZE+0x204>)
    2152:	619a      	str	r2, [r3, #24]
			unsigned int Fuse=(RTC_FREQ/count_set_period);
    2154:	6837      	ldr	r7, [r6, #0]
			unsigned int Fbest=(int)Fafter;
		
			sprintf(messageHMICor,"		Fbest: %u Hz, Fuse= %u Hz count=%d",(unsigned int)Fbest,(unsigned int)Fuse,count);
    2156:	4e2c      	ldr	r6, [pc, #176]	; (2208 <STACK_SIZE+0x208>)
			//printf("count : %u",(unsigned int)count);
			//rtc_count_set_compare(&rtc_instance,VALUE_TIMER,RTC_COUNT_COMPARE_0 );
		//	rtc_count_set_period(&rtc_instance,count_set_period); //MOMO
			RTC->MODE0.COMP[0].reg = count_set_period;
			unsigned int Fuse=(RTC_FREQ/count_set_period);
			unsigned int Fbest=(int)Fafter;
    2158:	1c28      	adds	r0, r5, #0
    215a:	4b13      	ldr	r3, [pc, #76]	; (21a8 <STACK_SIZE+0x1a8>)
    215c:	4798      	blx	r3
    215e:	1c05      	adds	r5, r0, #0
			timeProt.correction.indiceMoySoftCor=0;
			//printf("count : %u",(unsigned int)count);
			//rtc_count_set_compare(&rtc_instance,VALUE_TIMER,RTC_COUNT_COMPARE_0 );
		//	rtc_count_set_period(&rtc_instance,count_set_period); //MOMO
			RTC->MODE0.COMP[0].reg = count_set_period;
			unsigned int Fuse=(RTC_FREQ/count_set_period);
    2160:	20fa      	movs	r0, #250	; 0xfa
    2162:	01c0      	lsls	r0, r0, #7
    2164:	1c39      	adds	r1, r7, #0
    2166:	4b11      	ldr	r3, [pc, #68]	; (21ac <STACK_SIZE+0x1ac>)
    2168:	4798      	blx	r3
    216a:	1c03      	adds	r3, r0, #0
			unsigned int Fbest=(int)Fafter;
		
			sprintf(messageHMICor,"		Fbest: %u Hz, Fuse= %u Hz count=%d",(unsigned int)Fbest,(unsigned int)Fuse,count);
    216c:	9400      	str	r4, [sp, #0]
    216e:	1c30      	adds	r0, r6, #0
    2170:	4926      	ldr	r1, [pc, #152]	; (220c <STACK_SIZE+0x20c>)
    2172:	1c2a      	adds	r2, r5, #0
    2174:	4c26      	ldr	r4, [pc, #152]	; (2210 <STACK_SIZE+0x210>)
    2176:	47a0      	blx	r4
			sendHMI(messageHMICor);
    2178:	1c30      	adds	r0, r6, #0
    217a:	4c08      	ldr	r4, [pc, #32]	; (219c <STACK_SIZE+0x19c>)
    217c:	47a0      	blx	r4
			sendHMI("	end correction");
    217e:	4825      	ldr	r0, [pc, #148]	; (2214 <STACK_SIZE+0x214>)
    2180:	47a0      	blx	r4
			return true;
    2182:	2001      	movs	r0, #1
    2184:	e003      	b.n	218e <STACK_SIZE+0x18e>
			
		}
		else{
	

			sendHMI("	end correction");
    2186:	4823      	ldr	r0, [pc, #140]	; (2214 <STACK_SIZE+0x214>)
    2188:	4b04      	ldr	r3, [pc, #16]	; (219c <STACK_SIZE+0x19c>)
    218a:	4798      	blx	r3
			return false;
    218c:	2000      	movs	r0, #0
		}
		
	}
	return false;	
}
    218e:	b00b      	add	sp, #44	; 0x2c
    2190:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2192:	46c0      	nop			; (mov r8, r8)
    2194:	20003f5c 	.word	0x20003f5c
    2198:	0000d828 	.word	0x0000d828
    219c:	00002881 	.word	0x00002881
    21a0:	00006361 	.word	0x00006361
    21a4:	0000594d 	.word	0x0000594d
    21a8:	00006291 	.word	0x00006291
    21ac:	000051d1 	.word	0x000051d1
    21b0:	00007fc9 	.word	0x00007fc9
    21b4:	000062d1 	.word	0x000062d1
    21b8:	00005f95 	.word	0x00005f95
    21bc:	0000802d 	.word	0x0000802d
    21c0:	40df4000 	.word	0x40df4000
    21c4:	000072bd 	.word	0x000072bd
    21c8:	000063f1 	.word	0x000063f1
    21cc:	00005619 	.word	0x00005619
    21d0:	200000c8 	.word	0x200000c8
    21d4:	00006a41 	.word	0x00006a41
    21d8:	000080d5 	.word	0x000080d5
    21dc:	20003e88 	.word	0x20003e88
    21e0:	000052f1 	.word	0x000052f1
    21e4:	46fa0000 	.word	0x46fa0000
    21e8:	00005575 	.word	0x00005575
    21ec:	00005655 	.word	0x00005655
    21f0:	000077f1 	.word	0x000077f1
    21f4:	3fe00000 	.word	0x3fe00000
    21f8:	00005529 	.word	0x00005529
    21fc:	00001bf1 	.word	0x00001bf1
    2200:	20003d44 	.word	0x20003d44
    2204:	40001400 	.word	0x40001400
    2208:	20003e94 	.word	0x20003e94
    220c:	0000d840 	.word	0x0000d840
    2210:	00009fe5 	.word	0x00009fe5
    2214:	0000d868 	.word	0x0000d868

00002218 <_Z10correctionv>:
#endif
/************************************************************************/
/* FUNCTION                                                             */
/************************************************************************/

void correction(void){
    2218:	b508      	push	{r3, lr}
	

	if(xTaskGetTickCount()-saveCorrection>(TIME_CORRECTION/portTICK_RATE_MS)){
    221a:	4b0c      	ldr	r3, [pc, #48]	; (224c <_Z10correctionv+0x34>)
    221c:	4798      	blx	r3
    221e:	4b0c      	ldr	r3, [pc, #48]	; (2250 <_Z10correctionv+0x38>)
    2220:	681b      	ldr	r3, [r3, #0]
    2222:	1ac0      	subs	r0, r0, r3
    2224:	23fa      	movs	r3, #250	; 0xfa
    2226:	00db      	lsls	r3, r3, #3
    2228:	4298      	cmp	r0, r3
    222a:	d90e      	bls.n	224a <_Z10correctionv+0x32>
			
			if(timeProt.correction.nbCorrection>2){
    222c:	23a4      	movs	r3, #164	; 0xa4
    222e:	4a09      	ldr	r2, [pc, #36]	; (2254 <_Z10correctionv+0x3c>)
    2230:	58d3      	ldr	r3, [r2, r3]
    2232:	2b02      	cmp	r3, #2
    2234:	d909      	bls.n	224a <_Z10correctionv+0x32>
				saveCorrection=xTaskGetTickCount();
    2236:	4b05      	ldr	r3, [pc, #20]	; (224c <_Z10correctionv+0x34>)
    2238:	4798      	blx	r3
    223a:	4b05      	ldr	r3, [pc, #20]	; (2250 <_Z10correctionv+0x38>)
    223c:	6018      	str	r0, [r3, #0]
				if(!hardwareCorrection()){
    223e:	4b06      	ldr	r3, [pc, #24]	; (2258 <_Z10correctionv+0x40>)
    2240:	4798      	blx	r3
    2242:	2800      	cmp	r0, #0
    2244:	d101      	bne.n	224a <_Z10correctionv+0x32>
					sofwareCorrection();
    2246:	4b05      	ldr	r3, [pc, #20]	; (225c <_Z10correctionv+0x44>)
    2248:	4798      	blx	r3
			}
			
		
	}
	
}
    224a:	bd08      	pop	{r3, pc}
    224c:	00000965 	.word	0x00000965
    2250:	20003db8 	.word	0x20003db8
    2254:	20003f5c 	.word	0x20003f5c
    2258:	00001fc1 	.word	0x00001fc1
    225c:	00001c15 	.word	0x00001c15

00002260 <_Z11updateClockv>:
			}
			else{
				pc.printf("-%lu s,%u\r\n",clock.second,(unsigned int)clock.halfmillis);
			}
}
void updateClock(void){
    2260:	b5f0      	push	{r4, r5, r6, r7, lr}
    2262:	4647      	mov	r7, r8
    2264:	b480      	push	{r7}
    2266:	b090      	sub	sp, #64	; 0x40
		Clock diff;
		if(timeProt.correction.previousSignOffset==timeProt.offset.sign){
    2268:	4a5f      	ldr	r2, [pc, #380]	; (23e8 <_Z11updateClockv+0x188>)
    226a:	23a0      	movs	r3, #160	; 0xa0
    226c:	5cd3      	ldrb	r3, [r2, r3]
    226e:	b2db      	uxtb	r3, r3
    2270:	2191      	movs	r1, #145	; 0x91
    2272:	0049      	lsls	r1, r1, #1
    2274:	5c52      	ldrb	r2, [r2, r1]
    2276:	429a      	cmp	r2, r3
    2278:	d15a      	bne.n	2330 <_Z11updateClockv+0xd0>
			timeProt.correction.previousSignOffset=timeProt.offset.sign;
    227a:	4c5b      	ldr	r4, [pc, #364]	; (23e8 <_Z11updateClockv+0x188>)
    227c:	23a0      	movs	r3, #160	; 0xa0
    227e:	5ce2      	ldrb	r2, [r4, r3]
    2280:	1c0b      	adds	r3, r1, #0
    2282:	5462      	strb	r2, [r4, r1]
			timeProt.correction.previoustimeOffset.second=timeProt.correction.currentTimeOffsetSync.second;
    2284:	3b6a      	subs	r3, #106	; 0x6a
    2286:	58e3      	ldr	r3, [r4, r3]
    2288:	25ac      	movs	r5, #172	; 0xac
    228a:	5163      	str	r3, [r4, r5]
			timeProt.correction.previoustimeOffset.halfmillis=timeProt.correction.currentTimeOffsetSync.halfmillis;
    228c:	23bc      	movs	r3, #188	; 0xbc
    228e:	58e2      	ldr	r2, [r4, r3]
    2290:	3b0c      	subs	r3, #12
    2292:	50e2      	str	r2, [r4, r3]
			readClock(&timeProt.correction.currentTimeOffsetSync);
    2294:	1c20      	adds	r0, r4, #0
    2296:	30b8      	adds	r0, #184	; 0xb8
    2298:	4b54      	ldr	r3, [pc, #336]	; (23ec <_Z11updateClockv+0x18c>)
    229a:	4798      	blx	r3
			if(timeProt.correction.previoustimeOffset.second!=0){
    229c:	5963      	ldr	r3, [r4, r5]
    229e:	2b00      	cmp	r3, #0
    22a0:	d048      	beq.n	2334 <_Z11updateClockv+0xd4>
				if(sup(timeProt.correction.currentTimeOffsetSync,timeProt.correction.previoustimeOffset)){
    22a2:	4a51      	ldr	r2, [pc, #324]	; (23e8 <_Z11updateClockv+0x188>)
    22a4:	1c13      	adds	r3, r2, #0
    22a6:	33b0      	adds	r3, #176	; 0xb0
    22a8:	4669      	mov	r1, sp
    22aa:	cb11      	ldmia	r3!, {r0, r4}
    22ac:	c111      	stmia	r1!, {r0, r4}
    22ae:	23ac      	movs	r3, #172	; 0xac
    22b0:	58d3      	ldr	r3, [r2, r3]
    22b2:	21b8      	movs	r1, #184	; 0xb8
    22b4:	5850      	ldr	r0, [r2, r1]
    22b6:	32b8      	adds	r2, #184	; 0xb8
    22b8:	6851      	ldr	r1, [r2, #4]
    22ba:	6892      	ldr	r2, [r2, #8]
    22bc:	4c4c      	ldr	r4, [pc, #304]	; (23f0 <_Z11updateClockv+0x190>)
    22be:	47a0      	blx	r4
    22c0:	2800      	cmp	r0, #0
    22c2:	d032      	beq.n	232a <_Z11updateClockv+0xca>
												
					diff=subClock(timeProt.correction.currentTimeOffsetSync,timeProt.correction.previoustimeOffset);
    22c4:	ae0a      	add	r6, sp, #40	; 0x28
    22c6:	4d48      	ldr	r5, [pc, #288]	; (23e8 <_Z11updateClockv+0x188>)
    22c8:	1c2b      	adds	r3, r5, #0
    22ca:	33ac      	adds	r3, #172	; 0xac
    22cc:	466a      	mov	r2, sp
    22ce:	cb13      	ldmia	r3!, {r0, r1, r4}
    22d0:	c213      	stmia	r2!, {r0, r1, r4}
    22d2:	1c30      	adds	r0, r6, #0
    22d4:	23b8      	movs	r3, #184	; 0xb8
    22d6:	58e9      	ldr	r1, [r5, r3]
    22d8:	1c2b      	adds	r3, r5, #0
    22da:	33b8      	adds	r3, #184	; 0xb8
    22dc:	685a      	ldr	r2, [r3, #4]
    22de:	689b      	ldr	r3, [r3, #8]
    22e0:	4c44      	ldr	r4, [pc, #272]	; (23f4 <_Z11updateClockv+0x194>)
    22e2:	47a0      	blx	r4
					//printf("diff: ");
					//printfClock(diff);
					timeProt.correction.sumTime=sumClock(timeProt.correction.sumTime,diff);
    22e4:	ac06      	add	r4, sp, #24
    22e6:	466b      	mov	r3, sp
    22e8:	ce07      	ldmia	r6!, {r0, r1, r2}
    22ea:	c307      	stmia	r3!, {r0, r1, r2}
    22ec:	1c20      	adds	r0, r4, #0
    22ee:	23c4      	movs	r3, #196	; 0xc4
    22f0:	58e9      	ldr	r1, [r5, r3]
    22f2:	1c2e      	adds	r6, r5, #0
    22f4:	36c4      	adds	r6, #196	; 0xc4
    22f6:	6872      	ldr	r2, [r6, #4]
    22f8:	68b3      	ldr	r3, [r6, #8]
    22fa:	4f3f      	ldr	r7, [pc, #252]	; (23f8 <_Z11updateClockv+0x198>)
    22fc:	46b8      	mov	r8, r7
    22fe:	47b8      	blx	r7
    2300:	1c23      	adds	r3, r4, #0
    2302:	cb07      	ldmia	r3!, {r0, r1, r2}
    2304:	c607      	stmia	r6!, {r0, r1, r2}
					sumOffset=sumClock(sumOffset,timeProt.offset);
    2306:	4e3d      	ldr	r6, [pc, #244]	; (23fc <_Z11updateClockv+0x19c>)
    2308:	1c2b      	adds	r3, r5, #0
    230a:	3398      	adds	r3, #152	; 0x98
    230c:	466a      	mov	r2, sp
    230e:	cb83      	ldmia	r3!, {r0, r1, r7}
    2310:	c283      	stmia	r2!, {r0, r1, r7}
    2312:	1c20      	adds	r0, r4, #0
    2314:	6831      	ldr	r1, [r6, #0]
    2316:	6872      	ldr	r2, [r6, #4]
    2318:	68b3      	ldr	r3, [r6, #8]
    231a:	47c0      	blx	r8
    231c:	cc0e      	ldmia	r4!, {r1, r2, r3}
    231e:	c60e      	stmia	r6!, {r1, r2, r3}
					printf("sumClock: ");
					printfClock(timeProt.correction.sumTime);
					
					printf("nb corrr  : %d",timeProt.correction.nbCorrection);
					*/
					timeProt.correction.nbCorrection++;
    2320:	22a4      	movs	r2, #164	; 0xa4
    2322:	58ab      	ldr	r3, [r5, r2]
    2324:	3301      	adds	r3, #1
    2326:	50ab      	str	r3, [r5, r2]
    2328:	e004      	b.n	2334 <_Z11updateClockv+0xd4>
				}
				else{
					resetSofftwareCorrection();
    232a:	4b35      	ldr	r3, [pc, #212]	; (2400 <_Z11updateClockv+0x1a0>)
    232c:	4798      	blx	r3
    232e:	e001      	b.n	2334 <_Z11updateClockv+0xd4>
				}
			}
		}
		else{
			resetSofftwareCorrection();
    2330:	4b33      	ldr	r3, [pc, #204]	; (2400 <_Z11updateClockv+0x1a0>)
    2332:	4798      	blx	r3
		}
		timeProt.correction.previousSignOffset=timeProt.offset.sign;
    2334:	4e2c      	ldr	r6, [pc, #176]	; (23e8 <_Z11updateClockv+0x188>)
    2336:	23a0      	movs	r3, #160	; 0xa0
    2338:	4698      	mov	r8, r3
    233a:	5cf2      	ldrb	r2, [r6, r3]
    233c:	3382      	adds	r3, #130	; 0x82
    233e:	54f2      	strb	r2, [r6, r3]
		Clock timeCopy;
		readClock(&timeCopy);
    2340:	ad0d      	add	r5, sp, #52	; 0x34
    2342:	1c28      	adds	r0, r5, #0
    2344:	4b29      	ldr	r3, [pc, #164]	; (23ec <_Z11updateClockv+0x18c>)
    2346:	4798      	blx	r3


		
		timeCopy=sumClock(timeCopy,timeProt.offset);//add offset
    2348:	ac06      	add	r4, sp, #24
    234a:	1c33      	adds	r3, r6, #0
    234c:	3398      	adds	r3, #152	; 0x98
    234e:	466a      	mov	r2, sp
    2350:	cb83      	ldmia	r3!, {r0, r1, r7}
    2352:	c283      	stmia	r2!, {r0, r1, r7}
    2354:	1c20      	adds	r0, r4, #0
    2356:	990d      	ldr	r1, [sp, #52]	; 0x34
    2358:	686a      	ldr	r2, [r5, #4]
    235a:	68ab      	ldr	r3, [r5, #8]
    235c:	4f26      	ldr	r7, [pc, #152]	; (23f8 <_Z11updateClockv+0x198>)
    235e:	47b8      	blx	r7
    2360:	1c23      	adds	r3, r4, #0
    2362:	cb07      	ldmia	r3!, {r0, r1, r2}
    2364:	c507      	stmia	r5!, {r0, r1, r2}
		writeClock(timeCopy);
    2366:	980d      	ldr	r0, [sp, #52]	; 0x34
    2368:	6861      	ldr	r1, [r4, #4]
    236a:	68a2      	ldr	r2, [r4, #8]
    236c:	4b25      	ldr	r3, [pc, #148]	; (2404 <_Z11updateClockv+0x1a4>)
    236e:	4798      	blx	r3
		
		if(timeProt.offset.sign==true){
    2370:	4643      	mov	r3, r8
    2372:	5cf3      	ldrb	r3, [r6, r3]
    2374:	2b00      	cmp	r3, #0
    2376:	d018      	beq.n	23aa <_Z11updateClockv+0x14a>
			sprintf(messageHMIOffset,"		update clock offset: +%lus,%ld[+%lus,%lu ms,~%lu us]	t: %lu,%lu",timeProt.offset.second,(long unsigned int)timeProt.offset.halfmillis,timeProt.offset.second,timeProt.offset.halfmillis/32,(timeProt.offset.halfmillis%32)*31,timeCopy.second,timeCopy.halfmillis);
    2378:	491b      	ldr	r1, [pc, #108]	; (23e8 <_Z11updateClockv+0x188>)
    237a:	2098      	movs	r0, #152	; 0x98
    237c:	580a      	ldr	r2, [r1, r0]
    237e:	249c      	movs	r4, #156	; 0x9c
    2380:	590b      	ldr	r3, [r1, r4]
    2382:	580e      	ldr	r6, [r1, r0]
    2384:	5908      	ldr	r0, [r1, r4]
    2386:	5909      	ldr	r1, [r1, r4]
    2388:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    238a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    238c:	9600      	str	r6, [sp, #0]
    238e:	0940      	lsrs	r0, r0, #5
    2390:	9001      	str	r0, [sp, #4]
    2392:	201f      	movs	r0, #31
    2394:	4001      	ands	r1, r0
    2396:	0148      	lsls	r0, r1, #5
    2398:	1a41      	subs	r1, r0, r1
    239a:	9102      	str	r1, [sp, #8]
    239c:	9503      	str	r5, [sp, #12]
    239e:	9404      	str	r4, [sp, #16]
    23a0:	4819      	ldr	r0, [pc, #100]	; (2408 <_Z11updateClockv+0x1a8>)
    23a2:	491a      	ldr	r1, [pc, #104]	; (240c <_Z11updateClockv+0x1ac>)
    23a4:	4c1a      	ldr	r4, [pc, #104]	; (2410 <_Z11updateClockv+0x1b0>)
    23a6:	47a0      	blx	r4
    23a8:	e017      	b.n	23da <_Z11updateClockv+0x17a>
		}
		else{
			sprintf(messageHMIOffset,"		update clock offset: -%lus,%ld[-%lus,%lums,~%lu us]	t: %lu,%lu",timeProt.offset.second,(long unsigned int)timeProt.offset.halfmillis,timeProt.offset.second,timeProt.offset.halfmillis/32,(timeProt.offset.halfmillis%32)*31,timeCopy.second,timeCopy.halfmillis);
    23aa:	490f      	ldr	r1, [pc, #60]	; (23e8 <_Z11updateClockv+0x188>)
    23ac:	2098      	movs	r0, #152	; 0x98
    23ae:	580a      	ldr	r2, [r1, r0]
    23b0:	249c      	movs	r4, #156	; 0x9c
    23b2:	590b      	ldr	r3, [r1, r4]
    23b4:	580e      	ldr	r6, [r1, r0]
    23b6:	5908      	ldr	r0, [r1, r4]
    23b8:	5909      	ldr	r1, [r1, r4]
    23ba:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    23bc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    23be:	9600      	str	r6, [sp, #0]
    23c0:	0940      	lsrs	r0, r0, #5
    23c2:	9001      	str	r0, [sp, #4]
    23c4:	201f      	movs	r0, #31
    23c6:	4001      	ands	r1, r0
    23c8:	0148      	lsls	r0, r1, #5
    23ca:	1a41      	subs	r1, r0, r1
    23cc:	9102      	str	r1, [sp, #8]
    23ce:	9503      	str	r5, [sp, #12]
    23d0:	9404      	str	r4, [sp, #16]
    23d2:	480d      	ldr	r0, [pc, #52]	; (2408 <_Z11updateClockv+0x1a8>)
    23d4:	490f      	ldr	r1, [pc, #60]	; (2414 <_Z11updateClockv+0x1b4>)
    23d6:	4c0e      	ldr	r4, [pc, #56]	; (2410 <_Z11updateClockv+0x1b0>)
    23d8:	47a0      	blx	r4
		}
		sendHMI(messageHMIOffset);
    23da:	480b      	ldr	r0, [pc, #44]	; (2408 <_Z11updateClockv+0x1a8>)
    23dc:	4b0e      	ldr	r3, [pc, #56]	; (2418 <_Z11updateClockv+0x1b8>)
    23de:	4798      	blx	r3
}
    23e0:	b010      	add	sp, #64	; 0x40
    23e2:	bc04      	pop	{r2}
    23e4:	4690      	mov	r8, r2
    23e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    23e8:	20003f5c 	.word	0x20003f5c
    23ec:	00001391 	.word	0x00001391
    23f0:	0000109d 	.word	0x0000109d
    23f4:	0000110d 	.word	0x0000110d
    23f8:	00001211 	.word	0x00001211
    23fc:	20003e88 	.word	0x20003e88
    2400:	00001bf1 	.word	0x00001bf1
    2404:	00001405 	.word	0x00001405
    2408:	20003dbc 	.word	0x20003dbc
    240c:	0000d890 	.word	0x0000d890
    2410:	00009fe5 	.word	0x00009fe5
    2414:	0000d8d4 	.word	0x0000d8d4
    2418:	00002881 	.word	0x00002881

0000241c <_Z11calculCRCID8enumTypehPKhh>:

}
uint8_t calculCRC(const Type type,const uint8_t length,const uint8_t* data){
	return calculCRCID(type,length,data,IDDEVICE);
}
uint8_t calculCRCID(const Type type,const uint8_t length,const uint8_t* data,const uint8_t id){
    241c:	18cb      	adds	r3, r1, r3
	uint8_t crc;
	uint8_t i;
	crc=type+length+id;
    241e:	18c0      	adds	r0, r0, r3
    2420:	b2c0      	uxtb	r0, r0
	for(i=0;i<length;i++){
    2422:	2900      	cmp	r1, #0
    2424:	d00a      	beq.n	243c <_Z11calculCRCID8enumTypehPKhh+0x20>
    2426:	1c13      	adds	r3, r2, #0
    2428:	3901      	subs	r1, #1
    242a:	b2c9      	uxtb	r1, r1
    242c:	3101      	adds	r1, #1
    242e:	1852      	adds	r2, r2, r1
		crc=crc+data[i];
    2430:	7819      	ldrb	r1, [r3, #0]
    2432:	1840      	adds	r0, r0, r1
    2434:	b2c0      	uxtb	r0, r0
    2436:	3301      	adds	r3, #1
}
uint8_t calculCRCID(const Type type,const uint8_t length,const uint8_t* data,const uint8_t id){
	uint8_t crc;
	uint8_t i;
	crc=type+length+id;
	for(i=0;i<length;i++){
    2438:	4293      	cmp	r3, r2
    243a:	d1f9      	bne.n	2430 <_Z11calculCRCID8enumTypehPKhh+0x14>
		crc=crc+data[i];
	}
	
	return crc;
    243c:	4770      	bx	lr
    243e:	46c0      	nop			; (mov r8, r8)

00002440 <_Z8receiverv>:
		else{
			sprintf(messageHMIOffset,"		update clock offset: -%lus,%ld[-%lus,%lums,~%lu us]	t: %lu,%lu",timeProt.offset.second,(long unsigned int)timeProt.offset.halfmillis,timeProt.offset.second,timeProt.offset.halfmillis/32,(timeProt.offset.halfmillis%32)*31,timeCopy.second,timeCopy.halfmillis);
		}
		sendHMI(messageHMIOffset);
}
void receiver(){
    2440:	b570      	push	{r4, r5, r6, lr}
			Clock timeMaster={0,0,true};	
			uint8_t i=0;
			#endif
			Data data;
		
			if(networkAvailable()){
    2442:	4b1b      	ldr	r3, [pc, #108]	; (24b0 <_Z8receiverv+0x70>)
    2444:	4798      	blx	r3
    2446:	2800      	cmp	r0, #0
    2448:	d030      	beq.n	24ac <_Z8receiverv+0x6c>
				vTaskDelay(100);
    244a:	2064      	movs	r0, #100	; 0x64
    244c:	4b19      	ldr	r3, [pc, #100]	; (24b4 <_Z8receiverv+0x74>)
    244e:	4798      	blx	r3
				if(networkRead()==HEADER){
    2450:	4b19      	ldr	r3, [pc, #100]	; (24b8 <_Z8receiverv+0x78>)
    2452:	4798      	blx	r3
    2454:	2855      	cmp	r0, #85	; 0x55
    2456:	d129      	bne.n	24ac <_Z8receiverv+0x6c>
					data.id=networkRead();
    2458:	4d17      	ldr	r5, [pc, #92]	; (24b8 <_Z8receiverv+0x78>)
    245a:	47a8      	blx	r5
    245c:	1c04      	adds	r4, r0, #0
					data.type=(Type)networkRead();
    245e:	47a8      	blx	r5
							switch (data.type){
    2460:	2802      	cmp	r0, #2
    2462:	d11e      	bne.n	24a2 <_Z8receiverv+0x62>
									
									break;
								#else
									case DELAYREQUEST:
									
										data.crc=networkRead();
    2464:	4b14      	ldr	r3, [pc, #80]	; (24b8 <_Z8receiverv+0x78>)
    2466:	4798      	blx	r3
    2468:	1c05      	adds	r5, r0, #0
										//printf("Type:%d , id:%d, crc:%d.",data.type, data.id,data.crc );
										if(calculCRCID(data.type,0,NULL,data.id)!=data.crc){
    246a:	2002      	movs	r0, #2
    246c:	2100      	movs	r1, #0
    246e:	2200      	movs	r2, #0
    2470:	1c23      	adds	r3, r4, #0
    2472:	4e12      	ldr	r6, [pc, #72]	; (24bc <_Z8receiverv+0x7c>)
    2474:	47b0      	blx	r6
    2476:	4285      	cmp	r5, r0
    2478:	d00f      	beq.n	249a <_Z8receiverv+0x5a>
											taskENTER_CRITICAL();
    247a:	4b11      	ldr	r3, [pc, #68]	; (24c0 <_Z8receiverv+0x80>)
    247c:	4798      	blx	r3
											timeProt.saveTime[data.id].second=0;
    247e:	0063      	lsls	r3, r4, #1
    2480:	191c      	adds	r4, r3, r4
    2482:	00a4      	lsls	r4, r4, #2
    2484:	2200      	movs	r2, #0
    2486:	4b0f      	ldr	r3, [pc, #60]	; (24c4 <_Z8receiverv+0x84>)
    2488:	50e2      	str	r2, [r4, r3]
											taskEXIT_CRITICAL();
    248a:	4b0f      	ldr	r3, [pc, #60]	; (24c8 <_Z8receiverv+0x88>)
    248c:	4798      	blx	r3
											networkFlush();
    248e:	4b0f      	ldr	r3, [pc, #60]	; (24cc <_Z8receiverv+0x8c>)
    2490:	4798      	blx	r3
											sendHMI("	Erreur crc");
    2492:	480f      	ldr	r0, [pc, #60]	; (24d0 <_Z8receiverv+0x90>)
    2494:	4b0f      	ldr	r3, [pc, #60]	; (24d4 <_Z8receiverv+0x94>)
    2496:	4798      	blx	r3
    2498:	e008      	b.n	24ac <_Z8receiverv+0x6c>
											return;
										}
										else{
											sendHMI("	delay request receive");
    249a:	480f      	ldr	r0, [pc, #60]	; (24d8 <_Z8receiverv+0x98>)
    249c:	4b0d      	ldr	r3, [pc, #52]	; (24d4 <_Z8receiverv+0x94>)
    249e:	4798      	blx	r3
										}
										
										
									break;
    24a0:	e004      	b.n	24ac <_Z8receiverv+0x6c>
								#endif
								default:
									sendHMI("	Erreur type unknow");
    24a2:	480e      	ldr	r0, [pc, #56]	; (24dc <_Z8receiverv+0x9c>)
    24a4:	4b0b      	ldr	r3, [pc, #44]	; (24d4 <_Z8receiverv+0x94>)
    24a6:	4798      	blx	r3
									networkFlush();	
    24a8:	4b08      	ldr	r3, [pc, #32]	; (24cc <_Z8receiverv+0x8c>)
    24aa:	4798      	blx	r3
									
							}		
				}
				
			}		
}
    24ac:	bd70      	pop	{r4, r5, r6, pc}
    24ae:	46c0      	nop			; (mov r8, r8)
    24b0:	00001811 	.word	0x00001811
    24b4:	00000b99 	.word	0x00000b99
    24b8:	00001855 	.word	0x00001855
    24bc:	0000241d 	.word	0x0000241d
    24c0:	00000f35 	.word	0x00000f35
    24c4:	20003f5c 	.word	0x20003f5c
    24c8:	00000f4d 	.word	0x00000f4d
    24cc:	00001829 	.word	0x00001829
    24d0:	0000d918 	.word	0x0000d918
    24d4:	00002881 	.word	0x00002881
    24d8:	0000d924 	.word	0x0000d924
    24dc:	0000d93c 	.word	0x0000d93c

000024e0 <_Z9calculCRC8enumTypehPKh>:
		send[3+i+j]=calculCRC(type,length,data);

		networkTx(send,length+4+j);

}
uint8_t calculCRC(const Type type,const uint8_t length,const uint8_t* data){
    24e0:	b510      	push	{r4, lr}
	return calculCRCID(type,length,data,IDDEVICE);
    24e2:	2300      	movs	r3, #0
    24e4:	4c01      	ldr	r4, [pc, #4]	; (24ec <_Z9calculCRC8enumTypehPKh+0xc>)
    24e6:	47a0      	blx	r4
}
    24e8:	bd10      	pop	{r4, pc}
    24ea:	46c0      	nop			; (mov r8, r8)
    24ec:	0000241d 	.word	0x0000241d

000024f0 <_Z4send8enumTypehPKh>:

	
	sendHMI("	delay request send");
}
#endif
void send(const Type type,const uint8_t length,const uint8_t* data){
    24f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    24f2:	4647      	mov	r7, r8
    24f4:	b480      	push	{r7}
    24f6:	af00      	add	r7, sp, #0
    24f8:	1c0c      	adds	r4, r1, #0
		uint8_t i;
		uint8_t j=0;
		uint8_t send[length+4];//to complete
    24fa:	1c0b      	adds	r3, r1, #0
    24fc:	330b      	adds	r3, #11
    24fe:	08db      	lsrs	r3, r3, #3
    2500:	00db      	lsls	r3, r3, #3
    2502:	4669      	mov	r1, sp
    2504:	1acb      	subs	r3, r1, r3
    2506:	469d      	mov	sp, r3
    2508:	466d      	mov	r5, sp
		send[0]=HEADER;
    250a:	2355      	movs	r3, #85	; 0x55
    250c:	702b      	strb	r3, [r5, #0]
		send[1]=IDDEVICE;	
    250e:	2300      	movs	r3, #0
    2510:	706b      	strb	r3, [r5, #1]
		send[2]=type;
    2512:	70a8      	strb	r0, [r5, #2]
		if(length!=0){
    2514:	2c00      	cmp	r4, #0
    2516:	d00a      	beq.n	252e <_Z4send8enumTypehPKh+0x3e>
			send[3]=length;//length data
    2518:	70ec      	strb	r4, [r5, #3]
    251a:	18e9      	adds	r1, r5, r3
			j=1;
		}
		for(i=0;i<length;i++){
			send[3+i+j]=data[i];
    251c:	5cd6      	ldrb	r6, [r2, r3]
    251e:	710e      	strb	r6, [r1, #4]
    2520:	3301      	adds	r3, #1
		send[2]=type;
		if(length!=0){
			send[3]=length;//length data
			j=1;
		}
		for(i=0;i<length;i++){
    2522:	b2d9      	uxtb	r1, r3
    2524:	428c      	cmp	r4, r1
    2526:	d8f8      	bhi.n	251a <_Z4send8enumTypehPKh+0x2a>
    2528:	1c23      	adds	r3, r4, #0
		send[0]=HEADER;
		send[1]=IDDEVICE;	
		send[2]=type;
		if(length!=0){
			send[3]=length;//length data
			j=1;
    252a:	2601      	movs	r6, #1
    252c:	e001      	b.n	2532 <_Z4send8enumTypehPKh+0x42>
	sendHMI("	delay request send");
}
#endif
void send(const Type type,const uint8_t length,const uint8_t* data){
		uint8_t i;
		uint8_t j=0;
    252e:	2600      	movs	r6, #0
		send[2]=type;
		if(length!=0){
			send[3]=length;//length data
			j=1;
		}
		for(i=0;i<length;i++){
    2530:	2300      	movs	r3, #0
			send[3+i+j]=data[i];
		}
		send[3+i+j]=calculCRC(type,length,data);
    2532:	3303      	adds	r3, #3
    2534:	4698      	mov	r8, r3
    2536:	44b0      	add	r8, r6
    2538:	1c21      	adds	r1, r4, #0
    253a:	4b07      	ldr	r3, [pc, #28]	; (2558 <_Z4send8enumTypehPKh+0x68>)
    253c:	4798      	blx	r3
    253e:	4643      	mov	r3, r8
    2540:	54e8      	strb	r0, [r5, r3]
    2542:	3404      	adds	r4, #4

		networkTx(send,length+4+j);
    2544:	1931      	adds	r1, r6, r4
    2546:	b2c9      	uxtb	r1, r1
    2548:	1c28      	adds	r0, r5, #0
    254a:	4b04      	ldr	r3, [pc, #16]	; (255c <_Z4send8enumTypehPKh+0x6c>)
    254c:	4798      	blx	r3

}
    254e:	46bd      	mov	sp, r7
    2550:	bc04      	pop	{r2}
    2552:	4690      	mov	r8, r2
    2554:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2556:	46c0      	nop			; (mov r8, r8)
    2558:	000024e1 	.word	0x000024e1
    255c:	0000183d 	.word	0x0000183d

00002560 <_Z4syncv>:
				}
				
			}		
}
#ifdef MASTERMODE
void sync(void){
    2560:	b500      	push	{lr}
    2562:	b085      	sub	sp, #20
	uint8_t sendP[4];
	Type type=SYNC;
	Clock timeSave;
	readClock(&timeSave);
    2564:	a801      	add	r0, sp, #4
    2566:	4b0b      	ldr	r3, [pc, #44]	; (2594 <_Z4syncv+0x34>)
    2568:	4798      	blx	r3
	sendP[0]=(uint8_t)(timeSave.second&0x00FF);
    256a:	9b01      	ldr	r3, [sp, #4]
    256c:	466a      	mov	r2, sp
    256e:	7013      	strb	r3, [r2, #0]
	sendP[1]=(uint8_t)((timeSave.second>>8)&0x00FF);
    2570:	9b01      	ldr	r3, [sp, #4]
    2572:	0a1b      	lsrs	r3, r3, #8
    2574:	7053      	strb	r3, [r2, #1]
	sendP[2]=(uint8_t)(timeSave.halfmillis&0x00FF);
    2576:	9b02      	ldr	r3, [sp, #8]
    2578:	7093      	strb	r3, [r2, #2]
	sendP[3]=(uint8_t)((timeSave.halfmillis>>8)&0x00FF);
    257a:	9b02      	ldr	r3, [sp, #8]
    257c:	0a1b      	lsrs	r3, r3, #8
    257e:	70d3      	strb	r3, [r2, #3]
	send(type,4,sendP);
    2580:	2001      	movs	r0, #1
    2582:	2104      	movs	r1, #4
    2584:	4b04      	ldr	r3, [pc, #16]	; (2598 <_Z4syncv+0x38>)
    2586:	4798      	blx	r3
	sendHMI("	sync send");
    2588:	4804      	ldr	r0, [pc, #16]	; (259c <_Z4syncv+0x3c>)
    258a:	4b05      	ldr	r3, [pc, #20]	; (25a0 <_Z4syncv+0x40>)
    258c:	4798      	blx	r3
}
    258e:	b005      	add	sp, #20
    2590:	bd00      	pop	{pc}
    2592:	46c0      	nop			; (mov r8, r8)
    2594:	00001391 	.word	0x00001391
    2598:	000024f1 	.word	0x000024f1
    259c:	0000d950 	.word	0x0000d950
    25a0:	00002881 	.word	0x00002881

000025a4 <_Z13delayResponseh>:
void delayResponse(uint8_t id){
    25a4:	b530      	push	{r4, r5, lr}
    25a6:	b087      	sub	sp, #28
    25a8:	1c04      	adds	r4, r0, #0

	
	Type type=DELAYRESPONSE;
	uint8_t sendP[9];
	
	sendP[0]=id;
    25aa:	466b      	mov	r3, sp
    25ac:	7018      	strb	r0, [r3, #0]
	sendP[1]=(uint8_t)(timeProt.saveTime[id].second&0x00FF);
    25ae:	491e      	ldr	r1, [pc, #120]	; (2628 <_Z13delayResponseh+0x84>)
    25b0:	0043      	lsls	r3, r0, #1
    25b2:	181a      	adds	r2, r3, r0
    25b4:	0092      	lsls	r2, r2, #2
    25b6:	5852      	ldr	r2, [r2, r1]
    25b8:	4668      	mov	r0, sp
    25ba:	7042      	strb	r2, [r0, #1]
	sendP[2]=(uint8_t)((timeProt.saveTime[id].second>>8)&0x00FF);
    25bc:	191a      	adds	r2, r3, r4
    25be:	0092      	lsls	r2, r2, #2
    25c0:	5852      	ldr	r2, [r2, r1]
    25c2:	0a12      	lsrs	r2, r2, #8
    25c4:	7082      	strb	r2, [r0, #2]
	sendP[3]=(uint8_t)(timeProt.saveTime[id].halfmillis&0x00FF);
    25c6:	191a      	adds	r2, r3, r4
    25c8:	0092      	lsls	r2, r2, #2
    25ca:	188a      	adds	r2, r1, r2
    25cc:	6850      	ldr	r0, [r2, #4]
    25ce:	466d      	mov	r5, sp
    25d0:	70e8      	strb	r0, [r5, #3]
	sendP[4]=(uint8_t)((timeProt.saveTime[id].halfmillis>>8)&0x00FF);
    25d2:	6852      	ldr	r2, [r2, #4]
    25d4:	0a12      	lsrs	r2, r2, #8
    25d6:	712a      	strb	r2, [r5, #4]
	Clock timeSave={timeManage.second,timeManage.halfmillis,true};
    25d8:	aa03      	add	r2, sp, #12
    25da:	2001      	movs	r0, #1
    25dc:	7210      	strb	r0, [r2, #8]
    25de:	4813      	ldr	r0, [pc, #76]	; (262c <_Z13delayResponseh+0x88>)
    25e0:	6805      	ldr	r5, [r0, #0]
    25e2:	9503      	str	r5, [sp, #12]
    25e4:	6840      	ldr	r0, [r0, #4]
    25e6:	9004      	str	r0, [sp, #16]
	timeProt.saveTime[id].second=0;
    25e8:	191b      	adds	r3, r3, r4
    25ea:	009b      	lsls	r3, r3, #2
    25ec:	2000      	movs	r0, #0
    25ee:	5058      	str	r0, [r3, r1]
	sendP[5]=(uint8_t)(timeSave.second&0x00FF);
    25f0:	9b03      	ldr	r3, [sp, #12]
    25f2:	4669      	mov	r1, sp
    25f4:	714b      	strb	r3, [r1, #5]
	sendP[6]=(uint8_t)((timeSave.second>>8)&0x00FF);
    25f6:	9b03      	ldr	r3, [sp, #12]
    25f8:	0a1b      	lsrs	r3, r3, #8
    25fa:	718b      	strb	r3, [r1, #6]
	sendP[7]=(uint8_t)(timeSave.halfmillis&0x00FF);
    25fc:	9b04      	ldr	r3, [sp, #16]
    25fe:	71cb      	strb	r3, [r1, #7]
	sendP[8]=(uint8_t)((timeSave.halfmillis>>8)&0x00FF);
    2600:	9b04      	ldr	r3, [sp, #16]
    2602:	0a1b      	lsrs	r3, r3, #8
    2604:	466a      	mov	r2, sp
    2606:	720b      	strb	r3, [r1, #8]
	
	send(type,9,sendP);
    2608:	3003      	adds	r0, #3
    260a:	2109      	movs	r1, #9
    260c:	4b08      	ldr	r3, [pc, #32]	; (2630 <_Z13delayResponseh+0x8c>)
    260e:	4798      	blx	r3
	sprintf(messageHMI,"	delay response send (id: %d)",id);
    2610:	4d08      	ldr	r5, [pc, #32]	; (2634 <_Z13delayResponseh+0x90>)
    2612:	1c28      	adds	r0, r5, #0
    2614:	4908      	ldr	r1, [pc, #32]	; (2638 <_Z13delayResponseh+0x94>)
    2616:	1c22      	adds	r2, r4, #0
    2618:	4b08      	ldr	r3, [pc, #32]	; (263c <_Z13delayResponseh+0x98>)
    261a:	4798      	blx	r3
	sendHMI(messageHMI);
    261c:	1c28      	adds	r0, r5, #0
    261e:	4b08      	ldr	r3, [pc, #32]	; (2640 <_Z13delayResponseh+0x9c>)
    2620:	4798      	blx	r3
}
    2622:	b007      	add	sp, #28
    2624:	bd30      	pop	{r4, r5, pc}
    2626:	46c0      	nop			; (mov r8, r8)
    2628:	20003f5c 	.word	0x20003f5c
    262c:	200000bc 	.word	0x200000bc
    2630:	000024f1 	.word	0x000024f1
    2634:	20004080 	.word	0x20004080
    2638:	0000d95c 	.word	0x0000d95c
    263c:	00009fe5 	.word	0x00009fe5
    2640:	00002881 	.word	0x00002881

00002644 <_Z6senderv>:
	}	 
}



void sender(void){
    2644:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2646:	464f      	mov	r7, r9
    2648:	4646      	mov	r6, r8
    264a:	b4c0      	push	{r6, r7}
    264c:	2401      	movs	r4, #1
	#ifdef MASTERMODE
	uint8_t i;
	for(i=1;i<=MAX_SLAVE_CLOCK;i++){
		taskENTER_CRITICAL();
    264e:	4b14      	ldr	r3, [pc, #80]	; (26a0 <_Z6senderv+0x5c>)
    2650:	4698      	mov	r8, r3
		unsigned long int timeSender=timeProt.saveTime[i].second;
    2652:	4f14      	ldr	r7, [pc, #80]	; (26a4 <_Z6senderv+0x60>)
		taskEXIT_CRITICAL();
    2654:	4e14      	ldr	r6, [pc, #80]	; (26a8 <_Z6senderv+0x64>)
    2656:	b2e5      	uxtb	r5, r4

void sender(void){
	#ifdef MASTERMODE
	uint8_t i;
	for(i=1;i<=MAX_SLAVE_CLOCK;i++){
		taskENTER_CRITICAL();
    2658:	47c0      	blx	r8
		unsigned long int timeSender=timeProt.saveTime[i].second;
    265a:	0063      	lsls	r3, r4, #1
    265c:	191b      	adds	r3, r3, r4
    265e:	009b      	lsls	r3, r3, #2
    2660:	59db      	ldr	r3, [r3, r7]
    2662:	4699      	mov	r9, r3
		taskEXIT_CRITICAL();
    2664:	47b0      	blx	r6
		if(timeSender!=0){
    2666:	464b      	mov	r3, r9
    2668:	2b00      	cmp	r3, #0
    266a:	d002      	beq.n	2672 <_Z6senderv+0x2e>
			//printf("id : %d  , delay response time second : %lu",i,timeSender);
			delayResponse(i);
    266c:	1c28      	adds	r0, r5, #0
    266e:	4b0f      	ldr	r3, [pc, #60]	; (26ac <_Z6senderv+0x68>)
    2670:	4798      	blx	r3
    2672:	3401      	adds	r4, #1


void sender(void){
	#ifdef MASTERMODE
	uint8_t i;
	for(i=1;i<=MAX_SLAVE_CLOCK;i++){
    2674:	2c0b      	cmp	r4, #11
    2676:	d1ee      	bne.n	2656 <_Z6senderv+0x12>
		if(timeSender!=0){
			//printf("id : %d  , delay response time second : %lu",i,timeSender);
			delayResponse(i);
		}
	}
	if(xTaskGetTickCount()-saveSync>(TIMESYNC/portTICK_RATE_MS)){
    2678:	4b0d      	ldr	r3, [pc, #52]	; (26b0 <_Z6senderv+0x6c>)
    267a:	4798      	blx	r3
    267c:	4b0d      	ldr	r3, [pc, #52]	; (26b4 <_Z6senderv+0x70>)
    267e:	681b      	ldr	r3, [r3, #0]
    2680:	1ac0      	subs	r0, r0, r3
    2682:	23fa      	movs	r3, #250	; 0xfa
    2684:	009b      	lsls	r3, r3, #2
    2686:	4298      	cmp	r0, r3
    2688:	d905      	bls.n	2696 <_Z6senderv+0x52>
		saveSync=xTaskGetTickCount();
    268a:	4b09      	ldr	r3, [pc, #36]	; (26b0 <_Z6senderv+0x6c>)
    268c:	4798      	blx	r3
    268e:	4b09      	ldr	r3, [pc, #36]	; (26b4 <_Z6senderv+0x70>)
    2690:	6018      	str	r0, [r3, #0]
		sync();
    2692:	4b09      	ldr	r3, [pc, #36]	; (26b8 <_Z6senderv+0x74>)
    2694:	4798      	blx	r3
		saveDRequest=xTaskGetTickCount();
		delayRequest();
	}
	#endif

}
    2696:	bc0c      	pop	{r2, r3}
    2698:	4690      	mov	r8, r2
    269a:	4699      	mov	r9, r3
    269c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    269e:	46c0      	nop			; (mov r8, r8)
    26a0:	00000f35 	.word	0x00000f35
    26a4:	20003f5c 	.word	0x20003f5c
    26a8:	00000f4d 	.word	0x00000f4d
    26ac:	000025a5 	.word	0x000025a5
    26b0:	00000965 	.word	0x00000965
    26b4:	20003e84 	.word	0x20003e84
    26b8:	00002561 	.word	0x00002561

000026bc <_Z16timeProtocolTaskv>:
		
	}
	return false;	
}

void timeProtocolTask(void){
    26bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
    26be:	b672      	cpsid	i
    26c0:	f3bf 8f5f 	dmb	sy
	Disable_global_interrupt();
    26c4:	2200      	movs	r2, #0
    26c6:	4b31      	ldr	r3, [pc, #196]	; (278c <_Z16timeProtocolTaskv+0xd0>)
    26c8:	701a      	strb	r2, [r3, #0]
    26ca:	2300      	movs	r3, #0
		
	#ifdef MASTERMODE
		uint8_t i ;
		for(i=0;i<=MAX_SLAVE_CLOCK;i++){
			timeProt.saveTime[i].second=0;
    26cc:	4830      	ldr	r0, [pc, #192]	; (2790 <_Z16timeProtocolTaskv+0xd4>)
    26ce:	2100      	movs	r1, #0
    26d0:	005a      	lsls	r2, r3, #1
    26d2:	18d2      	adds	r2, r2, r3
    26d4:	0092      	lsls	r2, r2, #2
    26d6:	5011      	str	r1, [r2, r0]
    26d8:	3301      	adds	r3, #1
void timeProtocolTask(void){
	Disable_global_interrupt();
		
	#ifdef MASTERMODE
		uint8_t i ;
		for(i=0;i<=MAX_SLAVE_CLOCK;i++){
    26da:	2b0b      	cmp	r3, #11
    26dc:	d1f8      	bne.n	26d0 <_Z16timeProtocolTaskv+0x14>
	timeProt.rx.sign=true;
	timeProt.rxDelay.sign=true;
	timeProt.rxSync.sign=true;
	timeProt.tx.sign=true;
	#endif
	timeProt.correction.nbCorrection=0;
    26de:	4c2c      	ldr	r4, [pc, #176]	; (2790 <_Z16timeProtocolTaskv+0xd4>)
    26e0:	2300      	movs	r3, #0
    26e2:	22a4      	movs	r2, #164	; 0xa4
    26e4:	50a3      	str	r3, [r4, r2]

	
	sumOffset.second=0;
    26e6:	492b      	ldr	r1, [pc, #172]	; (2794 <_Z16timeProtocolTaskv+0xd8>)
    26e8:	600b      	str	r3, [r1, #0]
	sumOffset.halfmillis=0;
    26ea:	604b      	str	r3, [r1, #4]
	sumOffset.sign=true;
    26ec:	3aa3      	subs	r2, #163	; 0xa3
    26ee:	720a      	strb	r2, [r1, #8]
	
	
	timeProt.correction.currentTimeOffsetSync.second=0;
    26f0:	21b8      	movs	r1, #184	; 0xb8
    26f2:	5063      	str	r3, [r4, r1]
	timeProt.correction.currentTimeOffsetSync.halfmillis=0;
    26f4:	3104      	adds	r1, #4
    26f6:	5063      	str	r3, [r4, r1]
	timeProt.correction.currentTimeOffsetSync.sign=true;
    26f8:	3104      	adds	r1, #4
    26fa:	5462      	strb	r2, [r4, r1]
	
	
	timeProt.correction.previoustimeOffset.second=0;
    26fc:	3914      	subs	r1, #20
    26fe:	5063      	str	r3, [r4, r1]
	timeProt.correction.previoustimeOffset.halfmillis=0;
    2700:	3104      	adds	r1, #4
    2702:	5063      	str	r3, [r4, r1]
	timeProt.correction.previoustimeOffset.sign=true;
    2704:	3104      	adds	r1, #4
    2706:	5462      	strb	r2, [r4, r1]
	
	
	//timeProt.correction.timeSoftCor=0;
	timeProt.correction.indiceMoySoftCor=0;
    2708:	316c      	adds	r1, #108	; 0x6c
    270a:	5463      	strb	r3, [r4, r1]
	timeProt.correction.indiceFull=0;
    270c:	2122      	movs	r1, #34	; 0x22
    270e:	31ff      	adds	r1, #255	; 0xff
    2710:	5463      	strb	r3, [r4, r1]


	timeProt.delay.second=0;
    2712:	3999      	subs	r1, #153	; 0x99
    2714:	5063      	str	r3, [r4, r1]
	timeProt.delay.halfmillis=0;
    2716:	3104      	adds	r1, #4
    2718:	5063      	str	r3, [r4, r1]
	timeProt.delay.sign=true;
    271a:	3104      	adds	r1, #4
    271c:	5462      	strb	r2, [r4, r1]
	timeProt.waitIdentifier=false;
    271e:	3283      	adds	r2, #131	; 0x83
    2720:	54a3      	strb	r3, [r4, r2]
	timeProt.synchroTime=NULL;
    2722:	2594      	movs	r5, #148	; 0x94
    2724:	5163      	str	r3, [r4, r5]
	vSemaphoreCreateBinary(timeProt.synchroTime);
    2726:	2001      	movs	r0, #1
    2728:	2100      	movs	r1, #0
    272a:	3a81      	subs	r2, #129	; 0x81
    272c:	4b1a      	ldr	r3, [pc, #104]	; (2798 <_Z16timeProtocolTaskv+0xdc>)
    272e:	4798      	blx	r3
    2730:	5160      	str	r0, [r4, r5]
    2732:	2800      	cmp	r0, #0
    2734:	d004      	beq.n	2740 <_Z16timeProtocolTaskv+0x84>
    2736:	2100      	movs	r1, #0
    2738:	2200      	movs	r2, #0
    273a:	2300      	movs	r3, #0
    273c:	4c17      	ldr	r4, [pc, #92]	; (279c <_Z16timeProtocolTaskv+0xe0>)
    273e:	47a0      	blx	r4
	Enable_global_interrupt();
    2740:	2201      	movs	r2, #1
    2742:	4b12      	ldr	r3, [pc, #72]	; (278c <_Z16timeProtocolTaskv+0xd0>)
    2744:	701a      	strb	r2, [r3, #0]
    2746:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
    274a:	b662      	cpsie	i
	#ifdef SLAVEMODE
	delayRequest();
	#else
	sync();
    274c:	4b14      	ldr	r3, [pc, #80]	; (27a0 <_Z16timeProtocolTaskv+0xe4>)
    274e:	4798      	blx	r3
	#endif
	
	while(1){
		//sendHMI("time protocol task.");

			if(timeProt.synchroTime!=NULL){
    2750:	4c0f      	ldr	r4, [pc, #60]	; (2790 <_Z16timeProtocolTaskv+0xd4>)
				sender();
    2752:	4e14      	ldr	r6, [pc, #80]	; (27a4 <_Z16timeProtocolTaskv+0xe8>)
				if( xSemaphoreTake(timeProt.synchroTime,500/portTICK_RATE_MS) == pdTRUE ){
    2754:	1c25      	adds	r5, r4, #0
	#endif
	
	while(1){
		//sendHMI("time protocol task.");

			if(timeProt.synchroTime!=NULL){
    2756:	2394      	movs	r3, #148	; 0x94
    2758:	58e3      	ldr	r3, [r4, r3]
    275a:	2b00      	cmp	r3, #0
    275c:	d00f      	beq.n	277e <_Z16timeProtocolTaskv+0xc2>
				sender();
    275e:	47b0      	blx	r6
				if( xSemaphoreTake(timeProt.synchroTime,500/portTICK_RATE_MS) == pdTRUE ){
    2760:	2394      	movs	r3, #148	; 0x94
    2762:	58e8      	ldr	r0, [r5, r3]
    2764:	2100      	movs	r1, #0
    2766:	22fa      	movs	r2, #250	; 0xfa
    2768:	0052      	lsls	r2, r2, #1
    276a:	2300      	movs	r3, #0
    276c:	4f0e      	ldr	r7, [pc, #56]	; (27a8 <_Z16timeProtocolTaskv+0xec>)
    276e:	47b8      	blx	r7
    2770:	2801      	cmp	r0, #1
    2772:	d104      	bne.n	277e <_Z16timeProtocolTaskv+0xc2>
					vTaskDelay(100/portTICK_RATE_MS);
    2774:	3063      	adds	r0, #99	; 0x63
    2776:	4b0d      	ldr	r3, [pc, #52]	; (27ac <_Z16timeProtocolTaskv+0xf0>)
    2778:	4798      	blx	r3
					receiver();
    277a:	4b0d      	ldr	r3, [pc, #52]	; (27b0 <_Z16timeProtocolTaskv+0xf4>)
    277c:	4798      	blx	r3
					
				}
				
					
			}
			correction();
    277e:	4b0d      	ldr	r3, [pc, #52]	; (27b4 <_Z16timeProtocolTaskv+0xf8>)
    2780:	4798      	blx	r3
			
vTaskDelay(500/portTICK_RATE_MS);
    2782:	20fa      	movs	r0, #250	; 0xfa
    2784:	0040      	lsls	r0, r0, #1
    2786:	4b09      	ldr	r3, [pc, #36]	; (27ac <_Z16timeProtocolTaskv+0xf0>)
    2788:	4798      	blx	r3
	}	 
    278a:	e7e4      	b.n	2756 <_Z16timeProtocolTaskv+0x9a>
    278c:	200000d0 	.word	0x200000d0
    2790:	20003f5c 	.word	0x20003f5c
    2794:	20003e88 	.word	0x20003e88
    2798:	000002c1 	.word	0x000002c1
    279c:	00000311 	.word	0x00000311
    27a0:	00002561 	.word	0x00002561
    27a4:	00002645 	.word	0x00002645
    27a8:	000004a1 	.word	0x000004a1
    27ac:	00000b99 	.word	0x00000b99
    27b0:	00002441 	.word	0x00002441
    27b4:	00002219 	.word	0x00002219

000027b8 <_ZN4mbed10SerialBaseD1Ev>:
#endif

protected:
    SerialBase(PinName tx, PinName rx);
    virtual ~SerialBase() {
    }
    27b8:	4770      	bx	lr
    27ba:	46c0      	nop			; (mov r8, r8)

000027bc <_ZN4mbed6SerialD1Ev>:
 * int main() {
 *     pc.printf("Hello World\n");
 * }
 * @endcode
 */
class Serial : public SerialBase, public Stream {
    27bc:	b510      	push	{r4, lr}
    27be:	1c04      	adds	r4, r0, #0
    27c0:	4b06      	ldr	r3, [pc, #24]	; (27dc <_ZN4mbed6SerialD1Ev+0x20>)
    27c2:	6003      	str	r3, [r0, #0]
    27c4:	1c19      	adds	r1, r3, #0
    27c6:	3118      	adds	r1, #24
    27c8:	22dc      	movs	r2, #220	; 0xdc
    27ca:	5081      	str	r1, [r0, r2]
    27cc:	334c      	adds	r3, #76	; 0x4c
    27ce:	3204      	adds	r2, #4
    27d0:	5083      	str	r3, [r0, r2]
    27d2:	30dc      	adds	r0, #220	; 0xdc
    27d4:	4b02      	ldr	r3, [pc, #8]	; (27e0 <_ZN4mbed6SerialD1Ev+0x24>)
    27d6:	4798      	blx	r3
    27d8:	1c20      	adds	r0, r4, #0
    27da:	bd10      	pop	{r4, pc}
    27dc:	0000dc90 	.word	0x0000dc90
    27e0:	000040c5 	.word	0x000040c5

000027e4 <_ZThn220_N4mbed6SerialD1Ev>:
    27e4:	b408      	push	{r3}
    27e6:	4b02      	ldr	r3, [pc, #8]	; (27f0 <_ZThn220_N4mbed6SerialD1Ev+0xc>)
    27e8:	469c      	mov	ip, r3
    27ea:	38dc      	subs	r0, #220	; 0xdc
    27ec:	bc08      	pop	{r3}
    27ee:	4760      	bx	ip
    27f0:	000027bd 	.word	0x000027bd

000027f4 <_ZThn224_N4mbed6SerialD1Ev>:
    27f4:	b408      	push	{r3}
    27f6:	4b02      	ldr	r3, [pc, #8]	; (2800 <_ZThn224_N4mbed6SerialD1Ev+0xc>)
    27f8:	469c      	mov	ip, r3
    27fa:	38e0      	subs	r0, #224	; 0xe0
    27fc:	bc08      	pop	{r3}
    27fe:	4760      	bx	ip
    2800:	000027bd 	.word	0x000027bd

00002804 <_ZN4mbed10SerialBaseD0Ev>:
    void interrupt_handler_asynch(void);
#endif

protected:
    SerialBase(PinName tx, PinName rx);
    virtual ~SerialBase() {
    2804:	b510      	push	{r4, lr}
    2806:	1c04      	adds	r4, r0, #0
    }
    2808:	4b01      	ldr	r3, [pc, #4]	; (2810 <_ZN4mbed10SerialBaseD0Ev+0xc>)
    280a:	4798      	blx	r3
    280c:	1c20      	adds	r0, r4, #0
    280e:	bd10      	pop	{r4, pc}
    2810:	000051c7 	.word	0x000051c7

00002814 <_Z12configureHMIv>:
/************************************************************************/
/* FUNCTION                                                             */
/************************************************************************/
void configureHMI(void){
 
}
    2814:	4770      	bx	lr
    2816:	46c0      	nop			; (mov r8, r8)

00002818 <_Z7HMITaskv>:
void HMITask(){
    2818:	b5f0      	push	{r4, r5, r6, r7, lr}
    281a:	b083      	sub	sp, #12
	
	//Can receive up to 10 char[50]
	uartQueue = xQueueCreate( LENGTH_QUEUE, sizeof( char* ) );
    281c:	2032      	movs	r0, #50	; 0x32
    281e:	2104      	movs	r1, #4
    2820:	2200      	movs	r2, #0
    2822:	4b10      	ldr	r3, [pc, #64]	; (2864 <_Z7HMITaskv+0x4c>)
    2824:	4798      	blx	r3
    2826:	4b10      	ldr	r3, [pc, #64]	; (2868 <_Z7HMITaskv+0x50>)
    2828:	6018      	str	r0, [r3, #0]

	while(1){
		//pc.printf("test");
			//puts("HMI task : \r\n");
		 if( uartQueue != 0 )
    282a:	1c1f      	adds	r7, r3, #0
		 {
			 char* receive;
			 // Receive a message on the created queue.
			 while( xQueueReceive( uartQueue, &( receive ), (  portTickType ) 0) )
			 {			
				 pc.printf(receive);
    282c:	4d0f      	ldr	r5, [pc, #60]	; (286c <_Z7HMITaskv+0x54>)
    282e:	35dc      	adds	r5, #220	; 0xdc
	uartQueue = xQueueCreate( LENGTH_QUEUE, sizeof( char* ) );

	while(1){
		//pc.printf("test");
			//puts("HMI task : \r\n");
		 if( uartQueue != 0 )
    2830:	683b      	ldr	r3, [r7, #0]
    2832:	2b00      	cmp	r3, #0
    2834:	d108      	bne.n	2848 <_Z7HMITaskv+0x30>
    2836:	e010      	b.n	285a <_Z7HMITaskv+0x42>
		 {
			 char* receive;
			 // Receive a message on the created queue.
			 while( xQueueReceive( uartQueue, &( receive ), (  portTickType ) 0) )
			 {			
				 pc.printf(receive);
    2838:	1c28      	adds	r0, r5, #0
    283a:	9901      	ldr	r1, [sp, #4]
    283c:	4c0c      	ldr	r4, [pc, #48]	; (2870 <_Z7HMITaskv+0x58>)
    283e:	47a0      	blx	r4
				 pc.printf("\r\n");
    2840:	1c28      	adds	r0, r5, #0
    2842:	490c      	ldr	r1, [pc, #48]	; (2874 <_Z7HMITaskv+0x5c>)
    2844:	47a0      	blx	r4
    2846:	e000      	b.n	284a <_Z7HMITaskv+0x32>
			//puts("HMI task : \r\n");
		 if( uartQueue != 0 )
		 {
			 char* receive;
			 // Receive a message on the created queue.
			 while( xQueueReceive( uartQueue, &( receive ), (  portTickType ) 0) )
    2848:	4e07      	ldr	r6, [pc, #28]	; (2868 <_Z7HMITaskv+0x50>)
    284a:	6830      	ldr	r0, [r6, #0]
    284c:	a901      	add	r1, sp, #4
    284e:	2200      	movs	r2, #0
    2850:	2300      	movs	r3, #0
    2852:	4c09      	ldr	r4, [pc, #36]	; (2878 <_Z7HMITaskv+0x60>)
    2854:	47a0      	blx	r4
    2856:	2800      	cmp	r0, #0
    2858:	d1ee      	bne.n	2838 <_Z7HMITaskv+0x20>

			//printf("						t: %lus,%u\r\n",timeCopy.second,(unsigned int)timeCopy.halfmillis/2);
			//printf("timecor : %d\r\n",ti);
			//printf("corhms : %d\r\n",to);
		 }
        vTaskDelay(500/portTICK_RATE_MS);
    285a:	20fa      	movs	r0, #250	; 0xfa
    285c:	0040      	lsls	r0, r0, #1
    285e:	4b07      	ldr	r3, [pc, #28]	; (287c <_Z7HMITaskv+0x64>)
    2860:	4798      	blx	r3
	}
    2862:	e7e5      	b.n	2830 <_Z7HMITaskv+0x18>
    2864:	000002c1 	.word	0x000002c1
    2868:	2000423c 	.word	0x2000423c
    286c:	20004148 	.word	0x20004148
    2870:	000040e9 	.word	0x000040e9
    2874:	0000d728 	.word	0x0000d728
    2878:	000004a1 	.word	0x000004a1
    287c:	00000b99 	.word	0x00000b99

00002880 <_Z7sendHMIPKc>:
}
bool sendHMI(const char send[]){
    2880:	b510      	push	{r4, lr}
    2882:	b082      	sub	sp, #8
    2884:	9001      	str	r0, [sp, #4]
			if( uartQueue != NULL )
    2886:	4b08      	ldr	r3, [pc, #32]	; (28a8 <_Z7sendHMIPKc+0x28>)
    2888:	6818      	ldr	r0, [r3, #0]
    288a:	2800      	cmp	r0, #0
    288c:	d009      	beq.n	28a2 <_Z7sendHMIPKc+0x22>
			{
				if( xQueueSendToBack( uartQueue,( void * ) &send,(  portTickType ) 0 ) == pdPASS )
    288e:	a901      	add	r1, sp, #4
    2890:	2200      	movs	r2, #0
    2892:	2300      	movs	r3, #0
    2894:	4c05      	ldr	r4, [pc, #20]	; (28ac <_Z7sendHMIPKc+0x2c>)
    2896:	47a0      	blx	r4
    2898:	3801      	subs	r0, #1
    289a:	4243      	negs	r3, r0
    289c:	4158      	adcs	r0, r3
    289e:	b2c0      	uxtb	r0, r0
    28a0:	e000      	b.n	28a4 <_Z7sendHMIPKc+0x24>
					return true;
				}
				/* Failed to post the message. */
			}
			
				return false;
    28a2:	2000      	movs	r0, #0
			
    28a4:	b002      	add	sp, #8
    28a6:	bd10      	pop	{r4, pc}
    28a8:	2000423c 	.word	0x2000423c
    28ac:	00000311 	.word	0x00000311

000028b0 <_ZN4mbed6SerialD0Ev>:
    28b0:	b510      	push	{r4, lr}
    28b2:	1c04      	adds	r4, r0, #0
    28b4:	4b08      	ldr	r3, [pc, #32]	; (28d8 <_ZN4mbed6SerialD0Ev+0x28>)
    28b6:	6003      	str	r3, [r0, #0]
    28b8:	1c19      	adds	r1, r3, #0
    28ba:	3118      	adds	r1, #24
    28bc:	22dc      	movs	r2, #220	; 0xdc
    28be:	5081      	str	r1, [r0, r2]
    28c0:	334c      	adds	r3, #76	; 0x4c
    28c2:	3204      	adds	r2, #4
    28c4:	5083      	str	r3, [r0, r2]
    28c6:	30dc      	adds	r0, #220	; 0xdc
    28c8:	4b04      	ldr	r3, [pc, #16]	; (28dc <_ZN4mbed6SerialD0Ev+0x2c>)
    28ca:	4798      	blx	r3
    28cc:	1c20      	adds	r0, r4, #0
    28ce:	4b04      	ldr	r3, [pc, #16]	; (28e0 <_ZN4mbed6SerialD0Ev+0x30>)
    28d0:	4798      	blx	r3
    28d2:	1c20      	adds	r0, r4, #0
    28d4:	bd10      	pop	{r4, pc}
    28d6:	46c0      	nop			; (mov r8, r8)
    28d8:	0000dc90 	.word	0x0000dc90
    28dc:	000040c5 	.word	0x000040c5
    28e0:	000051c7 	.word	0x000051c7

000028e4 <_ZThn220_N4mbed6SerialD0Ev>:
    28e4:	b408      	push	{r3}
    28e6:	4b02      	ldr	r3, [pc, #8]	; (28f0 <_ZThn220_N4mbed6SerialD0Ev+0xc>)
    28e8:	469c      	mov	ip, r3
    28ea:	38dc      	subs	r0, #220	; 0xdc
    28ec:	bc08      	pop	{r3}
    28ee:	4760      	bx	ip
    28f0:	000028b1 	.word	0x000028b1

000028f4 <_ZThn224_N4mbed6SerialD0Ev>:
    28f4:	b408      	push	{r3}
    28f6:	4b02      	ldr	r3, [pc, #8]	; (2900 <_ZThn224_N4mbed6SerialD0Ev+0xc>)
    28f8:	469c      	mov	ip, r3
    28fa:	38e0      	subs	r0, #224	; 0xe0
    28fc:	bc08      	pop	{r3}
    28fe:	4760      	bx	ip
    2900:	000028b1 	.word	0x000028b1

00002904 <_GLOBAL__sub_I_uartQueue>:
    2904:	b538      	push	{r3, r4, r5, lr}
#include "hmi.h"
/************************************************************************/
/* GLOBAL                                                               */
/************************************************************************/
xQueueHandle uartQueue;
Serial pc(USBTX,USBRX);
    2906:	4c06      	ldr	r4, [pc, #24]	; (2920 <_GLOBAL__sub_I_uartQueue+0x1c>)
    2908:	1c20      	adds	r0, r4, #0
    290a:	2104      	movs	r1, #4
    290c:	2205      	movs	r2, #5
    290e:	2300      	movs	r3, #0
    2910:	4d04      	ldr	r5, [pc, #16]	; (2924 <_GLOBAL__sub_I_uartQueue+0x20>)
    2912:	47a8      	blx	r5
    2914:	1c20      	adds	r0, r4, #0
    2916:	4904      	ldr	r1, [pc, #16]	; (2928 <_GLOBAL__sub_I_uartQueue+0x24>)
    2918:	4a04      	ldr	r2, [pc, #16]	; (292c <_GLOBAL__sub_I_uartQueue+0x28>)
    291a:	4b05      	ldr	r3, [pc, #20]	; (2930 <_GLOBAL__sub_I_uartQueue+0x2c>)
    291c:	4798      	blx	r3
				/* Failed to post the message. */
			}
			
				return false;
			
    291e:	bd38      	pop	{r3, r4, r5, pc}
    2920:	20004148 	.word	0x20004148
    2924:	00003eb9 	.word	0x00003eb9
    2928:	000027bd 	.word	0x000027bd
    292c:	200000b0 	.word	0x200000b0
    2930:	000051b9 	.word	0x000051b9

00002934 <mbed_die>:
    2934:	b508      	push	{r3, lr}
    2936:	b672      	cpsid	i
    2938:	2096      	movs	r0, #150	; 0x96
    293a:	f001 fc65 	bl	4208 <wait_ms>
    293e:	2096      	movs	r0, #150	; 0x96
    2940:	f001 fc62 	bl	4208 <wait_ms>
    2944:	e7f8      	b.n	2938 <mbed_die+0x4>
    2946:	46c0      	nop			; (mov r8, r8)

00002948 <NVIC_SetVector>:
    2948:	4a0b      	ldr	r2, [pc, #44]	; (2978 <NVIC_SetVector+0x30>)
    294a:	b530      	push	{r4, r5, lr}
    294c:	6894      	ldr	r4, [r2, #8]
    294e:	6892      	ldr	r2, [r2, #8]
    2950:	1c23      	adds	r3, r4, #0
    2952:	2a00      	cmp	r2, #0
    2954:	d10c      	bne.n	2970 <NVIC_SetVector+0x28>
    2956:	2300      	movs	r3, #0
    2958:	2280      	movs	r2, #128	; 0x80
    295a:	591d      	ldr	r5, [r3, r4]
    295c:	0592      	lsls	r2, r2, #22
    295e:	189a      	adds	r2, r3, r2
    2960:	3304      	adds	r3, #4
    2962:	6015      	str	r5, [r2, #0]
    2964:	2bb0      	cmp	r3, #176	; 0xb0
    2966:	d1f7      	bne.n	2958 <NVIC_SetVector+0x10>
    2968:	2380      	movs	r3, #128	; 0x80
    296a:	4a03      	ldr	r2, [pc, #12]	; (2978 <NVIC_SetVector+0x30>)
    296c:	059b      	lsls	r3, r3, #22
    296e:	6093      	str	r3, [r2, #8]
    2970:	3010      	adds	r0, #16
    2972:	0080      	lsls	r0, r0, #2
    2974:	50c1      	str	r1, [r0, r3]
    2976:	bd30      	pop	{r4, r5, pc}
    2978:	e000ed00 	.word	0xe000ed00

0000297c <mbed_sdk_init>:
    297c:	b508      	push	{r3, lr}
    297e:	4b04      	ldr	r3, [pc, #16]	; (2990 <mbed_sdk_init+0x14>)
    2980:	781a      	ldrb	r2, [r3, #0]
    2982:	2a00      	cmp	r2, #0
    2984:	d103      	bne.n	298e <mbed_sdk_init+0x12>
    2986:	3201      	adds	r2, #1
    2988:	701a      	strb	r2, [r3, #0]
    298a:	f000 ff55 	bl	3838 <system_init>
    298e:	bd08      	pop	{r3, pc}
    2990:	20004240 	.word	0x20004240

00002994 <_ZN4mbed10FileHandle4flenEv>:
    2994:	6803      	ldr	r3, [r0, #0]
    2996:	b570      	push	{r4, r5, r6, lr}
    2998:	691b      	ldr	r3, [r3, #16]
    299a:	2100      	movs	r1, #0
    299c:	2201      	movs	r2, #1
    299e:	1c04      	adds	r4, r0, #0
    29a0:	4798      	blx	r3
    29a2:	1c06      	adds	r6, r0, #0
    29a4:	1c43      	adds	r3, r0, #1
    29a6:	d00e      	beq.n	29c6 <_ZN4mbed10FileHandle4flenEv+0x32>
    29a8:	6823      	ldr	r3, [r4, #0]
    29aa:	2100      	movs	r1, #0
    29ac:	691b      	ldr	r3, [r3, #16]
    29ae:	2202      	movs	r2, #2
    29b0:	1c20      	adds	r0, r4, #0
    29b2:	4798      	blx	r3
    29b4:	1c05      	adds	r5, r0, #0
    29b6:	6823      	ldr	r3, [r4, #0]
    29b8:	1c20      	adds	r0, r4, #0
    29ba:	691b      	ldr	r3, [r3, #16]
    29bc:	1c31      	adds	r1, r6, #0
    29be:	2200      	movs	r2, #0
    29c0:	4798      	blx	r3
    29c2:	1c28      	adds	r0, r5, #0
    29c4:	bd70      	pop	{r4, r5, r6, pc}
    29c6:	e7fd      	b.n	29c4 <_ZN4mbed10FileHandle4flenEv+0x30>

000029c8 <_ZL11init_serialv.part.0>:
    29c8:	b508      	push	{r3, lr}
    29ca:	4803      	ldr	r0, [pc, #12]	; (29d8 <_ZL11init_serialv.part.0+0x10>)
    29cc:	2104      	movs	r1, #4
    29ce:	2205      	movs	r2, #5
    29d0:	f001 f870 	bl	3ab4 <serial_init>
    29d4:	bd08      	pop	{r3, pc}
    29d6:	46c0      	nop			; (mov r8, r8)
    29d8:	20004418 	.word	0x20004418

000029dc <_ZN4mbed10FileHandleD1Ev>:
    29dc:	4b09      	ldr	r3, [pc, #36]	; (2a04 <_ZN4mbed10FileHandleD1Ev+0x28>)
    29de:	b510      	push	{r4, lr}
    29e0:	3308      	adds	r3, #8
    29e2:	6003      	str	r3, [r0, #0]
    29e4:	4b08      	ldr	r3, [pc, #32]	; (2a08 <_ZN4mbed10FileHandleD1Ev+0x2c>)
    29e6:	2100      	movs	r1, #0
    29e8:	1c5a      	adds	r2, r3, #1
    29ea:	32ff      	adds	r2, #255	; 0xff
    29ec:	e002      	b.n	29f4 <_ZN4mbed10FileHandleD1Ev+0x18>
    29ee:	3304      	adds	r3, #4
    29f0:	4293      	cmp	r3, r2
    29f2:	d006      	beq.n	2a02 <_ZN4mbed10FileHandleD1Ev+0x26>
    29f4:	681c      	ldr	r4, [r3, #0]
    29f6:	4284      	cmp	r4, r0
    29f8:	d1f9      	bne.n	29ee <_ZN4mbed10FileHandleD1Ev+0x12>
    29fa:	6019      	str	r1, [r3, #0]
    29fc:	3304      	adds	r3, #4
    29fe:	4293      	cmp	r3, r2
    2a00:	d1f8      	bne.n	29f4 <_ZN4mbed10FileHandleD1Ev+0x18>
    2a02:	bd10      	pop	{r4, pc}
    2a04:	0000d998 	.word	0x0000d998
    2a08:	20004244 	.word	0x20004244

00002a0c <_open>:
    2a0c:	b5f0      	push	{r4, r5, r6, r7, lr}
    2a0e:	4647      	mov	r7, r8
    2a10:	b480      	push	{r7}
    2a12:	1c0e      	adds	r6, r1, #0
    2a14:	b082      	sub	sp, #8
    2a16:	4934      	ldr	r1, [pc, #208]	; (2ae8 <_open+0xdc>)
    2a18:	1c05      	adds	r5, r0, #0
    2a1a:	f007 fb7b 	bl	a114 <strcmp>
    2a1e:	1e04      	subs	r4, r0, #0
    2a20:	d108      	bne.n	2a34 <_open+0x28>
    2a22:	4b32      	ldr	r3, [pc, #200]	; (2aec <_open+0xe0>)
    2a24:	681b      	ldr	r3, [r3, #0]
    2a26:	2b00      	cmp	r3, #0
    2a28:	d00f      	beq.n	2a4a <_open+0x3e>
    2a2a:	1c20      	adds	r0, r4, #0
    2a2c:	b002      	add	sp, #8
    2a2e:	bc04      	pop	{r2}
    2a30:	4690      	mov	r8, r2
    2a32:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2a34:	1c28      	adds	r0, r5, #0
    2a36:	492e      	ldr	r1, [pc, #184]	; (2af0 <_open+0xe4>)
    2a38:	f007 fb6c 	bl	a114 <strcmp>
    2a3c:	2800      	cmp	r0, #0
    2a3e:	d107      	bne.n	2a50 <_open+0x44>
    2a40:	4b2a      	ldr	r3, [pc, #168]	; (2aec <_open+0xe0>)
    2a42:	2401      	movs	r4, #1
    2a44:	681b      	ldr	r3, [r3, #0]
    2a46:	2b00      	cmp	r3, #0
    2a48:	d1ef      	bne.n	2a2a <_open+0x1e>
    2a4a:	f7ff ffbd 	bl	29c8 <_ZL11init_serialv.part.0>
    2a4e:	e7ec      	b.n	2a2a <_open+0x1e>
    2a50:	1c28      	adds	r0, r5, #0
    2a52:	4928      	ldr	r1, [pc, #160]	; (2af4 <_open+0xe8>)
    2a54:	f007 fb5e 	bl	a114 <strcmp>
    2a58:	2800      	cmp	r0, #0
    2a5a:	d024      	beq.n	2aa6 <_open+0x9a>
    2a5c:	4f26      	ldr	r7, [pc, #152]	; (2af8 <_open+0xec>)
    2a5e:	2400      	movs	r4, #0
    2a60:	1c3b      	adds	r3, r7, #0
    2a62:	e003      	b.n	2a6c <_open+0x60>
    2a64:	3401      	adds	r4, #1
    2a66:	3304      	adds	r3, #4
    2a68:	2c40      	cmp	r4, #64	; 0x40
    2a6a:	d022      	beq.n	2ab2 <_open+0xa6>
    2a6c:	681a      	ldr	r2, [r3, #0]
    2a6e:	2a00      	cmp	r2, #0
    2a70:	d1f8      	bne.n	2a64 <_open+0x58>
    2a72:	782b      	ldrb	r3, [r5, #0]
    2a74:	2b3a      	cmp	r3, #58	; 0x3a
    2a76:	d030      	beq.n	2ada <_open+0xce>
    2a78:	4668      	mov	r0, sp
    2a7a:	1c29      	adds	r1, r5, #0
    2a7c:	f001 f9a4 	bl	3dc8 <_ZN4mbed8FilePathC1EPKc>
    2a80:	4668      	mov	r0, sp
    2a82:	f001 f9fb 	bl	3e7c <_ZN4mbed8FilePath6existsEv>
    2a86:	2800      	cmp	r0, #0
    2a88:	d013      	beq.n	2ab2 <_open+0xa6>
    2a8a:	4668      	mov	r0, sp
    2a8c:	f001 f9d8 	bl	3e40 <_ZN4mbed8FilePath6isFileEv>
    2a90:	2800      	cmp	r0, #0
    2a92:	d011      	beq.n	2ab8 <_open+0xac>
    2a94:	4668      	mov	r0, sp
    2a96:	f001 f9df 	bl	3e58 <_ZN4mbed8FilePath4fileEv>
    2a9a:	2800      	cmp	r0, #0
    2a9c:	d009      	beq.n	2ab2 <_open+0xa6>
    2a9e:	00a3      	lsls	r3, r4, #2
    2aa0:	50f8      	str	r0, [r7, r3]
    2aa2:	3403      	adds	r4, #3
    2aa4:	e7c1      	b.n	2a2a <_open+0x1e>
    2aa6:	4b11      	ldr	r3, [pc, #68]	; (2aec <_open+0xe0>)
    2aa8:	2402      	movs	r4, #2
    2aaa:	681b      	ldr	r3, [r3, #0]
    2aac:	2b00      	cmp	r3, #0
    2aae:	d1bc      	bne.n	2a2a <_open+0x1e>
    2ab0:	e7cb      	b.n	2a4a <_open+0x3e>
    2ab2:	2401      	movs	r4, #1
    2ab4:	4264      	negs	r4, r4
    2ab6:	e7b8      	b.n	2a2a <_open+0x1e>
    2ab8:	4668      	mov	r0, sp
    2aba:	f001 f9b3 	bl	3e24 <_ZN4mbed8FilePath10fileSystemEv>
    2abe:	1e05      	subs	r5, r0, #0
    2ac0:	d0f7      	beq.n	2ab2 <_open+0xa6>
    2ac2:	6803      	ldr	r3, [r0, #0]
    2ac4:	4668      	mov	r0, sp
    2ac6:	689b      	ldr	r3, [r3, #8]
    2ac8:	4698      	mov	r8, r3
    2aca:	f001 f9a9 	bl	3e20 <_ZN4mbed8FilePath8fileNameEv>
    2ace:	4a0b      	ldr	r2, [pc, #44]	; (2afc <_open+0xf0>)
    2ad0:	1c01      	adds	r1, r0, #0
    2ad2:	4032      	ands	r2, r6
    2ad4:	1c28      	adds	r0, r5, #0
    2ad6:	47c0      	blx	r8
    2ad8:	e7df      	b.n	2a9a <_open+0x8e>
    2ada:	1c28      	adds	r0, r5, #0
    2adc:	4908      	ldr	r1, [pc, #32]	; (2b00 <_open+0xf4>)
    2ade:	466a      	mov	r2, sp
    2ae0:	f007 faa2 	bl	a028 <siscanf>
    2ae4:	9800      	ldr	r0, [sp, #0]
    2ae6:	e7d8      	b.n	2a9a <_open+0x8e>
    2ae8:	0000d97c 	.word	0x0000d97c
    2aec:	20004368 	.word	0x20004368
    2af0:	0000d98c 	.word	0x0000d98c
    2af4:	0000d984 	.word	0x0000d984
    2af8:	20004244 	.word	0x20004244
    2afc:	fffeffff 	.word	0xfffeffff
    2b00:	0000d9c4 	.word	0x0000d9c4

00002b04 <_close>:
    2b04:	b508      	push	{r3, lr}
    2b06:	1c03      	adds	r3, r0, #0
    2b08:	2000      	movs	r0, #0
    2b0a:	2b02      	cmp	r3, #2
    2b0c:	dd0a      	ble.n	2b24 <_close+0x20>
    2b0e:	4907      	ldr	r1, [pc, #28]	; (2b2c <_close+0x28>)
    2b10:	3b03      	subs	r3, #3
    2b12:	009b      	lsls	r3, r3, #2
    2b14:	585a      	ldr	r2, [r3, r1]
    2b16:	5058      	str	r0, [r3, r1]
    2b18:	2a00      	cmp	r2, #0
    2b1a:	d004      	beq.n	2b26 <_close+0x22>
    2b1c:	6813      	ldr	r3, [r2, #0]
    2b1e:	1c10      	adds	r0, r2, #0
    2b20:	685b      	ldr	r3, [r3, #4]
    2b22:	4798      	blx	r3
    2b24:	bd08      	pop	{r3, pc}
    2b26:	2001      	movs	r0, #1
    2b28:	4240      	negs	r0, r0
    2b2a:	e7fb      	b.n	2b24 <_close+0x20>
    2b2c:	20004244 	.word	0x20004244

00002b30 <_write>:
    2b30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2b32:	1c0c      	adds	r4, r1, #0
    2b34:	1c17      	adds	r7, r2, #0
    2b36:	2802      	cmp	r0, #2
    2b38:	dc12      	bgt.n	2b60 <_write+0x30>
    2b3a:	4b10      	ldr	r3, [pc, #64]	; (2b7c <_write+0x4c>)
    2b3c:	681b      	ldr	r3, [r3, #0]
    2b3e:	2b00      	cmp	r3, #0
    2b40:	d101      	bne.n	2b46 <_write+0x16>
    2b42:	f7ff ff41 	bl	29c8 <_ZL11init_serialv.part.0>
    2b46:	2f00      	cmp	r7, #0
    2b48:	d008      	beq.n	2b5c <_write+0x2c>
    2b4a:	4d0d      	ldr	r5, [pc, #52]	; (2b80 <_write+0x50>)
    2b4c:	19e6      	adds	r6, r4, r7
    2b4e:	7821      	ldrb	r1, [r4, #0]
    2b50:	1c28      	adds	r0, r5, #0
    2b52:	3401      	adds	r4, #1
    2b54:	f001 f918 	bl	3d88 <serial_putc>
    2b58:	42b4      	cmp	r4, r6
    2b5a:	d1f8      	bne.n	2b4e <_write+0x1e>
    2b5c:	1c38      	adds	r0, r7, #0
    2b5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2b60:	3803      	subs	r0, #3
    2b62:	4b08      	ldr	r3, [pc, #32]	; (2b84 <_write+0x54>)
    2b64:	0080      	lsls	r0, r0, #2
    2b66:	58c0      	ldr	r0, [r0, r3]
    2b68:	2800      	cmp	r0, #0
    2b6a:	d003      	beq.n	2b74 <_write+0x44>
    2b6c:	6803      	ldr	r3, [r0, #0]
    2b6e:	681b      	ldr	r3, [r3, #0]
    2b70:	4798      	blx	r3
    2b72:	e7f4      	b.n	2b5e <_write+0x2e>
    2b74:	2001      	movs	r0, #1
    2b76:	4240      	negs	r0, r0
    2b78:	e7f1      	b.n	2b5e <_write+0x2e>
    2b7a:	46c0      	nop			; (mov r8, r8)
    2b7c:	20004368 	.word	0x20004368
    2b80:	20004418 	.word	0x20004418
    2b84:	20004244 	.word	0x20004244

00002b88 <_read>:
    2b88:	b510      	push	{r4, lr}
    2b8a:	1c0c      	adds	r4, r1, #0
    2b8c:	2802      	cmp	r0, #2
    2b8e:	dc09      	bgt.n	2ba4 <_read+0x1c>
    2b90:	4b0c      	ldr	r3, [pc, #48]	; (2bc4 <_read+0x3c>)
    2b92:	681b      	ldr	r3, [r3, #0]
    2b94:	2b00      	cmp	r3, #0
    2b96:	d00f      	beq.n	2bb8 <_read+0x30>
    2b98:	480b      	ldr	r0, [pc, #44]	; (2bc8 <_read+0x40>)
    2b9a:	f001 f8c9 	bl	3d30 <serial_getc>
    2b9e:	7020      	strb	r0, [r4, #0]
    2ba0:	2001      	movs	r0, #1
    2ba2:	bd10      	pop	{r4, pc}
    2ba4:	3803      	subs	r0, #3
    2ba6:	4b09      	ldr	r3, [pc, #36]	; (2bcc <_read+0x44>)
    2ba8:	0080      	lsls	r0, r0, #2
    2baa:	58c0      	ldr	r0, [r0, r3]
    2bac:	2800      	cmp	r0, #0
    2bae:	d006      	beq.n	2bbe <_read+0x36>
    2bb0:	6803      	ldr	r3, [r0, #0]
    2bb2:	689b      	ldr	r3, [r3, #8]
    2bb4:	4798      	blx	r3
    2bb6:	e7f4      	b.n	2ba2 <_read+0x1a>
    2bb8:	f7ff ff06 	bl	29c8 <_ZL11init_serialv.part.0>
    2bbc:	e7ec      	b.n	2b98 <_read+0x10>
    2bbe:	2001      	movs	r0, #1
    2bc0:	4240      	negs	r0, r0
    2bc2:	e7ee      	b.n	2ba2 <_read+0x1a>
    2bc4:	20004368 	.word	0x20004368
    2bc8:	20004418 	.word	0x20004418
    2bcc:	20004244 	.word	0x20004244

00002bd0 <_isatty>:
    2bd0:	b508      	push	{r3, lr}
    2bd2:	1c03      	adds	r3, r0, #0
    2bd4:	2001      	movs	r0, #1
    2bd6:	2b02      	cmp	r3, #2
    2bd8:	dd08      	ble.n	2bec <_isatty+0x1c>
    2bda:	3b03      	subs	r3, #3
    2bdc:	4a05      	ldr	r2, [pc, #20]	; (2bf4 <_isatty+0x24>)
    2bde:	009b      	lsls	r3, r3, #2
    2be0:	5898      	ldr	r0, [r3, r2]
    2be2:	2800      	cmp	r0, #0
    2be4:	d003      	beq.n	2bee <_isatty+0x1e>
    2be6:	6803      	ldr	r3, [r0, #0]
    2be8:	68db      	ldr	r3, [r3, #12]
    2bea:	4798      	blx	r3
    2bec:	bd08      	pop	{r3, pc}
    2bee:	2001      	movs	r0, #1
    2bf0:	4240      	negs	r0, r0
    2bf2:	e7fb      	b.n	2bec <_isatty+0x1c>
    2bf4:	20004244 	.word	0x20004244

00002bf8 <_lseek>:
    2bf8:	b508      	push	{r3, lr}
    2bfa:	1c03      	adds	r3, r0, #0
    2bfc:	2000      	movs	r0, #0
    2bfe:	2b02      	cmp	r3, #2
    2c00:	dd08      	ble.n	2c14 <_lseek+0x1c>
    2c02:	3b03      	subs	r3, #3
    2c04:	4805      	ldr	r0, [pc, #20]	; (2c1c <_lseek+0x24>)
    2c06:	009b      	lsls	r3, r3, #2
    2c08:	5818      	ldr	r0, [r3, r0]
    2c0a:	2800      	cmp	r0, #0
    2c0c:	d003      	beq.n	2c16 <_lseek+0x1e>
    2c0e:	6803      	ldr	r3, [r0, #0]
    2c10:	691b      	ldr	r3, [r3, #16]
    2c12:	4798      	blx	r3
    2c14:	bd08      	pop	{r3, pc}
    2c16:	2001      	movs	r0, #1
    2c18:	4240      	negs	r0, r0
    2c1a:	e7fb      	b.n	2c14 <_lseek+0x1c>
    2c1c:	20004244 	.word	0x20004244

00002c20 <_fstat>:
    2c20:	b508      	push	{r3, lr}
    2c22:	2802      	cmp	r0, #2
    2c24:	d804      	bhi.n	2c30 <_fstat+0x10>
    2c26:	2380      	movs	r3, #128	; 0x80
    2c28:	2000      	movs	r0, #0
    2c2a:	019b      	lsls	r3, r3, #6
    2c2c:	604b      	str	r3, [r1, #4]
    2c2e:	bd08      	pop	{r3, pc}
    2c30:	f005 fb0c 	bl	824c <__errno>
    2c34:	2309      	movs	r3, #9
    2c36:	6003      	str	r3, [r0, #0]
    2c38:	2001      	movs	r0, #1
    2c3a:	4240      	negs	r0, r0
    2c3c:	e7f7      	b.n	2c2e <_fstat+0xe>
    2c3e:	46c0      	nop			; (mov r8, r8)

00002c40 <__cxa_pure_virtual>:
    2c40:	b508      	push	{r3, lr}
    2c42:	2001      	movs	r0, #1
    2c44:	f005 fb08 	bl	8258 <exit>

00002c48 <mbed_main>:
    2c48:	4770      	bx	lr
    2c4a:	46c0      	nop			; (mov r8, r8)

00002c4c <__wrap_main>:
    2c4c:	b508      	push	{r3, lr}
    2c4e:	f7ff fe95 	bl	297c <mbed_sdk_init>
    2c52:	f7ff fff9 	bl	2c48 <mbed_main>
    2c56:	f7fe fea1 	bl	199c <main>
    2c5a:	bd08      	pop	{r3, pc}

00002c5c <_sbrk>:
    2c5c:	4a07      	ldr	r2, [pc, #28]	; (2c7c <_sbrk+0x20>)
    2c5e:	6813      	ldr	r3, [r2, #0]
    2c60:	1818      	adds	r0, r3, r0
    2c62:	f3ef 8108 	mrs	r1, MSP
    2c66:	4288      	cmp	r0, r1
    2c68:	d202      	bcs.n	2c70 <_sbrk+0x14>
    2c6a:	6010      	str	r0, [r2, #0]
    2c6c:	1c18      	adds	r0, r3, #0
    2c6e:	4770      	bx	lr
    2c70:	220c      	movs	r2, #12
    2c72:	2001      	movs	r0, #1
    2c74:	4b02      	ldr	r3, [pc, #8]	; (2c80 <_sbrk+0x24>)
    2c76:	4240      	negs	r0, r0
    2c78:	601a      	str	r2, [r3, #0]
    2c7a:	e7f8      	b.n	2c6e <_sbrk+0x12>
    2c7c:	200000cc 	.word	0x200000cc
    2c80:	20004488 	.word	0x20004488

00002c84 <_exit>:
    2c84:	b508      	push	{r3, lr}
    2c86:	2800      	cmp	r0, #0
    2c88:	d100      	bne.n	2c8c <_exit+0x8>
    2c8a:	e7fe      	b.n	2c8a <_exit+0x6>
    2c8c:	f7ff fe52 	bl	2934 <mbed_die>
    2c90:	e7fb      	b.n	2c8a <_exit+0x6>
    2c92:	46c0      	nop			; (mov r8, r8)

00002c94 <_ZN4mbed26mbed_set_unbuffered_streamEP7__sFILE>:
    2c94:	b508      	push	{r3, lr}
    2c96:	2100      	movs	r1, #0
    2c98:	f007 f911 	bl	9ebe <setbuf>
    2c9c:	bd08      	pop	{r3, pc}
    2c9e:	46c0      	nop			; (mov r8, r8)

00002ca0 <Dummy_Handler>:
    2ca0:	e7fe      	b.n	2ca0 <Dummy_Handler>
    2ca2:	46c0      	nop			; (mov r8, r8)

00002ca4 <Reset_Handler>:
    2ca4:	4816      	ldr	r0, [pc, #88]	; (2d00 <Reset_Handler+0x5c>)
    2ca6:	4917      	ldr	r1, [pc, #92]	; (2d04 <Reset_Handler+0x60>)
    2ca8:	b510      	push	{r4, lr}
    2caa:	4288      	cmp	r0, r1
    2cac:	d00d      	beq.n	2cca <Reset_Handler+0x26>
    2cae:	4b16      	ldr	r3, [pc, #88]	; (2d08 <Reset_Handler+0x64>)
    2cb0:	4299      	cmp	r1, r3
    2cb2:	d20a      	bcs.n	2cca <Reset_Handler+0x26>
    2cb4:	43ca      	mvns	r2, r1
    2cb6:	18d3      	adds	r3, r2, r3
    2cb8:	2200      	movs	r2, #0
    2cba:	089b      	lsrs	r3, r3, #2
    2cbc:	3301      	adds	r3, #1
    2cbe:	009b      	lsls	r3, r3, #2
    2cc0:	5884      	ldr	r4, [r0, r2]
    2cc2:	508c      	str	r4, [r1, r2]
    2cc4:	3204      	adds	r2, #4
    2cc6:	429a      	cmp	r2, r3
    2cc8:	d1fa      	bne.n	2cc0 <Reset_Handler+0x1c>
    2cca:	4910      	ldr	r1, [pc, #64]	; (2d0c <Reset_Handler+0x68>)
    2ccc:	4b10      	ldr	r3, [pc, #64]	; (2d10 <Reset_Handler+0x6c>)
    2cce:	4299      	cmp	r1, r3
    2cd0:	d20b      	bcs.n	2cea <Reset_Handler+0x46>
    2cd2:	43ca      	mvns	r2, r1
    2cd4:	2000      	movs	r0, #0
    2cd6:	18d3      	adds	r3, r2, r3
    2cd8:	2200      	movs	r2, #0
    2cda:	089b      	lsrs	r3, r3, #2
    2cdc:	3301      	adds	r3, #1
    2cde:	009b      	lsls	r3, r3, #2
    2ce0:	188c      	adds	r4, r1, r2
    2ce2:	3204      	adds	r2, #4
    2ce4:	6020      	str	r0, [r4, #0]
    2ce6:	429a      	cmp	r2, r3
    2ce8:	d1fa      	bne.n	2ce0 <Reset_Handler+0x3c>
    2cea:	21ff      	movs	r1, #255	; 0xff
    2cec:	4b09      	ldr	r3, [pc, #36]	; (2d14 <Reset_Handler+0x70>)
    2cee:	4a0a      	ldr	r2, [pc, #40]	; (2d18 <Reset_Handler+0x74>)
    2cf0:	438b      	bics	r3, r1
    2cf2:	6093      	str	r3, [r2, #8]
    2cf4:	f005 fdae 	bl	8854 <__libc_init_array>
    2cf8:	f7ff ffa8 	bl	2c4c <__wrap_main>
    2cfc:	e7fe      	b.n	2cfc <Reset_Handler+0x58>
    2cfe:	46c0      	nop			; (mov r8, r8)
    2d00:	0000e70c 	.word	0x0000e70c
    2d04:	200000b0 	.word	0x200000b0
    2d08:	20000174 	.word	0x20000174
    2d0c:	20000174 	.word	0x20000174
    2d10:	2000448c 	.word	0x2000448c
    2d14:	00000000 	.word	0x00000000
    2d18:	e000ed00 	.word	0xe000ed00

00002d1c <extint_register_callback>:
    2d1c:	2317      	movs	r3, #23
    2d1e:	2a00      	cmp	r2, #0
    2d20:	d001      	beq.n	2d26 <extint_register_callback+0xa>
    2d22:	1c18      	adds	r0, r3, #0
    2d24:	4770      	bx	lr
    2d26:	4a06      	ldr	r2, [pc, #24]	; (2d40 <extint_register_callback+0x24>)
    2d28:	0089      	lsls	r1, r1, #2
    2d2a:	588b      	ldr	r3, [r1, r2]
    2d2c:	2b00      	cmp	r3, #0
    2d2e:	d003      	beq.n	2d38 <extint_register_callback+0x1c>
    2d30:	4283      	cmp	r3, r0
    2d32:	d003      	beq.n	2d3c <extint_register_callback+0x20>
    2d34:	231d      	movs	r3, #29
    2d36:	e7f4      	b.n	2d22 <extint_register_callback+0x6>
    2d38:	5088      	str	r0, [r1, r2]
    2d3a:	e7f2      	b.n	2d22 <extint_register_callback+0x6>
    2d3c:	2300      	movs	r3, #0
    2d3e:	e7f0      	b.n	2d22 <extint_register_callback+0x6>
    2d40:	200043c0 	.word	0x200043c0

00002d44 <extint_chan_enable_callback>:
    2d44:	2317      	movs	r3, #23
    2d46:	2900      	cmp	r1, #0
    2d48:	d001      	beq.n	2d4e <extint_chan_enable_callback+0xa>
    2d4a:	1c18      	adds	r0, r3, #0
    2d4c:	4770      	bx	lr
    2d4e:	2200      	movs	r2, #0
    2d50:	281f      	cmp	r0, #31
    2d52:	d800      	bhi.n	2d56 <extint_chan_enable_callback+0x12>
    2d54:	4a02      	ldr	r2, [pc, #8]	; (2d60 <extint_chan_enable_callback+0x1c>)
    2d56:	2301      	movs	r3, #1
    2d58:	4083      	lsls	r3, r0
    2d5a:	60d3      	str	r3, [r2, #12]
    2d5c:	2300      	movs	r3, #0
    2d5e:	e7f4      	b.n	2d4a <extint_chan_enable_callback+0x6>
    2d60:	40001800 	.word	0x40001800

00002d64 <EIC_Handler>:
    2d64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2d66:	2300      	movs	r3, #0
    2d68:	2601      	movs	r6, #1
    2d6a:	4c0b      	ldr	r4, [pc, #44]	; (2d98 <EIC_Handler+0x34>)
    2d6c:	4d0b      	ldr	r5, [pc, #44]	; (2d9c <EIC_Handler+0x38>)
    2d6e:	4f0c      	ldr	r7, [pc, #48]	; (2da0 <EIC_Handler+0x3c>)
    2d70:	7023      	strb	r3, [r4, #0]
    2d72:	1c32      	adds	r2, r6, #0
    2d74:	409a      	lsls	r2, r3
    2d76:	6929      	ldr	r1, [r5, #16]
    2d78:	4211      	tst	r1, r2
    2d7a:	d005      	beq.n	2d88 <EIC_Handler+0x24>
    2d7c:	612a      	str	r2, [r5, #16]
    2d7e:	009b      	lsls	r3, r3, #2
    2d80:	59db      	ldr	r3, [r3, r7]
    2d82:	2b00      	cmp	r3, #0
    2d84:	d000      	beq.n	2d88 <EIC_Handler+0x24>
    2d86:	4798      	blx	r3
    2d88:	7823      	ldrb	r3, [r4, #0]
    2d8a:	3301      	adds	r3, #1
    2d8c:	b2db      	uxtb	r3, r3
    2d8e:	7023      	strb	r3, [r4, #0]
    2d90:	2b0f      	cmp	r3, #15
    2d92:	d9ee      	bls.n	2d72 <EIC_Handler+0xe>
    2d94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2d96:	46c0      	nop			; (mov r8, r8)
    2d98:	200043bc 	.word	0x200043bc
    2d9c:	40001800 	.word	0x40001800
    2da0:	200043c0 	.word	0x200043c0

00002da4 <_extint_enable>:
    2da4:	2302      	movs	r3, #2
    2da6:	4a04      	ldr	r2, [pc, #16]	; (2db8 <_extint_enable+0x14>)
    2da8:	7811      	ldrb	r1, [r2, #0]
    2daa:	430b      	orrs	r3, r1
    2dac:	7013      	strb	r3, [r2, #0]
    2dae:	7853      	ldrb	r3, [r2, #1]
    2db0:	b25b      	sxtb	r3, r3
    2db2:	2b00      	cmp	r3, #0
    2db4:	dbfb      	blt.n	2dae <_extint_enable+0xa>
    2db6:	4770      	bx	lr
    2db8:	40001800 	.word	0x40001800

00002dbc <_system_extint_init>:
    2dbc:	2340      	movs	r3, #64	; 0x40
    2dbe:	b500      	push	{lr}
    2dc0:	4a12      	ldr	r2, [pc, #72]	; (2e0c <_system_extint_init+0x50>)
    2dc2:	b083      	sub	sp, #12
    2dc4:	6991      	ldr	r1, [r2, #24]
    2dc6:	2005      	movs	r0, #5
    2dc8:	430b      	orrs	r3, r1
    2dca:	6193      	str	r3, [r2, #24]
    2dcc:	2300      	movs	r3, #0
    2dce:	a901      	add	r1, sp, #4
    2dd0:	700b      	strb	r3, [r1, #0]
    2dd2:	f000 fd0f 	bl	37f4 <system_gclk_chan_set_config>
    2dd6:	2005      	movs	r0, #5
    2dd8:	f000 fcce 	bl	3778 <system_gclk_chan_enable>
    2ddc:	2301      	movs	r3, #1
    2dde:	4a0c      	ldr	r2, [pc, #48]	; (2e10 <_system_extint_init+0x54>)
    2de0:	7811      	ldrb	r1, [r2, #0]
    2de2:	430b      	orrs	r3, r1
    2de4:	7013      	strb	r3, [r2, #0]
    2de6:	7853      	ldrb	r3, [r2, #1]
    2de8:	b25b      	sxtb	r3, r3
    2dea:	2b00      	cmp	r3, #0
    2dec:	dbfb      	blt.n	2de6 <_system_extint_init+0x2a>
    2dee:	4b09      	ldr	r3, [pc, #36]	; (2e14 <_system_extint_init+0x58>)
    2df0:	2200      	movs	r2, #0
    2df2:	1c19      	adds	r1, r3, #0
    2df4:	3140      	adds	r1, #64	; 0x40
    2df6:	c304      	stmia	r3!, {r2}
    2df8:	428b      	cmp	r3, r1
    2dfa:	d1fc      	bne.n	2df6 <_system_extint_init+0x3a>
    2dfc:	2210      	movs	r2, #16
    2dfe:	4b06      	ldr	r3, [pc, #24]	; (2e18 <_system_extint_init+0x5c>)
    2e00:	601a      	str	r2, [r3, #0]
    2e02:	f7ff ffcf 	bl	2da4 <_extint_enable>
    2e06:	b003      	add	sp, #12
    2e08:	bd00      	pop	{pc}
    2e0a:	46c0      	nop			; (mov r8, r8)
    2e0c:	40000400 	.word	0x40000400
    2e10:	40001800 	.word	0x40001800
    2e14:	200043c0 	.word	0x200043c0
    2e18:	e000e100 	.word	0xe000e100

00002e1c <extint_chan_get_config_defaults>:
    2e1c:	2300      	movs	r3, #0
    2e1e:	2201      	movs	r2, #1
    2e20:	6003      	str	r3, [r0, #0]
    2e22:	6043      	str	r3, [r0, #4]
    2e24:	7283      	strb	r3, [r0, #10]
    2e26:	3302      	adds	r3, #2
    2e28:	7202      	strb	r2, [r0, #8]
    2e2a:	7242      	strb	r2, [r0, #9]
    2e2c:	72c3      	strb	r3, [r0, #11]
    2e2e:	4770      	bx	lr

00002e30 <extint_chan_set_config>:
    2e30:	b5f0      	push	{r4, r5, r6, r7, lr}
    2e32:	2300      	movs	r3, #0
    2e34:	1c0c      	adds	r4, r1, #0
    2e36:	b083      	sub	sp, #12
    2e38:	a901      	add	r1, sp, #4
    2e3a:	704b      	strb	r3, [r1, #1]
    2e3c:	70cb      	strb	r3, [r1, #3]
    2e3e:	7923      	ldrb	r3, [r4, #4]
    2e40:	1c05      	adds	r5, r0, #0
    2e42:	700b      	strb	r3, [r1, #0]
    2e44:	7a23      	ldrb	r3, [r4, #8]
    2e46:	7820      	ldrb	r0, [r4, #0]
    2e48:	708b      	strb	r3, [r1, #2]
    2e4a:	2600      	movs	r6, #0
    2e4c:	f000 fbc8 	bl	35e0 <system_pinmux_pin_set_config>
    2e50:	2d1f      	cmp	r5, #31
    2e52:	d800      	bhi.n	2e56 <extint_chan_set_config+0x26>
    2e54:	4e12      	ldr	r6, [pc, #72]	; (2ea0 <extint_chan_set_config+0x70>)
    2e56:	2207      	movs	r2, #7
    2e58:	7aa3      	ldrb	r3, [r4, #10]
    2e5a:	402a      	ands	r2, r5
    2e5c:	0092      	lsls	r2, r2, #2
    2e5e:	7ae0      	ldrb	r0, [r4, #11]
    2e60:	2b00      	cmp	r3, #0
    2e62:	d001      	beq.n	2e68 <extint_chan_set_config+0x38>
    2e64:	2308      	movs	r3, #8
    2e66:	4318      	orrs	r0, r3
    2e68:	270f      	movs	r7, #15
    2e6a:	4097      	lsls	r7, r2
    2e6c:	08eb      	lsrs	r3, r5, #3
    2e6e:	009b      	lsls	r3, r3, #2
    2e70:	18f3      	adds	r3, r6, r3
    2e72:	6999      	ldr	r1, [r3, #24]
    2e74:	4090      	lsls	r0, r2
    2e76:	43b9      	bics	r1, r7
    2e78:	1c0a      	adds	r2, r1, #0
    2e7a:	4302      	orrs	r2, r0
    2e7c:	619a      	str	r2, [r3, #24]
    2e7e:	7a63      	ldrb	r3, [r4, #9]
    2e80:	2b00      	cmp	r3, #0
    2e82:	d106      	bne.n	2e92 <extint_chan_set_config+0x62>
    2e84:	2201      	movs	r2, #1
    2e86:	40aa      	lsls	r2, r5
    2e88:	6973      	ldr	r3, [r6, #20]
    2e8a:	4393      	bics	r3, r2
    2e8c:	6173      	str	r3, [r6, #20]
    2e8e:	b003      	add	sp, #12
    2e90:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2e92:	2201      	movs	r2, #1
    2e94:	40aa      	lsls	r2, r5
    2e96:	1c15      	adds	r5, r2, #0
    2e98:	6973      	ldr	r3, [r6, #20]
    2e9a:	431d      	orrs	r5, r3
    2e9c:	6175      	str	r5, [r6, #20]
    2e9e:	e7f6      	b.n	2e8e <extint_chan_set_config+0x5e>
    2ea0:	40001800 	.word	0x40001800

00002ea4 <_sercom_default_handler>:
    2ea4:	4770      	bx	lr
    2ea6:	46c0      	nop			; (mov r8, r8)

00002ea8 <_sercom_set_handler>:
    2ea8:	468c      	mov	ip, r1
    2eaa:	490c      	ldr	r1, [pc, #48]	; (2edc <_sercom_set_handler+0x34>)
    2eac:	b5f0      	push	{r4, r5, r6, r7, lr}
    2eae:	780b      	ldrb	r3, [r1, #0]
    2eb0:	2b00      	cmp	r3, #0
    2eb2:	d110      	bne.n	2ed6 <_sercom_set_handler+0x2e>
    2eb4:	2300      	movs	r3, #0
    2eb6:	2500      	movs	r5, #0
    2eb8:	4c09      	ldr	r4, [pc, #36]	; (2ee0 <_sercom_set_handler+0x38>)
    2eba:	4f0a      	ldr	r7, [pc, #40]	; (2ee4 <_sercom_set_handler+0x3c>)
    2ebc:	4e0a      	ldr	r6, [pc, #40]	; (2ee8 <_sercom_set_handler+0x40>)
    2ebe:	18f2      	adds	r2, r6, r3
    2ec0:	50e7      	str	r7, [r4, r3]
    2ec2:	3304      	adds	r3, #4
    2ec4:	6015      	str	r5, [r2, #0]
    2ec6:	2b18      	cmp	r3, #24
    2ec8:	d1f9      	bne.n	2ebe <_sercom_set_handler+0x16>
    2eca:	3b17      	subs	r3, #23
    2ecc:	700b      	strb	r3, [r1, #0]
    2ece:	4663      	mov	r3, ip
    2ed0:	0080      	lsls	r0, r0, #2
    2ed2:	5023      	str	r3, [r4, r0]
    2ed4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2ed6:	4c02      	ldr	r4, [pc, #8]	; (2ee0 <_sercom_set_handler+0x38>)
    2ed8:	e7f9      	b.n	2ece <_sercom_set_handler+0x26>
    2eda:	46c0      	nop			; (mov r8, r8)
    2edc:	20004344 	.word	0x20004344
    2ee0:	20004348 	.word	0x20004348
    2ee4:	00002ea5 	.word	0x00002ea5
    2ee8:	20004400 	.word	0x20004400

00002eec <_sercom_get_interrupt_vector>:
    2eec:	b510      	push	{r4, lr}
    2eee:	1c04      	adds	r4, r0, #0
    2ef0:	b082      	sub	sp, #8
    2ef2:	4906      	ldr	r1, [pc, #24]	; (2f0c <_sercom_get_interrupt_vector+0x20>)
    2ef4:	2206      	movs	r2, #6
    2ef6:	4668      	mov	r0, sp
    2ef8:	f005 fd49 	bl	898e <memcpy>
    2efc:	1c20      	adds	r0, r4, #0
    2efe:	f001 fb37 	bl	4570 <_sercom_get_sercom_inst_index>
    2f02:	466b      	mov	r3, sp
    2f04:	5618      	ldrsb	r0, [r3, r0]
    2f06:	b002      	add	sp, #8
    2f08:	bd10      	pop	{r4, pc}
    2f0a:	46c0      	nop			; (mov r8, r8)
    2f0c:	0000d9d4 	.word	0x0000d9d4

00002f10 <SERCOM0_Handler>:
    2f10:	b508      	push	{r3, lr}
    2f12:	4b02      	ldr	r3, [pc, #8]	; (2f1c <SERCOM0_Handler+0xc>)
    2f14:	2000      	movs	r0, #0
    2f16:	681b      	ldr	r3, [r3, #0]
    2f18:	4798      	blx	r3
    2f1a:	bd08      	pop	{r3, pc}
    2f1c:	20004348 	.word	0x20004348

00002f20 <SERCOM1_Handler>:
    2f20:	b508      	push	{r3, lr}
    2f22:	4b02      	ldr	r3, [pc, #8]	; (2f2c <SERCOM1_Handler+0xc>)
    2f24:	2001      	movs	r0, #1
    2f26:	685b      	ldr	r3, [r3, #4]
    2f28:	4798      	blx	r3
    2f2a:	bd08      	pop	{r3, pc}
    2f2c:	20004348 	.word	0x20004348

00002f30 <SERCOM2_Handler>:
    2f30:	b508      	push	{r3, lr}
    2f32:	4b02      	ldr	r3, [pc, #8]	; (2f3c <SERCOM2_Handler+0xc>)
    2f34:	2002      	movs	r0, #2
    2f36:	689b      	ldr	r3, [r3, #8]
    2f38:	4798      	blx	r3
    2f3a:	bd08      	pop	{r3, pc}
    2f3c:	20004348 	.word	0x20004348

00002f40 <SERCOM3_Handler>:
    2f40:	b508      	push	{r3, lr}
    2f42:	4b02      	ldr	r3, [pc, #8]	; (2f4c <SERCOM3_Handler+0xc>)
    2f44:	2003      	movs	r0, #3
    2f46:	68db      	ldr	r3, [r3, #12]
    2f48:	4798      	blx	r3
    2f4a:	bd08      	pop	{r3, pc}
    2f4c:	20004348 	.word	0x20004348

00002f50 <_usart_read_buffer>:
    2f50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2f52:	1c04      	adds	r4, r0, #0
    2f54:	1c0e      	adds	r6, r1, #0
    2f56:	1c17      	adds	r7, r2, #0
    2f58:	6805      	ldr	r5, [r0, #0]
    2f5a:	f000 fc79 	bl	3850 <cpu_irq_enter_critical>
    2f5e:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
    2f60:	2b00      	cmp	r3, #0
    2f62:	d003      	beq.n	2f6c <_usart_read_buffer+0x1c>
    2f64:	f000 fc92 	bl	388c <cpu_irq_leave_critical>
    2f68:	2005      	movs	r0, #5
    2f6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2f6c:	85a7      	strh	r7, [r4, #44]	; 0x2c
    2f6e:	f000 fc8d 	bl	388c <cpu_irq_leave_critical>
    2f72:	2332      	movs	r3, #50	; 0x32
    2f74:	2205      	movs	r2, #5
    2f76:	6266      	str	r6, [r4, #36]	; 0x24
    2f78:	54e2      	strb	r2, [r4, r3]
    2f7a:	3b2e      	subs	r3, #46	; 0x2e
    2f7c:	75ab      	strb	r3, [r5, #22]
    2f7e:	7a23      	ldrb	r3, [r4, #8]
    2f80:	2b00      	cmp	r3, #0
    2f82:	d106      	bne.n	2f92 <_usart_read_buffer+0x42>
    2f84:	7a63      	ldrb	r3, [r4, #9]
    2f86:	2000      	movs	r0, #0
    2f88:	2b00      	cmp	r3, #0
    2f8a:	d0ee      	beq.n	2f6a <_usart_read_buffer+0x1a>
    2f8c:	2308      	movs	r3, #8
    2f8e:	75ab      	strb	r3, [r5, #22]
    2f90:	e7eb      	b.n	2f6a <_usart_read_buffer+0x1a>
    2f92:	2320      	movs	r3, #32
    2f94:	75ab      	strb	r3, [r5, #22]
    2f96:	e7f5      	b.n	2f84 <_usart_read_buffer+0x34>

00002f98 <usart_register_callback>:
    2f98:	1c93      	adds	r3, r2, #2
    2f9a:	009b      	lsls	r3, r3, #2
    2f9c:	18c3      	adds	r3, r0, r3
    2f9e:	6059      	str	r1, [r3, #4]
    2fa0:	2301      	movs	r3, #1
    2fa2:	4093      	lsls	r3, r2
    2fa4:	2130      	movs	r1, #48	; 0x30
    2fa6:	1c1a      	adds	r2, r3, #0
    2fa8:	5c43      	ldrb	r3, [r0, r1]
    2faa:	431a      	orrs	r2, r3
    2fac:	5442      	strb	r2, [r0, r1]
    2fae:	4770      	bx	lr

00002fb0 <usart_read_job>:
    2fb0:	b508      	push	{r3, lr}
    2fb2:	2201      	movs	r2, #1
    2fb4:	f7ff ffcc 	bl	2f50 <_usart_read_buffer>
    2fb8:	bd08      	pop	{r3, pc}
    2fba:	46c0      	nop			; (mov r8, r8)

00002fbc <_usart_interrupt_handler>:
    2fbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2fbe:	4b68      	ldr	r3, [pc, #416]	; (3160 <_usart_interrupt_handler+0x1a4>)
    2fc0:	0080      	lsls	r0, r0, #2
    2fc2:	58c5      	ldr	r5, [r0, r3]
    2fc4:	682c      	ldr	r4, [r5, #0]
    2fc6:	69e3      	ldr	r3, [r4, #28]
    2fc8:	2b00      	cmp	r3, #0
    2fca:	d1fc      	bne.n	2fc6 <_usart_interrupt_handler+0xa>
    2fcc:	7e26      	ldrb	r6, [r4, #24]
    2fce:	7da3      	ldrb	r3, [r4, #22]
    2fd0:	2230      	movs	r2, #48	; 0x30
    2fd2:	401e      	ands	r6, r3
    2fd4:	2331      	movs	r3, #49	; 0x31
    2fd6:	5caf      	ldrb	r7, [r5, r2]
    2fd8:	5ceb      	ldrb	r3, [r5, r3]
    2fda:	401f      	ands	r7, r3
    2fdc:	2301      	movs	r3, #1
    2fde:	4233      	tst	r3, r6
    2fe0:	d019      	beq.n	3016 <_usart_interrupt_handler+0x5a>
    2fe2:	8dea      	ldrh	r2, [r5, #46]	; 0x2e
    2fe4:	2a00      	cmp	r2, #0
    2fe6:	d04f      	beq.n	3088 <_usart_interrupt_handler+0xcc>
    2fe8:	6aaa      	ldr	r2, [r5, #40]	; 0x28
    2fea:	1c51      	adds	r1, r2, #1
    2fec:	7813      	ldrb	r3, [r2, #0]
    2fee:	62a9      	str	r1, [r5, #40]	; 0x28
    2ff0:	7969      	ldrb	r1, [r5, #5]
    2ff2:	b2db      	uxtb	r3, r3
    2ff4:	2901      	cmp	r1, #1
    2ff6:	d100      	bne.n	2ffa <_usart_interrupt_handler+0x3e>
    2ff8:	e077      	b.n	30ea <_usart_interrupt_handler+0x12e>
    2ffa:	b29b      	uxth	r3, r3
    2ffc:	05db      	lsls	r3, r3, #23
    2ffe:	0ddb      	lsrs	r3, r3, #23
    3000:	8523      	strh	r3, [r4, #40]	; 0x28
    3002:	8deb      	ldrh	r3, [r5, #46]	; 0x2e
    3004:	3b01      	subs	r3, #1
    3006:	b29b      	uxth	r3, r3
    3008:	85eb      	strh	r3, [r5, #46]	; 0x2e
    300a:	2b00      	cmp	r3, #0
    300c:	d103      	bne.n	3016 <_usart_interrupt_handler+0x5a>
    300e:	3301      	adds	r3, #1
    3010:	7523      	strb	r3, [r4, #20]
    3012:	3301      	adds	r3, #1
    3014:	75a3      	strb	r3, [r4, #22]
    3016:	2302      	movs	r3, #2
    3018:	4233      	tst	r3, r6
    301a:	d005      	beq.n	3028 <_usart_interrupt_handler+0x6c>
    301c:	2200      	movs	r2, #0
    301e:	7523      	strb	r3, [r4, #20]
    3020:	3331      	adds	r3, #49	; 0x31
    3022:	54ea      	strb	r2, [r5, r3]
    3024:	07fb      	lsls	r3, r7, #31
    3026:	d43d      	bmi.n	30a4 <_usart_interrupt_handler+0xe8>
    3028:	2304      	movs	r3, #4
    302a:	4233      	tst	r3, r6
    302c:	d014      	beq.n	3058 <_usart_interrupt_handler+0x9c>
    302e:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
    3030:	2a00      	cmp	r2, #0
    3032:	d027      	beq.n	3084 <_usart_interrupt_handler+0xc8>
    3034:	8b63      	ldrh	r3, [r4, #26]
    3036:	b2db      	uxtb	r3, r3
    3038:	071a      	lsls	r2, r3, #28
    303a:	d437      	bmi.n	30ac <_usart_interrupt_handler+0xf0>
    303c:	223f      	movs	r2, #63	; 0x3f
    303e:	4013      	ands	r3, r2
    3040:	d037      	beq.n	30b2 <_usart_interrupt_handler+0xf6>
    3042:	079a      	lsls	r2, r3, #30
    3044:	d557      	bpl.n	30f6 <_usart_interrupt_handler+0x13a>
    3046:	221a      	movs	r2, #26
    3048:	2332      	movs	r3, #50	; 0x32
    304a:	54ea      	strb	r2, [r5, r3]
    304c:	8b62      	ldrh	r2, [r4, #26]
    304e:	3b30      	subs	r3, #48	; 0x30
    3050:	4313      	orrs	r3, r2
    3052:	8363      	strh	r3, [r4, #26]
    3054:	077b      	lsls	r3, r7, #29
    3056:	d45a      	bmi.n	310e <_usart_interrupt_handler+0x152>
    3058:	2310      	movs	r3, #16
    305a:	4233      	tst	r3, r6
    305c:	d003      	beq.n	3066 <_usart_interrupt_handler+0xaa>
    305e:	7523      	strb	r3, [r4, #20]
    3060:	7623      	strb	r3, [r4, #24]
    3062:	423b      	tst	r3, r7
    3064:	d116      	bne.n	3094 <_usart_interrupt_handler+0xd8>
    3066:	2320      	movs	r3, #32
    3068:	4233      	tst	r3, r6
    306a:	d003      	beq.n	3074 <_usart_interrupt_handler+0xb8>
    306c:	7523      	strb	r3, [r4, #20]
    306e:	7623      	strb	r3, [r4, #24]
    3070:	073b      	lsls	r3, r7, #28
    3072:	d413      	bmi.n	309c <_usart_interrupt_handler+0xe0>
    3074:	2308      	movs	r3, #8
    3076:	4233      	tst	r3, r6
    3078:	d003      	beq.n	3082 <_usart_interrupt_handler+0xc6>
    307a:	7523      	strb	r3, [r4, #20]
    307c:	7623      	strb	r3, [r4, #24]
    307e:	06bb      	lsls	r3, r7, #26
    3080:	d404      	bmi.n	308c <_usart_interrupt_handler+0xd0>
    3082:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3084:	7523      	strb	r3, [r4, #20]
    3086:	e7e7      	b.n	3058 <_usart_interrupt_handler+0x9c>
    3088:	7523      	strb	r3, [r4, #20]
    308a:	e7c4      	b.n	3016 <_usart_interrupt_handler+0x5a>
    308c:	6a2b      	ldr	r3, [r5, #32]
    308e:	1c28      	adds	r0, r5, #0
    3090:	4798      	blx	r3
    3092:	e7f6      	b.n	3082 <_usart_interrupt_handler+0xc6>
    3094:	1c28      	adds	r0, r5, #0
    3096:	69eb      	ldr	r3, [r5, #28]
    3098:	4798      	blx	r3
    309a:	e7e4      	b.n	3066 <_usart_interrupt_handler+0xaa>
    309c:	1c28      	adds	r0, r5, #0
    309e:	69ab      	ldr	r3, [r5, #24]
    30a0:	4798      	blx	r3
    30a2:	e7e7      	b.n	3074 <_usart_interrupt_handler+0xb8>
    30a4:	1c28      	adds	r0, r5, #0
    30a6:	68eb      	ldr	r3, [r5, #12]
    30a8:	4798      	blx	r3
    30aa:	e7bd      	b.n	3028 <_usart_interrupt_handler+0x6c>
    30ac:	2237      	movs	r2, #55	; 0x37
    30ae:	4013      	ands	r3, r2
    30b0:	d1c7      	bne.n	3042 <_usart_interrupt_handler+0x86>
    30b2:	8d23      	ldrh	r3, [r4, #40]	; 0x28
    30b4:	6a69      	ldr	r1, [r5, #36]	; 0x24
    30b6:	05db      	lsls	r3, r3, #23
    30b8:	0ddb      	lsrs	r3, r3, #23
    30ba:	b2da      	uxtb	r2, r3
    30bc:	700a      	strb	r2, [r1, #0]
    30be:	6a6a      	ldr	r2, [r5, #36]	; 0x24
    30c0:	1c51      	adds	r1, r2, #1
    30c2:	6269      	str	r1, [r5, #36]	; 0x24
    30c4:	7969      	ldrb	r1, [r5, #5]
    30c6:	2901      	cmp	r1, #1
    30c8:	d02d      	beq.n	3126 <_usart_interrupt_handler+0x16a>
    30ca:	8dab      	ldrh	r3, [r5, #44]	; 0x2c
    30cc:	3b01      	subs	r3, #1
    30ce:	b29b      	uxth	r3, r3
    30d0:	85ab      	strh	r3, [r5, #44]	; 0x2c
    30d2:	2b00      	cmp	r3, #0
    30d4:	d1c0      	bne.n	3058 <_usart_interrupt_handler+0x9c>
    30d6:	2204      	movs	r2, #4
    30d8:	7522      	strb	r2, [r4, #20]
    30da:	322e      	adds	r2, #46	; 0x2e
    30dc:	54ab      	strb	r3, [r5, r2]
    30de:	07bb      	lsls	r3, r7, #30
    30e0:	d5ba      	bpl.n	3058 <_usart_interrupt_handler+0x9c>
    30e2:	1c28      	adds	r0, r5, #0
    30e4:	692b      	ldr	r3, [r5, #16]
    30e6:	4798      	blx	r3
    30e8:	e7b6      	b.n	3058 <_usart_interrupt_handler+0x9c>
    30ea:	7851      	ldrb	r1, [r2, #1]
    30ec:	3202      	adds	r2, #2
    30ee:	0209      	lsls	r1, r1, #8
    30f0:	430b      	orrs	r3, r1
    30f2:	62aa      	str	r2, [r5, #40]	; 0x28
    30f4:	e782      	b.n	2ffc <_usart_interrupt_handler+0x40>
    30f6:	075a      	lsls	r2, r3, #29
    30f8:	d40d      	bmi.n	3116 <_usart_interrupt_handler+0x15a>
    30fa:	07da      	lsls	r2, r3, #31
    30fc:	d519      	bpl.n	3132 <_usart_interrupt_handler+0x176>
    30fe:	2213      	movs	r2, #19
    3100:	2332      	movs	r3, #50	; 0x32
    3102:	54ea      	strb	r2, [r5, r3]
    3104:	8b62      	ldrh	r2, [r4, #26]
    3106:	3b31      	subs	r3, #49	; 0x31
    3108:	4313      	orrs	r3, r2
    310a:	8363      	strh	r3, [r4, #26]
    310c:	e7a2      	b.n	3054 <_usart_interrupt_handler+0x98>
    310e:	1c28      	adds	r0, r5, #0
    3110:	696b      	ldr	r3, [r5, #20]
    3112:	4798      	blx	r3
    3114:	e7a0      	b.n	3058 <_usart_interrupt_handler+0x9c>
    3116:	221e      	movs	r2, #30
    3118:	2332      	movs	r3, #50	; 0x32
    311a:	54ea      	strb	r2, [r5, r3]
    311c:	8b62      	ldrh	r2, [r4, #26]
    311e:	3b2e      	subs	r3, #46	; 0x2e
    3120:	4313      	orrs	r3, r2
    3122:	8363      	strh	r3, [r4, #26]
    3124:	e796      	b.n	3054 <_usart_interrupt_handler+0x98>
    3126:	0a1b      	lsrs	r3, r3, #8
    3128:	7053      	strb	r3, [r2, #1]
    312a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    312c:	3301      	adds	r3, #1
    312e:	626b      	str	r3, [r5, #36]	; 0x24
    3130:	e7cb      	b.n	30ca <_usart_interrupt_handler+0x10e>
    3132:	06da      	lsls	r2, r3, #27
    3134:	d507      	bpl.n	3146 <_usart_interrupt_handler+0x18a>
    3136:	2242      	movs	r2, #66	; 0x42
    3138:	2332      	movs	r3, #50	; 0x32
    313a:	54ea      	strb	r2, [r5, r3]
    313c:	8b62      	ldrh	r2, [r4, #26]
    313e:	3b22      	subs	r3, #34	; 0x22
    3140:	4313      	orrs	r3, r2
    3142:	8363      	strh	r3, [r4, #26]
    3144:	e786      	b.n	3054 <_usart_interrupt_handler+0x98>
    3146:	2220      	movs	r2, #32
    3148:	421a      	tst	r2, r3
    314a:	d100      	bne.n	314e <_usart_interrupt_handler+0x192>
    314c:	e782      	b.n	3054 <_usart_interrupt_handler+0x98>
    314e:	2332      	movs	r3, #50	; 0x32
    3150:	3221      	adds	r2, #33	; 0x21
    3152:	54ea      	strb	r2, [r5, r3]
    3154:	8b62      	ldrh	r2, [r4, #26]
    3156:	3b12      	subs	r3, #18
    3158:	4313      	orrs	r3, r2
    315a:	8363      	strh	r3, [r4, #26]
    315c:	e77a      	b.n	3054 <_usart_interrupt_handler+0x98>
    315e:	46c0      	nop			; (mov r8, r8)
    3160:	20004400 	.word	0x20004400

00003164 <usart_init>:
    3164:	b5f0      	push	{r4, r5, r6, r7, lr}
    3166:	4644      	mov	r4, r8
    3168:	4656      	mov	r6, sl
    316a:	464d      	mov	r5, r9
    316c:	465f      	mov	r7, fp
    316e:	b4f0      	push	{r4, r5, r6, r7}
    3170:	1c05      	adds	r5, r0, #0
    3172:	1c0c      	adds	r4, r1, #0
    3174:	b08f      	sub	sp, #60	; 0x3c
    3176:	6029      	str	r1, [r5, #0]
    3178:	1c08      	adds	r0, r1, #0
    317a:	4690      	mov	r8, r2
    317c:	f001 f9f8 	bl	4570 <_sercom_get_sercom_inst_index>
    3180:	2301      	movs	r3, #1
    3182:	6822      	ldr	r2, [r4, #0]
    3184:	1c06      	adds	r6, r0, #0
    3186:	2005      	movs	r0, #5
    3188:	4213      	tst	r3, r2
    318a:	d006      	beq.n	319a <usart_init+0x36>
    318c:	b00f      	add	sp, #60	; 0x3c
    318e:	bc3c      	pop	{r2, r3, r4, r5}
    3190:	4690      	mov	r8, r2
    3192:	4699      	mov	r9, r3
    3194:	46a2      	mov	sl, r4
    3196:	46ab      	mov	fp, r5
    3198:	bdf0      	pop	{r4, r5, r6, r7, pc}
    319a:	2702      	movs	r7, #2
    319c:	6822      	ldr	r2, [r4, #0]
    319e:	3017      	adds	r0, #23
    31a0:	4017      	ands	r7, r2
    31a2:	d1f3      	bne.n	318c <usart_init+0x28>
    31a4:	1cb0      	adds	r0, r6, #2
    31a6:	4083      	lsls	r3, r0
    31a8:	49ae      	ldr	r1, [pc, #696]	; (3464 <usart_init+0x300>)
    31aa:	3614      	adds	r6, #20
    31ac:	6a0a      	ldr	r2, [r1, #32]
    31ae:	b2f6      	uxtb	r6, r6
    31b0:	4313      	orrs	r3, r2
    31b2:	620b      	str	r3, [r1, #32]
    31b4:	232d      	movs	r3, #45	; 0x2d
    31b6:	4699      	mov	r9, r3
    31b8:	4643      	mov	r3, r8
    31ba:	464a      	mov	r2, r9
    31bc:	5c9b      	ldrb	r3, [r3, r2]
    31be:	a908      	add	r1, sp, #32
    31c0:	1c30      	adds	r0, r6, #0
    31c2:	700b      	strb	r3, [r1, #0]
    31c4:	f000 fb16 	bl	37f4 <system_gclk_chan_set_config>
    31c8:	1c30      	adds	r0, r6, #0
    31ca:	f000 fad5 	bl	3778 <system_gclk_chan_enable>
    31ce:	464a      	mov	r2, r9
    31d0:	4643      	mov	r3, r8
    31d2:	2100      	movs	r1, #0
    31d4:	5c98      	ldrb	r0, [r3, r2]
    31d6:	f001 f8fb 	bl	43d0 <sercom_set_gclk_generator>
    31da:	4643      	mov	r3, r8
    31dc:	7adb      	ldrb	r3, [r3, #11]
    31de:	4642      	mov	r2, r8
    31e0:	716b      	strb	r3, [r5, #5]
    31e2:	2324      	movs	r3, #36	; 0x24
    31e4:	5cd3      	ldrb	r3, [r2, r3]
    31e6:	ae0a      	add	r6, sp, #40	; 0x28
    31e8:	71ab      	strb	r3, [r5, #6]
    31ea:	2325      	movs	r3, #37	; 0x25
    31ec:	5cd3      	ldrb	r3, [r2, r3]
    31ee:	71eb      	strb	r3, [r5, #7]
    31f0:	7ed3      	ldrb	r3, [r2, #27]
    31f2:	722b      	strb	r3, [r5, #8]
    31f4:	7f13      	ldrb	r3, [r2, #28]
    31f6:	726b      	strb	r3, [r5, #9]
    31f8:	682b      	ldr	r3, [r5, #0]
    31fa:	1c18      	adds	r0, r3, #0
    31fc:	4699      	mov	r9, r3
    31fe:	f001 f9b7 	bl	4570 <_sercom_get_sercom_inst_index>
    3202:	4643      	mov	r3, r8
    3204:	8037      	strh	r7, [r6, #0]
    3206:	8a1f      	ldrh	r7, [r3, #16]
    3208:	2380      	movs	r3, #128	; 0x80
    320a:	3014      	adds	r0, #20
    320c:	01db      	lsls	r3, r3, #7
    320e:	429f      	cmp	r7, r3
    3210:	d100      	bne.n	3214 <usart_init+0xb0>
    3212:	e0b8      	b.n	3386 <usart_init+0x222>
    3214:	d800      	bhi.n	3218 <usart_init+0xb4>
    3216:	e0ef      	b.n	33f8 <usart_init+0x294>
    3218:	23c0      	movs	r3, #192	; 0xc0
    321a:	01db      	lsls	r3, r3, #7
    321c:	429f      	cmp	r7, r3
    321e:	d100      	bne.n	3222 <usart_init+0xbe>
    3220:	e0f8      	b.n	3414 <usart_init+0x2b0>
    3222:	2380      	movs	r3, #128	; 0x80
    3224:	021b      	lsls	r3, r3, #8
    3226:	429f      	cmp	r7, r3
    3228:	d000      	beq.n	322c <usart_init+0xc8>
    322a:	e0ee      	b.n	340a <usart_init+0x2a6>
    322c:	2303      	movs	r3, #3
    322e:	9306      	str	r3, [sp, #24]
    3230:	2300      	movs	r3, #0
    3232:	9305      	str	r3, [sp, #20]
    3234:	4643      	mov	r3, r8
    3236:	681b      	ldr	r3, [r3, #0]
    3238:	4642      	mov	r2, r8
    323a:	9302      	str	r3, [sp, #8]
    323c:	4643      	mov	r3, r8
    323e:	68db      	ldr	r3, [r3, #12]
    3240:	9303      	str	r3, [sp, #12]
    3242:	4643      	mov	r3, r8
    3244:	695b      	ldr	r3, [r3, #20]
    3246:	9304      	str	r3, [sp, #16]
    3248:	4643      	mov	r3, r8
    324a:	7e1b      	ldrb	r3, [r3, #24]
    324c:	469a      	mov	sl, r3
    324e:	2326      	movs	r3, #38	; 0x26
    3250:	5cd3      	ldrb	r3, [r2, r3]
    3252:	469b      	mov	fp, r3
    3254:	6853      	ldr	r3, [r2, #4]
    3256:	2b00      	cmp	r3, #0
    3258:	d100      	bne.n	325c <usart_init+0xf8>
    325a:	e0bb      	b.n	33d4 <usart_init+0x270>
    325c:	2280      	movs	r2, #128	; 0x80
    325e:	0552      	lsls	r2, r2, #21
    3260:	4293      	cmp	r3, r2
    3262:	d000      	beq.n	3266 <usart_init+0x102>
    3264:	e0b4      	b.n	33d0 <usart_init+0x26c>
    3266:	2327      	movs	r3, #39	; 0x27
    3268:	4642      	mov	r2, r8
    326a:	5cd3      	ldrb	r3, [r2, r3]
    326c:	2100      	movs	r1, #0
    326e:	2b00      	cmp	r3, #0
    3270:	d100      	bne.n	3274 <usart_init+0x110>
    3272:	e0eb      	b.n	344c <usart_init+0x2e8>
    3274:	4643      	mov	r3, r8
    3276:	7e5b      	ldrb	r3, [r3, #25]
    3278:	2b00      	cmp	r3, #0
    327a:	d003      	beq.n	3284 <usart_init+0x120>
    327c:	4643      	mov	r3, r8
    327e:	464a      	mov	r2, r9
    3280:	7e9b      	ldrb	r3, [r3, #26]
    3282:	7393      	strb	r3, [r2, #14]
    3284:	682a      	ldr	r2, [r5, #0]
    3286:	69d3      	ldr	r3, [r2, #28]
    3288:	2b00      	cmp	r3, #0
    328a:	d1fc      	bne.n	3286 <usart_init+0x122>
    328c:	464b      	mov	r3, r9
    328e:	9a02      	ldr	r2, [sp, #8]
    3290:	8199      	strh	r1, [r3, #12]
    3292:	9b03      	ldr	r3, [sp, #12]
    3294:	4313      	orrs	r3, r2
    3296:	9a04      	ldr	r2, [sp, #16]
    3298:	4313      	orrs	r3, r2
    329a:	4642      	mov	r2, r8
    329c:	6852      	ldr	r2, [r2, #4]
    329e:	4313      	orrs	r3, r2
    32a0:	431f      	orrs	r7, r3
    32a2:	4653      	mov	r3, sl
    32a4:	021b      	lsls	r3, r3, #8
    32a6:	431f      	orrs	r7, r3
    32a8:	465b      	mov	r3, fp
    32aa:	075b      	lsls	r3, r3, #29
    32ac:	431f      	orrs	r7, r3
    32ae:	4642      	mov	r2, r8
    32b0:	2327      	movs	r3, #39	; 0x27
    32b2:	5cd3      	ldrb	r3, [r2, r3]
    32b4:	2b00      	cmp	r3, #0
    32b6:	d101      	bne.n	32bc <usart_init+0x158>
    32b8:	3304      	adds	r3, #4
    32ba:	431f      	orrs	r7, r3
    32bc:	4643      	mov	r3, r8
    32be:	7e59      	ldrb	r1, [r3, #25]
    32c0:	7f1b      	ldrb	r3, [r3, #28]
    32c2:	0289      	lsls	r1, r1, #10
    32c4:	025b      	lsls	r3, r3, #9
    32c6:	4319      	orrs	r1, r3
    32c8:	4642      	mov	r2, r8
    32ca:	4643      	mov	r3, r8
    32cc:	7a92      	ldrb	r2, [r2, #10]
    32ce:	7adb      	ldrb	r3, [r3, #11]
    32d0:	4313      	orrs	r3, r2
    32d2:	4319      	orrs	r1, r3
    32d4:	4643      	mov	r3, r8
    32d6:	7f5a      	ldrb	r2, [r3, #29]
    32d8:	2324      	movs	r3, #36	; 0x24
    32da:	0212      	lsls	r2, r2, #8
    32dc:	4311      	orrs	r1, r2
    32de:	4642      	mov	r2, r8
    32e0:	5cd2      	ldrb	r2, [r2, r3]
    32e2:	1c0b      	adds	r3, r1, #0
    32e4:	0452      	lsls	r2, r2, #17
    32e6:	4313      	orrs	r3, r2
    32e8:	4641      	mov	r1, r8
    32ea:	2225      	movs	r2, #37	; 0x25
    32ec:	5c89      	ldrb	r1, [r1, r2]
    32ee:	0409      	lsls	r1, r1, #16
    32f0:	4319      	orrs	r1, r3
    32f2:	4643      	mov	r3, r8
    32f4:	891b      	ldrh	r3, [r3, #8]
    32f6:	2bff      	cmp	r3, #255	; 0xff
    32f8:	d100      	bne.n	32fc <usart_init+0x198>
    32fa:	e090      	b.n	341e <usart_init+0x2ba>
    32fc:	2280      	movs	r2, #128	; 0x80
    32fe:	0452      	lsls	r2, r2, #17
    3300:	4317      	orrs	r7, r2
    3302:	4319      	orrs	r1, r3
    3304:	232c      	movs	r3, #44	; 0x2c
    3306:	4642      	mov	r2, r8
    3308:	5cd3      	ldrb	r3, [r2, r3]
    330a:	2b00      	cmp	r3, #0
    330c:	d103      	bne.n	3316 <usart_init+0x1b2>
    330e:	4b56      	ldr	r3, [pc, #344]	; (3468 <usart_init+0x304>)
    3310:	789b      	ldrb	r3, [r3, #2]
    3312:	079b      	lsls	r3, r3, #30
    3314:	d501      	bpl.n	331a <usart_init+0x1b6>
    3316:	2380      	movs	r3, #128	; 0x80
    3318:	431f      	orrs	r7, r3
    331a:	682a      	ldr	r2, [r5, #0]
    331c:	69d3      	ldr	r3, [r2, #28]
    331e:	2b00      	cmp	r3, #0
    3320:	d1fc      	bne.n	331c <usart_init+0x1b8>
    3322:	464b      	mov	r3, r9
    3324:	6059      	str	r1, [r3, #4]
    3326:	682a      	ldr	r2, [r5, #0]
    3328:	69d3      	ldr	r3, [r2, #28]
    332a:	2b00      	cmp	r3, #0
    332c:	d1fc      	bne.n	3328 <usart_init+0x1c4>
    332e:	464a      	mov	r2, r9
    3330:	a906      	add	r1, sp, #24
    3332:	6017      	str	r7, [r2, #0]
    3334:	734b      	strb	r3, [r1, #13]
    3336:	73cb      	strb	r3, [r1, #15]
    3338:	738b      	strb	r3, [r1, #14]
    333a:	4643      	mov	r3, r8
    333c:	6b18      	ldr	r0, [r3, #48]	; 0x30
    333e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    3340:	2280      	movs	r2, #128	; 0x80
    3342:	6073      	str	r3, [r6, #4]
    3344:	4643      	mov	r3, r8
    3346:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    3348:	2700      	movs	r7, #0
    334a:	60b3      	str	r3, [r6, #8]
    334c:	4643      	mov	r3, r8
    334e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    3350:	730a      	strb	r2, [r1, #12]
    3352:	900a      	str	r0, [sp, #40]	; 0x28
    3354:	60f3      	str	r3, [r6, #12]
    3356:	b2f9      	uxtb	r1, r7
    3358:	2800      	cmp	r0, #0
    335a:	d010      	beq.n	337e <usart_init+0x21a>
    335c:	1c43      	adds	r3, r0, #1
    335e:	d006      	beq.n	336e <usart_init+0x20a>
    3360:	ab06      	add	r3, sp, #24
    3362:	7318      	strb	r0, [r3, #12]
    3364:	0c00      	lsrs	r0, r0, #16
    3366:	b2c0      	uxtb	r0, r0
    3368:	a909      	add	r1, sp, #36	; 0x24
    336a:	f000 f939 	bl	35e0 <system_pinmux_pin_set_config>
    336e:	3701      	adds	r7, #1
    3370:	2f04      	cmp	r7, #4
    3372:	d00d      	beq.n	3390 <usart_init+0x22c>
    3374:	00bb      	lsls	r3, r7, #2
    3376:	58f0      	ldr	r0, [r6, r3]
    3378:	b2f9      	uxtb	r1, r7
    337a:	2800      	cmp	r0, #0
    337c:	d1ee      	bne.n	335c <usart_init+0x1f8>
    337e:	1c20      	adds	r0, r4, #0
    3380:	f001 f846 	bl	4410 <_sercom_get_default_pad>
    3384:	e7ea      	b.n	335c <usart_init+0x1f8>
    3386:	2308      	movs	r3, #8
    3388:	9306      	str	r3, [sp, #24]
    338a:	2300      	movs	r3, #0
    338c:	9305      	str	r3, [sp, #20]
    338e:	e751      	b.n	3234 <usart_init+0xd0>
    3390:	2300      	movs	r3, #0
    3392:	2200      	movs	r2, #0
    3394:	85eb      	strh	r3, [r5, #46]	; 0x2e
    3396:	60eb      	str	r3, [r5, #12]
    3398:	612b      	str	r3, [r5, #16]
    339a:	616b      	str	r3, [r5, #20]
    339c:	61ab      	str	r3, [r5, #24]
    339e:	61eb      	str	r3, [r5, #28]
    33a0:	622b      	str	r3, [r5, #32]
    33a2:	62ab      	str	r3, [r5, #40]	; 0x28
    33a4:	626b      	str	r3, [r5, #36]	; 0x24
    33a6:	85ab      	strh	r3, [r5, #44]	; 0x2c
    33a8:	3330      	adds	r3, #48	; 0x30
    33aa:	54ea      	strb	r2, [r5, r3]
    33ac:	3301      	adds	r3, #1
    33ae:	54ea      	strb	r2, [r5, r3]
    33b0:	3301      	adds	r3, #1
    33b2:	54ea      	strb	r2, [r5, r3]
    33b4:	3301      	adds	r3, #1
    33b6:	54ea      	strb	r2, [r5, r3]
    33b8:	6828      	ldr	r0, [r5, #0]
    33ba:	f001 f8d9 	bl	4570 <_sercom_get_sercom_inst_index>
    33be:	1c04      	adds	r4, r0, #0
    33c0:	492a      	ldr	r1, [pc, #168]	; (346c <usart_init+0x308>)
    33c2:	f7ff fd71 	bl	2ea8 <_sercom_set_handler>
    33c6:	4b2a      	ldr	r3, [pc, #168]	; (3470 <usart_init+0x30c>)
    33c8:	00a4      	lsls	r4, r4, #2
    33ca:	50e5      	str	r5, [r4, r3]
    33cc:	2000      	movs	r0, #0
    33ce:	e6dd      	b.n	318c <usart_init+0x28>
    33d0:	2100      	movs	r1, #0
    33d2:	e74f      	b.n	3274 <usart_init+0x110>
    33d4:	2327      	movs	r3, #39	; 0x27
    33d6:	4642      	mov	r2, r8
    33d8:	5cd3      	ldrb	r3, [r2, r3]
    33da:	2b00      	cmp	r3, #0
    33dc:	d028      	beq.n	3430 <usart_init+0x2cc>
    33de:	9b06      	ldr	r3, [sp, #24]
    33e0:	9300      	str	r3, [sp, #0]
    33e2:	6a10      	ldr	r0, [r2, #32]
    33e4:	6a91      	ldr	r1, [r2, #40]	; 0x28
    33e6:	9b05      	ldr	r3, [sp, #20]
    33e8:	1c32      	adds	r2, r6, #0
    33ea:	f000 ff29 	bl	4240 <_sercom_get_async_baud_val>
    33ee:	2800      	cmp	r0, #0
    33f0:	d000      	beq.n	33f4 <usart_init+0x290>
    33f2:	e6cb      	b.n	318c <usart_init+0x28>
    33f4:	8831      	ldrh	r1, [r6, #0]
    33f6:	e73d      	b.n	3274 <usart_init+0x110>
    33f8:	2380      	movs	r3, #128	; 0x80
    33fa:	019b      	lsls	r3, r3, #6
    33fc:	429f      	cmp	r7, r3
    33fe:	d104      	bne.n	340a <usart_init+0x2a6>
    3400:	2310      	movs	r3, #16
    3402:	9306      	str	r3, [sp, #24]
    3404:	3b0f      	subs	r3, #15
    3406:	9305      	str	r3, [sp, #20]
    3408:	e714      	b.n	3234 <usart_init+0xd0>
    340a:	2310      	movs	r3, #16
    340c:	9306      	str	r3, [sp, #24]
    340e:	2300      	movs	r3, #0
    3410:	9305      	str	r3, [sp, #20]
    3412:	e70f      	b.n	3234 <usart_init+0xd0>
    3414:	2308      	movs	r3, #8
    3416:	9306      	str	r3, [sp, #24]
    3418:	3b07      	subs	r3, #7
    341a:	9305      	str	r3, [sp, #20]
    341c:	e70a      	b.n	3234 <usart_init+0xd0>
    341e:	4643      	mov	r3, r8
    3420:	7edb      	ldrb	r3, [r3, #27]
    3422:	2b00      	cmp	r3, #0
    3424:	d100      	bne.n	3428 <usart_init+0x2c4>
    3426:	e76d      	b.n	3304 <usart_init+0x1a0>
    3428:	2380      	movs	r3, #128	; 0x80
    342a:	04db      	lsls	r3, r3, #19
    342c:	431f      	orrs	r7, r3
    342e:	e769      	b.n	3304 <usart_init+0x1a0>
    3430:	6a13      	ldr	r3, [r2, #32]
    3432:	b2c0      	uxtb	r0, r0
    3434:	9307      	str	r3, [sp, #28]
    3436:	f000 f9e9 	bl	380c <system_gclk_chan_get_hz>
    343a:	9a06      	ldr	r2, [sp, #24]
    343c:	1c01      	adds	r1, r0, #0
    343e:	9200      	str	r2, [sp, #0]
    3440:	9807      	ldr	r0, [sp, #28]
    3442:	1c32      	adds	r2, r6, #0
    3444:	9b05      	ldr	r3, [sp, #20]
    3446:	f000 fefb 	bl	4240 <_sercom_get_async_baud_val>
    344a:	e7d0      	b.n	33ee <usart_init+0x28a>
    344c:	6a13      	ldr	r3, [r2, #32]
    344e:	b2c0      	uxtb	r0, r0
    3450:	9305      	str	r3, [sp, #20]
    3452:	f000 f9db 	bl	380c <system_gclk_chan_get_hz>
    3456:	1c32      	adds	r2, r6, #0
    3458:	1c01      	adds	r1, r0, #0
    345a:	9805      	ldr	r0, [sp, #20]
    345c:	f000 fedc 	bl	4218 <_sercom_get_sync_baud_val>
    3460:	e7c5      	b.n	33ee <usart_init+0x28a>
    3462:	46c0      	nop			; (mov r8, r8)
    3464:	40000400 	.word	0x40000400
    3468:	41002000 	.word	0x41002000
    346c:	00002fbd 	.word	0x00002fbd
    3470:	20004400 	.word	0x20004400

00003474 <usart_write_buffer_wait>:
    3474:	b5f0      	push	{r4, r5, r6, r7, lr}
    3476:	464f      	mov	r7, r9
    3478:	4646      	mov	r6, r8
    347a:	2317      	movs	r3, #23
    347c:	b4c0      	push	{r6, r7}
    347e:	2a00      	cmp	r2, #0
    3480:	d104      	bne.n	348c <usart_write_buffer_wait+0x18>
    3482:	1c18      	adds	r0, r3, #0
    3484:	bc0c      	pop	{r2, r3}
    3486:	4690      	mov	r8, r2
    3488:	4699      	mov	r9, r3
    348a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    348c:	79c4      	ldrb	r4, [r0, #7]
    348e:	3305      	adds	r3, #5
    3490:	2c00      	cmp	r4, #0
    3492:	d0f6      	beq.n	3482 <usart_write_buffer_wait+0xe>
    3494:	6805      	ldr	r5, [r0, #0]
    3496:	69eb      	ldr	r3, [r5, #28]
    3498:	2b00      	cmp	r3, #0
    349a:	d1fc      	bne.n	3496 <usart_write_buffer_wait+0x22>
    349c:	3302      	adds	r3, #2
    349e:	4691      	mov	r9, r2
    34a0:	2700      	movs	r7, #0
    34a2:	2601      	movs	r6, #1
    34a4:	469c      	mov	ip, r3
    34a6:	7e2b      	ldrb	r3, [r5, #24]
    34a8:	421e      	tst	r6, r3
    34aa:	d107      	bne.n	34bc <usart_write_buffer_wait+0x48>
    34ac:	4b1f      	ldr	r3, [pc, #124]	; (352c <usart_write_buffer_wait+0xb8>)
    34ae:	e002      	b.n	34b6 <usart_write_buffer_wait+0x42>
    34b0:	3b01      	subs	r3, #1
    34b2:	2b00      	cmp	r3, #0
    34b4:	d037      	beq.n	3526 <usart_write_buffer_wait+0xb2>
    34b6:	7e2c      	ldrb	r4, [r5, #24]
    34b8:	4226      	tst	r6, r4
    34ba:	d0f9      	beq.n	34b0 <usart_write_buffer_wait+0x3c>
    34bc:	7942      	ldrb	r2, [r0, #5]
    34be:	1c7b      	adds	r3, r7, #1
    34c0:	b29b      	uxth	r3, r3
    34c2:	5dcc      	ldrb	r4, [r1, r7]
    34c4:	2a01      	cmp	r2, #1
    34c6:	d027      	beq.n	3518 <usart_write_buffer_wait+0xa4>
    34c8:	b2a2      	uxth	r2, r4
    34ca:	4690      	mov	r8, r2
    34cc:	1c1f      	adds	r7, r3, #0
    34ce:	79c4      	ldrb	r4, [r0, #7]
    34d0:	6803      	ldr	r3, [r0, #0]
    34d2:	2c00      	cmp	r4, #0
    34d4:	d002      	beq.n	34dc <usart_write_buffer_wait+0x68>
    34d6:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
    34d8:	2c00      	cmp	r4, #0
    34da:	d013      	beq.n	3504 <usart_write_buffer_wait+0x90>
    34dc:	464a      	mov	r2, r9
    34de:	3a01      	subs	r2, #1
    34e0:	b293      	uxth	r3, r2
    34e2:	4699      	mov	r9, r3
    34e4:	2b00      	cmp	r3, #0
    34e6:	d1de      	bne.n	34a6 <usart_write_buffer_wait+0x32>
    34e8:	7e2b      	ldrb	r3, [r5, #24]
    34ea:	079b      	lsls	r3, r3, #30
    34ec:	d408      	bmi.n	3500 <usart_write_buffer_wait+0x8c>
    34ee:	4b0f      	ldr	r3, [pc, #60]	; (352c <usart_write_buffer_wait+0xb8>)
    34f0:	2102      	movs	r1, #2
    34f2:	e002      	b.n	34fa <usart_write_buffer_wait+0x86>
    34f4:	3b01      	subs	r3, #1
    34f6:	2b00      	cmp	r3, #0
    34f8:	d015      	beq.n	3526 <usart_write_buffer_wait+0xb2>
    34fa:	7e2a      	ldrb	r2, [r5, #24]
    34fc:	4211      	tst	r1, r2
    34fe:	d0f9      	beq.n	34f4 <usart_write_buffer_wait+0x80>
    3500:	2300      	movs	r3, #0
    3502:	e7be      	b.n	3482 <usart_write_buffer_wait+0xe>
    3504:	69dc      	ldr	r4, [r3, #28]
    3506:	2c00      	cmp	r4, #0
    3508:	d1fc      	bne.n	3504 <usart_write_buffer_wait+0x90>
    350a:	4642      	mov	r2, r8
    350c:	851a      	strh	r2, [r3, #40]	; 0x28
    350e:	4662      	mov	r2, ip
    3510:	7e1c      	ldrb	r4, [r3, #24]
    3512:	4222      	tst	r2, r4
    3514:	d0fb      	beq.n	350e <usart_write_buffer_wait+0x9a>
    3516:	e7e1      	b.n	34dc <usart_write_buffer_wait+0x68>
    3518:	5ccb      	ldrb	r3, [r1, r3]
    351a:	3702      	adds	r7, #2
    351c:	021b      	lsls	r3, r3, #8
    351e:	4323      	orrs	r3, r4
    3520:	b2bf      	uxth	r7, r7
    3522:	4698      	mov	r8, r3
    3524:	e7d3      	b.n	34ce <usart_write_buffer_wait+0x5a>
    3526:	2312      	movs	r3, #18
    3528:	e7ab      	b.n	3482 <usart_write_buffer_wait+0xe>
    352a:	46c0      	nop			; (mov r8, r8)
    352c:	0000ffff 	.word	0x0000ffff

00003530 <_system_pinmux_config>:
    3530:	78d3      	ldrb	r3, [r2, #3]
    3532:	b570      	push	{r4, r5, r6, lr}
    3534:	2b00      	cmp	r3, #0
    3536:	d131      	bne.n	359c <_system_pinmux_config+0x6c>
    3538:	7814      	ldrb	r4, [r2, #0]
    353a:	2c80      	cmp	r4, #128	; 0x80
    353c:	d047      	beq.n	35ce <_system_pinmux_config+0x9e>
    353e:	2380      	movs	r3, #128	; 0x80
    3540:	0624      	lsls	r4, r4, #24
    3542:	025b      	lsls	r3, r3, #9
    3544:	431c      	orrs	r4, r3
    3546:	7853      	ldrb	r3, [r2, #1]
    3548:	2502      	movs	r5, #2
    354a:	1c1e      	adds	r6, r3, #0
    354c:	43ae      	bics	r6, r5
    354e:	d107      	bne.n	3560 <_system_pinmux_config+0x30>
    3550:	7893      	ldrb	r3, [r2, #2]
    3552:	2b00      	cmp	r3, #0
    3554:	d137      	bne.n	35c6 <_system_pinmux_config+0x96>
    3556:	2380      	movs	r3, #128	; 0x80
    3558:	029b      	lsls	r3, r3, #10
    355a:	431c      	orrs	r4, r3
    355c:	6041      	str	r1, [r0, #4]
    355e:	7853      	ldrb	r3, [r2, #1]
    3560:	3b01      	subs	r3, #1
    3562:	2b01      	cmp	r3, #1
    3564:	d935      	bls.n	35d2 <_system_pinmux_config+0xa2>
    3566:	25a0      	movs	r5, #160	; 0xa0
    3568:	040b      	lsls	r3, r1, #16
    356a:	05ed      	lsls	r5, r5, #23
    356c:	0c1b      	lsrs	r3, r3, #16
    356e:	432b      	orrs	r3, r5
    3570:	25d0      	movs	r5, #208	; 0xd0
    3572:	4323      	orrs	r3, r4
    3574:	6283      	str	r3, [r0, #40]	; 0x28
    3576:	062d      	lsls	r5, r5, #24
    3578:	0c0b      	lsrs	r3, r1, #16
    357a:	432b      	orrs	r3, r5
    357c:	4323      	orrs	r3, r4
    357e:	6283      	str	r3, [r0, #40]	; 0x28
    3580:	78d3      	ldrb	r3, [r2, #3]
    3582:	2b00      	cmp	r3, #0
    3584:	d109      	bne.n	359a <_system_pinmux_config+0x6a>
    3586:	0363      	lsls	r3, r4, #13
    3588:	d503      	bpl.n	3592 <_system_pinmux_config+0x62>
    358a:	7893      	ldrb	r3, [r2, #2]
    358c:	2b01      	cmp	r3, #1
    358e:	d023      	beq.n	35d8 <_system_pinmux_config+0xa8>
    3590:	6141      	str	r1, [r0, #20]
    3592:	7853      	ldrb	r3, [r2, #1]
    3594:	3b01      	subs	r3, #1
    3596:	2b01      	cmp	r3, #1
    3598:	d913      	bls.n	35c2 <_system_pinmux_config+0x92>
    359a:	bd70      	pop	{r4, r5, r6, pc}
    359c:	24a0      	movs	r4, #160	; 0xa0
    359e:	040b      	lsls	r3, r1, #16
    35a0:	05e4      	lsls	r4, r4, #23
    35a2:	0c1b      	lsrs	r3, r3, #16
    35a4:	4323      	orrs	r3, r4
    35a6:	24d0      	movs	r4, #208	; 0xd0
    35a8:	6041      	str	r1, [r0, #4]
    35aa:	0624      	lsls	r4, r4, #24
    35ac:	6283      	str	r3, [r0, #40]	; 0x28
    35ae:	0c0b      	lsrs	r3, r1, #16
    35b0:	4323      	orrs	r3, r4
    35b2:	6283      	str	r3, [r0, #40]	; 0x28
    35b4:	78d3      	ldrb	r3, [r2, #3]
    35b6:	2b00      	cmp	r3, #0
    35b8:	d1ef      	bne.n	359a <_system_pinmux_config+0x6a>
    35ba:	7853      	ldrb	r3, [r2, #1]
    35bc:	3b01      	subs	r3, #1
    35be:	2b01      	cmp	r3, #1
    35c0:	d8eb      	bhi.n	359a <_system_pinmux_config+0x6a>
    35c2:	6081      	str	r1, [r0, #8]
    35c4:	e7e9      	b.n	359a <_system_pinmux_config+0x6a>
    35c6:	23c0      	movs	r3, #192	; 0xc0
    35c8:	02db      	lsls	r3, r3, #11
    35ca:	431c      	orrs	r4, r3
    35cc:	e7c6      	b.n	355c <_system_pinmux_config+0x2c>
    35ce:	2400      	movs	r4, #0
    35d0:	e7b9      	b.n	3546 <_system_pinmux_config+0x16>
    35d2:	4b02      	ldr	r3, [pc, #8]	; (35dc <_system_pinmux_config+0xac>)
    35d4:	401c      	ands	r4, r3
    35d6:	e7c6      	b.n	3566 <_system_pinmux_config+0x36>
    35d8:	6181      	str	r1, [r0, #24]
    35da:	e7da      	b.n	3592 <_system_pinmux_config+0x62>
    35dc:	fffbffff 	.word	0xfffbffff

000035e0 <system_pinmux_pin_set_config>:
    35e0:	b508      	push	{r3, lr}
    35e2:	1c0a      	adds	r2, r1, #0
    35e4:	1c03      	adds	r3, r0, #0
    35e6:	09c1      	lsrs	r1, r0, #7
    35e8:	2000      	movs	r0, #0
    35ea:	2900      	cmp	r1, #0
    35ec:	d104      	bne.n	35f8 <system_pinmux_pin_set_config+0x18>
    35ee:	4906      	ldr	r1, [pc, #24]	; (3608 <system_pinmux_pin_set_config+0x28>)
    35f0:	0958      	lsrs	r0, r3, #5
    35f2:	468c      	mov	ip, r1
    35f4:	01c0      	lsls	r0, r0, #7
    35f6:	4460      	add	r0, ip
    35f8:	211f      	movs	r1, #31
    35fa:	400b      	ands	r3, r1
    35fc:	391e      	subs	r1, #30
    35fe:	4099      	lsls	r1, r3
    3600:	f7ff ff96 	bl	3530 <_system_pinmux_config>
    3604:	bd08      	pop	{r3, pc}
    3606:	46c0      	nop			; (mov r8, r8)
    3608:	41004400 	.word	0x41004400

0000360c <system_gclk_init>:
    360c:	2308      	movs	r3, #8
    360e:	4a06      	ldr	r2, [pc, #24]	; (3628 <system_gclk_init+0x1c>)
    3610:	6991      	ldr	r1, [r2, #24]
    3612:	430b      	orrs	r3, r1
    3614:	6193      	str	r3, [r2, #24]
    3616:	2301      	movs	r3, #1
    3618:	2101      	movs	r1, #1
    361a:	4a04      	ldr	r2, [pc, #16]	; (362c <system_gclk_init+0x20>)
    361c:	7013      	strb	r3, [r2, #0]
    361e:	7813      	ldrb	r3, [r2, #0]
    3620:	4219      	tst	r1, r3
    3622:	d1fc      	bne.n	361e <system_gclk_init+0x12>
    3624:	4770      	bx	lr
    3626:	46c0      	nop			; (mov r8, r8)
    3628:	40000400 	.word	0x40000400
    362c:	40000c00 	.word	0x40000c00

00003630 <system_gclk_gen_set_config>:
    3630:	b570      	push	{r4, r5, r6, lr}
    3632:	780d      	ldrb	r5, [r1, #0]
    3634:	784b      	ldrb	r3, [r1, #1]
    3636:	022d      	lsls	r5, r5, #8
    3638:	1c04      	adds	r4, r0, #0
    363a:	4305      	orrs	r5, r0
    363c:	2b00      	cmp	r3, #0
    363e:	d002      	beq.n	3646 <system_gclk_gen_set_config+0x16>
    3640:	2380      	movs	r3, #128	; 0x80
    3642:	02db      	lsls	r3, r3, #11
    3644:	431d      	orrs	r5, r3
    3646:	7a4b      	ldrb	r3, [r1, #9]
    3648:	2b00      	cmp	r3, #0
    364a:	d002      	beq.n	3652 <system_gclk_gen_set_config+0x22>
    364c:	2380      	movs	r3, #128	; 0x80
    364e:	031b      	lsls	r3, r3, #12
    3650:	431d      	orrs	r5, r3
    3652:	684e      	ldr	r6, [r1, #4]
    3654:	2e01      	cmp	r6, #1
    3656:	d90f      	bls.n	3678 <system_gclk_gen_set_config+0x48>
    3658:	1e73      	subs	r3, r6, #1
    365a:	4033      	ands	r3, r6
    365c:	d129      	bne.n	36b2 <system_gclk_gen_set_config+0x82>
    365e:	2e02      	cmp	r6, #2
    3660:	d005      	beq.n	366e <system_gclk_gen_set_config+0x3e>
    3662:	2202      	movs	r2, #2
    3664:	3301      	adds	r3, #1
    3666:	0052      	lsls	r2, r2, #1
    3668:	4296      	cmp	r6, r2
    366a:	d8fb      	bhi.n	3664 <system_gclk_gen_set_config+0x34>
    366c:	021b      	lsls	r3, r3, #8
    366e:	4318      	orrs	r0, r3
    3670:	2380      	movs	r3, #128	; 0x80
    3672:	1c04      	adds	r4, r0, #0
    3674:	035b      	lsls	r3, r3, #13
    3676:	431d      	orrs	r5, r3
    3678:	7a0b      	ldrb	r3, [r1, #8]
    367a:	2b00      	cmp	r3, #0
    367c:	d002      	beq.n	3684 <system_gclk_gen_set_config+0x54>
    367e:	2380      	movs	r3, #128	; 0x80
    3680:	039b      	lsls	r3, r3, #14
    3682:	431d      	orrs	r5, r3
    3684:	4a0e      	ldr	r2, [pc, #56]	; (36c0 <system_gclk_gen_set_config+0x90>)
    3686:	7853      	ldrb	r3, [r2, #1]
    3688:	4e0d      	ldr	r6, [pc, #52]	; (36c0 <system_gclk_gen_set_config+0x90>)
    368a:	b25b      	sxtb	r3, r3
    368c:	2b00      	cmp	r3, #0
    368e:	dbfa      	blt.n	3686 <system_gclk_gen_set_config+0x56>
    3690:	f000 f8de 	bl	3850 <cpu_irq_enter_critical>
    3694:	60b4      	str	r4, [r6, #8]
    3696:	7873      	ldrb	r3, [r6, #1]
    3698:	4a09      	ldr	r2, [pc, #36]	; (36c0 <system_gclk_gen_set_config+0x90>)
    369a:	b25b      	sxtb	r3, r3
    369c:	2b00      	cmp	r3, #0
    369e:	dbfa      	blt.n	3696 <system_gclk_gen_set_config+0x66>
    36a0:	2380      	movs	r3, #128	; 0x80
    36a2:	6851      	ldr	r1, [r2, #4]
    36a4:	025b      	lsls	r3, r3, #9
    36a6:	400b      	ands	r3, r1
    36a8:	431d      	orrs	r5, r3
    36aa:	6055      	str	r5, [r2, #4]
    36ac:	f000 f8ee 	bl	388c <cpu_irq_leave_critical>
    36b0:	bd70      	pop	{r4, r5, r6, pc}
    36b2:	2380      	movs	r3, #128	; 0x80
    36b4:	0234      	lsls	r4, r6, #8
    36b6:	029b      	lsls	r3, r3, #10
    36b8:	4304      	orrs	r4, r0
    36ba:	431d      	orrs	r5, r3
    36bc:	e7dc      	b.n	3678 <system_gclk_gen_set_config+0x48>
    36be:	46c0      	nop			; (mov r8, r8)
    36c0:	40000c00 	.word	0x40000c00

000036c4 <system_gclk_gen_enable>:
    36c4:	b510      	push	{r4, lr}
    36c6:	1c04      	adds	r4, r0, #0
    36c8:	4a0b      	ldr	r2, [pc, #44]	; (36f8 <system_gclk_gen_enable+0x34>)
    36ca:	7853      	ldrb	r3, [r2, #1]
    36cc:	b25b      	sxtb	r3, r3
    36ce:	2b00      	cmp	r3, #0
    36d0:	dbfb      	blt.n	36ca <system_gclk_gen_enable+0x6>
    36d2:	f000 f8bd 	bl	3850 <cpu_irq_enter_critical>
    36d6:	4b09      	ldr	r3, [pc, #36]	; (36fc <system_gclk_gen_enable+0x38>)
    36d8:	4907      	ldr	r1, [pc, #28]	; (36f8 <system_gclk_gen_enable+0x34>)
    36da:	701c      	strb	r4, [r3, #0]
    36dc:	784b      	ldrb	r3, [r1, #1]
    36de:	4a06      	ldr	r2, [pc, #24]	; (36f8 <system_gclk_gen_enable+0x34>)
    36e0:	b25b      	sxtb	r3, r3
    36e2:	2b00      	cmp	r3, #0
    36e4:	dbfa      	blt.n	36dc <system_gclk_gen_enable+0x18>
    36e6:	2180      	movs	r1, #128	; 0x80
    36e8:	6853      	ldr	r3, [r2, #4]
    36ea:	0249      	lsls	r1, r1, #9
    36ec:	430b      	orrs	r3, r1
    36ee:	6053      	str	r3, [r2, #4]
    36f0:	f000 f8cc 	bl	388c <cpu_irq_leave_critical>
    36f4:	bd10      	pop	{r4, pc}
    36f6:	46c0      	nop			; (mov r8, r8)
    36f8:	40000c00 	.word	0x40000c00
    36fc:	40000c04 	.word	0x40000c04

00003700 <system_gclk_gen_get_hz>:
    3700:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3702:	1c07      	adds	r7, r0, #0
    3704:	4a19      	ldr	r2, [pc, #100]	; (376c <system_gclk_gen_get_hz+0x6c>)
    3706:	7853      	ldrb	r3, [r2, #1]
    3708:	b25b      	sxtb	r3, r3
    370a:	2b00      	cmp	r3, #0
    370c:	dbfb      	blt.n	3706 <system_gclk_gen_get_hz+0x6>
    370e:	f000 f89f 	bl	3850 <cpu_irq_enter_critical>
    3712:	4b17      	ldr	r3, [pc, #92]	; (3770 <system_gclk_gen_get_hz+0x70>)
    3714:	4a15      	ldr	r2, [pc, #84]	; (376c <system_gclk_gen_get_hz+0x6c>)
    3716:	701f      	strb	r7, [r3, #0]
    3718:	7853      	ldrb	r3, [r2, #1]
    371a:	4c14      	ldr	r4, [pc, #80]	; (376c <system_gclk_gen_get_hz+0x6c>)
    371c:	b25b      	sxtb	r3, r3
    371e:	2b00      	cmp	r3, #0
    3720:	dbfa      	blt.n	3718 <system_gclk_gen_get_hz+0x18>
    3722:	6860      	ldr	r0, [r4, #4]
    3724:	04c0      	lsls	r0, r0, #19
    3726:	0ec0      	lsrs	r0, r0, #27
    3728:	f000 ff3a 	bl	45a0 <system_clock_source_get_hz>
    372c:	1c06      	adds	r6, r0, #0
    372e:	4b10      	ldr	r3, [pc, #64]	; (3770 <system_gclk_gen_get_hz+0x70>)
    3730:	701f      	strb	r7, [r3, #0]
    3732:	6865      	ldr	r5, [r4, #4]
    3734:	4b0f      	ldr	r3, [pc, #60]	; (3774 <system_gclk_gen_get_hz+0x74>)
    3736:	02ed      	lsls	r5, r5, #11
    3738:	0fed      	lsrs	r5, r5, #31
    373a:	701f      	strb	r7, [r3, #0]
    373c:	7863      	ldrb	r3, [r4, #1]
    373e:	b25b      	sxtb	r3, r3
    3740:	2b00      	cmp	r3, #0
    3742:	dbfb      	blt.n	373c <system_gclk_gen_get_hz+0x3c>
    3744:	4b09      	ldr	r3, [pc, #36]	; (376c <system_gclk_gen_get_hz+0x6c>)
    3746:	6899      	ldr	r1, [r3, #8]
    3748:	0a09      	lsrs	r1, r1, #8
    374a:	b28c      	uxth	r4, r1
    374c:	f000 f89e 	bl	388c <cpu_irq_leave_critical>
    3750:	2d00      	cmp	r5, #0
    3752:	d003      	beq.n	375c <system_gclk_gen_get_hz+0x5c>
    3754:	1c61      	adds	r1, r4, #1
    3756:	40ce      	lsrs	r6, r1
    3758:	1c30      	adds	r0, r6, #0
    375a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    375c:	2c01      	cmp	r4, #1
    375e:	d9fb      	bls.n	3758 <system_gclk_gen_get_hz+0x58>
    3760:	1c30      	adds	r0, r6, #0
    3762:	1c21      	adds	r1, r4, #0
    3764:	f001 fd34 	bl	51d0 <__aeabi_uidiv>
    3768:	1c06      	adds	r6, r0, #0
    376a:	e7f5      	b.n	3758 <system_gclk_gen_get_hz+0x58>
    376c:	40000c00 	.word	0x40000c00
    3770:	40000c04 	.word	0x40000c04
    3774:	40000c08 	.word	0x40000c08

00003778 <system_gclk_chan_enable>:
    3778:	b510      	push	{r4, lr}
    377a:	1c04      	adds	r4, r0, #0
    377c:	f000 f868 	bl	3850 <cpu_irq_enter_critical>
    3780:	2180      	movs	r1, #128	; 0x80
    3782:	4b05      	ldr	r3, [pc, #20]	; (3798 <system_gclk_chan_enable+0x20>)
    3784:	4a05      	ldr	r2, [pc, #20]	; (379c <system_gclk_chan_enable+0x24>)
    3786:	701c      	strb	r4, [r3, #0]
    3788:	8853      	ldrh	r3, [r2, #2]
    378a:	01c9      	lsls	r1, r1, #7
    378c:	430b      	orrs	r3, r1
    378e:	8053      	strh	r3, [r2, #2]
    3790:	f000 f87c 	bl	388c <cpu_irq_leave_critical>
    3794:	bd10      	pop	{r4, pc}
    3796:	46c0      	nop			; (mov r8, r8)
    3798:	40000c02 	.word	0x40000c02
    379c:	40000c00 	.word	0x40000c00

000037a0 <system_gclk_chan_disable>:
    37a0:	b510      	push	{r4, lr}
    37a2:	1c04      	adds	r4, r0, #0
    37a4:	f000 f854 	bl	3850 <cpu_irq_enter_critical>
    37a8:	2080      	movs	r0, #128	; 0x80
    37aa:	4b0e      	ldr	r3, [pc, #56]	; (37e4 <system_gclk_chan_disable+0x44>)
    37ac:	4a0e      	ldr	r2, [pc, #56]	; (37e8 <system_gclk_chan_disable+0x48>)
    37ae:	701c      	strb	r4, [r3, #0]
    37b0:	8854      	ldrh	r4, [r2, #2]
    37b2:	4b0e      	ldr	r3, [pc, #56]	; (37ec <system_gclk_chan_disable+0x4c>)
    37b4:	8851      	ldrh	r1, [r2, #2]
    37b6:	0524      	lsls	r4, r4, #20
    37b8:	400b      	ands	r3, r1
    37ba:	8053      	strh	r3, [r2, #2]
    37bc:	8851      	ldrh	r1, [r2, #2]
    37be:	4b0c      	ldr	r3, [pc, #48]	; (37f0 <system_gclk_chan_disable+0x50>)
    37c0:	0f24      	lsrs	r4, r4, #28
    37c2:	400b      	ands	r3, r1
    37c4:	8053      	strh	r3, [r2, #2]
    37c6:	01c0      	lsls	r0, r0, #7
    37c8:	8853      	ldrh	r3, [r2, #2]
    37ca:	4907      	ldr	r1, [pc, #28]	; (37e8 <system_gclk_chan_disable+0x48>)
    37cc:	4203      	tst	r3, r0
    37ce:	d1fb      	bne.n	37c8 <system_gclk_chan_disable+0x28>
    37d0:	8848      	ldrh	r0, [r1, #2]
    37d2:	4b06      	ldr	r3, [pc, #24]	; (37ec <system_gclk_chan_disable+0x4c>)
    37d4:	0222      	lsls	r2, r4, #8
    37d6:	4003      	ands	r3, r0
    37d8:	4313      	orrs	r3, r2
    37da:	804b      	strh	r3, [r1, #2]
    37dc:	f000 f856 	bl	388c <cpu_irq_leave_critical>
    37e0:	bd10      	pop	{r4, pc}
    37e2:	46c0      	nop			; (mov r8, r8)
    37e4:	40000c02 	.word	0x40000c02
    37e8:	40000c00 	.word	0x40000c00
    37ec:	fffff0ff 	.word	0xfffff0ff
    37f0:	ffffbfff 	.word	0xffffbfff

000037f4 <system_gclk_chan_set_config>:
    37f4:	b510      	push	{r4, lr}
    37f6:	780c      	ldrb	r4, [r1, #0]
    37f8:	0224      	lsls	r4, r4, #8
    37fa:	4304      	orrs	r4, r0
    37fc:	f7ff ffd0 	bl	37a0 <system_gclk_chan_disable>
    3800:	4b01      	ldr	r3, [pc, #4]	; (3808 <system_gclk_chan_set_config+0x14>)
    3802:	b2a4      	uxth	r4, r4
    3804:	805c      	strh	r4, [r3, #2]
    3806:	bd10      	pop	{r4, pc}
    3808:	40000c00 	.word	0x40000c00

0000380c <system_gclk_chan_get_hz>:
    380c:	b510      	push	{r4, lr}
    380e:	1c04      	adds	r4, r0, #0
    3810:	f000 f81e 	bl	3850 <cpu_irq_enter_critical>
    3814:	4b05      	ldr	r3, [pc, #20]	; (382c <system_gclk_chan_get_hz+0x20>)
    3816:	701c      	strb	r4, [r3, #0]
    3818:	4b05      	ldr	r3, [pc, #20]	; (3830 <system_gclk_chan_get_hz+0x24>)
    381a:	885c      	ldrh	r4, [r3, #2]
    381c:	f000 f836 	bl	388c <cpu_irq_leave_critical>
    3820:	0524      	lsls	r4, r4, #20
    3822:	0f24      	lsrs	r4, r4, #28
    3824:	1c20      	adds	r0, r4, #0
    3826:	f7ff ff6b 	bl	3700 <system_gclk_gen_get_hz>
    382a:	bd10      	pop	{r4, pc}
    382c:	40000c02 	.word	0x40000c02
    3830:	40000c00 	.word	0x40000c00

00003834 <_system_dummy_init>:
    3834:	4770      	bx	lr
    3836:	46c0      	nop			; (mov r8, r8)

00003838 <system_init>:
    3838:	b508      	push	{r3, lr}
    383a:	f000 ff45 	bl	46c8 <system_clock_init>
    383e:	f7ff fff9 	bl	3834 <_system_dummy_init>
    3842:	f7ff fff7 	bl	3834 <_system_dummy_init>
    3846:	f7ff fab9 	bl	2dbc <_system_extint_init>
    384a:	f7ff fff3 	bl	3834 <_system_dummy_init>
    384e:	bd08      	pop	{r3, pc}

00003850 <cpu_irq_enter_critical>:
    3850:	4b0b      	ldr	r3, [pc, #44]	; (3880 <cpu_irq_enter_critical+0x30>)
    3852:	681a      	ldr	r2, [r3, #0]
    3854:	2a00      	cmp	r2, #0
    3856:	d105      	bne.n	3864 <cpu_irq_enter_critical+0x14>
    3858:	f3ef 8110 	mrs	r1, PRIMASK
    385c:	2900      	cmp	r1, #0
    385e:	d005      	beq.n	386c <cpu_irq_enter_critical+0x1c>
    3860:	4908      	ldr	r1, [pc, #32]	; (3884 <cpu_irq_enter_critical+0x34>)
    3862:	700a      	strb	r2, [r1, #0]
    3864:	681a      	ldr	r2, [r3, #0]
    3866:	3201      	adds	r2, #1
    3868:	601a      	str	r2, [r3, #0]
    386a:	4770      	bx	lr
    386c:	b672      	cpsid	i
    386e:	f3bf 8f5f 	dmb	sy
    3872:	4a05      	ldr	r2, [pc, #20]	; (3888 <cpu_irq_enter_critical+0x38>)
    3874:	7011      	strb	r1, [r2, #0]
    3876:	4a03      	ldr	r2, [pc, #12]	; (3884 <cpu_irq_enter_critical+0x34>)
    3878:	3101      	adds	r1, #1
    387a:	7011      	strb	r1, [r2, #0]
    387c:	e7f2      	b.n	3864 <cpu_irq_enter_critical+0x14>
    387e:	46c0      	nop			; (mov r8, r8)
    3880:	20004360 	.word	0x20004360
    3884:	20004364 	.word	0x20004364
    3888:	200000d0 	.word	0x200000d0

0000388c <cpu_irq_leave_critical>:
    388c:	4b08      	ldr	r3, [pc, #32]	; (38b0 <cpu_irq_leave_critical+0x24>)
    388e:	681a      	ldr	r2, [r3, #0]
    3890:	3a01      	subs	r2, #1
    3892:	601a      	str	r2, [r3, #0]
    3894:	681b      	ldr	r3, [r3, #0]
    3896:	2b00      	cmp	r3, #0
    3898:	d109      	bne.n	38ae <cpu_irq_leave_critical+0x22>
    389a:	4b06      	ldr	r3, [pc, #24]	; (38b4 <cpu_irq_leave_critical+0x28>)
    389c:	781b      	ldrb	r3, [r3, #0]
    389e:	2b00      	cmp	r3, #0
    38a0:	d005      	beq.n	38ae <cpu_irq_leave_critical+0x22>
    38a2:	2201      	movs	r2, #1
    38a4:	4b04      	ldr	r3, [pc, #16]	; (38b8 <cpu_irq_leave_critical+0x2c>)
    38a6:	701a      	strb	r2, [r3, #0]
    38a8:	f3bf 8f5f 	dmb	sy
    38ac:	b662      	cpsie	i
    38ae:	4770      	bx	lr
    38b0:	20004360 	.word	0x20004360
    38b4:	20004364 	.word	0x20004364
    38b8:	200000d0 	.word	0x200000d0

000038bc <usart_set_config_default>:
    38bc:	b5f0      	push	{r4, r5, r6, r7, lr}
    38be:	464f      	mov	r7, r9
    38c0:	4646      	mov	r6, r8
    38c2:	b4c0      	push	{r6, r7}
    38c4:	1c04      	adds	r4, r0, #0
    38c6:	b085      	sub	sp, #20
    38c8:	2800      	cmp	r0, #0
    38ca:	d05c      	beq.n	3986 <usart_set_config_default+0xca>
    38cc:	6800      	ldr	r0, [r0, #0]
    38ce:	f000 fe4f 	bl	4570 <_sercom_get_sercom_inst_index>
    38d2:	250e      	movs	r5, #14
    38d4:	2300      	movs	r3, #0
    38d6:	3014      	adds	r0, #20
    38d8:	446d      	add	r5, sp
    38da:	b2c0      	uxtb	r0, r0
    38dc:	802b      	strh	r3, [r5, #0]
    38de:	69a7      	ldr	r7, [r4, #24]
    38e0:	6966      	ldr	r6, [r4, #20]
    38e2:	f7ff ff93 	bl	380c <system_gclk_chan_get_hz>
    38e6:	2310      	movs	r3, #16
    38e8:	1c01      	adds	r1, r0, #0
    38ea:	9300      	str	r3, [sp, #0]
    38ec:	1c38      	adds	r0, r7, #0
    38ee:	1c2a      	adds	r2, r5, #0
    38f0:	2300      	movs	r3, #0
    38f2:	f000 fca5 	bl	4240 <_sercom_get_async_baud_val>
    38f6:	6822      	ldr	r2, [r4, #0]
    38f8:	69d3      	ldr	r3, [r2, #28]
    38fa:	2b00      	cmp	r3, #0
    38fc:	d1fc      	bne.n	38f8 <usart_set_config_default+0x3c>
    38fe:	882b      	ldrh	r3, [r5, #0]
    3900:	8193      	strh	r3, [r2, #12]
    3902:	68e2      	ldr	r2, [r4, #12]
    3904:	6923      	ldr	r3, [r4, #16]
    3906:	4313      	orrs	r3, r2
    3908:	221d      	movs	r2, #29
    390a:	56a2      	ldrsb	r2, [r4, r2]
    390c:	3201      	adds	r2, #1
    390e:	d028      	beq.n	3962 <usart_set_config_default+0xa6>
    3910:	25c0      	movs	r5, #192	; 0xc0
    3912:	02ad      	lsls	r5, r5, #10
    3914:	431d      	orrs	r5, r3
    3916:	231c      	movs	r3, #28
    3918:	56e3      	ldrsb	r3, [r4, r3]
    391a:	3301      	adds	r3, #1
    391c:	d019      	beq.n	3952 <usart_set_config_default+0x96>
    391e:	68a2      	ldr	r2, [r4, #8]
    3920:	2aff      	cmp	r2, #255	; 0xff
    3922:	d01b      	beq.n	395c <usart_set_config_default+0xa0>
    3924:	4b29      	ldr	r3, [pc, #164]	; (39cc <usart_set_config_default+0x110>)
    3926:	4315      	orrs	r5, r2
    3928:	431e      	orrs	r6, r3
    392a:	2c00      	cmp	r4, #0
    392c:	d025      	beq.n	397a <usart_set_config_default+0xbe>
    392e:	6822      	ldr	r2, [r4, #0]
    3930:	69d3      	ldr	r3, [r2, #28]
    3932:	2b00      	cmp	r3, #0
    3934:	d1fc      	bne.n	3930 <usart_set_config_default+0x74>
    3936:	6055      	str	r5, [r2, #4]
    3938:	2c00      	cmp	r4, #0
    393a:	d018      	beq.n	396e <usart_set_config_default+0xb2>
    393c:	6822      	ldr	r2, [r4, #0]
    393e:	69d3      	ldr	r3, [r2, #28]
    3940:	2b00      	cmp	r3, #0
    3942:	d1fc      	bne.n	393e <usart_set_config_default+0x82>
    3944:	2000      	movs	r0, #0
    3946:	6016      	str	r6, [r2, #0]
    3948:	b005      	add	sp, #20
    394a:	bc0c      	pop	{r2, r3}
    394c:	4690      	mov	r8, r2
    394e:	4699      	mov	r9, r3
    3950:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3952:	4b1f      	ldr	r3, [pc, #124]	; (39d0 <usart_set_config_default+0x114>)
    3954:	68a2      	ldr	r2, [r4, #8]
    3956:	401d      	ands	r5, r3
    3958:	2aff      	cmp	r2, #255	; 0xff
    395a:	d1e3      	bne.n	3924 <usart_set_config_default+0x68>
    395c:	4b1d      	ldr	r3, [pc, #116]	; (39d4 <usart_set_config_default+0x118>)
    395e:	431e      	orrs	r6, r3
    3960:	e7e3      	b.n	392a <usart_set_config_default+0x6e>
    3962:	4d1d      	ldr	r5, [pc, #116]	; (39d8 <usart_set_config_default+0x11c>)
    3964:	401d      	ands	r5, r3
    3966:	2380      	movs	r3, #128	; 0x80
    3968:	025b      	lsls	r3, r3, #9
    396a:	431d      	orrs	r5, r3
    396c:	e7d3      	b.n	3916 <usart_set_config_default+0x5a>
    396e:	481b      	ldr	r0, [pc, #108]	; (39dc <usart_set_config_default+0x120>)
    3970:	491b      	ldr	r1, [pc, #108]	; (39e0 <usart_set_config_default+0x124>)
    3972:	223f      	movs	r2, #63	; 0x3f
    3974:	f000 fbcc 	bl	4110 <mbed_assert_internal>
    3978:	e7e0      	b.n	393c <usart_set_config_default+0x80>
    397a:	4818      	ldr	r0, [pc, #96]	; (39dc <usart_set_config_default+0x120>)
    397c:	4918      	ldr	r1, [pc, #96]	; (39e0 <usart_set_config_default+0x124>)
    397e:	223f      	movs	r2, #63	; 0x3f
    3980:	f000 fbc6 	bl	4110 <mbed_assert_internal>
    3984:	e7d3      	b.n	392e <usart_set_config_default+0x72>
    3986:	4b15      	ldr	r3, [pc, #84]	; (39dc <usart_set_config_default+0x120>)
    3988:	4f15      	ldr	r7, [pc, #84]	; (39e0 <usart_set_config_default+0x124>)
    398a:	1c18      	adds	r0, r3, #0
    398c:	1c39      	adds	r1, r7, #0
    398e:	229c      	movs	r2, #156	; 0x9c
    3990:	4698      	mov	r8, r3
    3992:	f000 fbbd 	bl	4110 <mbed_assert_internal>
    3996:	6820      	ldr	r0, [r4, #0]
    3998:	f000 fdea 	bl	4570 <_sercom_get_sercom_inst_index>
    399c:	250e      	movs	r5, #14
    399e:	69a3      	ldr	r3, [r4, #24]
    39a0:	3014      	adds	r0, #20
    39a2:	446d      	add	r5, sp
    39a4:	b2c0      	uxtb	r0, r0
    39a6:	4699      	mov	r9, r3
    39a8:	802c      	strh	r4, [r5, #0]
    39aa:	6966      	ldr	r6, [r4, #20]
    39ac:	f7ff ff2e 	bl	380c <system_gclk_chan_get_hz>
    39b0:	2310      	movs	r3, #16
    39b2:	1c01      	adds	r1, r0, #0
    39b4:	9300      	str	r3, [sp, #0]
    39b6:	1c2a      	adds	r2, r5, #0
    39b8:	4648      	mov	r0, r9
    39ba:	2300      	movs	r3, #0
    39bc:	f000 fc40 	bl	4240 <_sercom_get_async_baud_val>
    39c0:	4640      	mov	r0, r8
    39c2:	1c39      	adds	r1, r7, #0
    39c4:	223f      	movs	r2, #63	; 0x3f
    39c6:	f000 fba3 	bl	4110 <mbed_assert_internal>
    39ca:	e794      	b.n	38f6 <usart_set_config_default+0x3a>
    39cc:	41000004 	.word	0x41000004
    39d0:	fffeffff 	.word	0xfffeffff
    39d4:	40000004 	.word	0x40000004
    39d8:	fffdffff 	.word	0xfffdffff
    39dc:	0000d9e8 	.word	0x0000d9e8
    39e0:	0000d9ec 	.word	0x0000d9ec

000039e4 <serial_find_mux_settings>:
    39e4:	b570      	push	{r4, r5, r6, lr}
    39e6:	1c05      	adds	r5, r0, #0
    39e8:	b086      	sub	sp, #24
    39ea:	2800      	cmp	r0, #0
    39ec:	d03c      	beq.n	3a68 <serial_find_mux_settings+0x84>
    39ee:	201c      	movs	r0, #28
    39f0:	211d      	movs	r1, #29
    39f2:	2300      	movs	r3, #0
    39f4:	5628      	ldrsb	r0, [r5, r0]
    39f6:	5669      	ldrsb	r1, [r5, r1]
    39f8:	9302      	str	r3, [sp, #8]
    39fa:	9303      	str	r3, [sp, #12]
    39fc:	9304      	str	r3, [sp, #16]
    39fe:	9305      	str	r3, [sp, #20]
    3a00:	f000 ff7c 	bl	48fc <pinmap_merge_sercom>
    3a04:	2400      	movs	r4, #0
    3a06:	1c06      	adds	r6, r0, #0
    3a08:	201c      	movs	r0, #28
    3a0a:	192b      	adds	r3, r5, r4
    3a0c:	5618      	ldrsb	r0, [r3, r0]
    3a0e:	1c31      	adds	r1, r6, #0
    3a10:	f000 ffc4 	bl	499c <pinmap_pad_sercom>
    3a14:	00a3      	lsls	r3, r4, #2
    3a16:	aa02      	add	r2, sp, #8
    3a18:	3401      	adds	r4, #1
    3a1a:	50d0      	str	r0, [r2, r3]
    3a1c:	2c04      	cmp	r4, #4
    3a1e:	d1f3      	bne.n	3a08 <serial_find_mux_settings+0x24>
    3a20:	9b03      	ldr	r3, [sp, #12]
    3a22:	2000      	movs	r0, #0
    3a24:	9301      	str	r3, [sp, #4]
    3a26:	3b01      	subs	r3, #1
    3a28:	2b02      	cmp	r3, #2
    3a2a:	d802      	bhi.n	3a32 <serial_find_mux_settings+0x4e>
    3a2c:	4a11      	ldr	r2, [pc, #68]	; (3a74 <serial_find_mux_settings+0x90>)
    3a2e:	009b      	lsls	r3, r3, #2
    3a30:	5898      	ldr	r0, [r3, r2]
    3a32:	221e      	movs	r2, #30
    3a34:	5eab      	ldrsh	r3, [r5, r2]
    3a36:	3301      	adds	r3, #1
    3a38:	d008      	beq.n	3a4c <serial_find_mux_settings+0x68>
    3a3a:	9b02      	ldr	r3, [sp, #8]
    3a3c:	2b00      	cmp	r3, #0
    3a3e:	d103      	bne.n	3a48 <serial_find_mux_settings+0x64>
    3a40:	9b04      	ldr	r3, [sp, #16]
    3a42:	9301      	str	r3, [sp, #4]
    3a44:	2b02      	cmp	r3, #2
    3a46:	d008      	beq.n	3a5a <serial_find_mux_settings+0x76>
    3a48:	b006      	add	sp, #24
    3a4a:	bd70      	pop	{r4, r5, r6, pc}
    3a4c:	9b02      	ldr	r3, [sp, #8]
    3a4e:	2b02      	cmp	r3, #2
    3a50:	d1fa      	bne.n	3a48 <serial_find_mux_settings+0x64>
    3a52:	2380      	movs	r3, #128	; 0x80
    3a54:	025b      	lsls	r3, r3, #9
    3a56:	4318      	orrs	r0, r3
    3a58:	e7f6      	b.n	3a48 <serial_find_mux_settings+0x64>
    3a5a:	9b05      	ldr	r3, [sp, #20]
    3a5c:	2b03      	cmp	r3, #3
    3a5e:	d1f3      	bne.n	3a48 <serial_find_mux_settings+0x64>
    3a60:	2380      	movs	r3, #128	; 0x80
    3a62:	029b      	lsls	r3, r3, #10
    3a64:	4318      	orrs	r0, r3
    3a66:	e7ef      	b.n	3a48 <serial_find_mux_settings+0x64>
    3a68:	4803      	ldr	r0, [pc, #12]	; (3a78 <serial_find_mux_settings+0x94>)
    3a6a:	4904      	ldr	r1, [pc, #16]	; (3a7c <serial_find_mux_settings+0x98>)
    3a6c:	2271      	movs	r2, #113	; 0x71
    3a6e:	f000 fb4f 	bl	4110 <mbed_assert_internal>
    3a72:	e7bc      	b.n	39ee <serial_find_mux_settings+0xa>
    3a74:	0000d9dc 	.word	0x0000d9dc
    3a78:	0000d9e8 	.word	0x0000d9e8
    3a7c:	0000d9ec 	.word	0x0000d9ec

00003a80 <get_default_serial_values>:
    3a80:	b510      	push	{r4, lr}
    3a82:	1e04      	subs	r4, r0, #0
    3a84:	d00b      	beq.n	3a9e <get_default_serial_values+0x1e>
    3a86:	23ff      	movs	r3, #255	; 0xff
    3a88:	60a3      	str	r3, [r4, #8]
    3a8a:	2300      	movs	r3, #0
    3a8c:	60e3      	str	r3, [r4, #12]
    3a8e:	6123      	str	r3, [r4, #16]
    3a90:	2396      	movs	r3, #150	; 0x96
    3a92:	019b      	lsls	r3, r3, #6
    3a94:	61a3      	str	r3, [r4, #24]
    3a96:	2388      	movs	r3, #136	; 0x88
    3a98:	035b      	lsls	r3, r3, #13
    3a9a:	6163      	str	r3, [r4, #20]
    3a9c:	bd10      	pop	{r4, pc}
    3a9e:	4803      	ldr	r0, [pc, #12]	; (3aac <get_default_serial_values+0x2c>)
    3aa0:	4903      	ldr	r1, [pc, #12]	; (3ab0 <get_default_serial_values+0x30>)
    3aa2:	22e1      	movs	r2, #225	; 0xe1
    3aa4:	f000 fb34 	bl	4110 <mbed_assert_internal>
    3aa8:	e7ed      	b.n	3a86 <get_default_serial_values+0x6>
    3aaa:	46c0      	nop			; (mov r8, r8)
    3aac:	0000d9e8 	.word	0x0000d9e8
    3ab0:	0000d9ec 	.word	0x0000d9ec

00003ab4 <serial_init>:
    3ab4:	b5f0      	push	{r4, r5, r6, r7, lr}
    3ab6:	464e      	mov	r6, r9
    3ab8:	4645      	mov	r5, r8
    3aba:	4657      	mov	r7, sl
    3abc:	b4e0      	push	{r5, r6, r7}
    3abe:	1c04      	adds	r4, r0, #0
    3ac0:	b084      	sub	sp, #16
    3ac2:	1c0e      	adds	r6, r1, #0
    3ac4:	1c15      	adds	r5, r2, #0
    3ac6:	2800      	cmp	r0, #0
    3ac8:	d100      	bne.n	3acc <serial_init+0x18>
    3aca:	e09d      	b.n	3c08 <serial_init+0x154>
    3acc:	4f60      	ldr	r7, [pc, #384]	; (3c50 <serial_init+0x19c>)
    3ace:	783b      	ldrb	r3, [r7, #0]
    3ad0:	2b00      	cmp	r3, #0
    3ad2:	d100      	bne.n	3ad6 <serial_init+0x22>
    3ad4:	e083      	b.n	3bde <serial_init+0x12a>
    3ad6:	1c20      	adds	r0, r4, #0
    3ad8:	f7ff ffd2 	bl	3a80 <get_default_serial_values>
    3adc:	23ff      	movs	r3, #255	; 0xff
    3ade:	7726      	strb	r6, [r4, #28]
    3ae0:	77a3      	strb	r3, [r4, #30]
    3ae2:	77e3      	strb	r3, [r4, #31]
    3ae4:	7765      	strb	r5, [r4, #29]
    3ae6:	1c20      	adds	r0, r4, #0
    3ae8:	f7ff ff7c 	bl	39e4 <serial_find_mux_settings>
    3aec:	1c29      	adds	r1, r5, #0
    3aee:	1c07      	adds	r7, r0, #0
    3af0:	1c30      	adds	r0, r6, #0
    3af2:	f000 ff03 	bl	48fc <pinmap_merge_sercom>
    3af6:	1c43      	adds	r3, r0, #1
    3af8:	d017      	beq.n	3b2a <serial_init+0x76>
    3afa:	250f      	movs	r5, #15
    3afc:	4005      	ands	r5, r0
    3afe:	2001      	movs	r0, #1
    3b00:	1c29      	adds	r1, r5, #0
    3b02:	4240      	negs	r0, r0
    3b04:	f000 ff6c 	bl	49e0 <pinmap_peripheral_sercom>
    3b08:	1c06      	adds	r6, r0, #0
    3b0a:	1c02      	adds	r2, r0, #0
    3b0c:	6020      	str	r0, [r4, #0]
    3b0e:	2c00      	cmp	r4, #0
    3b10:	d06a      	beq.n	3be8 <serial_init+0x134>
    3b12:	69d3      	ldr	r3, [r2, #28]
    3b14:	2b00      	cmp	r3, #0
    3b16:	d1fc      	bne.n	3b12 <serial_init+0x5e>
    3b18:	2102      	movs	r1, #2
    3b1a:	6813      	ldr	r3, [r2, #0]
    3b1c:	438b      	bics	r3, r1
    3b1e:	6013      	str	r3, [r2, #0]
    3b20:	2201      	movs	r2, #1
    3b22:	6823      	ldr	r3, [r4, #0]
    3b24:	6818      	ldr	r0, [r3, #0]
    3b26:	4202      	tst	r2, r0
    3b28:	d005      	beq.n	3b36 <serial_init+0x82>
    3b2a:	b004      	add	sp, #16
    3b2c:	bc1c      	pop	{r2, r3, r4}
    3b2e:	4690      	mov	r8, r2
    3b30:	4699      	mov	r9, r3
    3b32:	46a2      	mov	sl, r4
    3b34:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3b36:	681b      	ldr	r3, [r3, #0]
    3b38:	4019      	ands	r1, r3
    3b3a:	4688      	mov	r8, r1
    3b3c:	d1f5      	bne.n	3b2a <serial_init+0x76>
    3b3e:	1ca8      	adds	r0, r5, #2
    3b40:	4082      	lsls	r2, r0
    3b42:	4944      	ldr	r1, [pc, #272]	; (3c54 <serial_init+0x1a0>)
    3b44:	6a0b      	ldr	r3, [r1, #32]
    3b46:	431a      	orrs	r2, r3
    3b48:	620a      	str	r2, [r1, #32]
    3b4a:	4642      	mov	r2, r8
    3b4c:	ab02      	add	r3, sp, #8
    3b4e:	701a      	strb	r2, [r3, #0]
    3b50:	2314      	movs	r3, #20
    3b52:	4699      	mov	r9, r3
    3b54:	44a9      	add	r9, r5
    3b56:	a902      	add	r1, sp, #8
    3b58:	4648      	mov	r0, r9
    3b5a:	f7ff fe4b 	bl	37f4 <system_gclk_chan_set_config>
    3b5e:	4648      	mov	r0, r9
    3b60:	f7ff fe0a 	bl	3778 <system_gclk_chan_enable>
    3b64:	2100      	movs	r1, #0
    3b66:	2000      	movs	r0, #0
    3b68:	f000 fc32 	bl	43d0 <sercom_set_gclk_generator>
    3b6c:	6167      	str	r7, [r4, #20]
    3b6e:	1c20      	adds	r0, r4, #0
    3b70:	f7ff fea4 	bl	38bc <usart_set_config_default>
    3b74:	4642      	mov	r2, r8
    3b76:	ab02      	add	r3, sp, #8
    3b78:	715a      	strb	r2, [r3, #5]
    3b7a:	719a      	strb	r2, [r3, #6]
    3b7c:	71da      	strb	r2, [r3, #7]
    3b7e:	2320      	movs	r3, #32
    3b80:	1c27      	adds	r7, r4, #0
    3b82:	469a      	mov	sl, r3
    3b84:	371c      	adds	r7, #28
    3b86:	44a2      	add	sl, r4
    3b88:	2300      	movs	r3, #0
    3b8a:	56fb      	ldrsb	r3, [r7, r3]
    3b8c:	4699      	mov	r9, r3
    3b8e:	3301      	adds	r3, #1
    3b90:	d00f      	beq.n	3bb2 <serial_init+0xfe>
    3b92:	4648      	mov	r0, r9
    3b94:	1c29      	adds	r1, r5, #0
    3b96:	f000 fedd 	bl	4954 <pinmap_function_sercom>
    3b9a:	ab02      	add	r3, sp, #8
    3b9c:	b2c0      	uxtb	r0, r0
    3b9e:	7118      	strb	r0, [r3, #4]
    3ba0:	28ff      	cmp	r0, #255	; 0xff
    3ba2:	d006      	beq.n	3bb2 <serial_init+0xfe>
    3ba4:	466a      	mov	r2, sp
    3ba6:	464b      	mov	r3, r9
    3ba8:	71d3      	strb	r3, [r2, #7]
    3baa:	79d0      	ldrb	r0, [r2, #7]
    3bac:	a903      	add	r1, sp, #12
    3bae:	f7ff fd17 	bl	35e0 <system_pinmux_pin_set_config>
    3bb2:	3701      	adds	r7, #1
    3bb4:	4557      	cmp	r7, sl
    3bb6:	d1e7      	bne.n	3b88 <serial_init+0xd4>
    3bb8:	4b27      	ldr	r3, [pc, #156]	; (3c58 <serial_init+0x1a4>)
    3bba:	429e      	cmp	r6, r3
    3bbc:	d030      	beq.n	3c20 <serial_init+0x16c>
    3bbe:	2c00      	cmp	r4, #0
    3bc0:	d028      	beq.n	3c14 <serial_init+0x160>
    3bc2:	6823      	ldr	r3, [r4, #0]
    3bc4:	69da      	ldr	r2, [r3, #28]
    3bc6:	2a00      	cmp	r2, #0
    3bc8:	d1fc      	bne.n	3bc4 <serial_init+0x110>
    3bca:	2c00      	cmp	r4, #0
    3bcc:	d031      	beq.n	3c32 <serial_init+0x17e>
    3bce:	69da      	ldr	r2, [r3, #28]
    3bd0:	2a00      	cmp	r2, #0
    3bd2:	d1fc      	bne.n	3bce <serial_init+0x11a>
    3bd4:	6819      	ldr	r1, [r3, #0]
    3bd6:	3202      	adds	r2, #2
    3bd8:	430a      	orrs	r2, r1
    3bda:	601a      	str	r2, [r3, #0]
    3bdc:	e7a5      	b.n	3b2a <serial_init+0x76>
    3bde:	f7ff fe2b 	bl	3838 <system_init>
    3be2:	2301      	movs	r3, #1
    3be4:	703b      	strb	r3, [r7, #0]
    3be6:	e776      	b.n	3ad6 <serial_init+0x22>
    3be8:	4b1c      	ldr	r3, [pc, #112]	; (3c5c <serial_init+0x1a8>)
    3bea:	2256      	movs	r2, #86	; 0x56
    3bec:	4699      	mov	r9, r3
    3bee:	4b1c      	ldr	r3, [pc, #112]	; (3c60 <serial_init+0x1ac>)
    3bf0:	4648      	mov	r0, r9
    3bf2:	4698      	mov	r8, r3
    3bf4:	1c19      	adds	r1, r3, #0
    3bf6:	f000 fa8b 	bl	4110 <mbed_assert_internal>
    3bfa:	223f      	movs	r2, #63	; 0x3f
    3bfc:	4648      	mov	r0, r9
    3bfe:	4641      	mov	r1, r8
    3c00:	f000 fa86 	bl	4110 <mbed_assert_internal>
    3c04:	6822      	ldr	r2, [r4, #0]
    3c06:	e784      	b.n	3b12 <serial_init+0x5e>
    3c08:	4814      	ldr	r0, [pc, #80]	; (3c5c <serial_init+0x1a8>)
    3c0a:	4915      	ldr	r1, [pc, #84]	; (3c60 <serial_init+0x1ac>)
    3c0c:	22ed      	movs	r2, #237	; 0xed
    3c0e:	f000 fa7f 	bl	4110 <mbed_assert_internal>
    3c12:	e75b      	b.n	3acc <serial_init+0x18>
    3c14:	4811      	ldr	r0, [pc, #68]	; (3c5c <serial_init+0x1a8>)
    3c16:	4912      	ldr	r1, [pc, #72]	; (3c60 <serial_init+0x1ac>)
    3c18:	223f      	movs	r2, #63	; 0x3f
    3c1a:	f000 fa79 	bl	4110 <mbed_assert_internal>
    3c1e:	e7d0      	b.n	3bc2 <serial_init+0x10e>
    3c20:	2201      	movs	r2, #1
    3c22:	4b10      	ldr	r3, [pc, #64]	; (3c64 <serial_init+0x1b0>)
    3c24:	1c21      	adds	r1, r4, #0
    3c26:	601a      	str	r2, [r3, #0]
    3c28:	480f      	ldr	r0, [pc, #60]	; (3c68 <serial_init+0x1b4>)
    3c2a:	3247      	adds	r2, #71	; 0x47
    3c2c:	f004 feaf 	bl	898e <memcpy>
    3c30:	e7c5      	b.n	3bbe <serial_init+0x10a>
    3c32:	4e0a      	ldr	r6, [pc, #40]	; (3c5c <serial_init+0x1a8>)
    3c34:	4d0a      	ldr	r5, [pc, #40]	; (3c60 <serial_init+0x1ac>)
    3c36:	1c30      	adds	r0, r6, #0
    3c38:	1c29      	adds	r1, r5, #0
    3c3a:	324a      	adds	r2, #74	; 0x4a
    3c3c:	f000 fa68 	bl	4110 <mbed_assert_internal>
    3c40:	1c30      	adds	r0, r6, #0
    3c42:	1c29      	adds	r1, r5, #0
    3c44:	223f      	movs	r2, #63	; 0x3f
    3c46:	f000 fa63 	bl	4110 <mbed_assert_internal>
    3c4a:	6823      	ldr	r3, [r4, #0]
    3c4c:	e7bf      	b.n	3bce <serial_init+0x11a>
    3c4e:	46c0      	nop			; (mov r8, r8)
    3c50:	20004240 	.word	0x20004240
    3c54:	40000400 	.word	0x40000400
    3c58:	42000800 	.word	0x42000800
    3c5c:	0000d9e8 	.word	0x0000d9e8
    3c60:	0000d9ec 	.word	0x0000d9ec
    3c64:	20004368 	.word	0x20004368
    3c68:	20004418 	.word	0x20004418

00003c6c <serial_irq_handler>:
    3c6c:	b5f0      	push	{r4, r5, r6, r7, lr}
    3c6e:	4647      	mov	r7, r8
    3c70:	1c04      	adds	r4, r0, #0
    3c72:	b480      	push	{r7}
    3c74:	1c0e      	adds	r6, r1, #0
    3c76:	1c15      	adds	r5, r2, #0
    3c78:	2800      	cmp	r0, #0
    3c7a:	d020      	beq.n	3cbe <serial_irq_handler+0x52>
    3c7c:	4b18      	ldr	r3, [pc, #96]	; (3ce0 <serial_irq_handler+0x74>)
    3c7e:	6019      	str	r1, [r3, #0]
    3c80:	6822      	ldr	r2, [r4, #0]
    3c82:	4b18      	ldr	r3, [pc, #96]	; (3ce4 <serial_irq_handler+0x78>)
    3c84:	429a      	cmp	r2, r3
    3c86:	d018      	beq.n	3cba <serial_irq_handler+0x4e>
    3c88:	dc0d      	bgt.n	3ca6 <serial_irq_handler+0x3a>
    3c8a:	4917      	ldr	r1, [pc, #92]	; (3ce8 <serial_irq_handler+0x7c>)
    3c8c:	2301      	movs	r3, #1
    3c8e:	428a      	cmp	r2, r1
    3c90:	d003      	beq.n	3c9a <serial_irq_handler+0x2e>
    3c92:	4916      	ldr	r1, [pc, #88]	; (3cec <serial_irq_handler+0x80>)
    3c94:	3301      	adds	r3, #1
    3c96:	428a      	cmp	r2, r1
    3c98:	d10d      	bne.n	3cb6 <serial_irq_handler+0x4a>
    3c9a:	4a15      	ldr	r2, [pc, #84]	; (3cf0 <serial_irq_handler+0x84>)
    3c9c:	009b      	lsls	r3, r3, #2
    3c9e:	509d      	str	r5, [r3, r2]
    3ca0:	bc04      	pop	{r2}
    3ca2:	4690      	mov	r8, r2
    3ca4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3ca6:	4913      	ldr	r1, [pc, #76]	; (3cf4 <serial_irq_handler+0x88>)
    3ca8:	2304      	movs	r3, #4
    3caa:	428a      	cmp	r2, r1
    3cac:	d0f5      	beq.n	3c9a <serial_irq_handler+0x2e>
    3cae:	4912      	ldr	r1, [pc, #72]	; (3cf8 <serial_irq_handler+0x8c>)
    3cb0:	3301      	adds	r3, #1
    3cb2:	428a      	cmp	r2, r1
    3cb4:	d0f1      	beq.n	3c9a <serial_irq_handler+0x2e>
    3cb6:	2300      	movs	r3, #0
    3cb8:	e7ef      	b.n	3c9a <serial_irq_handler+0x2e>
    3cba:	2303      	movs	r3, #3
    3cbc:	e7ed      	b.n	3c9a <serial_irq_handler+0x2e>
    3cbe:	4b0f      	ldr	r3, [pc, #60]	; (3cfc <serial_irq_handler+0x90>)
    3cc0:	22b3      	movs	r2, #179	; 0xb3
    3cc2:	4698      	mov	r8, r3
    3cc4:	4f0e      	ldr	r7, [pc, #56]	; (3d00 <serial_irq_handler+0x94>)
    3cc6:	1c18      	adds	r0, r3, #0
    3cc8:	1c39      	adds	r1, r7, #0
    3cca:	0092      	lsls	r2, r2, #2
    3ccc:	f000 fa20 	bl	4110 <mbed_assert_internal>
    3cd0:	4b03      	ldr	r3, [pc, #12]	; (3ce0 <serial_irq_handler+0x74>)
    3cd2:	4640      	mov	r0, r8
    3cd4:	1c39      	adds	r1, r7, #0
    3cd6:	4a0b      	ldr	r2, [pc, #44]	; (3d04 <serial_irq_handler+0x98>)
    3cd8:	601e      	str	r6, [r3, #0]
    3cda:	f000 fa19 	bl	4110 <mbed_assert_internal>
    3cde:	e7cf      	b.n	3c80 <serial_irq_handler+0x14>
    3ce0:	20004384 	.word	0x20004384
    3ce4:	42001400 	.word	0x42001400
    3ce8:	42000c00 	.word	0x42000c00
    3cec:	42001000 	.word	0x42001000
    3cf0:	2000436c 	.word	0x2000436c
    3cf4:	42001800 	.word	0x42001800
    3cf8:	42001c00 	.word	0x42001c00
    3cfc:	0000d9e8 	.word	0x0000d9e8
    3d00:	0000d9ec 	.word	0x0000d9ec
    3d04:	00000266 	.word	0x00000266

00003d08 <serial_readable>:
    3d08:	b510      	push	{r4, lr}
    3d0a:	1e04      	subs	r4, r0, #0
    3d0c:	d004      	beq.n	3d18 <serial_readable+0x10>
    3d0e:	6823      	ldr	r3, [r4, #0]
    3d10:	7e18      	ldrb	r0, [r3, #24]
    3d12:	0740      	lsls	r0, r0, #29
    3d14:	0fc0      	lsrs	r0, r0, #31
    3d16:	bd10      	pop	{r4, pc}
    3d18:	4802      	ldr	r0, [pc, #8]	; (3d24 <serial_readable+0x1c>)
    3d1a:	4903      	ldr	r1, [pc, #12]	; (3d28 <serial_readable+0x20>)
    3d1c:	4a03      	ldr	r2, [pc, #12]	; (3d2c <serial_readable+0x24>)
    3d1e:	f000 f9f7 	bl	4110 <mbed_assert_internal>
    3d22:	e7f4      	b.n	3d0e <serial_readable+0x6>
    3d24:	0000d9e8 	.word	0x0000d9e8
    3d28:	0000d9ec 	.word	0x0000d9ec
    3d2c:	00000323 	.word	0x00000323

00003d30 <serial_getc>:
    3d30:	b510      	push	{r4, lr}
    3d32:	1e04      	subs	r4, r0, #0
    3d34:	d008      	beq.n	3d48 <serial_getc+0x18>
    3d36:	1c20      	adds	r0, r4, #0
    3d38:	f7ff ffe6 	bl	3d08 <serial_readable>
    3d3c:	2800      	cmp	r0, #0
    3d3e:	d0fa      	beq.n	3d36 <serial_getc+0x6>
    3d40:	6823      	ldr	r3, [r4, #0]
    3d42:	8d18      	ldrh	r0, [r3, #40]	; 0x28
    3d44:	b280      	uxth	r0, r0
    3d46:	bd10      	pop	{r4, pc}
    3d48:	4802      	ldr	r0, [pc, #8]	; (3d54 <serial_getc+0x24>)
    3d4a:	4903      	ldr	r1, [pc, #12]	; (3d58 <serial_getc+0x28>)
    3d4c:	4a03      	ldr	r2, [pc, #12]	; (3d5c <serial_getc+0x2c>)
    3d4e:	f000 f9df 	bl	4110 <mbed_assert_internal>
    3d52:	e7f0      	b.n	3d36 <serial_getc+0x6>
    3d54:	0000d9e8 	.word	0x0000d9e8
    3d58:	0000d9ec 	.word	0x0000d9ec
    3d5c:	00000311 	.word	0x00000311

00003d60 <serial_writable>:
    3d60:	b510      	push	{r4, lr}
    3d62:	1e04      	subs	r4, r0, #0
    3d64:	d004      	beq.n	3d70 <serial_writable+0x10>
    3d66:	2001      	movs	r0, #1
    3d68:	6823      	ldr	r3, [r4, #0]
    3d6a:	7e1b      	ldrb	r3, [r3, #24]
    3d6c:	4018      	ands	r0, r3
    3d6e:	bd10      	pop	{r4, pc}
    3d70:	22cc      	movs	r2, #204	; 0xcc
    3d72:	4803      	ldr	r0, [pc, #12]	; (3d80 <serial_writable+0x20>)
    3d74:	4903      	ldr	r1, [pc, #12]	; (3d84 <serial_writable+0x24>)
    3d76:	0092      	lsls	r2, r2, #2
    3d78:	f000 f9ca 	bl	4110 <mbed_assert_internal>
    3d7c:	e7f3      	b.n	3d66 <serial_writable+0x6>
    3d7e:	46c0      	nop			; (mov r8, r8)
    3d80:	0000d9e8 	.word	0x0000d9e8
    3d84:	0000d9ec 	.word	0x0000d9ec

00003d88 <serial_putc>:
    3d88:	b538      	push	{r3, r4, r5, lr}
    3d8a:	1c04      	adds	r4, r0, #0
    3d8c:	1c0d      	adds	r5, r1, #0
    3d8e:	2800      	cmp	r0, #0
    3d90:	d00e      	beq.n	3db0 <serial_putc+0x28>
    3d92:	05ed      	lsls	r5, r5, #23
    3d94:	0ded      	lsrs	r5, r5, #23
    3d96:	1c20      	adds	r0, r4, #0
    3d98:	f7ff ffe2 	bl	3d60 <serial_writable>
    3d9c:	2800      	cmp	r0, #0
    3d9e:	d0fa      	beq.n	3d96 <serial_putc+0xe>
    3da0:	2202      	movs	r2, #2
    3da2:	6823      	ldr	r3, [r4, #0]
    3da4:	851d      	strh	r5, [r3, #40]	; 0x28
    3da6:	6821      	ldr	r1, [r4, #0]
    3da8:	7e0b      	ldrb	r3, [r1, #24]
    3daa:	421a      	tst	r2, r3
    3dac:	d0fc      	beq.n	3da8 <serial_putc+0x20>
    3dae:	bd38      	pop	{r3, r4, r5, pc}
    3db0:	4802      	ldr	r0, [pc, #8]	; (3dbc <serial_putc+0x34>)
    3db2:	4903      	ldr	r1, [pc, #12]	; (3dc0 <serial_putc+0x38>)
    3db4:	4a03      	ldr	r2, [pc, #12]	; (3dc4 <serial_putc+0x3c>)
    3db6:	f000 f9ab 	bl	4110 <mbed_assert_internal>
    3dba:	e7ea      	b.n	3d92 <serial_putc+0xa>
    3dbc:	0000d9e8 	.word	0x0000d9e8
    3dc0:	0000d9ec 	.word	0x0000d9ec
    3dc4:	00000319 	.word	0x00000319

00003dc8 <_ZN4mbed8FilePathC1EPKc>:
    3dc8:	b538      	push	{r3, r4, r5, lr}
    3dca:	2300      	movs	r3, #0
    3dcc:	6003      	str	r3, [r0, #0]
    3dce:	6043      	str	r3, [r0, #4]
    3dd0:	780b      	ldrb	r3, [r1, #0]
    3dd2:	1c04      	adds	r4, r0, #0
    3dd4:	2b2f      	cmp	r3, #47	; 0x2f
    3dd6:	d001      	beq.n	3ddc <_ZN4mbed8FilePathC1EPKc+0x14>
    3dd8:	1c20      	adds	r0, r4, #0
    3dda:	bd38      	pop	{r3, r4, r5, pc}
    3ddc:	784b      	ldrb	r3, [r1, #1]
    3dde:	2b00      	cmp	r3, #0
    3de0:	d0fa      	beq.n	3dd8 <_ZN4mbed8FilePathC1EPKc+0x10>
    3de2:	1c48      	adds	r0, r1, #1
    3de4:	6020      	str	r0, [r4, #0]
    3de6:	784b      	ldrb	r3, [r1, #1]
    3de8:	2b2f      	cmp	r3, #47	; 0x2f
    3dea:	d014      	beq.n	3e16 <_ZN4mbed8FilePathC1EPKc+0x4e>
    3dec:	2b00      	cmp	r3, #0
    3dee:	d015      	beq.n	3e1c <_ZN4mbed8FilePathC1EPKc+0x54>
    3df0:	1c03      	adds	r3, r0, #0
    3df2:	e001      	b.n	3df8 <_ZN4mbed8FilePathC1EPKc+0x30>
    3df4:	2a00      	cmp	r2, #0
    3df6:	d00c      	beq.n	3e12 <_ZN4mbed8FilePathC1EPKc+0x4a>
    3df8:	1a5d      	subs	r5, r3, r1
    3dfa:	3301      	adds	r3, #1
    3dfc:	6023      	str	r3, [r4, #0]
    3dfe:	781a      	ldrb	r2, [r3, #0]
    3e00:	2a2f      	cmp	r2, #47	; 0x2f
    3e02:	d1f7      	bne.n	3df4 <_ZN4mbed8FilePathC1EPKc+0x2c>
    3e04:	1c29      	adds	r1, r5, #0
    3e06:	3301      	adds	r3, #1
    3e08:	6023      	str	r3, [r4, #0]
    3e0a:	f000 ff43 	bl	4c94 <_ZN4mbed8FileBase6lookupEPKcj>
    3e0e:	6060      	str	r0, [r4, #4]
    3e10:	e7e2      	b.n	3dd8 <_ZN4mbed8FilePathC1EPKc+0x10>
    3e12:	1c29      	adds	r1, r5, #0
    3e14:	e7f9      	b.n	3e0a <_ZN4mbed8FilePathC1EPKc+0x42>
    3e16:	1c03      	adds	r3, r0, #0
    3e18:	2100      	movs	r1, #0
    3e1a:	e7f4      	b.n	3e06 <_ZN4mbed8FilePathC1EPKc+0x3e>
    3e1c:	2100      	movs	r1, #0
    3e1e:	e7f4      	b.n	3e0a <_ZN4mbed8FilePathC1EPKc+0x42>

00003e20 <_ZN4mbed8FilePath8fileNameEv>:
    3e20:	6800      	ldr	r0, [r0, #0]
    3e22:	4770      	bx	lr

00003e24 <_ZN4mbed8FilePath10fileSystemEv>:
    3e24:	6843      	ldr	r3, [r0, #4]
    3e26:	b510      	push	{r4, lr}
    3e28:	2b00      	cmp	r3, #0
    3e2a:	d007      	beq.n	3e3c <_ZN4mbed8FilePath10fileSystemEv+0x18>
    3e2c:	1c04      	adds	r4, r0, #0
    3e2e:	1c18      	adds	r0, r3, #0
    3e30:	f000 ff50 	bl	4cd4 <_ZN4mbed8FileBase11getPathTypeEv>
    3e34:	2801      	cmp	r0, #1
    3e36:	d101      	bne.n	3e3c <_ZN4mbed8FilePath10fileSystemEv+0x18>
    3e38:	6860      	ldr	r0, [r4, #4]
    3e3a:	bd10      	pop	{r4, pc}
    3e3c:	2000      	movs	r0, #0
    3e3e:	e7fc      	b.n	3e3a <_ZN4mbed8FilePath10fileSystemEv+0x16>

00003e40 <_ZN4mbed8FilePath6isFileEv>:
    3e40:	6840      	ldr	r0, [r0, #4]
    3e42:	b508      	push	{r3, lr}
    3e44:	2800      	cmp	r0, #0
    3e46:	d005      	beq.n	3e54 <_ZN4mbed8FilePath6isFileEv+0x14>
    3e48:	f000 ff44 	bl	4cd4 <_ZN4mbed8FileBase11getPathTypeEv>
    3e4c:	4243      	negs	r3, r0
    3e4e:	4158      	adcs	r0, r3
    3e50:	b2c0      	uxtb	r0, r0
    3e52:	bd08      	pop	{r3, pc}
    3e54:	2000      	movs	r0, #0
    3e56:	e7fc      	b.n	3e52 <_ZN4mbed8FilePath6isFileEv+0x12>

00003e58 <_ZN4mbed8FilePath4fileEv>:
    3e58:	6843      	ldr	r3, [r0, #4]
    3e5a:	b510      	push	{r4, lr}
    3e5c:	2b00      	cmp	r3, #0
    3e5e:	d00a      	beq.n	3e76 <_ZN4mbed8FilePath4fileEv+0x1e>
    3e60:	1c04      	adds	r4, r0, #0
    3e62:	1c18      	adds	r0, r3, #0
    3e64:	f000 ff36 	bl	4cd4 <_ZN4mbed8FileBase11getPathTypeEv>
    3e68:	2800      	cmp	r0, #0
    3e6a:	d104      	bne.n	3e76 <_ZN4mbed8FilePath4fileEv+0x1e>
    3e6c:	6860      	ldr	r0, [r4, #4]
    3e6e:	2800      	cmp	r0, #0
    3e70:	d001      	beq.n	3e76 <_ZN4mbed8FilePath4fileEv+0x1e>
    3e72:	3804      	subs	r0, #4
    3e74:	bd10      	pop	{r4, pc}
    3e76:	2000      	movs	r0, #0
    3e78:	e7fc      	b.n	3e74 <_ZN4mbed8FilePath4fileEv+0x1c>
    3e7a:	46c0      	nop			; (mov r8, r8)

00003e7c <_ZN4mbed8FilePath6existsEv>:
    3e7c:	6840      	ldr	r0, [r0, #4]
    3e7e:	1e43      	subs	r3, r0, #1
    3e80:	4198      	sbcs	r0, r3
    3e82:	b2c0      	uxtb	r0, r0
    3e84:	4770      	bx	lr
    3e86:	46c0      	nop			; (mov r8, r8)

00003e88 <_ZN4mbed6Serial5_getcEv>:
    3e88:	b508      	push	{r3, lr}
    3e8a:	f000 f8b5 	bl	3ff8 <_ZN4mbed10SerialBase10_base_getcEv>
    3e8e:	bd08      	pop	{r3, pc}

00003e90 <_ZThn220_N4mbed6Serial5_getcEv>:
    3e90:	b408      	push	{r3}
    3e92:	4b02      	ldr	r3, [pc, #8]	; (3e9c <_ZThn220_N4mbed6Serial5_getcEv+0xc>)
    3e94:	469c      	mov	ip, r3
    3e96:	38dc      	subs	r0, #220	; 0xdc
    3e98:	bc08      	pop	{r3}
    3e9a:	4760      	bx	ip
    3e9c:	00003e89 	.word	0x00003e89

00003ea0 <_ZN4mbed6Serial5_putcEi>:
    3ea0:	b508      	push	{r3, lr}
    3ea2:	f000 f8af 	bl	4004 <_ZN4mbed10SerialBase10_base_putcEi>
    3ea6:	bd08      	pop	{r3, pc}

00003ea8 <_ZThn220_N4mbed6Serial5_putcEi>:
    3ea8:	b408      	push	{r3}
    3eaa:	4b02      	ldr	r3, [pc, #8]	; (3eb4 <_ZThn220_N4mbed6Serial5_putcEi+0xc>)
    3eac:	469c      	mov	ip, r3
    3eae:	38dc      	subs	r0, #220	; 0xdc
    3eb0:	bc08      	pop	{r3}
    3eb2:	4760      	bx	ip
    3eb4:	00003ea1 	.word	0x00003ea1

00003eb8 <_ZN4mbed6SerialC1E7PinNameS1_PKc>:
    3eb8:	b538      	push	{r3, r4, r5, lr}
    3eba:	1c04      	adds	r4, r0, #0
    3ebc:	1c1d      	adds	r5, r3, #0
    3ebe:	f000 f843 	bl	3f48 <_ZN4mbed10SerialBaseC1E7PinNameS1_>
    3ec2:	1c20      	adds	r0, r4, #0
    3ec4:	1c29      	adds	r1, r5, #0
    3ec6:	30dc      	adds	r0, #220	; 0xdc
    3ec8:	f000 f8da 	bl	4080 <_ZN4mbed6StreamC1EPKc>
    3ecc:	4b06      	ldr	r3, [pc, #24]	; (3ee8 <_ZN4mbed6SerialC1E7PinNameS1_PKc+0x30>)
    3ece:	1c20      	adds	r0, r4, #0
    3ed0:	1c1a      	adds	r2, r3, #0
    3ed2:	1c19      	adds	r1, r3, #0
    3ed4:	3208      	adds	r2, #8
    3ed6:	6022      	str	r2, [r4, #0]
    3ed8:	22dc      	movs	r2, #220	; 0xdc
    3eda:	3120      	adds	r1, #32
    3edc:	50a1      	str	r1, [r4, r2]
    3ede:	3354      	adds	r3, #84	; 0x54
    3ee0:	3204      	adds	r2, #4
    3ee2:	50a3      	str	r3, [r4, r2]
    3ee4:	bd38      	pop	{r3, r4, r5, pc}
    3ee6:	46c0      	nop			; (mov r8, r8)
    3ee8:	0000dc88 	.word	0x0000dc88

00003eec <_ZN4mbed10SerialBase12_irq_handlerEm9SerialIrq>:
    3eec:	b508      	push	{r3, lr}
    3eee:	004b      	lsls	r3, r1, #1
    3ef0:	1859      	adds	r1, r3, r1
    3ef2:	00c9      	lsls	r1, r1, #3
    3ef4:	1843      	adds	r3, r0, r1
    3ef6:	1c1a      	adds	r2, r3, #0
    3ef8:	32b8      	adds	r2, #184	; 0xb8
    3efa:	6852      	ldr	r2, [r2, #4]
    3efc:	33a8      	adds	r3, #168	; 0xa8
    3efe:	681b      	ldr	r3, [r3, #0]
    3f00:	2a00      	cmp	r2, #0
    3f02:	d006      	beq.n	3f12 <_ZN4mbed10SerialBase12_irq_handlerEm9SerialIrq+0x26>
    3f04:	2b00      	cmp	r3, #0
    3f06:	d003      	beq.n	3f10 <_ZN4mbed10SerialBase12_irq_handlerEm9SerialIrq+0x24>
    3f08:	1841      	adds	r1, r0, r1
    3f0a:	31ac      	adds	r1, #172	; 0xac
    3f0c:	1c18      	adds	r0, r3, #0
    3f0e:	4790      	blx	r2
    3f10:	bd08      	pop	{r3, pc}
    3f12:	2b00      	cmp	r3, #0
    3f14:	d0fc      	beq.n	3f10 <_ZN4mbed10SerialBase12_irq_handlerEm9SerialIrq+0x24>
    3f16:	4798      	blx	r3
    3f18:	e7fa      	b.n	3f10 <_ZN4mbed10SerialBase12_irq_handlerEm9SerialIrq+0x24>
    3f1a:	46c0      	nop			; (mov r8, r8)

00003f1c <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E>:
    3f1c:	b510      	push	{r4, lr}
    3f1e:	2800      	cmp	r0, #0
    3f20:	d008      	beq.n	3f34 <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E+0x18>
    3f22:	6814      	ldr	r4, [r2, #0]
    3f24:	6853      	ldr	r3, [r2, #4]
    3f26:	2c00      	cmp	r4, #0
    3f28:	d005      	beq.n	3f36 <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E+0x1a>
    3f2a:	07da      	lsls	r2, r3, #31
    3f2c:	d405      	bmi.n	3f3a <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E+0x1e>
    3f2e:	105b      	asrs	r3, r3, #1
    3f30:	18c0      	adds	r0, r0, r3
    3f32:	47a0      	blx	r4
    3f34:	bd10      	pop	{r4, pc}
    3f36:	07da      	lsls	r2, r3, #31
    3f38:	d5fc      	bpl.n	3f34 <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E+0x18>
    3f3a:	105b      	asrs	r3, r3, #1
    3f3c:	18c0      	adds	r0, r0, r3
    3f3e:	6803      	ldr	r3, [r0, #0]
    3f40:	591c      	ldr	r4, [r3, r4]
    3f42:	47a0      	blx	r4
    3f44:	e7f6      	b.n	3f34 <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E+0x18>
    3f46:	46c0      	nop			; (mov r8, r8)

00003f48 <_ZN4mbed10SerialBaseC1E7PinNameS1_>:
    3f48:	b5f0      	push	{r4, r5, r6, r7, lr}
    3f4a:	4647      	mov	r7, r8
    3f4c:	b480      	push	{r7}
    3f4e:	4b24      	ldr	r3, [pc, #144]	; (3fe0 <_ZN4mbed10SerialBaseC1E7PinNameS1_+0x98>)
    3f50:	b082      	sub	sp, #8
    3f52:	6003      	str	r3, [r0, #0]
    3f54:	2500      	movs	r5, #0
    3f56:	1c03      	adds	r3, r0, #0
    3f58:	1c17      	adds	r7, r2, #0
    3f5a:	466a      	mov	r2, sp
    3f5c:	1c04      	adds	r4, r0, #0
    3f5e:	9500      	str	r5, [sp, #0]
    3f60:	9501      	str	r5, [sp, #4]
    3f62:	3308      	adds	r3, #8
    3f64:	4688      	mov	r8, r1
    3f66:	ca03      	ldmia	r2!, {r0, r1}
    3f68:	c303      	stmia	r3!, {r0, r1}
    3f6a:	4b1e      	ldr	r3, [pc, #120]	; (3fe4 <_ZN4mbed10SerialBaseC1E7PinNameS1_+0x9c>)
    3f6c:	6123      	str	r3, [r4, #16]
    3f6e:	4b1e      	ldr	r3, [pc, #120]	; (3fe8 <_ZN4mbed10SerialBaseC1E7PinNameS1_+0xa0>)
    3f70:	6163      	str	r3, [r4, #20]
    3f72:	4b1e      	ldr	r3, [pc, #120]	; (3fec <_ZN4mbed10SerialBaseC1E7PinNameS1_+0xa4>)
    3f74:	61a3      	str	r3, [r4, #24]
    3f76:	1c23      	adds	r3, r4, #0
    3f78:	3308      	adds	r3, #8
    3f7a:	6225      	str	r5, [r4, #32]
    3f7c:	61e4      	str	r4, [r4, #28]
    3f7e:	6263      	str	r3, [r4, #36]	; 0x24
    3f80:	4b1b      	ldr	r3, [pc, #108]	; (3ff0 <_ZN4mbed10SerialBaseC1E7PinNameS1_+0xa8>)
    3f82:	62a3      	str	r3, [r4, #40]	; 0x28
    3f84:	f3bf 8f6f 	isb	sy
    3f88:	f3bf 8f4f 	dsb	sy
    3f8c:	235c      	movs	r3, #92	; 0x5c
    3f8e:	1c26      	adds	r6, r4, #0
    3f90:	62e5      	str	r5, [r4, #44]	; 0x2c
    3f92:	6425      	str	r5, [r4, #64]	; 0x40
    3f94:	6465      	str	r5, [r4, #68]	; 0x44
    3f96:	65a5      	str	r5, [r4, #88]	; 0x58
    3f98:	3660      	adds	r6, #96	; 0x60
    3f9a:	54e5      	strb	r5, [r4, r3]
    3f9c:	3301      	adds	r3, #1
    3f9e:	54e5      	strb	r5, [r4, r3]
    3fa0:	1c30      	adds	r0, r6, #0
    3fa2:	2100      	movs	r1, #0
    3fa4:	2248      	movs	r2, #72	; 0x48
    3fa6:	f004 fcfb 	bl	89a0 <memset>
    3faa:	23a8      	movs	r3, #168	; 0xa8
    3fac:	2296      	movs	r2, #150	; 0x96
    3fae:	50e5      	str	r5, [r4, r3]
    3fb0:	3314      	adds	r3, #20
    3fb2:	50e5      	str	r5, [r4, r3]
    3fb4:	3304      	adds	r3, #4
    3fb6:	50e5      	str	r5, [r4, r3]
    3fb8:	3314      	adds	r3, #20
    3fba:	50e5      	str	r5, [r4, r3]
    3fbc:	0192      	lsls	r2, r2, #6
    3fbe:	3304      	adds	r3, #4
    3fc0:	50e2      	str	r2, [r4, r3]
    3fc2:	1c30      	adds	r0, r6, #0
    3fc4:	4641      	mov	r1, r8
    3fc6:	1c3a      	adds	r2, r7, #0
    3fc8:	f7ff fd74 	bl	3ab4 <serial_init>
    3fcc:	1c30      	adds	r0, r6, #0
    3fce:	4909      	ldr	r1, [pc, #36]	; (3ff4 <_ZN4mbed10SerialBaseC1E7PinNameS1_+0xac>)
    3fd0:	1c22      	adds	r2, r4, #0
    3fd2:	f7ff fe4b 	bl	3c6c <serial_irq_handler>
    3fd6:	1c20      	adds	r0, r4, #0
    3fd8:	b002      	add	sp, #8
    3fda:	bc04      	pop	{r2}
    3fdc:	4690      	mov	r8, r2
    3fde:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3fe0:	0000dcf0 	.word	0x0000dcf0
    3fe4:	2404b51f 	.word	0x2404b51f
    3fe8:	cc0f447c 	.word	0xcc0f447c
    3fec:	bd1f4798 	.word	0xbd1f4798
    3ff0:	00003f1d 	.word	0x00003f1d
    3ff4:	00003eed 	.word	0x00003eed

00003ff8 <_ZN4mbed10SerialBase10_base_getcEv>:
    3ff8:	b508      	push	{r3, lr}
    3ffa:	3060      	adds	r0, #96	; 0x60
    3ffc:	f7ff fe98 	bl	3d30 <serial_getc>
    4000:	bd08      	pop	{r3, pc}
    4002:	46c0      	nop			; (mov r8, r8)

00004004 <_ZN4mbed10SerialBase10_base_putcEi>:
    4004:	b510      	push	{r4, lr}
    4006:	1c0c      	adds	r4, r1, #0
    4008:	3060      	adds	r0, #96	; 0x60
    400a:	f7ff febd 	bl	3d88 <serial_putc>
    400e:	1c20      	adds	r0, r4, #0
    4010:	bd10      	pop	{r4, pc}
    4012:	46c0      	nop			; (mov r8, r8)

00004014 <_ZN4mbed6Stream5closeEv>:
    4014:	2000      	movs	r0, #0
    4016:	4770      	bx	lr

00004018 <_ZN4mbed6Stream5writeEPKvj>:
    4018:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    401a:	188e      	adds	r6, r1, r2
    401c:	1c05      	adds	r5, r0, #0
    401e:	1c0f      	adds	r7, r1, #0
    4020:	1e0c      	subs	r4, r1, #0
    4022:	42b4      	cmp	r4, r6
    4024:	d102      	bne.n	402c <_ZN4mbed6Stream5writeEPKvj+0x14>
    4026:	e00a      	b.n	403e <_ZN4mbed6Stream5writeEPKvj+0x26>
    4028:	42a6      	cmp	r6, r4
    402a:	d008      	beq.n	403e <_ZN4mbed6Stream5writeEPKvj+0x26>
    402c:	3401      	adds	r4, #1
    402e:	682b      	ldr	r3, [r5, #0]
    4030:	1e62      	subs	r2, r4, #1
    4032:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    4034:	7811      	ldrb	r1, [r2, #0]
    4036:	1c28      	adds	r0, r5, #0
    4038:	4798      	blx	r3
    403a:	1c43      	adds	r3, r0, #1
    403c:	d1f4      	bne.n	4028 <_ZN4mbed6Stream5writeEPKvj+0x10>
    403e:	1be0      	subs	r0, r4, r7
    4040:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4042:	46c0      	nop			; (mov r8, r8)

00004044 <_ZN4mbed6Stream4readEPvj>:
    4044:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4046:	188e      	adds	r6, r1, r2
    4048:	1c05      	adds	r5, r0, #0
    404a:	1c0f      	adds	r7, r1, #0
    404c:	1e0c      	subs	r4, r1, #0
    404e:	42b4      	cmp	r4, r6
    4050:	d105      	bne.n	405e <_ZN4mbed6Stream4readEPvj+0x1a>
    4052:	e00a      	b.n	406a <_ZN4mbed6Stream4readEPvj+0x26>
    4054:	3401      	adds	r4, #1
    4056:	1e63      	subs	r3, r4, #1
    4058:	7018      	strb	r0, [r3, #0]
    405a:	42a6      	cmp	r6, r4
    405c:	d005      	beq.n	406a <_ZN4mbed6Stream4readEPvj+0x26>
    405e:	682b      	ldr	r3, [r5, #0]
    4060:	1c28      	adds	r0, r5, #0
    4062:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    4064:	4798      	blx	r3
    4066:	1c43      	adds	r3, r0, #1
    4068:	d1f4      	bne.n	4054 <_ZN4mbed6Stream4readEPvj+0x10>
    406a:	1be0      	subs	r0, r4, r7
    406c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    406e:	46c0      	nop			; (mov r8, r8)

00004070 <_ZN4mbed6Stream5lseekEli>:
    4070:	2000      	movs	r0, #0
    4072:	4770      	bx	lr

00004074 <_ZN4mbed6Stream6isattyEv>:
    4074:	2000      	movs	r0, #0
    4076:	4770      	bx	lr

00004078 <_ZN4mbed6Stream5fsyncEv>:
    4078:	2000      	movs	r0, #0
    407a:	4770      	bx	lr

0000407c <_ZN4mbed6Stream4flenEv>:
    407c:	2000      	movs	r0, #0
    407e:	4770      	bx	lr

00004080 <_ZN4mbed6StreamC1EPKc>:
    4080:	b510      	push	{r4, lr}
    4082:	1c04      	adds	r4, r0, #0
    4084:	b084      	sub	sp, #16
    4086:	f000 fe27 	bl	4cd8 <_ZN4mbed8FileLikeC1EPKc>
    408a:	4b0b      	ldr	r3, [pc, #44]	; (40b8 <_ZN4mbed6StreamC1EPKc+0x38>)
    408c:	a801      	add	r0, sp, #4
    408e:	1c1a      	adds	r2, r3, #0
    4090:	333c      	adds	r3, #60	; 0x3c
    4092:	6063      	str	r3, [r4, #4]
    4094:	2300      	movs	r3, #0
    4096:	3208      	adds	r2, #8
    4098:	6163      	str	r3, [r4, #20]
    409a:	6022      	str	r2, [r4, #0]
    409c:	4907      	ldr	r1, [pc, #28]	; (40bc <_ZN4mbed6StreamC1EPKc+0x3c>)
    409e:	1c22      	adds	r2, r4, #0
    40a0:	f005 ffa0 	bl	9fe4 <siprintf>
    40a4:	4906      	ldr	r1, [pc, #24]	; (40c0 <_ZN4mbed6StreamC1EPKc+0x40>)
    40a6:	a801      	add	r0, sp, #4
    40a8:	f004 fb0a 	bl	86c0 <fopen>
    40ac:	6160      	str	r0, [r4, #20]
    40ae:	f7fe fdf1 	bl	2c94 <_ZN4mbed26mbed_set_unbuffered_streamEP7__sFILE>
    40b2:	1c20      	adds	r0, r4, #0
    40b4:	b004      	add	sp, #16
    40b6:	bd10      	pop	{r4, pc}
    40b8:	0000dcf8 	.word	0x0000dcf8
    40bc:	0000d9c4 	.word	0x0000d9c4
    40c0:	0000dd3c 	.word	0x0000dd3c

000040c4 <_ZN4mbed6StreamD1Ev>:
    40c4:	4b07      	ldr	r3, [pc, #28]	; (40e4 <_ZN4mbed6StreamD1Ev+0x20>)
    40c6:	b510      	push	{r4, lr}
    40c8:	1c1a      	adds	r2, r3, #0
    40ca:	1c04      	adds	r4, r0, #0
    40cc:	3208      	adds	r2, #8
    40ce:	333c      	adds	r3, #60	; 0x3c
    40d0:	6002      	str	r2, [r0, #0]
    40d2:	6043      	str	r3, [r0, #4]
    40d4:	6940      	ldr	r0, [r0, #20]
    40d6:	f004 f92d 	bl	8334 <fclose>
    40da:	1c20      	adds	r0, r4, #0
    40dc:	f000 fe10 	bl	4d00 <_ZN4mbed8FileLikeD1Ev>
    40e0:	1c20      	adds	r0, r4, #0
    40e2:	bd10      	pop	{r4, pc}
    40e4:	0000dcf8 	.word	0x0000dcf8

000040e8 <_ZN4mbed6Stream6printfEPKcz>:
    40e8:	b40e      	push	{r1, r2, r3}
    40ea:	b530      	push	{r4, r5, lr}
    40ec:	1c04      	adds	r4, r0, #0
    40ee:	b082      	sub	sp, #8
    40f0:	ab05      	add	r3, sp, #20
    40f2:	cb20      	ldmia	r3!, {r5}
    40f4:	6940      	ldr	r0, [r0, #20]
    40f6:	9301      	str	r3, [sp, #4]
    40f8:	f004 f9dc 	bl	84b4 <fflush>
    40fc:	6960      	ldr	r0, [r4, #20]
    40fe:	1c29      	adds	r1, r5, #0
    4100:	9a01      	ldr	r2, [sp, #4]
    4102:	f004 fe2b 	bl	8d5c <vfiprintf>
    4106:	b002      	add	sp, #8
    4108:	bc30      	pop	{r4, r5}
    410a:	bc08      	pop	{r3}
    410c:	b003      	add	sp, #12
    410e:	4718      	bx	r3

00004110 <mbed_assert_internal>:
    4110:	b538      	push	{r3, r4, r5, lr}
    4112:	1c05      	adds	r5, r0, #0
    4114:	1c0c      	adds	r4, r1, #0
    4116:	1c13      	adds	r3, r2, #0
    4118:	1c29      	adds	r1, r5, #0
    411a:	4802      	ldr	r0, [pc, #8]	; (4124 <mbed_assert_internal+0x14>)
    411c:	1c22      	adds	r2, r4, #0
    411e:	f000 f803 	bl	4128 <error>
    4122:	bd38      	pop	{r3, r4, r5, pc}
    4124:	0000dd40 	.word	0x0000dd40

00004128 <error>:
    4128:	b40f      	push	{r0, r1, r2, r3}
    412a:	2001      	movs	r0, #1
    412c:	b508      	push	{r3, lr}
    412e:	f004 f893 	bl	8258 <exit>
    4132:	46c0      	nop			; (mov r8, r8)

00004134 <gpio_init_out>:
    4134:	b538      	push	{r3, r4, r5, lr}
    4136:	1c0d      	adds	r5, r1, #0
    4138:	1c04      	adds	r4, r0, #0
    413a:	f000 fb3b 	bl	47b4 <gpio_init>
    413e:	1c6b      	adds	r3, r5, #1
    4140:	d00e      	beq.n	4160 <gpio_init_out+0x2c>
    4142:	2300      	movs	r3, #0
    4144:	56e3      	ldrsb	r3, [r4, r3]
    4146:	3301      	adds	r3, #1
    4148:	d00b      	beq.n	4162 <gpio_init_out+0x2e>
    414a:	68e3      	ldr	r3, [r4, #12]
    414c:	6862      	ldr	r2, [r4, #4]
    414e:	1c20      	adds	r0, r4, #0
    4150:	2101      	movs	r1, #1
    4152:	601a      	str	r2, [r3, #0]
    4154:	f000 fb96 	bl	4884 <gpio_dir>
    4158:	1c20      	adds	r0, r4, #0
    415a:	2100      	movs	r1, #0
    415c:	f000 fb6a 	bl	4834 <gpio_mode>
    4160:	bd38      	pop	{r3, r4, r5, pc}
    4162:	4803      	ldr	r0, [pc, #12]	; (4170 <gpio_init_out+0x3c>)
    4164:	4903      	ldr	r1, [pc, #12]	; (4174 <gpio_init_out+0x40>)
    4166:	2228      	movs	r2, #40	; 0x28
    4168:	f7ff ffd2 	bl	4110 <mbed_assert_internal>
    416c:	e7ed      	b.n	414a <gpio_init_out+0x16>
    416e:	46c0      	nop			; (mov r8, r8)
    4170:	0000d604 	.word	0x0000d604
    4174:	0000dd74 	.word	0x0000dd74

00004178 <pinmap_find_peripheral>:
    4178:	e002      	b.n	4180 <pinmap_find_peripheral+0x8>
    417a:	4283      	cmp	r3, r0
    417c:	d006      	beq.n	418c <pinmap_find_peripheral+0x14>
    417e:	310c      	adds	r1, #12
    4180:	2300      	movs	r3, #0
    4182:	56cb      	ldrsb	r3, [r1, r3]
    4184:	1c5a      	adds	r2, r3, #1
    4186:	d1f8      	bne.n	417a <pinmap_find_peripheral+0x2>
    4188:	1c18      	adds	r0, r3, #0
    418a:	4770      	bx	lr
    418c:	6848      	ldr	r0, [r1, #4]
    418e:	e7fc      	b.n	418a <pinmap_find_peripheral+0x12>

00004190 <pinmap_peripheral>:
    4190:	1c02      	adds	r2, r0, #0
    4192:	b508      	push	{r3, lr}
    4194:	1c53      	adds	r3, r2, #1
    4196:	d103      	bne.n	41a0 <pinmap_peripheral+0x10>
    4198:	e00b      	b.n	41b2 <pinmap_peripheral+0x22>
    419a:	429a      	cmp	r2, r3
    419c:	d00a      	beq.n	41b4 <pinmap_peripheral+0x24>
    419e:	310c      	adds	r1, #12
    41a0:	2300      	movs	r3, #0
    41a2:	56cb      	ldrsb	r3, [r1, r3]
    41a4:	1c58      	adds	r0, r3, #1
    41a6:	d1f8      	bne.n	419a <pinmap_peripheral+0xa>
    41a8:	4804      	ldr	r0, [pc, #16]	; (41bc <pinmap_peripheral+0x2c>)
    41aa:	f7ff ffbd 	bl	4128 <error>
    41ae:	2001      	movs	r0, #1
    41b0:	4240      	negs	r0, r0
    41b2:	bd08      	pop	{r3, pc}
    41b4:	6848      	ldr	r0, [r1, #4]
    41b6:	1c43      	adds	r3, r0, #1
    41b8:	d1fb      	bne.n	41b2 <pinmap_peripheral+0x22>
    41ba:	e7f5      	b.n	41a8 <pinmap_peripheral+0x18>
    41bc:	0000de14 	.word	0x0000de14

000041c0 <pinmap_function>:
    41c0:	1c02      	adds	r2, r0, #0
    41c2:	b508      	push	{r3, lr}
    41c4:	1c53      	adds	r3, r2, #1
    41c6:	d103      	bne.n	41d0 <pinmap_function+0x10>
    41c8:	e00b      	b.n	41e2 <pinmap_function+0x22>
    41ca:	429a      	cmp	r2, r3
    41cc:	d00a      	beq.n	41e4 <pinmap_function+0x24>
    41ce:	310c      	adds	r1, #12
    41d0:	2300      	movs	r3, #0
    41d2:	56cb      	ldrsb	r3, [r1, r3]
    41d4:	1c58      	adds	r0, r3, #1
    41d6:	d1f8      	bne.n	41ca <pinmap_function+0xa>
    41d8:	4804      	ldr	r0, [pc, #16]	; (41ec <pinmap_function+0x2c>)
    41da:	f7ff ffa5 	bl	4128 <error>
    41de:	2001      	movs	r0, #1
    41e0:	4240      	negs	r0, r0
    41e2:	bd08      	pop	{r3, pc}
    41e4:	6888      	ldr	r0, [r1, #8]
    41e6:	1c43      	adds	r3, r0, #1
    41e8:	d1fb      	bne.n	41e2 <pinmap_function+0x22>
    41ea:	e7f5      	b.n	41d8 <pinmap_function+0x18>
    41ec:	0000de34 	.word	0x0000de34

000041f0 <wait_us>:
    41f0:	b538      	push	{r3, r4, r5, lr}
    41f2:	1c05      	adds	r5, r0, #0
    41f4:	f000 fc9c 	bl	4b30 <us_ticker_read>
    41f8:	1c04      	adds	r4, r0, #0
    41fa:	f000 fc99 	bl	4b30 <us_ticker_read>
    41fe:	1b00      	subs	r0, r0, r4
    4200:	42a8      	cmp	r0, r5
    4202:	d3fa      	bcc.n	41fa <wait_us+0xa>
    4204:	bd38      	pop	{r3, r4, r5, pc}
    4206:	46c0      	nop			; (mov r8, r8)

00004208 <wait_ms>:
    4208:	b508      	push	{r3, lr}
    420a:	23fa      	movs	r3, #250	; 0xfa
    420c:	009b      	lsls	r3, r3, #2
    420e:	4358      	muls	r0, r3
    4210:	f7ff ffee 	bl	41f0 <wait_us>
    4214:	bd08      	pop	{r3, pc}
    4216:	46c0      	nop			; (mov r8, r8)

00004218 <_sercom_get_sync_baud_val>:
    4218:	b510      	push	{r4, lr}
    421a:	0849      	lsrs	r1, r1, #1
    421c:	2340      	movs	r3, #64	; 0x40
    421e:	2400      	movs	r4, #0
    4220:	4281      	cmp	r1, r0
    4222:	d202      	bcs.n	422a <_sercom_get_sync_baud_val+0x12>
    4224:	1c18      	adds	r0, r3, #0
    4226:	bd10      	pop	{r4, pc}
    4228:	1c1c      	adds	r4, r3, #0
    422a:	1c63      	adds	r3, r4, #1
    422c:	1a09      	subs	r1, r1, r0
    422e:	b29b      	uxth	r3, r3
    4230:	4288      	cmp	r0, r1
    4232:	d9f9      	bls.n	4228 <_sercom_get_sync_baud_val+0x10>
    4234:	2340      	movs	r3, #64	; 0x40
    4236:	2cff      	cmp	r4, #255	; 0xff
    4238:	d8f4      	bhi.n	4224 <_sercom_get_sync_baud_val+0xc>
    423a:	8014      	strh	r4, [r2, #0]
    423c:	2300      	movs	r3, #0
    423e:	e7f1      	b.n	4224 <_sercom_get_sync_baud_val+0xc>

00004240 <_sercom_get_async_baud_val>:
    4240:	b5f0      	push	{r4, r5, r6, r7, lr}
    4242:	4656      	mov	r6, sl
    4244:	464d      	mov	r5, r9
    4246:	4644      	mov	r4, r8
    4248:	465f      	mov	r7, fp
    424a:	b4f0      	push	{r4, r5, r6, r7}
    424c:	1c04      	adds	r4, r0, #0
    424e:	1c25      	adds	r5, r4, #0
    4250:	b087      	sub	sp, #28
    4252:	a810      	add	r0, sp, #64	; 0x40
    4254:	7806      	ldrb	r6, [r0, #0]
    4256:	2040      	movs	r0, #64	; 0x40
    4258:	4375      	muls	r5, r6
    425a:	428d      	cmp	r5, r1
    425c:	d906      	bls.n	426c <_sercom_get_async_baud_val+0x2c>
    425e:	b007      	add	sp, #28
    4260:	bc3c      	pop	{r2, r3, r4, r5}
    4262:	4690      	mov	r8, r2
    4264:	4699      	mov	r9, r3
    4266:	46a2      	mov	sl, r4
    4268:	46ab      	mov	fp, r5
    426a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    426c:	9204      	str	r2, [sp, #16]
    426e:	1c0d      	adds	r5, r1, #0
    4270:	1c22      	adds	r2, r4, #0
    4272:	2b00      	cmp	r3, #0
    4274:	d13f      	bne.n	42f6 <_sercom_get_async_baud_val+0xb6>
    4276:	1c30      	adds	r0, r6, #0
    4278:	2100      	movs	r1, #0
    427a:	f001 f9a3 	bl	55c4 <__aeabi_lmul>
    427e:	2300      	movs	r3, #0
    4280:	4683      	mov	fp, r0
    4282:	213f      	movs	r1, #63	; 0x3f
    4284:	2001      	movs	r0, #1
    4286:	469c      	mov	ip, r3
    4288:	469a      	mov	sl, r3
    428a:	1c2e      	adds	r6, r5, #0
    428c:	2700      	movs	r7, #0
    428e:	2200      	movs	r2, #0
    4290:	2300      	movs	r3, #0
    4292:	4680      	mov	r8, r0
    4294:	1c0c      	adds	r4, r1, #0
    4296:	e024      	b.n	42e2 <_sercom_get_async_baud_val+0xa2>
    4298:	4641      	mov	r1, r8
    429a:	40a9      	lsls	r1, r5
    429c:	1c0d      	adds	r5, r1, #0
    429e:	4641      	mov	r1, r8
    42a0:	40a1      	lsls	r1, r4
    42a2:	1c10      	adds	r0, r2, #0
    42a4:	4689      	mov	r9, r1
    42a6:	1c19      	adds	r1, r3, #0
    42a8:	1880      	adds	r0, r0, r2
    42aa:	4159      	adcs	r1, r3
    42ac:	1c0b      	adds	r3, r1, #0
    42ae:	1c02      	adds	r2, r0, #0
    42b0:	4659      	mov	r1, fp
    42b2:	9200      	str	r2, [sp, #0]
    42b4:	9301      	str	r3, [sp, #4]
    42b6:	4229      	tst	r1, r5
    42b8:	d003      	beq.n	42c2 <_sercom_get_async_baud_val+0x82>
    42ba:	4640      	mov	r0, r8
    42bc:	4310      	orrs	r0, r2
    42be:	1c02      	adds	r2, r0, #0
    42c0:	9b01      	ldr	r3, [sp, #4]
    42c2:	429f      	cmp	r7, r3
    42c4:	d80b      	bhi.n	42de <_sercom_get_async_baud_val+0x9e>
    42c6:	d101      	bne.n	42cc <_sercom_get_async_baud_val+0x8c>
    42c8:	4296      	cmp	r6, r2
    42ca:	d808      	bhi.n	42de <_sercom_get_async_baud_val+0x9e>
    42cc:	4661      	mov	r1, ip
    42ce:	4648      	mov	r0, r9
    42d0:	4301      	orrs	r1, r0
    42d2:	4650      	mov	r0, sl
    42d4:	4328      	orrs	r0, r5
    42d6:	1b92      	subs	r2, r2, r6
    42d8:	41bb      	sbcs	r3, r7
    42da:	468c      	mov	ip, r1
    42dc:	4682      	mov	sl, r0
    42de:	3c01      	subs	r4, #1
    42e0:	d310      	bcc.n	4304 <_sercom_get_async_baud_val+0xc4>
    42e2:	2120      	movs	r1, #32
    42e4:	4249      	negs	r1, r1
    42e6:	1865      	adds	r5, r4, r1
    42e8:	d5d6      	bpl.n	4298 <_sercom_get_async_baud_val+0x58>
    42ea:	2120      	movs	r1, #32
    42ec:	1b0d      	subs	r5, r1, r4
    42ee:	4641      	mov	r1, r8
    42f0:	40e9      	lsrs	r1, r5
    42f2:	1c0d      	adds	r5, r1, #0
    42f4:	e7d3      	b.n	429e <_sercom_get_async_baud_val+0x5e>
    42f6:	2400      	movs	r4, #0
    42f8:	2b01      	cmp	r3, #1
    42fa:	d007      	beq.n	430c <_sercom_get_async_baud_val+0xcc>
    42fc:	9b04      	ldr	r3, [sp, #16]
    42fe:	2000      	movs	r0, #0
    4300:	801c      	strh	r4, [r3, #0]
    4302:	e7ac      	b.n	425e <_sercom_get_async_baud_val+0x1e>
    4304:	4663      	mov	r3, ip
    4306:	425c      	negs	r4, r3
    4308:	0c24      	lsrs	r4, r4, #16
    430a:	e7f7      	b.n	42fc <_sercom_get_async_baud_val+0xbc>
    430c:	0f4b      	lsrs	r3, r1, #29
    430e:	1c1c      	adds	r4, r3, #0
    4310:	00cb      	lsls	r3, r1, #3
    4312:	4698      	mov	r8, r3
    4314:	1c30      	adds	r0, r6, #0
    4316:	2300      	movs	r3, #0
    4318:	2100      	movs	r1, #0
    431a:	f001 f953 	bl	55c4 <__aeabi_lmul>
    431e:	2300      	movs	r3, #0
    4320:	469c      	mov	ip, r3
    4322:	3320      	adds	r3, #32
    4324:	469b      	mov	fp, r3
    4326:	4663      	mov	r3, ip
    4328:	46a1      	mov	r9, r4
    432a:	9000      	str	r0, [sp, #0]
    432c:	9101      	str	r1, [sp, #4]
    432e:	9303      	str	r3, [sp, #12]
    4330:	466b      	mov	r3, sp
    4332:	7b1b      	ldrb	r3, [r3, #12]
    4334:	2000      	movs	r0, #0
    4336:	9305      	str	r3, [sp, #20]
    4338:	2300      	movs	r3, #0
    433a:	2100      	movs	r1, #0
    433c:	469c      	mov	ip, r3
    433e:	223f      	movs	r2, #63	; 0x3f
    4340:	e027      	b.n	4392 <_sercom_get_async_baud_val+0x152>
    4342:	2401      	movs	r4, #1
    4344:	409c      	lsls	r4, r3
    4346:	1c23      	adds	r3, r4, #0
    4348:	2701      	movs	r7, #1
    434a:	4646      	mov	r6, r8
    434c:	4097      	lsls	r7, r2
    434e:	403e      	ands	r6, r7
    4350:	1c04      	adds	r4, r0, #0
    4352:	1c0d      	adds	r5, r1, #0
    4354:	46b2      	mov	sl, r6
    4356:	464e      	mov	r6, r9
    4358:	1824      	adds	r4, r4, r0
    435a:	414d      	adcs	r5, r1
    435c:	4033      	ands	r3, r6
    435e:	4656      	mov	r6, sl
    4360:	1c20      	adds	r0, r4, #0
    4362:	1c29      	adds	r1, r5, #0
    4364:	4333      	orrs	r3, r6
    4366:	d004      	beq.n	4372 <_sercom_get_async_baud_val+0x132>
    4368:	2101      	movs	r1, #1
    436a:	1c23      	adds	r3, r4, #0
    436c:	430b      	orrs	r3, r1
    436e:	1c18      	adds	r0, r3, #0
    4370:	1c29      	adds	r1, r5, #0
    4372:	9b01      	ldr	r3, [sp, #4]
    4374:	428b      	cmp	r3, r1
    4376:	d80a      	bhi.n	438e <_sercom_get_async_baud_val+0x14e>
    4378:	d102      	bne.n	4380 <_sercom_get_async_baud_val+0x140>
    437a:	9b00      	ldr	r3, [sp, #0]
    437c:	4283      	cmp	r3, r0
    437e:	d806      	bhi.n	438e <_sercom_get_async_baud_val+0x14e>
    4380:	9b00      	ldr	r3, [sp, #0]
    4382:	9c01      	ldr	r4, [sp, #4]
    4384:	1ac0      	subs	r0, r0, r3
    4386:	41a1      	sbcs	r1, r4
    4388:	4663      	mov	r3, ip
    438a:	433b      	orrs	r3, r7
    438c:	469c      	mov	ip, r3
    438e:	3a01      	subs	r2, #1
    4390:	d309      	bcc.n	43a6 <_sercom_get_async_baud_val+0x166>
    4392:	2320      	movs	r3, #32
    4394:	425b      	negs	r3, r3
    4396:	18d3      	adds	r3, r2, r3
    4398:	d5d3      	bpl.n	4342 <_sercom_get_async_baud_val+0x102>
    439a:	465b      	mov	r3, fp
    439c:	2401      	movs	r4, #1
    439e:	1a9b      	subs	r3, r3, r2
    43a0:	40dc      	lsrs	r4, r3
    43a2:	1c23      	adds	r3, r4, #0
    43a4:	e7d0      	b.n	4348 <_sercom_get_async_baud_val+0x108>
    43a6:	4661      	mov	r1, ip
    43a8:	9a03      	ldr	r2, [sp, #12]
    43aa:	1a8b      	subs	r3, r1, r2
    43ac:	4907      	ldr	r1, [pc, #28]	; (43cc <_sercom_get_async_baud_val+0x18c>)
    43ae:	08db      	lsrs	r3, r3, #3
    43b0:	428b      	cmp	r3, r1
    43b2:	d906      	bls.n	43c2 <_sercom_get_async_baud_val+0x182>
    43b4:	1c13      	adds	r3, r2, #0
    43b6:	3301      	adds	r3, #1
    43b8:	9303      	str	r3, [sp, #12]
    43ba:	2b08      	cmp	r3, #8
    43bc:	d1b8      	bne.n	4330 <_sercom_get_async_baud_val+0xf0>
    43be:	2040      	movs	r0, #64	; 0x40
    43c0:	e74d      	b.n	425e <_sercom_get_async_baud_val+0x1e>
    43c2:	9a05      	ldr	r2, [sp, #20]
    43c4:	0354      	lsls	r4, r2, #13
    43c6:	431c      	orrs	r4, r3
    43c8:	b2a4      	uxth	r4, r4
    43ca:	e797      	b.n	42fc <_sercom_get_async_baud_val+0xbc>
    43cc:	00001fff 	.word	0x00001fff

000043d0 <sercom_set_gclk_generator>:
    43d0:	b530      	push	{r4, r5, lr}
    43d2:	4c0e      	ldr	r4, [pc, #56]	; (440c <sercom_set_gclk_generator+0x3c>)
    43d4:	b083      	sub	sp, #12
    43d6:	7823      	ldrb	r3, [r4, #0]
    43d8:	1c05      	adds	r5, r0, #0
    43da:	2b00      	cmp	r3, #0
    43dc:	d006      	beq.n	43ec <sercom_set_gclk_generator+0x1c>
    43de:	2900      	cmp	r1, #0
    43e0:	d104      	bne.n	43ec <sercom_set_gclk_generator+0x1c>
    43e2:	7863      	ldrb	r3, [r4, #1]
    43e4:	4283      	cmp	r3, r0
    43e6:	d00f      	beq.n	4408 <sercom_set_gclk_generator+0x38>
    43e8:	201d      	movs	r0, #29
    43ea:	e00b      	b.n	4404 <sercom_set_gclk_generator+0x34>
    43ec:	a901      	add	r1, sp, #4
    43ee:	2013      	movs	r0, #19
    43f0:	700d      	strb	r5, [r1, #0]
    43f2:	f7ff f9ff 	bl	37f4 <system_gclk_chan_set_config>
    43f6:	2013      	movs	r0, #19
    43f8:	f7ff f9be 	bl	3778 <system_gclk_chan_enable>
    43fc:	2301      	movs	r3, #1
    43fe:	2000      	movs	r0, #0
    4400:	7065      	strb	r5, [r4, #1]
    4402:	7023      	strb	r3, [r4, #0]
    4404:	b003      	add	sp, #12
    4406:	bd30      	pop	{r4, r5, pc}
    4408:	2000      	movs	r0, #0
    440a:	e7fb      	b.n	4404 <sercom_set_gclk_generator+0x34>
    440c:	20004388 	.word	0x20004388

00004410 <_sercom_get_default_pad>:
    4410:	4b3a      	ldr	r3, [pc, #232]	; (44fc <_sercom_get_default_pad+0xec>)
    4412:	4298      	cmp	r0, r3
    4414:	d043      	beq.n	449e <_sercom_get_default_pad+0x8e>
    4416:	d90a      	bls.n	442e <_sercom_get_default_pad+0x1e>
    4418:	4b39      	ldr	r3, [pc, #228]	; (4500 <_sercom_get_default_pad+0xf0>)
    441a:	4298      	cmp	r0, r3
    441c:	d017      	beq.n	444e <_sercom_get_default_pad+0x3e>
    441e:	4b39      	ldr	r3, [pc, #228]	; (4504 <_sercom_get_default_pad+0xf4>)
    4420:	4298      	cmp	r0, r3
    4422:	d032      	beq.n	448a <_sercom_get_default_pad+0x7a>
    4424:	4b38      	ldr	r3, [pc, #224]	; (4508 <_sercom_get_default_pad+0xf8>)
    4426:	4298      	cmp	r0, r3
    4428:	d01b      	beq.n	4462 <_sercom_get_default_pad+0x52>
    442a:	2000      	movs	r0, #0
    442c:	4770      	bx	lr
    442e:	4b37      	ldr	r3, [pc, #220]	; (450c <_sercom_get_default_pad+0xfc>)
    4430:	4298      	cmp	r0, r3
    4432:	d020      	beq.n	4476 <_sercom_get_default_pad+0x66>
    4434:	4b36      	ldr	r3, [pc, #216]	; (4510 <_sercom_get_default_pad+0x100>)
    4436:	4298      	cmp	r0, r3
    4438:	d1f7      	bne.n	442a <_sercom_get_default_pad+0x1a>
    443a:	2901      	cmp	r1, #1
    443c:	d043      	beq.n	44c6 <_sercom_get_default_pad+0xb6>
    443e:	2900      	cmp	r1, #0
    4440:	d03f      	beq.n	44c2 <_sercom_get_default_pad+0xb2>
    4442:	2902      	cmp	r1, #2
    4444:	d03b      	beq.n	44be <_sercom_get_default_pad+0xae>
    4446:	2903      	cmp	r1, #3
    4448:	d1ef      	bne.n	442a <_sercom_get_default_pad+0x1a>
    444a:	4832      	ldr	r0, [pc, #200]	; (4514 <_sercom_get_default_pad+0x104>)
    444c:	e7ee      	b.n	442c <_sercom_get_default_pad+0x1c>
    444e:	2901      	cmp	r1, #1
    4450:	d031      	beq.n	44b6 <_sercom_get_default_pad+0xa6>
    4452:	2900      	cmp	r1, #0
    4454:	d02d      	beq.n	44b2 <_sercom_get_default_pad+0xa2>
    4456:	2902      	cmp	r1, #2
    4458:	d02f      	beq.n	44ba <_sercom_get_default_pad+0xaa>
    445a:	2903      	cmp	r1, #3
    445c:	d1e5      	bne.n	442a <_sercom_get_default_pad+0x1a>
    445e:	482e      	ldr	r0, [pc, #184]	; (4518 <_sercom_get_default_pad+0x108>)
    4460:	e7e4      	b.n	442c <_sercom_get_default_pad+0x1c>
    4462:	2901      	cmp	r1, #1
    4464:	d03f      	beq.n	44e6 <_sercom_get_default_pad+0xd6>
    4466:	2900      	cmp	r1, #0
    4468:	d03b      	beq.n	44e2 <_sercom_get_default_pad+0xd2>
    446a:	2902      	cmp	r1, #2
    446c:	d037      	beq.n	44de <_sercom_get_default_pad+0xce>
    446e:	2903      	cmp	r1, #3
    4470:	d1db      	bne.n	442a <_sercom_get_default_pad+0x1a>
    4472:	482a      	ldr	r0, [pc, #168]	; (451c <_sercom_get_default_pad+0x10c>)
    4474:	e7da      	b.n	442c <_sercom_get_default_pad+0x1c>
    4476:	2901      	cmp	r1, #1
    4478:	d03d      	beq.n	44f6 <_sercom_get_default_pad+0xe6>
    447a:	2900      	cmp	r1, #0
    447c:	d039      	beq.n	44f2 <_sercom_get_default_pad+0xe2>
    447e:	2902      	cmp	r1, #2
    4480:	d02b      	beq.n	44da <_sercom_get_default_pad+0xca>
    4482:	2903      	cmp	r1, #3
    4484:	d1d1      	bne.n	442a <_sercom_get_default_pad+0x1a>
    4486:	4826      	ldr	r0, [pc, #152]	; (4520 <_sercom_get_default_pad+0x110>)
    4488:	e7d0      	b.n	442c <_sercom_get_default_pad+0x1c>
    448a:	2901      	cmp	r1, #1
    448c:	d023      	beq.n	44d6 <_sercom_get_default_pad+0xc6>
    448e:	2900      	cmp	r1, #0
    4490:	d01f      	beq.n	44d2 <_sercom_get_default_pad+0xc2>
    4492:	2902      	cmp	r1, #2
    4494:	d01b      	beq.n	44ce <_sercom_get_default_pad+0xbe>
    4496:	2903      	cmp	r1, #3
    4498:	d1c7      	bne.n	442a <_sercom_get_default_pad+0x1a>
    449a:	4822      	ldr	r0, [pc, #136]	; (4524 <_sercom_get_default_pad+0x114>)
    449c:	e7c6      	b.n	442c <_sercom_get_default_pad+0x1c>
    449e:	2901      	cmp	r1, #1
    44a0:	d025      	beq.n	44ee <_sercom_get_default_pad+0xde>
    44a2:	2900      	cmp	r1, #0
    44a4:	d021      	beq.n	44ea <_sercom_get_default_pad+0xda>
    44a6:	2902      	cmp	r1, #2
    44a8:	d00f      	beq.n	44ca <_sercom_get_default_pad+0xba>
    44aa:	2903      	cmp	r1, #3
    44ac:	d1bd      	bne.n	442a <_sercom_get_default_pad+0x1a>
    44ae:	481e      	ldr	r0, [pc, #120]	; (4528 <_sercom_get_default_pad+0x118>)
    44b0:	e7bc      	b.n	442c <_sercom_get_default_pad+0x1c>
    44b2:	481e      	ldr	r0, [pc, #120]	; (452c <_sercom_get_default_pad+0x11c>)
    44b4:	e7ba      	b.n	442c <_sercom_get_default_pad+0x1c>
    44b6:	481e      	ldr	r0, [pc, #120]	; (4530 <_sercom_get_default_pad+0x120>)
    44b8:	e7b8      	b.n	442c <_sercom_get_default_pad+0x1c>
    44ba:	481e      	ldr	r0, [pc, #120]	; (4534 <_sercom_get_default_pad+0x124>)
    44bc:	e7b6      	b.n	442c <_sercom_get_default_pad+0x1c>
    44be:	481e      	ldr	r0, [pc, #120]	; (4538 <_sercom_get_default_pad+0x128>)
    44c0:	e7b4      	b.n	442c <_sercom_get_default_pad+0x1c>
    44c2:	2003      	movs	r0, #3
    44c4:	e7b2      	b.n	442c <_sercom_get_default_pad+0x1c>
    44c6:	481d      	ldr	r0, [pc, #116]	; (453c <_sercom_get_default_pad+0x12c>)
    44c8:	e7b0      	b.n	442c <_sercom_get_default_pad+0x1c>
    44ca:	481d      	ldr	r0, [pc, #116]	; (4540 <_sercom_get_default_pad+0x130>)
    44cc:	e7ae      	b.n	442c <_sercom_get_default_pad+0x1c>
    44ce:	481d      	ldr	r0, [pc, #116]	; (4544 <_sercom_get_default_pad+0x134>)
    44d0:	e7ac      	b.n	442c <_sercom_get_default_pad+0x1c>
    44d2:	481d      	ldr	r0, [pc, #116]	; (4548 <_sercom_get_default_pad+0x138>)
    44d4:	e7aa      	b.n	442c <_sercom_get_default_pad+0x1c>
    44d6:	481d      	ldr	r0, [pc, #116]	; (454c <_sercom_get_default_pad+0x13c>)
    44d8:	e7a8      	b.n	442c <_sercom_get_default_pad+0x1c>
    44da:	481d      	ldr	r0, [pc, #116]	; (4550 <_sercom_get_default_pad+0x140>)
    44dc:	e7a6      	b.n	442c <_sercom_get_default_pad+0x1c>
    44de:	481d      	ldr	r0, [pc, #116]	; (4554 <_sercom_get_default_pad+0x144>)
    44e0:	e7a4      	b.n	442c <_sercom_get_default_pad+0x1c>
    44e2:	481d      	ldr	r0, [pc, #116]	; (4558 <_sercom_get_default_pad+0x148>)
    44e4:	e7a2      	b.n	442c <_sercom_get_default_pad+0x1c>
    44e6:	481d      	ldr	r0, [pc, #116]	; (455c <_sercom_get_default_pad+0x14c>)
    44e8:	e7a0      	b.n	442c <_sercom_get_default_pad+0x1c>
    44ea:	481d      	ldr	r0, [pc, #116]	; (4560 <_sercom_get_default_pad+0x150>)
    44ec:	e79e      	b.n	442c <_sercom_get_default_pad+0x1c>
    44ee:	481d      	ldr	r0, [pc, #116]	; (4564 <_sercom_get_default_pad+0x154>)
    44f0:	e79c      	b.n	442c <_sercom_get_default_pad+0x1c>
    44f2:	481d      	ldr	r0, [pc, #116]	; (4568 <_sercom_get_default_pad+0x158>)
    44f4:	e79a      	b.n	442c <_sercom_get_default_pad+0x1c>
    44f6:	481d      	ldr	r0, [pc, #116]	; (456c <_sercom_get_default_pad+0x15c>)
    44f8:	e798      	b.n	442c <_sercom_get_default_pad+0x1c>
    44fa:	46c0      	nop			; (mov r8, r8)
    44fc:	42001000 	.word	0x42001000
    4500:	42001800 	.word	0x42001800
    4504:	42001c00 	.word	0x42001c00
    4508:	42001400 	.word	0x42001400
    450c:	42000800 	.word	0x42000800
    4510:	42000c00 	.word	0x42000c00
    4514:	001f0003 	.word	0x001f0003
    4518:	00520005 	.word	0x00520005
    451c:	00130003 	.word	0x00130003
    4520:	00070003 	.word	0x00070003
    4524:	00190003 	.word	0x00190003
    4528:	000f0002 	.word	0x000f0002
    452c:	00530005 	.word	0x00530005
    4530:	003f0005 	.word	0x003f0005
    4534:	003e0005 	.word	0x003e0005
    4538:	001e0003 	.word	0x001e0003
    453c:	00010003 	.word	0x00010003
    4540:	000e0002 	.word	0x000e0002
    4544:	00180003 	.word	0x00180003
    4548:	00160003 	.word	0x00160003
    454c:	00170003 	.word	0x00170003
    4550:	00060003 	.word	0x00060003
    4554:	00120003 	.word	0x00120003
    4558:	00100003 	.word	0x00100003
    455c:	00110003 	.word	0x00110003
    4560:	000c0002 	.word	0x000c0002
    4564:	000d0002 	.word	0x000d0002
    4568:	00040003 	.word	0x00040003
    456c:	00050003 	.word	0x00050003

00004570 <_sercom_get_sercom_inst_index>:
    4570:	b570      	push	{r4, r5, r6, lr}
    4572:	b086      	sub	sp, #24
    4574:	4669      	mov	r1, sp
    4576:	4b09      	ldr	r3, [pc, #36]	; (459c <_sercom_get_sercom_inst_index+0x2c>)
    4578:	466a      	mov	r2, sp
    457a:	cb70      	ldmia	r3!, {r4, r5, r6}
    457c:	c170      	stmia	r1!, {r4, r5, r6}
    457e:	cb70      	ldmia	r3!, {r4, r5, r6}
    4580:	c170      	stmia	r1!, {r4, r5, r6}
    4582:	2300      	movs	r3, #0
    4584:	0099      	lsls	r1, r3, #2
    4586:	5851      	ldr	r1, [r2, r1]
    4588:	4281      	cmp	r1, r0
    458a:	d005      	beq.n	4598 <_sercom_get_sercom_inst_index+0x28>
    458c:	3301      	adds	r3, #1
    458e:	2b06      	cmp	r3, #6
    4590:	d1f8      	bne.n	4584 <_sercom_get_sercom_inst_index+0x14>
    4592:	2000      	movs	r0, #0
    4594:	b006      	add	sp, #24
    4596:	bd70      	pop	{r4, r5, r6, pc}
    4598:	b2d8      	uxtb	r0, r3
    459a:	e7fb      	b.n	4594 <_sercom_get_sercom_inst_index+0x24>
    459c:	0000e064 	.word	0x0000e064

000045a0 <system_clock_source_get_hz>:
    45a0:	b510      	push	{r4, lr}
    45a2:	2808      	cmp	r0, #8
    45a4:	d82c      	bhi.n	4600 <system_clock_source_get_hz+0x60>
    45a6:	4b1b      	ldr	r3, [pc, #108]	; (4614 <system_clock_source_get_hz+0x74>)
    45a8:	0080      	lsls	r0, r0, #2
    45aa:	581b      	ldr	r3, [r3, r0]
    45ac:	469f      	mov	pc, r3
    45ae:	2080      	movs	r0, #128	; 0x80
    45b0:	0200      	lsls	r0, r0, #8
    45b2:	bd10      	pop	{r4, pc}
    45b4:	4b18      	ldr	r3, [pc, #96]	; (4618 <system_clock_source_get_hz+0x78>)
    45b6:	6958      	ldr	r0, [r3, #20]
    45b8:	e7fb      	b.n	45b2 <system_clock_source_get_hz+0x12>
    45ba:	4b18      	ldr	r3, [pc, #96]	; (461c <system_clock_source_get_hz+0x7c>)
    45bc:	6a18      	ldr	r0, [r3, #32]
    45be:	4b18      	ldr	r3, [pc, #96]	; (4620 <system_clock_source_get_hz+0x80>)
    45c0:	0580      	lsls	r0, r0, #22
    45c2:	0f80      	lsrs	r0, r0, #30
    45c4:	40c3      	lsrs	r3, r0
    45c6:	1c18      	adds	r0, r3, #0
    45c8:	e7f3      	b.n	45b2 <system_clock_source_get_hz+0x12>
    45ca:	2002      	movs	r0, #2
    45cc:	4c12      	ldr	r4, [pc, #72]	; (4618 <system_clock_source_get_hz+0x78>)
    45ce:	6823      	ldr	r3, [r4, #0]
    45d0:	4018      	ands	r0, r3
    45d2:	d0ee      	beq.n	45b2 <system_clock_source_get_hz+0x12>
    45d4:	2210      	movs	r2, #16
    45d6:	4911      	ldr	r1, [pc, #68]	; (461c <system_clock_source_get_hz+0x7c>)
    45d8:	68cb      	ldr	r3, [r1, #12]
    45da:	421a      	tst	r2, r3
    45dc:	d0fc      	beq.n	45d8 <system_clock_source_get_hz+0x38>
    45de:	6823      	ldr	r3, [r4, #0]
    45e0:	075b      	lsls	r3, r3, #29
    45e2:	d40f      	bmi.n	4604 <system_clock_source_get_hz+0x64>
    45e4:	480f      	ldr	r0, [pc, #60]	; (4624 <system_clock_source_get_hz+0x84>)
    45e6:	e7e4      	b.n	45b2 <system_clock_source_get_hz+0x12>
    45e8:	4b0b      	ldr	r3, [pc, #44]	; (4618 <system_clock_source_get_hz+0x78>)
    45ea:	6918      	ldr	r0, [r3, #16]
    45ec:	e7e1      	b.n	45b2 <system_clock_source_get_hz+0x12>
    45ee:	2350      	movs	r3, #80	; 0x50
    45f0:	4a0a      	ldr	r2, [pc, #40]	; (461c <system_clock_source_get_hz+0x7c>)
    45f2:	2000      	movs	r0, #0
    45f4:	5cd3      	ldrb	r3, [r2, r3]
    45f6:	075b      	lsls	r3, r3, #29
    45f8:	d5db      	bpl.n	45b2 <system_clock_source_get_hz+0x12>
    45fa:	4b07      	ldr	r3, [pc, #28]	; (4618 <system_clock_source_get_hz+0x78>)
    45fc:	68d8      	ldr	r0, [r3, #12]
    45fe:	e7d8      	b.n	45b2 <system_clock_source_get_hz+0x12>
    4600:	2000      	movs	r0, #0
    4602:	e7d6      	b.n	45b2 <system_clock_source_get_hz+0x12>
    4604:	2000      	movs	r0, #0
    4606:	f7ff f901 	bl	380c <system_gclk_chan_get_hz>
    460a:	68a3      	ldr	r3, [r4, #8]
    460c:	041b      	lsls	r3, r3, #16
    460e:	0c1b      	lsrs	r3, r3, #16
    4610:	4358      	muls	r0, r3
    4612:	e7ce      	b.n	45b2 <system_clock_source_get_hz+0x12>
    4614:	0000e07c 	.word	0x0000e07c
    4618:	2000438c 	.word	0x2000438c
    461c:	40000800 	.word	0x40000800
    4620:	007a1200 	.word	0x007a1200
    4624:	02dc6c00 	.word	0x02dc6c00

00004628 <system_clock_source_enable>:
    4628:	b510      	push	{r4, lr}
    462a:	2808      	cmp	r0, #8
    462c:	d841      	bhi.n	46b2 <system_clock_source_enable+0x8a>
    462e:	4b22      	ldr	r3, [pc, #136]	; (46b8 <system_clock_source_enable+0x90>)
    4630:	0080      	lsls	r0, r0, #2
    4632:	581b      	ldr	r3, [r3, r0]
    4634:	469f      	mov	pc, r3
    4636:	2000      	movs	r0, #0
    4638:	bd10      	pop	{r4, pc}
    463a:	2302      	movs	r3, #2
    463c:	4a1f      	ldr	r2, [pc, #124]	; (46bc <system_clock_source_enable+0x94>)
    463e:	2000      	movs	r0, #0
    4640:	6991      	ldr	r1, [r2, #24]
    4642:	430b      	orrs	r3, r1
    4644:	6193      	str	r3, [r2, #24]
    4646:	e7f7      	b.n	4638 <system_clock_source_enable+0x10>
    4648:	2302      	movs	r3, #2
    464a:	4a1c      	ldr	r2, [pc, #112]	; (46bc <system_clock_source_enable+0x94>)
    464c:	2000      	movs	r0, #0
    464e:	8a91      	ldrh	r1, [r2, #20]
    4650:	430b      	orrs	r3, r1
    4652:	8293      	strh	r3, [r2, #20]
    4654:	e7f0      	b.n	4638 <system_clock_source_enable+0x10>
    4656:	2302      	movs	r3, #2
    4658:	4a18      	ldr	r2, [pc, #96]	; (46bc <system_clock_source_enable+0x94>)
    465a:	2000      	movs	r0, #0
    465c:	6a11      	ldr	r1, [r2, #32]
    465e:	430b      	orrs	r3, r1
    4660:	6213      	str	r3, [r2, #32]
    4662:	e7e9      	b.n	4638 <system_clock_source_enable+0x10>
    4664:	2302      	movs	r3, #2
    4666:	2010      	movs	r0, #16
    4668:	4c15      	ldr	r4, [pc, #84]	; (46c0 <system_clock_source_enable+0x98>)
    466a:	6822      	ldr	r2, [r4, #0]
    466c:	4313      	orrs	r3, r2
    466e:	6023      	str	r3, [r4, #0]
    4670:	6822      	ldr	r2, [r4, #0]
    4672:	4b14      	ldr	r3, [pc, #80]	; (46c4 <system_clock_source_enable+0x9c>)
    4674:	4013      	ands	r3, r2
    4676:	4a11      	ldr	r2, [pc, #68]	; (46bc <system_clock_source_enable+0x94>)
    4678:	8493      	strh	r3, [r2, #36]	; 0x24
    467a:	68d3      	ldr	r3, [r2, #12]
    467c:	490f      	ldr	r1, [pc, #60]	; (46bc <system_clock_source_enable+0x94>)
    467e:	4218      	tst	r0, r3
    4680:	d0fb      	beq.n	467a <system_clock_source_enable+0x52>
    4682:	68a3      	ldr	r3, [r4, #8]
    4684:	2000      	movs	r0, #0
    4686:	62cb      	str	r3, [r1, #44]	; 0x2c
    4688:	6863      	ldr	r3, [r4, #4]
    468a:	628b      	str	r3, [r1, #40]	; 0x28
    468c:	6823      	ldr	r3, [r4, #0]
    468e:	b29b      	uxth	r3, r3
    4690:	848b      	strh	r3, [r1, #36]	; 0x24
    4692:	e7d1      	b.n	4638 <system_clock_source_enable+0x10>
    4694:	2244      	movs	r2, #68	; 0x44
    4696:	2302      	movs	r3, #2
    4698:	4908      	ldr	r1, [pc, #32]	; (46bc <system_clock_source_enable+0x94>)
    469a:	5c88      	ldrb	r0, [r1, r2]
    469c:	4303      	orrs	r3, r0
    469e:	548b      	strb	r3, [r1, r2]
    46a0:	2000      	movs	r0, #0
    46a2:	e7c9      	b.n	4638 <system_clock_source_enable+0x10>
    46a4:	2302      	movs	r3, #2
    46a6:	4a05      	ldr	r2, [pc, #20]	; (46bc <system_clock_source_enable+0x94>)
    46a8:	2000      	movs	r0, #0
    46aa:	8a11      	ldrh	r1, [r2, #16]
    46ac:	430b      	orrs	r3, r1
    46ae:	8213      	strh	r3, [r2, #16]
    46b0:	e7c2      	b.n	4638 <system_clock_source_enable+0x10>
    46b2:	2017      	movs	r0, #23
    46b4:	e7c0      	b.n	4638 <system_clock_source_enable+0x10>
    46b6:	46c0      	nop			; (mov r8, r8)
    46b8:	0000e0a0 	.word	0x0000e0a0
    46bc:	40000800 	.word	0x40000800
    46c0:	2000438c 	.word	0x2000438c
    46c4:	0000ff7f 	.word	0x0000ff7f

000046c8 <system_clock_init>:
    46c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    46ca:	4647      	mov	r7, r8
    46cc:	22c2      	movs	r2, #194	; 0xc2
    46ce:	211e      	movs	r1, #30
    46d0:	b480      	push	{r7}
    46d2:	4b31      	ldr	r3, [pc, #196]	; (4798 <system_clock_init+0xd0>)
    46d4:	00d2      	lsls	r2, r2, #3
    46d6:	609a      	str	r2, [r3, #8]
    46d8:	4a30      	ldr	r2, [pc, #192]	; (479c <system_clock_init+0xd4>)
    46da:	2400      	movs	r4, #0
    46dc:	6853      	ldr	r3, [r2, #4]
    46de:	b084      	sub	sp, #16
    46e0:	438b      	bics	r3, r1
    46e2:	6053      	str	r3, [r2, #4]
    46e4:	2301      	movs	r3, #1
    46e6:	ad01      	add	r5, sp, #4
    46e8:	702b      	strb	r3, [r5, #0]
    46ea:	b2e0      	uxtb	r0, r4
    46ec:	1c29      	adds	r1, r5, #0
    46ee:	3401      	adds	r4, #1
    46f0:	f7ff f880 	bl	37f4 <system_gclk_chan_set_config>
    46f4:	2c25      	cmp	r4, #37	; 0x25
    46f6:	d1f8      	bne.n	46ea <system_clock_init+0x22>
    46f8:	4b29      	ldr	r3, [pc, #164]	; (47a0 <system_clock_init+0xd8>)
    46fa:	4c27      	ldr	r4, [pc, #156]	; (4798 <system_clock_init+0xd0>)
    46fc:	681b      	ldr	r3, [r3, #0]
    46fe:	69a1      	ldr	r1, [r4, #24]
    4700:	04db      	lsls	r3, r3, #19
    4702:	0e5b      	lsrs	r3, r3, #25
    4704:	041a      	lsls	r2, r3, #16
    4706:	4b27      	ldr	r3, [pc, #156]	; (47a4 <system_clock_init+0xdc>)
    4708:	2604      	movs	r6, #4
    470a:	400b      	ands	r3, r1
    470c:	4313      	orrs	r3, r2
    470e:	2208      	movs	r2, #8
    4710:	2740      	movs	r7, #64	; 0x40
    4712:	61a3      	str	r3, [r4, #24]
    4714:	69a3      	ldr	r3, [r4, #24]
    4716:	2004      	movs	r0, #4
    4718:	4333      	orrs	r3, r6
    471a:	4313      	orrs	r3, r2
    471c:	43bb      	bics	r3, r7
    471e:	3278      	adds	r2, #120	; 0x78
    4720:	4690      	mov	r8, r2
    4722:	4313      	orrs	r3, r2
    4724:	22e0      	movs	r2, #224	; 0xe0
    4726:	00d2      	lsls	r2, r2, #3
    4728:	4313      	orrs	r3, r2
    472a:	4a1f      	ldr	r2, [pc, #124]	; (47a8 <system_clock_init+0xe0>)
    472c:	4013      	ands	r3, r2
    472e:	61a3      	str	r3, [r4, #24]
    4730:	f7ff ff7a 	bl	4628 <system_clock_source_enable>
    4734:	4642      	mov	r2, r8
    4736:	6a23      	ldr	r3, [r4, #32]
    4738:	2006      	movs	r0, #6
    473a:	43bb      	bics	r3, r7
    473c:	4313      	orrs	r3, r2
    473e:	4a1b      	ldr	r2, [pc, #108]	; (47ac <system_clock_init+0xe4>)
    4740:	4013      	ands	r3, r2
    4742:	6223      	str	r3, [r4, #32]
    4744:	f7ff ff70 	bl	4628 <system_clock_source_enable>
    4748:	2400      	movs	r4, #0
    474a:	f7fe ff5f 	bl	360c <system_gclk_init>
    474e:	2320      	movs	r3, #32
    4750:	1c29      	adds	r1, r5, #0
    4752:	2002      	movs	r0, #2
    4754:	606b      	str	r3, [r5, #4]
    4756:	706c      	strb	r4, [r5, #1]
    4758:	722c      	strb	r4, [r5, #8]
    475a:	726c      	strb	r4, [r5, #9]
    475c:	702e      	strb	r6, [r5, #0]
    475e:	f7fe ff67 	bl	3630 <system_gclk_gen_set_config>
    4762:	2002      	movs	r0, #2
    4764:	f7fe ffae 	bl	36c4 <system_gclk_gen_enable>
    4768:	4b11      	ldr	r3, [pc, #68]	; (47b0 <system_clock_init+0xe8>)
    476a:	1c29      	adds	r1, r5, #0
    476c:	721c      	strb	r4, [r3, #8]
    476e:	725c      	strb	r4, [r3, #9]
    4770:	729c      	strb	r4, [r3, #10]
    4772:	72dc      	strb	r4, [r3, #11]
    4774:	2301      	movs	r3, #1
    4776:	2000      	movs	r0, #0
    4778:	606b      	str	r3, [r5, #4]
    477a:	3305      	adds	r3, #5
    477c:	702b      	strb	r3, [r5, #0]
    477e:	706c      	strb	r4, [r5, #1]
    4780:	722c      	strb	r4, [r5, #8]
    4782:	726c      	strb	r4, [r5, #9]
    4784:	f7fe ff54 	bl	3630 <system_gclk_gen_set_config>
    4788:	2000      	movs	r0, #0
    478a:	f7fe ff9b 	bl	36c4 <system_gclk_gen_enable>
    478e:	b004      	add	sp, #16
    4790:	bc04      	pop	{r2}
    4792:	4690      	mov	r8, r2
    4794:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4796:	46c0      	nop			; (mov r8, r8)
    4798:	40000800 	.word	0x40000800
    479c:	41004000 	.word	0x41004000
    47a0:	00806024 	.word	0x00806024
    47a4:	ff80ffff 	.word	0xff80ffff
    47a8:	ffffefff 	.word	0xffffefff
    47ac:	fffffcff 	.word	0xfffffcff
    47b0:	40000400 	.word	0x40000400

000047b4 <gpio_init>:
    47b4:	b570      	push	{r4, r5, r6, lr}
    47b6:	1c05      	adds	r5, r0, #0
    47b8:	b082      	sub	sp, #8
    47ba:	1c0c      	adds	r4, r1, #0
    47bc:	1c4b      	adds	r3, r1, #1
    47be:	d028      	beq.n	4812 <gpio_init+0x5e>
    47c0:	b2c8      	uxtb	r0, r1
    47c2:	2900      	cmp	r1, #0
    47c4:	db2c      	blt.n	4820 <gpio_init+0x6c>
    47c6:	4b18      	ldr	r3, [pc, #96]	; (4828 <gpio_init+0x74>)
    47c8:	0946      	lsrs	r6, r0, #5
    47ca:	469c      	mov	ip, r3
    47cc:	01f6      	lsls	r6, r6, #7
    47ce:	4466      	add	r6, ip
    47d0:	702c      	strb	r4, [r5, #0]
    47d2:	17e2      	asrs	r2, r4, #31
    47d4:	0ed2      	lsrs	r2, r2, #27
    47d6:	18a3      	adds	r3, r4, r2
    47d8:	241f      	movs	r4, #31
    47da:	401c      	ands	r4, r3
    47dc:	1aa4      	subs	r4, r4, r2
    47de:	2201      	movs	r2, #1
    47e0:	1c13      	adds	r3, r2, #0
    47e2:	b264      	sxtb	r4, r4
    47e4:	40a3      	lsls	r3, r4
    47e6:	606b      	str	r3, [r5, #4]
    47e8:	2300      	movs	r3, #0
    47ea:	a901      	add	r1, sp, #4
    47ec:	722b      	strb	r3, [r5, #8]
    47ee:	72ab      	strb	r3, [r5, #10]
    47f0:	726a      	strb	r2, [r5, #9]
    47f2:	700b      	strb	r3, [r1, #0]
    47f4:	708b      	strb	r3, [r1, #2]
    47f6:	704a      	strb	r2, [r1, #1]
    47f8:	f000 fa9c 	bl	4d34 <port_pin_set_config>
    47fc:	1c33      	adds	r3, r6, #0
    47fe:	3314      	adds	r3, #20
    4800:	60eb      	str	r3, [r5, #12]
    4802:	3304      	adds	r3, #4
    4804:	612b      	str	r3, [r5, #16]
    4806:	3610      	adds	r6, #16
    4808:	3308      	adds	r3, #8
    480a:	616b      	str	r3, [r5, #20]
    480c:	61ae      	str	r6, [r5, #24]
    480e:	b002      	add	sp, #8
    4810:	bd70      	pop	{r4, r5, r6, pc}
    4812:	4806      	ldr	r0, [pc, #24]	; (482c <gpio_init+0x78>)
    4814:	4906      	ldr	r1, [pc, #24]	; (4830 <gpio_init+0x7c>)
    4816:	221f      	movs	r2, #31
    4818:	f7ff fc7a 	bl	4110 <mbed_assert_internal>
    481c:	702c      	strb	r4, [r5, #0]
    481e:	e7f6      	b.n	480e <gpio_init+0x5a>
    4820:	702c      	strb	r4, [r5, #0]
    4822:	2600      	movs	r6, #0
    4824:	e7d5      	b.n	47d2 <gpio_init+0x1e>
    4826:	46c0      	nop			; (mov r8, r8)
    4828:	41004400 	.word	0x41004400
    482c:	0000e0c4 	.word	0x0000e0c4
    4830:	0000e0d8 	.word	0x0000e0d8

00004834 <gpio_mode>:
    4834:	b530      	push	{r4, r5, lr}
    4836:	1c04      	adds	r4, r0, #0
    4838:	7800      	ldrb	r0, [r0, #0]
    483a:	b083      	sub	sp, #12
    483c:	b243      	sxtb	r3, r0
    483e:	1c0d      	adds	r5, r1, #0
    4840:	3301      	adds	r3, #1
    4842:	d013      	beq.n	486c <gpio_mode+0x38>
    4844:	7aa3      	ldrb	r3, [r4, #10]
    4846:	a901      	add	r1, sp, #4
    4848:	700b      	strb	r3, [r1, #0]
    484a:	7a23      	ldrb	r3, [r4, #8]
    484c:	7265      	strb	r5, [r4, #9]
    484e:	1e5a      	subs	r2, r3, #1
    4850:	4193      	sbcs	r3, r2
    4852:	708b      	strb	r3, [r1, #2]
    4854:	2d01      	cmp	r5, #1
    4856:	d003      	beq.n	4860 <gpio_mode+0x2c>
    4858:	2d00      	cmp	r5, #0
    485a:	d001      	beq.n	4860 <gpio_mode+0x2c>
    485c:	2d02      	cmp	r5, #2
    485e:	d100      	bne.n	4862 <gpio_mode+0x2e>
    4860:	704d      	strb	r5, [r1, #1]
    4862:	b2c0      	uxtb	r0, r0
    4864:	f000 fa66 	bl	4d34 <port_pin_set_config>
    4868:	b003      	add	sp, #12
    486a:	bd30      	pop	{r4, r5, pc}
    486c:	4803      	ldr	r0, [pc, #12]	; (487c <gpio_mode+0x48>)
    486e:	4904      	ldr	r1, [pc, #16]	; (4880 <gpio_mode+0x4c>)
    4870:	2236      	movs	r2, #54	; 0x36
    4872:	f7ff fc4d 	bl	4110 <mbed_assert_internal>
    4876:	7820      	ldrb	r0, [r4, #0]
    4878:	e7e4      	b.n	4844 <gpio_mode+0x10>
    487a:	46c0      	nop			; (mov r8, r8)
    487c:	0000d604 	.word	0x0000d604
    4880:	0000e0d8 	.word	0x0000e0d8

00004884 <gpio_dir>:
    4884:	b530      	push	{r4, r5, lr}
    4886:	1c04      	adds	r4, r0, #0
    4888:	7800      	ldrb	r0, [r0, #0]
    488a:	b083      	sub	sp, #12
    488c:	b243      	sxtb	r3, r0
    488e:	1c0d      	adds	r5, r1, #0
    4890:	3301      	adds	r3, #1
    4892:	d013      	beq.n	48bc <gpio_dir+0x38>
    4894:	7a63      	ldrb	r3, [r4, #9]
    4896:	a901      	add	r1, sp, #4
    4898:	704b      	strb	r3, [r1, #1]
    489a:	7a23      	ldrb	r3, [r4, #8]
    489c:	72a5      	strb	r5, [r4, #10]
    489e:	1e5a      	subs	r2, r3, #1
    48a0:	4193      	sbcs	r3, r2
    48a2:	708b      	strb	r3, [r1, #2]
    48a4:	2d01      	cmp	r5, #1
    48a6:	d003      	beq.n	48b0 <gpio_dir+0x2c>
    48a8:	2d00      	cmp	r5, #0
    48aa:	d001      	beq.n	48b0 <gpio_dir+0x2c>
    48ac:	2d02      	cmp	r5, #2
    48ae:	d100      	bne.n	48b2 <gpio_dir+0x2e>
    48b0:	700d      	strb	r5, [r1, #0]
    48b2:	b2c0      	uxtb	r0, r0
    48b4:	f000 fa3e 	bl	4d34 <port_pin_set_config>
    48b8:	b003      	add	sp, #12
    48ba:	bd30      	pop	{r4, r5, pc}
    48bc:	4803      	ldr	r0, [pc, #12]	; (48cc <gpio_dir+0x48>)
    48be:	4904      	ldr	r1, [pc, #16]	; (48d0 <gpio_dir+0x4c>)
    48c0:	224c      	movs	r2, #76	; 0x4c
    48c2:	f7ff fc25 	bl	4110 <mbed_assert_internal>
    48c6:	7820      	ldrb	r0, [r4, #0]
    48c8:	e7e4      	b.n	4894 <gpio_dir+0x10>
    48ca:	46c0      	nop			; (mov r8, r8)
    48cc:	0000d604 	.word	0x0000d604
    48d0:	0000e0d8 	.word	0x0000e0d8

000048d4 <pinmap_find_peripheral_from_pad.part.0>:
    48d4:	b510      	push	{r4, lr}
    48d6:	1c04      	adds	r4, r0, #0
    48d8:	2901      	cmp	r1, #1
    48da:	d004      	beq.n	48e6 <pinmap_find_peripheral_from_pad.part.0+0x12>
    48dc:	1c20      	adds	r0, r4, #0
    48de:	4905      	ldr	r1, [pc, #20]	; (48f4 <pinmap_find_peripheral_from_pad.part.0+0x20>)
    48e0:	f7ff fc4a 	bl	4178 <pinmap_find_peripheral>
    48e4:	bd10      	pop	{r4, pc}
    48e6:	4904      	ldr	r1, [pc, #16]	; (48f8 <pinmap_find_peripheral_from_pad.part.0+0x24>)
    48e8:	f7ff fc46 	bl	4178 <pinmap_find_peripheral>
    48ec:	1c43      	adds	r3, r0, #1
    48ee:	d1f9      	bne.n	48e4 <pinmap_find_peripheral_from_pad.part.0+0x10>
    48f0:	e7f4      	b.n	48dc <pinmap_find_peripheral_from_pad.part.0+0x8>
    48f2:	46c0      	nop			; (mov r8, r8)
    48f4:	0000ded8 	.word	0x0000ded8
    48f8:	0000de54 	.word	0x0000de54

000048fc <pinmap_merge_sercom>:
    48fc:	b538      	push	{r3, r4, r5, lr}
    48fe:	1c0d      	adds	r5, r1, #0
    4900:	1c43      	adds	r3, r0, #1
    4902:	d01b      	beq.n	493c <pinmap_merge_sercom+0x40>
    4904:	2100      	movs	r1, #0
    4906:	f7ff ffe5 	bl	48d4 <pinmap_find_peripheral_from_pad.part.0>
    490a:	1c43      	adds	r3, r0, #1
    490c:	d016      	beq.n	493c <pinmap_merge_sercom+0x40>
    490e:	240f      	movs	r4, #15
    4910:	4004      	ands	r4, r0
    4912:	1c28      	adds	r0, r5, #0
    4914:	1c6b      	adds	r3, r5, #1
    4916:	d008      	beq.n	492a <pinmap_merge_sercom+0x2e>
    4918:	2100      	movs	r1, #0
    491a:	f7ff ffdb 	bl	48d4 <pinmap_find_peripheral_from_pad.part.0>
    491e:	1c43      	adds	r3, r0, #1
    4920:	d003      	beq.n	492a <pinmap_merge_sercom+0x2e>
    4922:	230f      	movs	r3, #15
    4924:	4018      	ands	r0, r3
    4926:	42a0      	cmp	r0, r4
    4928:	d006      	beq.n	4938 <pinmap_merge_sercom+0x3c>
    492a:	1c63      	adds	r3, r4, #1
    492c:	d003      	beq.n	4936 <pinmap_merge_sercom+0x3a>
    492e:	1c43      	adds	r3, r0, #1
    4930:	d002      	beq.n	4938 <pinmap_merge_sercom+0x3c>
    4932:	2001      	movs	r0, #1
    4934:	4240      	negs	r0, r0
    4936:	bd38      	pop	{r3, r4, r5, pc}
    4938:	1c20      	adds	r0, r4, #0
    493a:	e7fc      	b.n	4936 <pinmap_merge_sercom+0x3a>
    493c:	1c28      	adds	r0, r5, #0
    493e:	1c6b      	adds	r3, r5, #1
    4940:	d0f9      	beq.n	4936 <pinmap_merge_sercom+0x3a>
    4942:	2100      	movs	r1, #0
    4944:	2401      	movs	r4, #1
    4946:	f7ff ffc5 	bl	48d4 <pinmap_find_peripheral_from_pad.part.0>
    494a:	4264      	negs	r4, r4
    494c:	1c43      	adds	r3, r0, #1
    494e:	d1e8      	bne.n	4922 <pinmap_merge_sercom+0x26>
    4950:	e7f1      	b.n	4936 <pinmap_merge_sercom+0x3a>
    4952:	46c0      	nop			; (mov r8, r8)

00004954 <pinmap_function_sercom>:
    4954:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4956:	1c43      	adds	r3, r0, #1
    4958:	d004      	beq.n	4964 <pinmap_function_sercom+0x10>
    495a:	260f      	movs	r6, #15
    495c:	4031      	ands	r1, r6
    495e:	1e0d      	subs	r5, r1, #0
    4960:	2d05      	cmp	r5, #5
    4962:	d902      	bls.n	496a <pinmap_function_sercom+0x16>
    4964:	2001      	movs	r0, #1
    4966:	4240      	negs	r0, r0
    4968:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    496a:	4f0a      	ldr	r7, [pc, #40]	; (4994 <pinmap_function_sercom+0x40>)
    496c:	1c04      	adds	r4, r0, #0
    496e:	1c39      	adds	r1, r7, #0
    4970:	f7ff fc0e 	bl	4190 <pinmap_peripheral>
    4974:	4030      	ands	r0, r6
    4976:	42a8      	cmp	r0, r5
    4978:	d007      	beq.n	498a <pinmap_function_sercom+0x36>
    497a:	4f07      	ldr	r7, [pc, #28]	; (4998 <pinmap_function_sercom+0x44>)
    497c:	1c20      	adds	r0, r4, #0
    497e:	1c39      	adds	r1, r7, #0
    4980:	f7ff fc06 	bl	4190 <pinmap_peripheral>
    4984:	4006      	ands	r6, r0
    4986:	42ae      	cmp	r6, r5
    4988:	d1ec      	bne.n	4964 <pinmap_function_sercom+0x10>
    498a:	1c20      	adds	r0, r4, #0
    498c:	1c39      	adds	r1, r7, #0
    498e:	f7ff fc17 	bl	41c0 <pinmap_function>
    4992:	e7e9      	b.n	4968 <pinmap_function_sercom+0x14>
    4994:	0000ded8 	.word	0x0000ded8
    4998:	0000de54 	.word	0x0000de54

0000499c <pinmap_pad_sercom>:
    499c:	b570      	push	{r4, r5, r6, lr}
    499e:	1c43      	adds	r3, r0, #1
    49a0:	d004      	beq.n	49ac <pinmap_pad_sercom+0x10>
    49a2:	240f      	movs	r4, #15
    49a4:	4021      	ands	r1, r4
    49a6:	1e0d      	subs	r5, r1, #0
    49a8:	2d05      	cmp	r5, #5
    49aa:	d902      	bls.n	49b2 <pinmap_pad_sercom+0x16>
    49ac:	2001      	movs	r0, #1
    49ae:	4240      	negs	r0, r0
    49b0:	bd70      	pop	{r4, r5, r6, pc}
    49b2:	4909      	ldr	r1, [pc, #36]	; (49d8 <pinmap_pad_sercom+0x3c>)
    49b4:	1c06      	adds	r6, r0, #0
    49b6:	f7ff fbeb 	bl	4190 <pinmap_peripheral>
    49ba:	1c23      	adds	r3, r4, #0
    49bc:	4003      	ands	r3, r0
    49be:	42ab      	cmp	r3, r5
    49c0:	d007      	beq.n	49d2 <pinmap_pad_sercom+0x36>
    49c2:	1c30      	adds	r0, r6, #0
    49c4:	4905      	ldr	r1, [pc, #20]	; (49dc <pinmap_pad_sercom+0x40>)
    49c6:	f7ff fbe3 	bl	4190 <pinmap_peripheral>
    49ca:	1c23      	adds	r3, r4, #0
    49cc:	4003      	ands	r3, r0
    49ce:	42ab      	cmp	r3, r5
    49d0:	d1ec      	bne.n	49ac <pinmap_pad_sercom+0x10>
    49d2:	0900      	lsrs	r0, r0, #4
    49d4:	4020      	ands	r0, r4
    49d6:	e7eb      	b.n	49b0 <pinmap_pad_sercom+0x14>
    49d8:	0000ded8 	.word	0x0000ded8
    49dc:	0000de54 	.word	0x0000de54

000049e0 <pinmap_peripheral_sercom>:
    49e0:	b570      	push	{r4, r5, r6, lr}
    49e2:	b086      	sub	sp, #24
    49e4:	466a      	mov	r2, sp
    49e6:	4b08      	ldr	r3, [pc, #32]	; (4a08 <pinmap_peripheral_sercom+0x28>)
    49e8:	4668      	mov	r0, sp
    49ea:	cb70      	ldmia	r3!, {r4, r5, r6}
    49ec:	c270      	stmia	r2!, {r4, r5, r6}
    49ee:	cb70      	ldmia	r3!, {r4, r5, r6}
    49f0:	c270      	stmia	r2!, {r4, r5, r6}
    49f2:	230f      	movs	r3, #15
    49f4:	4019      	ands	r1, r3
    49f6:	2905      	cmp	r1, #5
    49f8:	d903      	bls.n	4a02 <pinmap_peripheral_sercom+0x22>
    49fa:	2001      	movs	r0, #1
    49fc:	4240      	negs	r0, r0
    49fe:	b006      	add	sp, #24
    4a00:	bd70      	pop	{r4, r5, r6, pc}
    4a02:	0089      	lsls	r1, r1, #2
    4a04:	5808      	ldr	r0, [r1, r0]
    4a06:	e7fa      	b.n	49fe <pinmap_peripheral_sercom+0x1e>
    4a08:	0000e140 	.word	0x0000e140

00004a0c <us_ticker_irq_handler_internal>:
    4a0c:	2203      	movs	r2, #3
    4a0e:	b508      	push	{r3, lr}
    4a10:	4b02      	ldr	r3, [pc, #8]	; (4a1c <us_ticker_irq_handler_internal+0x10>)
    4a12:	681b      	ldr	r3, [r3, #0]
    4a14:	739a      	strb	r2, [r3, #14]
    4a16:	f000 f985 	bl	4d24 <us_ticker_irq_handler>
    4a1a:	bd08      	pop	{r3, pc}
    4a1c:	20004460 	.word	0x20004460

00004a20 <us_ticker_init.part.5>:
    4a20:	b530      	push	{r4, r5, lr}
    4a22:	2501      	movs	r5, #1
    4a24:	4b35      	ldr	r3, [pc, #212]	; (4afc <us_ticker_init.part.5+0xdc>)
    4a26:	4c36      	ldr	r4, [pc, #216]	; (4b00 <us_ticker_init.part.5+0xe0>)
    4a28:	601d      	str	r5, [r3, #0]
    4a2a:	7823      	ldrb	r3, [r4, #0]
    4a2c:	b08f      	sub	sp, #60	; 0x3c
    4a2e:	2b00      	cmp	r3, #0
    4a30:	d05c      	beq.n	4aec <us_ticker_init.part.5+0xcc>
    4a32:	2300      	movs	r3, #0
    4a34:	2200      	movs	r2, #0
    4a36:	ac01      	add	r4, sp, #4
    4a38:	7422      	strb	r2, [r4, #16]
    4a3a:	6163      	str	r3, [r4, #20]
    4a3c:	61a3      	str	r3, [r4, #24]
    4a3e:	7722      	strb	r2, [r4, #28]
    4a40:	6223      	str	r3, [r4, #32]
    4a42:	6263      	str	r3, [r4, #36]	; 0x24
    4a44:	2000      	movs	r0, #0
    4a46:	7023      	strb	r3, [r4, #0]
    4a48:	70a3      	strb	r3, [r4, #2]
    4a4a:	80a3      	strh	r3, [r4, #4]
    4a4c:	71a2      	strb	r2, [r4, #6]
    4a4e:	8123      	strh	r3, [r4, #8]
    4a50:	7062      	strb	r2, [r4, #1]
    4a52:	72a2      	strb	r2, [r4, #10]
    4a54:	72e2      	strb	r2, [r4, #11]
    4a56:	7322      	strb	r2, [r4, #12]
    4a58:	73a2      	strb	r2, [r4, #14]
    4a5a:	7362      	strb	r2, [r4, #13]
    4a5c:	8523      	strh	r3, [r4, #40]	; 0x28
    4a5e:	8563      	strh	r3, [r4, #42]	; 0x2a
    4a60:	85a3      	strh	r3, [r4, #44]	; 0x2c
    4a62:	f7fe fe4d 	bl	3700 <system_gclk_gen_get_hz>
    4a66:	4927      	ldr	r1, [pc, #156]	; (4b04 <us_ticker_init.part.5+0xe4>)
    4a68:	f000 fbb2 	bl	51d0 <__aeabi_uidiv>
    4a6c:	2800      	cmp	r0, #0
    4a6e:	d032      	beq.n	4ad6 <us_ticker_init.part.5+0xb6>
    4a70:	2300      	movs	r3, #0
    4a72:	2801      	cmp	r0, #1
    4a74:	d007      	beq.n	4a86 <us_ticker_init.part.5+0x66>
    4a76:	0840      	lsrs	r0, r0, #1
    4a78:	3301      	adds	r3, #1
    4a7a:	2801      	cmp	r0, #1
    4a7c:	d022      	beq.n	4ac4 <us_ticker_init.part.5+0xa4>
    4a7e:	2b0b      	cmp	r3, #11
    4a80:	d1f9      	bne.n	4a76 <us_ticker_init.part.5+0x56>
    4a82:	23e0      	movs	r3, #224	; 0xe0
    4a84:	00db      	lsls	r3, r3, #3
    4a86:	80a3      	strh	r3, [r4, #4]
    4a88:	2308      	movs	r3, #8
    4a8a:	70a3      	strb	r3, [r4, #2]
    4a8c:	3b07      	subs	r3, #7
    4a8e:	7063      	strb	r3, [r4, #1]
    4a90:	2300      	movs	r3, #0
    4a92:	4d1d      	ldr	r5, [pc, #116]	; (4b08 <us_ticker_init.part.5+0xe8>)
    4a94:	62a3      	str	r3, [r4, #40]	; 0x28
    4a96:	491d      	ldr	r1, [pc, #116]	; (4b0c <us_ticker_init.part.5+0xec>)
    4a98:	3b01      	subs	r3, #1
    4a9a:	1c22      	adds	r2, r4, #0
    4a9c:	1c28      	adds	r0, r5, #0
    4a9e:	62e3      	str	r3, [r4, #44]	; 0x2c
    4aa0:	f000 f9d4 	bl	4e4c <tc_init>
    4aa4:	491a      	ldr	r1, [pc, #104]	; (4b10 <us_ticker_init.part.5+0xf0>)
    4aa6:	2202      	movs	r2, #2
    4aa8:	1c28      	adds	r0, r5, #0
    4aaa:	f000 f953 	bl	4d54 <tc_register_callback>
    4aae:	217f      	movs	r1, #127	; 0x7f
    4ab0:	682a      	ldr	r2, [r5, #0]
    4ab2:	7bd3      	ldrb	r3, [r2, #15]
    4ab4:	438b      	bics	r3, r1
    4ab6:	d1fc      	bne.n	4ab2 <us_ticker_init.part.5+0x92>
    4ab8:	8811      	ldrh	r1, [r2, #0]
    4aba:	3302      	adds	r3, #2
    4abc:	430b      	orrs	r3, r1
    4abe:	8013      	strh	r3, [r2, #0]
    4ac0:	b00f      	add	sp, #60	; 0x3c
    4ac2:	bd30      	pop	{r4, r5, pc}
    4ac4:	2b08      	cmp	r3, #8
    4ac6:	d8dc      	bhi.n	4a82 <us_ticker_init.part.5+0x62>
    4ac8:	2b06      	cmp	r3, #6
    4aca:	d813      	bhi.n	4af4 <us_ticker_init.part.5+0xd4>
    4acc:	2b04      	cmp	r3, #4
    4ace:	d908      	bls.n	4ae2 <us_ticker_init.part.5+0xc2>
    4ad0:	23a0      	movs	r3, #160	; 0xa0
    4ad2:	00db      	lsls	r3, r3, #3
    4ad4:	e7d7      	b.n	4a86 <us_ticker_init.part.5+0x66>
    4ad6:	480f      	ldr	r0, [pc, #60]	; (4b14 <us_ticker_init.part.5+0xf4>)
    4ad8:	490f      	ldr	r1, [pc, #60]	; (4b18 <us_ticker_init.part.5+0xf8>)
    4ada:	2257      	movs	r2, #87	; 0x57
    4adc:	f7ff fb18 	bl	4110 <mbed_assert_internal>
    4ae0:	2300      	movs	r3, #0
    4ae2:	22e0      	movs	r2, #224	; 0xe0
    4ae4:	021b      	lsls	r3, r3, #8
    4ae6:	00d2      	lsls	r2, r2, #3
    4ae8:	4013      	ands	r3, r2
    4aea:	e7cc      	b.n	4a86 <us_ticker_init.part.5+0x66>
    4aec:	f7fe fea4 	bl	3838 <system_init>
    4af0:	7025      	strb	r5, [r4, #0]
    4af2:	e79e      	b.n	4a32 <us_ticker_init.part.5+0x12>
    4af4:	23c0      	movs	r3, #192	; 0xc0
    4af6:	00db      	lsls	r3, r3, #3
    4af8:	e7c5      	b.n	4a86 <us_ticker_init.part.5+0x66>
    4afa:	46c0      	nop			; (mov r8, r8)
    4afc:	200043a4 	.word	0x200043a4
    4b00:	20004240 	.word	0x20004240
    4b04:	000f4240 	.word	0x000f4240
    4b08:	20004460 	.word	0x20004460
    4b0c:	42003000 	.word	0x42003000
    4b10:	00004a0d 	.word	0x00004a0d
    4b14:	0000e158 	.word	0x0000e158
    4b18:	0000e16c 	.word	0x0000e16c

00004b1c <us_ticker_init>:
    4b1c:	b508      	push	{r3, lr}
    4b1e:	4b03      	ldr	r3, [pc, #12]	; (4b2c <us_ticker_init+0x10>)
    4b20:	681b      	ldr	r3, [r3, #0]
    4b22:	2b00      	cmp	r3, #0
    4b24:	d101      	bne.n	4b2a <us_ticker_init+0xe>
    4b26:	f7ff ff7b 	bl	4a20 <us_ticker_init.part.5>
    4b2a:	bd08      	pop	{r3, pc}
    4b2c:	200043a4 	.word	0x200043a4

00004b30 <us_ticker_read>:
    4b30:	b508      	push	{r3, lr}
    4b32:	4b05      	ldr	r3, [pc, #20]	; (4b48 <us_ticker_read+0x18>)
    4b34:	681b      	ldr	r3, [r3, #0]
    4b36:	2b00      	cmp	r3, #0
    4b38:	d101      	bne.n	4b3e <us_ticker_read+0xe>
    4b3a:	f7ff ff71 	bl	4a20 <us_ticker_init.part.5>
    4b3e:	4803      	ldr	r0, [pc, #12]	; (4b4c <us_ticker_read+0x1c>)
    4b40:	f000 fad6 	bl	50f0 <tc_get_count_value>
    4b44:	bd08      	pop	{r3, pc}
    4b46:	46c0      	nop			; (mov r8, r8)
    4b48:	200043a4 	.word	0x200043a4
    4b4c:	20004460 	.word	0x20004460

00004b50 <us_ticker_set_interrupt>:
    4b50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4b52:	1c06      	adds	r6, r0, #0
    4b54:	f7ff ffec 	bl	4b30 <us_ticker_read>
    4b58:	1a30      	subs	r0, r6, r0
    4b5a:	d421      	bmi.n	4ba0 <us_ticker_set_interrupt+0x50>
    4b5c:	2780      	movs	r7, #128	; 0x80
    4b5e:	2380      	movs	r3, #128	; 0x80
    4b60:	4d11      	ldr	r5, [pc, #68]	; (4ba8 <us_ticker_set_interrupt+0x58>)
    4b62:	033f      	lsls	r7, r7, #12
    4b64:	50ef      	str	r7, [r5, r3]
    4b66:	4911      	ldr	r1, [pc, #68]	; (4bac <us_ticker_set_interrupt+0x5c>)
    4b68:	2013      	movs	r0, #19
    4b6a:	f7fd feed 	bl	2948 <NVIC_SetVector>
    4b6e:	4c10      	ldr	r4, [pc, #64]	; (4bb0 <us_ticker_set_interrupt+0x60>)
    4b70:	6820      	ldr	r0, [r4, #0]
    4b72:	f000 f94b 	bl	4e0c <_tc_get_inst_index>
    4b76:	221f      	movs	r2, #31
    4b78:	4b0e      	ldr	r3, [pc, #56]	; (4bb4 <us_ticker_set_interrupt+0x64>)
    4b7a:	2100      	movs	r1, #0
    4b7c:	5c1b      	ldrb	r3, [r3, r0]
    4b7e:	1c20      	adds	r0, r4, #0
    4b80:	4013      	ands	r3, r2
    4b82:	3a1e      	subs	r2, #30
    4b84:	409a      	lsls	r2, r3
    4b86:	2310      	movs	r3, #16
    4b88:	602a      	str	r2, [r5, #0]
    4b8a:	7e62      	ldrb	r2, [r4, #25]
    4b8c:	4313      	orrs	r3, r2
    4b8e:	7663      	strb	r3, [r4, #25]
    4b90:	2310      	movs	r3, #16
    4b92:	6822      	ldr	r2, [r4, #0]
    4b94:	7353      	strb	r3, [r2, #13]
    4b96:	1c32      	adds	r2, r6, #0
    4b98:	f000 fac0 	bl	511c <tc_set_compare_value>
    4b9c:	602f      	str	r7, [r5, #0]
    4b9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4ba0:	f000 f8c0 	bl	4d24 <us_ticker_irq_handler>
    4ba4:	e7fb      	b.n	4b9e <us_ticker_set_interrupt+0x4e>
    4ba6:	46c0      	nop			; (mov r8, r8)
    4ba8:	e000e100 	.word	0xe000e100
    4bac:	00004df5 	.word	0x00004df5
    4bb0:	20004460 	.word	0x20004460
    4bb4:	0000e1dc 	.word	0x0000e1dc

00004bb8 <us_ticker_disable_interrupt>:
    4bb8:	2110      	movs	r1, #16
    4bba:	4b06      	ldr	r3, [pc, #24]	; (4bd4 <us_ticker_disable_interrupt+0x1c>)
    4bbc:	681a      	ldr	r2, [r3, #0]
    4bbe:	7311      	strb	r1, [r2, #12]
    4bc0:	7e5a      	ldrb	r2, [r3, #25]
    4bc2:	438a      	bics	r2, r1
    4bc4:	2180      	movs	r1, #128	; 0x80
    4bc6:	765a      	strb	r2, [r3, #25]
    4bc8:	2380      	movs	r3, #128	; 0x80
    4bca:	4a03      	ldr	r2, [pc, #12]	; (4bd8 <us_ticker_disable_interrupt+0x20>)
    4bcc:	0309      	lsls	r1, r1, #12
    4bce:	50d1      	str	r1, [r2, r3]
    4bd0:	4770      	bx	lr
    4bd2:	46c0      	nop			; (mov r8, r8)
    4bd4:	20004460 	.word	0x20004460
    4bd8:	e000e100 	.word	0xe000e100

00004bdc <us_ticker_clear_interrupt>:
    4bdc:	2210      	movs	r2, #16
    4bde:	4b05      	ldr	r3, [pc, #20]	; (4bf4 <us_ticker_clear_interrupt+0x18>)
    4be0:	2180      	movs	r1, #128	; 0x80
    4be2:	681b      	ldr	r3, [r3, #0]
    4be4:	0309      	lsls	r1, r1, #12
    4be6:	739a      	strb	r2, [r3, #14]
    4be8:	731a      	strb	r2, [r3, #12]
    4bea:	23c0      	movs	r3, #192	; 0xc0
    4bec:	4a02      	ldr	r2, [pc, #8]	; (4bf8 <us_ticker_clear_interrupt+0x1c>)
    4bee:	005b      	lsls	r3, r3, #1
    4bf0:	50d1      	str	r1, [r2, r3]
    4bf2:	4770      	bx	lr
    4bf4:	20004460 	.word	0x20004460
    4bf8:	e000e100 	.word	0xe000e100

00004bfc <_ZN4mbed8FileBaseD1Ev>:
    4bfc:	4b0a      	ldr	r3, [pc, #40]	; (4c28 <_ZN4mbed8FileBaseD1Ev+0x2c>)
    4bfe:	3308      	adds	r3, #8
    4c00:	6003      	str	r3, [r0, #0]
    4c02:	6883      	ldr	r3, [r0, #8]
    4c04:	2b00      	cmp	r3, #0
    4c06:	d00a      	beq.n	4c1e <_ZN4mbed8FileBaseD1Ev+0x22>
    4c08:	4b08      	ldr	r3, [pc, #32]	; (4c2c <_ZN4mbed8FileBaseD1Ev+0x30>)
    4c0a:	681a      	ldr	r2, [r3, #0]
    4c0c:	4282      	cmp	r2, r0
    4c0e:	d101      	bne.n	4c14 <_ZN4mbed8FileBaseD1Ev+0x18>
    4c10:	e006      	b.n	4c20 <_ZN4mbed8FileBaseD1Ev+0x24>
    4c12:	1c1a      	adds	r2, r3, #0
    4c14:	6853      	ldr	r3, [r2, #4]
    4c16:	4283      	cmp	r3, r0
    4c18:	d1fb      	bne.n	4c12 <_ZN4mbed8FileBaseD1Ev+0x16>
    4c1a:	6843      	ldr	r3, [r0, #4]
    4c1c:	6053      	str	r3, [r2, #4]
    4c1e:	4770      	bx	lr
    4c20:	6842      	ldr	r2, [r0, #4]
    4c22:	601a      	str	r2, [r3, #0]
    4c24:	e7fb      	b.n	4c1e <_ZN4mbed8FileBaseD1Ev+0x22>
    4c26:	46c0      	nop			; (mov r8, r8)
    4c28:	0000e1e0 	.word	0x0000e1e0
    4c2c:	200043a8 	.word	0x200043a8

00004c30 <_ZN4mbed8FileBaseD0Ev>:
    4c30:	4b0d      	ldr	r3, [pc, #52]	; (4c68 <_ZN4mbed8FileBaseD0Ev+0x38>)
    4c32:	b510      	push	{r4, lr}
    4c34:	3308      	adds	r3, #8
    4c36:	6003      	str	r3, [r0, #0]
    4c38:	6883      	ldr	r3, [r0, #8]
    4c3a:	1c04      	adds	r4, r0, #0
    4c3c:	2b00      	cmp	r3, #0
    4c3e:	d00a      	beq.n	4c56 <_ZN4mbed8FileBaseD0Ev+0x26>
    4c40:	4b0a      	ldr	r3, [pc, #40]	; (4c6c <_ZN4mbed8FileBaseD0Ev+0x3c>)
    4c42:	681a      	ldr	r2, [r3, #0]
    4c44:	4290      	cmp	r0, r2
    4c46:	d101      	bne.n	4c4c <_ZN4mbed8FileBaseD0Ev+0x1c>
    4c48:	e00a      	b.n	4c60 <_ZN4mbed8FileBaseD0Ev+0x30>
    4c4a:	1c1a      	adds	r2, r3, #0
    4c4c:	6853      	ldr	r3, [r2, #4]
    4c4e:	429c      	cmp	r4, r3
    4c50:	d1fb      	bne.n	4c4a <_ZN4mbed8FileBaseD0Ev+0x1a>
    4c52:	6863      	ldr	r3, [r4, #4]
    4c54:	6053      	str	r3, [r2, #4]
    4c56:	1c20      	adds	r0, r4, #0
    4c58:	f000 fab5 	bl	51c6 <_ZdlPv>
    4c5c:	1c20      	adds	r0, r4, #0
    4c5e:	bd10      	pop	{r4, pc}
    4c60:	6842      	ldr	r2, [r0, #4]
    4c62:	601a      	str	r2, [r3, #0]
    4c64:	e7f7      	b.n	4c56 <_ZN4mbed8FileBaseD0Ev+0x26>
    4c66:	46c0      	nop			; (mov r8, r8)
    4c68:	0000e1e0 	.word	0x0000e1e0
    4c6c:	200043a8 	.word	0x200043a8

00004c70 <_ZN4mbed8FileBaseC1EPKcNS_8PathTypeE>:
    4c70:	4b06      	ldr	r3, [pc, #24]	; (4c8c <_ZN4mbed8FileBaseC1EPKcNS_8PathTypeE+0x1c>)
    4c72:	6081      	str	r1, [r0, #8]
    4c74:	3308      	adds	r3, #8
    4c76:	6003      	str	r3, [r0, #0]
    4c78:	2300      	movs	r3, #0
    4c7a:	7302      	strb	r2, [r0, #12]
    4c7c:	6043      	str	r3, [r0, #4]
    4c7e:	2900      	cmp	r1, #0
    4c80:	d003      	beq.n	4c8a <_ZN4mbed8FileBaseC1EPKcNS_8PathTypeE+0x1a>
    4c82:	4b03      	ldr	r3, [pc, #12]	; (4c90 <_ZN4mbed8FileBaseC1EPKcNS_8PathTypeE+0x20>)
    4c84:	681a      	ldr	r2, [r3, #0]
    4c86:	6018      	str	r0, [r3, #0]
    4c88:	6042      	str	r2, [r0, #4]
    4c8a:	4770      	bx	lr
    4c8c:	0000e1e0 	.word	0x0000e1e0
    4c90:	200043a8 	.word	0x200043a8

00004c94 <_ZN4mbed8FileBase6lookupEPKcj>:
    4c94:	4b0e      	ldr	r3, [pc, #56]	; (4cd0 <_ZN4mbed8FileBase6lookupEPKcj+0x3c>)
    4c96:	b570      	push	{r4, r5, r6, lr}
    4c98:	681c      	ldr	r4, [r3, #0]
    4c9a:	1c06      	adds	r6, r0, #0
    4c9c:	1c0d      	adds	r5, r1, #0
    4c9e:	2c00      	cmp	r4, #0
    4ca0:	d103      	bne.n	4caa <_ZN4mbed8FileBase6lookupEPKcj+0x16>
    4ca2:	e012      	b.n	4cca <_ZN4mbed8FileBase6lookupEPKcj+0x36>
    4ca4:	6864      	ldr	r4, [r4, #4]
    4ca6:	2c00      	cmp	r4, #0
    4ca8:	d00f      	beq.n	4cca <_ZN4mbed8FileBase6lookupEPKcj+0x36>
    4caa:	68a0      	ldr	r0, [r4, #8]
    4cac:	2800      	cmp	r0, #0
    4cae:	d0f9      	beq.n	4ca4 <_ZN4mbed8FileBase6lookupEPKcj+0x10>
    4cb0:	1c31      	adds	r1, r6, #0
    4cb2:	1c2a      	adds	r2, r5, #0
    4cb4:	f005 fa3f 	bl	a136 <strncmp>
    4cb8:	2800      	cmp	r0, #0
    4cba:	d1f3      	bne.n	4ca4 <_ZN4mbed8FileBase6lookupEPKcj+0x10>
    4cbc:	68a0      	ldr	r0, [r4, #8]
    4cbe:	f005 fa33 	bl	a128 <strlen>
    4cc2:	42a8      	cmp	r0, r5
    4cc4:	d1ee      	bne.n	4ca4 <_ZN4mbed8FileBase6lookupEPKcj+0x10>
    4cc6:	1c20      	adds	r0, r4, #0
    4cc8:	e000      	b.n	4ccc <_ZN4mbed8FileBase6lookupEPKcj+0x38>
    4cca:	2000      	movs	r0, #0
    4ccc:	bd70      	pop	{r4, r5, r6, pc}
    4cce:	46c0      	nop			; (mov r8, r8)
    4cd0:	200043a8 	.word	0x200043a8

00004cd4 <_ZN4mbed8FileBase11getPathTypeEv>:
    4cd4:	7b00      	ldrb	r0, [r0, #12]
    4cd6:	4770      	bx	lr

00004cd8 <_ZN4mbed8FileLikeC1EPKc>:
    4cd8:	4b07      	ldr	r3, [pc, #28]	; (4cf8 <_ZN4mbed8FileLikeC1EPKc+0x20>)
    4cda:	b510      	push	{r4, lr}
    4cdc:	2200      	movs	r2, #0
    4cde:	1c04      	adds	r4, r0, #0
    4ce0:	c008      	stmia	r0!, {r3}
    4ce2:	f7ff ffc5 	bl	4c70 <_ZN4mbed8FileBaseC1EPKcNS_8PathTypeE>
    4ce6:	4b05      	ldr	r3, [pc, #20]	; (4cfc <_ZN4mbed8FileLikeC1EPKc+0x24>)
    4ce8:	1c20      	adds	r0, r4, #0
    4cea:	1c1a      	adds	r2, r3, #0
    4cec:	3334      	adds	r3, #52	; 0x34
    4cee:	3208      	adds	r2, #8
    4cf0:	6022      	str	r2, [r4, #0]
    4cf2:	6063      	str	r3, [r4, #4]
    4cf4:	bd10      	pop	{r4, pc}
    4cf6:	46c0      	nop			; (mov r8, r8)
    4cf8:	0000d9a0 	.word	0x0000d9a0
    4cfc:	0000e1f0 	.word	0x0000e1f0

00004d00 <_ZN4mbed8FileLikeD1Ev>:
    4d00:	4b07      	ldr	r3, [pc, #28]	; (4d20 <_ZN4mbed8FileLikeD1Ev+0x20>)
    4d02:	b510      	push	{r4, lr}
    4d04:	1c1a      	adds	r2, r3, #0
    4d06:	1c04      	adds	r4, r0, #0
    4d08:	3208      	adds	r2, #8
    4d0a:	3334      	adds	r3, #52	; 0x34
    4d0c:	6002      	str	r2, [r0, #0]
    4d0e:	6043      	str	r3, [r0, #4]
    4d10:	3004      	adds	r0, #4
    4d12:	f7ff ff73 	bl	4bfc <_ZN4mbed8FileBaseD1Ev>
    4d16:	1c20      	adds	r0, r4, #0
    4d18:	f7fd fe60 	bl	29dc <_ZN4mbed10FileHandleD1Ev>
    4d1c:	1c20      	adds	r0, r4, #0
    4d1e:	bd10      	pop	{r4, pc}
    4d20:	0000e1f0 	.word	0x0000e1f0

00004d24 <us_ticker_irq_handler>:
    4d24:	b508      	push	{r3, lr}
    4d26:	4802      	ldr	r0, [pc, #8]	; (4d30 <us_ticker_irq_handler+0xc>)
    4d28:	f000 fa20 	bl	516c <ticker_irq_handler>
    4d2c:	bd08      	pop	{r3, pc}
    4d2e:	46c0      	nop			; (mov r8, r8)
    4d30:	0000e240 	.word	0x0000e240

00004d34 <port_pin_set_config>:
    4d34:	2280      	movs	r2, #128	; 0x80
    4d36:	b500      	push	{lr}
    4d38:	b083      	sub	sp, #12
    4d3a:	ab01      	add	r3, sp, #4
    4d3c:	701a      	strb	r2, [r3, #0]
    4d3e:	780a      	ldrb	r2, [r1, #0]
    4d40:	705a      	strb	r2, [r3, #1]
    4d42:	784a      	ldrb	r2, [r1, #1]
    4d44:	709a      	strb	r2, [r3, #2]
    4d46:	788a      	ldrb	r2, [r1, #2]
    4d48:	1c19      	adds	r1, r3, #0
    4d4a:	70da      	strb	r2, [r3, #3]
    4d4c:	f7fe fc48 	bl	35e0 <system_pinmux_pin_set_config>
    4d50:	b003      	add	sp, #12
    4d52:	bd00      	pop	{pc}

00004d54 <tc_register_callback>:
    4d54:	1c93      	adds	r3, r2, #2
    4d56:	009b      	lsls	r3, r3, #2
    4d58:	5019      	str	r1, [r3, r0]
    4d5a:	2a02      	cmp	r2, #2
    4d5c:	d009      	beq.n	4d72 <tc_register_callback+0x1e>
    4d5e:	2a03      	cmp	r2, #3
    4d60:	d00c      	beq.n	4d7c <tc_register_callback+0x28>
    4d62:	2301      	movs	r3, #1
    4d64:	4093      	lsls	r3, r2
    4d66:	1c1a      	adds	r2, r3, #0
    4d68:	7e03      	ldrb	r3, [r0, #24]
    4d6a:	431a      	orrs	r2, r3
    4d6c:	7602      	strb	r2, [r0, #24]
    4d6e:	2000      	movs	r0, #0
    4d70:	4770      	bx	lr
    4d72:	2310      	movs	r3, #16
    4d74:	7e02      	ldrb	r2, [r0, #24]
    4d76:	4313      	orrs	r3, r2
    4d78:	7603      	strb	r3, [r0, #24]
    4d7a:	e7f8      	b.n	4d6e <tc_register_callback+0x1a>
    4d7c:	2320      	movs	r3, #32
    4d7e:	7e02      	ldrb	r2, [r0, #24]
    4d80:	4313      	orrs	r3, r2
    4d82:	7603      	strb	r3, [r0, #24]
    4d84:	e7f3      	b.n	4d6e <tc_register_callback+0x1a>
    4d86:	46c0      	nop			; (mov r8, r8)

00004d88 <_tc_interrupt_handler>:
    4d88:	b570      	push	{r4, r5, r6, lr}
    4d8a:	2601      	movs	r6, #1
    4d8c:	4b15      	ldr	r3, [pc, #84]	; (4de4 <_tc_interrupt_handler+0x5c>)
    4d8e:	0080      	lsls	r0, r0, #2
    4d90:	58c5      	ldr	r5, [r0, r3]
    4d92:	682b      	ldr	r3, [r5, #0]
    4d94:	7e2c      	ldrb	r4, [r5, #24]
    4d96:	7b9b      	ldrb	r3, [r3, #14]
    4d98:	401c      	ands	r4, r3
    4d9a:	7e6b      	ldrb	r3, [r5, #25]
    4d9c:	401c      	ands	r4, r3
    4d9e:	4226      	tst	r6, r4
    4da0:	d11a      	bne.n	4dd8 <_tc_interrupt_handler+0x50>
    4da2:	2602      	movs	r6, #2
    4da4:	4226      	tst	r6, r4
    4da6:	d111      	bne.n	4dcc <_tc_interrupt_handler+0x44>
    4da8:	2610      	movs	r6, #16
    4daa:	4226      	tst	r6, r4
    4dac:	d108      	bne.n	4dc0 <_tc_interrupt_handler+0x38>
    4dae:	2620      	movs	r6, #32
    4db0:	4226      	tst	r6, r4
    4db2:	d004      	beq.n	4dbe <_tc_interrupt_handler+0x36>
    4db4:	696b      	ldr	r3, [r5, #20]
    4db6:	1c28      	adds	r0, r5, #0
    4db8:	4798      	blx	r3
    4dba:	682b      	ldr	r3, [r5, #0]
    4dbc:	739e      	strb	r6, [r3, #14]
    4dbe:	bd70      	pop	{r4, r5, r6, pc}
    4dc0:	692b      	ldr	r3, [r5, #16]
    4dc2:	1c28      	adds	r0, r5, #0
    4dc4:	4798      	blx	r3
    4dc6:	682b      	ldr	r3, [r5, #0]
    4dc8:	739e      	strb	r6, [r3, #14]
    4dca:	e7f0      	b.n	4dae <_tc_interrupt_handler+0x26>
    4dcc:	68eb      	ldr	r3, [r5, #12]
    4dce:	1c28      	adds	r0, r5, #0
    4dd0:	4798      	blx	r3
    4dd2:	682b      	ldr	r3, [r5, #0]
    4dd4:	739e      	strb	r6, [r3, #14]
    4dd6:	e7e7      	b.n	4da8 <_tc_interrupt_handler+0x20>
    4dd8:	68ab      	ldr	r3, [r5, #8]
    4dda:	1c28      	adds	r0, r5, #0
    4ddc:	4798      	blx	r3
    4dde:	682b      	ldr	r3, [r5, #0]
    4de0:	739e      	strb	r6, [r3, #14]
    4de2:	e7de      	b.n	4da2 <_tc_interrupt_handler+0x1a>
    4de4:	2000447c 	.word	0x2000447c

00004de8 <TC3_Handler>:
    4de8:	b508      	push	{r3, lr}
    4dea:	2000      	movs	r0, #0
    4dec:	f7ff ffcc 	bl	4d88 <_tc_interrupt_handler>
    4df0:	bd08      	pop	{r3, pc}
    4df2:	46c0      	nop			; (mov r8, r8)

00004df4 <TC4_Handler>:
    4df4:	b508      	push	{r3, lr}
    4df6:	2001      	movs	r0, #1
    4df8:	f7ff ffc6 	bl	4d88 <_tc_interrupt_handler>
    4dfc:	bd08      	pop	{r3, pc}
    4dfe:	46c0      	nop			; (mov r8, r8)

00004e00 <TC5_Handler>:
    4e00:	b508      	push	{r3, lr}
    4e02:	2002      	movs	r0, #2
    4e04:	f7ff ffc0 	bl	4d88 <_tc_interrupt_handler>
    4e08:	bd08      	pop	{r3, pc}
    4e0a:	46c0      	nop			; (mov r8, r8)

00004e0c <_tc_get_inst_index>:
    4e0c:	4b0e      	ldr	r3, [pc, #56]	; (4e48 <_tc_get_inst_index+0x3c>)
    4e0e:	1c01      	adds	r1, r0, #0
    4e10:	1c18      	adds	r0, r3, #0
    4e12:	b570      	push	{r4, r5, r6, lr}
    4e14:	b084      	sub	sp, #16
    4e16:	aa01      	add	r2, sp, #4
    4e18:	c870      	ldmia	r0!, {r4, r5, r6}
    4e1a:	c270      	stmia	r2!, {r4, r5, r6}
    4e1c:	9a01      	ldr	r2, [sp, #4]
    4e1e:	428a      	cmp	r2, r1
    4e20:	d008      	beq.n	4e34 <_tc_get_inst_index+0x28>
    4e22:	685a      	ldr	r2, [r3, #4]
    4e24:	428a      	cmp	r2, r1
    4e26:	d008      	beq.n	4e3a <_tc_get_inst_index+0x2e>
    4e28:	689b      	ldr	r3, [r3, #8]
    4e2a:	2000      	movs	r0, #0
    4e2c:	428b      	cmp	r3, r1
    4e2e:	d007      	beq.n	4e40 <_tc_get_inst_index+0x34>
    4e30:	b004      	add	sp, #16
    4e32:	bd70      	pop	{r4, r5, r6, pc}
    4e34:	2000      	movs	r0, #0
    4e36:	b2c0      	uxtb	r0, r0
    4e38:	e7fa      	b.n	4e30 <_tc_get_inst_index+0x24>
    4e3a:	2001      	movs	r0, #1
    4e3c:	b2c0      	uxtb	r0, r0
    4e3e:	e7f7      	b.n	4e30 <_tc_get_inst_index+0x24>
    4e40:	3002      	adds	r0, #2
    4e42:	b2c0      	uxtb	r0, r0
    4e44:	e7f4      	b.n	4e30 <_tc_get_inst_index+0x24>
    4e46:	46c0      	nop			; (mov r8, r8)
    4e48:	0000e248 	.word	0x0000e248

00004e4c <tc_init>:
    4e4c:	b5f0      	push	{r4, r5, r6, r7, lr}
    4e4e:	4657      	mov	r7, sl
    4e50:	464e      	mov	r6, r9
    4e52:	4645      	mov	r5, r8
    4e54:	4ca3      	ldr	r4, [pc, #652]	; (50e4 <tc_init+0x298>)
    4e56:	4691      	mov	r9, r2
    4e58:	1c22      	adds	r2, r4, #0
    4e5a:	b4e0      	push	{r5, r6, r7}
    4e5c:	b086      	sub	sp, #24
    4e5e:	ab03      	add	r3, sp, #12
    4e60:	1c05      	adds	r5, r0, #0
    4e62:	1c0e      	adds	r6, r1, #0
    4e64:	469a      	mov	sl, r3
    4e66:	ca83      	ldmia	r2!, {r0, r1, r7}
    4e68:	c383      	stmia	r3!, {r0, r1, r7}
    4e6a:	9b03      	ldr	r3, [sp, #12]
    4e6c:	429e      	cmp	r6, r3
    4e6e:	d100      	bne.n	4e72 <tc_init+0x26>
    4e70:	e10c      	b.n	508c <tc_init+0x240>
    4e72:	6863      	ldr	r3, [r4, #4]
    4e74:	429e      	cmp	r6, r3
    4e76:	d100      	bne.n	4e7a <tc_init+0x2e>
    4e78:	e10b      	b.n	5092 <tc_init+0x246>
    4e7a:	2300      	movs	r3, #0
    4e7c:	4698      	mov	r8, r3
    4e7e:	68a3      	ldr	r3, [r4, #8]
    4e80:	429e      	cmp	r6, r3
    4e82:	d100      	bne.n	4e86 <tc_init+0x3a>
    4e84:	e108      	b.n	5098 <tc_init+0x24c>
    4e86:	1c21      	adds	r1, r4, #0
    4e88:	2203      	movs	r2, #3
    4e8a:	310c      	adds	r1, #12
    4e8c:	a801      	add	r0, sp, #4
    4e8e:	f003 fd7e 	bl	898e <memcpy>
    4e92:	1c21      	adds	r1, r4, #0
    4e94:	2206      	movs	r2, #6
    4e96:	3110      	adds	r1, #16
    4e98:	4650      	mov	r0, sl
    4e9a:	f003 fd78 	bl	898e <memcpy>
    4e9e:	2300      	movs	r3, #0
    4ea0:	60ab      	str	r3, [r5, #8]
    4ea2:	60eb      	str	r3, [r5, #12]
    4ea4:	612b      	str	r3, [r5, #16]
    4ea6:	616b      	str	r3, [r5, #20]
    4ea8:	762b      	strb	r3, [r5, #24]
    4eaa:	766b      	strb	r3, [r5, #25]
    4eac:	4643      	mov	r3, r8
    4eae:	4a8e      	ldr	r2, [pc, #568]	; (50e8 <tc_init+0x29c>)
    4eb0:	009b      	lsls	r3, r3, #2
    4eb2:	509d      	str	r5, [r3, r2]
    4eb4:	464b      	mov	r3, r9
    4eb6:	602e      	str	r6, [r5, #0]
    4eb8:	789b      	ldrb	r3, [r3, #2]
    4eba:	2b08      	cmp	r3, #8
    4ebc:	d00b      	beq.n	4ed6 <tc_init+0x8a>
    4ebe:	712b      	strb	r3, [r5, #4]
    4ec0:	8833      	ldrh	r3, [r6, #0]
    4ec2:	2201      	movs	r2, #1
    4ec4:	2005      	movs	r0, #5
    4ec6:	07db      	lsls	r3, r3, #31
    4ec8:	d50a      	bpl.n	4ee0 <tc_init+0x94>
    4eca:	b006      	add	sp, #24
    4ecc:	bc1c      	pop	{r2, r3, r4}
    4ece:	4690      	mov	r8, r2
    4ed0:	4699      	mov	r9, r3
    4ed2:	46a2      	mov	sl, r4
    4ed4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4ed6:	4642      	mov	r2, r8
    4ed8:	2017      	movs	r0, #23
    4eda:	07d2      	lsls	r2, r2, #31
    4edc:	d5f5      	bpl.n	4eca <tc_init+0x7e>
    4ede:	e7ee      	b.n	4ebe <tc_init+0x72>
    4ee0:	7bf3      	ldrb	r3, [r6, #15]
    4ee2:	3017      	adds	r0, #23
    4ee4:	06db      	lsls	r3, r3, #27
    4ee6:	d4f0      	bmi.n	4eca <tc_init+0x7e>
    4ee8:	2102      	movs	r1, #2
    4eea:	8833      	ldrh	r3, [r6, #0]
    4eec:	400b      	ands	r3, r1
    4eee:	d1ec      	bne.n	4eca <tc_init+0x7e>
    4ef0:	4649      	mov	r1, r9
    4ef2:	7c09      	ldrb	r1, [r1, #16]
    4ef4:	2900      	cmp	r1, #0
    4ef6:	d000      	beq.n	4efa <tc_init+0xae>
    4ef8:	e0d1      	b.n	509e <tc_init+0x252>
    4efa:	464b      	mov	r3, r9
    4efc:	7f1b      	ldrb	r3, [r3, #28]
    4efe:	2b00      	cmp	r3, #0
    4f00:	d000      	beq.n	4f04 <tc_init+0xb8>
    4f02:	e0d8      	b.n	50b6 <tc_init+0x26a>
    4f04:	4641      	mov	r1, r8
    4f06:	4650      	mov	r0, sl
    4f08:	4a78      	ldr	r2, [pc, #480]	; (50ec <tc_init+0x2a0>)
    4f0a:	0049      	lsls	r1, r1, #1
    4f0c:	6a13      	ldr	r3, [r2, #32]
    4f0e:	5a41      	ldrh	r1, [r0, r1]
    4f10:	430b      	orrs	r3, r1
    4f12:	6213      	str	r3, [r2, #32]
    4f14:	464b      	mov	r3, r9
    4f16:	789b      	ldrb	r3, [r3, #2]
    4f18:	2b08      	cmp	r3, #8
    4f1a:	d100      	bne.n	4f1e <tc_init+0xd2>
    4f1c:	e0da      	b.n	50d4 <tc_init+0x288>
    4f1e:	464b      	mov	r3, r9
    4f20:	466a      	mov	r2, sp
    4f22:	781b      	ldrb	r3, [r3, #0]
    4f24:	4669      	mov	r1, sp
    4f26:	7013      	strb	r3, [r2, #0]
    4f28:	466b      	mov	r3, sp
    4f2a:	4642      	mov	r2, r8
    4f2c:	3304      	adds	r3, #4
    4f2e:	5c9c      	ldrb	r4, [r3, r2]
    4f30:	1c20      	adds	r0, r4, #0
    4f32:	f7fe fc5f 	bl	37f4 <system_gclk_chan_set_config>
    4f36:	1c20      	adds	r0, r4, #0
    4f38:	f7fe fc1e 	bl	3778 <system_gclk_chan_enable>
    4f3c:	464b      	mov	r3, r9
    4f3e:	464a      	mov	r2, r9
    4f40:	8898      	ldrh	r0, [r3, #4]
    4f42:	891b      	ldrh	r3, [r3, #8]
    4f44:	4303      	orrs	r3, r0
    4f46:	7990      	ldrb	r0, [r2, #6]
    4f48:	7892      	ldrb	r2, [r2, #2]
    4f4a:	4310      	orrs	r0, r2
    4f4c:	4318      	orrs	r0, r3
    4f4e:	464b      	mov	r3, r9
    4f50:	785b      	ldrb	r3, [r3, #1]
    4f52:	2b00      	cmp	r3, #0
    4f54:	d002      	beq.n	4f5c <tc_init+0x110>
    4f56:	2380      	movs	r3, #128	; 0x80
    4f58:	011b      	lsls	r3, r3, #4
    4f5a:	4318      	orrs	r0, r3
    4f5c:	227f      	movs	r2, #127	; 0x7f
    4f5e:	6829      	ldr	r1, [r5, #0]
    4f60:	7bcb      	ldrb	r3, [r1, #15]
    4f62:	4393      	bics	r3, r2
    4f64:	d1fc      	bne.n	4f60 <tc_init+0x114>
    4f66:	464b      	mov	r3, r9
    4f68:	8030      	strh	r0, [r6, #0]
    4f6a:	7b58      	ldrb	r0, [r3, #13]
    4f6c:	1e43      	subs	r3, r0, #1
    4f6e:	4198      	sbcs	r0, r3
    4f70:	464b      	mov	r3, r9
    4f72:	7b9b      	ldrb	r3, [r3, #14]
    4f74:	0080      	lsls	r0, r0, #2
    4f76:	2b00      	cmp	r3, #0
    4f78:	d001      	beq.n	4f7e <tc_init+0x132>
    4f7a:	2301      	movs	r3, #1
    4f7c:	4318      	orrs	r0, r3
    4f7e:	227f      	movs	r2, #127	; 0x7f
    4f80:	6829      	ldr	r1, [r5, #0]
    4f82:	7bcb      	ldrb	r3, [r1, #15]
    4f84:	4393      	bics	r3, r2
    4f86:	d1fc      	bne.n	4f82 <tc_init+0x136>
    4f88:	33ff      	adds	r3, #255	; 0xff
    4f8a:	7133      	strb	r3, [r6, #4]
    4f8c:	2800      	cmp	r0, #0
    4f8e:	d005      	beq.n	4f9c <tc_init+0x150>
    4f90:	227f      	movs	r2, #127	; 0x7f
    4f92:	6829      	ldr	r1, [r5, #0]
    4f94:	7bcb      	ldrb	r3, [r1, #15]
    4f96:	4393      	bics	r3, r2
    4f98:	d1fc      	bne.n	4f94 <tc_init+0x148>
    4f9a:	7170      	strb	r0, [r6, #5]
    4f9c:	464b      	mov	r3, r9
    4f9e:	7a98      	ldrb	r0, [r3, #10]
    4fa0:	7adb      	ldrb	r3, [r3, #11]
    4fa2:	2b00      	cmp	r3, #0
    4fa4:	d001      	beq.n	4faa <tc_init+0x15e>
    4fa6:	2310      	movs	r3, #16
    4fa8:	4318      	orrs	r0, r3
    4faa:	464b      	mov	r3, r9
    4fac:	7b1b      	ldrb	r3, [r3, #12]
    4fae:	2b00      	cmp	r3, #0
    4fb0:	d001      	beq.n	4fb6 <tc_init+0x16a>
    4fb2:	2320      	movs	r3, #32
    4fb4:	4318      	orrs	r0, r3
    4fb6:	227f      	movs	r2, #127	; 0x7f
    4fb8:	6829      	ldr	r1, [r5, #0]
    4fba:	7bcb      	ldrb	r3, [r1, #15]
    4fbc:	4393      	bics	r3, r2
    4fbe:	d1fc      	bne.n	4fba <tc_init+0x16e>
    4fc0:	217f      	movs	r1, #127	; 0x7f
    4fc2:	71b0      	strb	r0, [r6, #6]
    4fc4:	682a      	ldr	r2, [r5, #0]
    4fc6:	7bd3      	ldrb	r3, [r2, #15]
    4fc8:	438b      	bics	r3, r1
    4fca:	d1fc      	bne.n	4fc6 <tc_init+0x17a>
    4fcc:	792b      	ldrb	r3, [r5, #4]
    4fce:	217f      	movs	r1, #127	; 0x7f
    4fd0:	2b04      	cmp	r3, #4
    4fd2:	d007      	beq.n	4fe4 <tc_init+0x198>
    4fd4:	217f      	movs	r1, #127	; 0x7f
    4fd6:	2b08      	cmp	r3, #8
    4fd8:	d040      	beq.n	505c <tc_init+0x210>
    4fda:	217f      	movs	r1, #127	; 0x7f
    4fdc:	2b00      	cmp	r3, #0
    4fde:	d025      	beq.n	502c <tc_init+0x1e0>
    4fe0:	2017      	movs	r0, #23
    4fe2:	e772      	b.n	4eca <tc_init+0x7e>
    4fe4:	7bd3      	ldrb	r3, [r2, #15]
    4fe6:	438b      	bics	r3, r1
    4fe8:	d1fc      	bne.n	4fe4 <tc_init+0x198>
    4fea:	464a      	mov	r2, r9
    4fec:	3328      	adds	r3, #40	; 0x28
    4fee:	5cd3      	ldrb	r3, [r2, r3]
    4ff0:	227f      	movs	r2, #127	; 0x7f
    4ff2:	7433      	strb	r3, [r6, #16]
    4ff4:	6829      	ldr	r1, [r5, #0]
    4ff6:	7bcb      	ldrb	r3, [r1, #15]
    4ff8:	4393      	bics	r3, r2
    4ffa:	d1fc      	bne.n	4ff6 <tc_init+0x1aa>
    4ffc:	464a      	mov	r2, r9
    4ffe:	3329      	adds	r3, #41	; 0x29
    5000:	5cd3      	ldrb	r3, [r2, r3]
    5002:	227f      	movs	r2, #127	; 0x7f
    5004:	7533      	strb	r3, [r6, #20]
    5006:	6829      	ldr	r1, [r5, #0]
    5008:	7bcb      	ldrb	r3, [r1, #15]
    500a:	4393      	bics	r3, r2
    500c:	d1fc      	bne.n	5008 <tc_init+0x1bc>
    500e:	464a      	mov	r2, r9
    5010:	332a      	adds	r3, #42	; 0x2a
    5012:	5cd3      	ldrb	r3, [r2, r3]
    5014:	227f      	movs	r2, #127	; 0x7f
    5016:	7633      	strb	r3, [r6, #24]
    5018:	6829      	ldr	r1, [r5, #0]
    501a:	7bcb      	ldrb	r3, [r1, #15]
    501c:	4393      	bics	r3, r2
    501e:	d1fc      	bne.n	501a <tc_init+0x1ce>
    5020:	464a      	mov	r2, r9
    5022:	332b      	adds	r3, #43	; 0x2b
    5024:	5cd3      	ldrb	r3, [r2, r3]
    5026:	2000      	movs	r0, #0
    5028:	7673      	strb	r3, [r6, #25]
    502a:	e74e      	b.n	4eca <tc_init+0x7e>
    502c:	7bd3      	ldrb	r3, [r2, #15]
    502e:	438b      	bics	r3, r1
    5030:	d1fc      	bne.n	502c <tc_init+0x1e0>
    5032:	464b      	mov	r3, r9
    5034:	227f      	movs	r2, #127	; 0x7f
    5036:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
    5038:	8233      	strh	r3, [r6, #16]
    503a:	6829      	ldr	r1, [r5, #0]
    503c:	7bcb      	ldrb	r3, [r1, #15]
    503e:	4393      	bics	r3, r2
    5040:	d1fc      	bne.n	503c <tc_init+0x1f0>
    5042:	464b      	mov	r3, r9
    5044:	227f      	movs	r2, #127	; 0x7f
    5046:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
    5048:	8333      	strh	r3, [r6, #24]
    504a:	6829      	ldr	r1, [r5, #0]
    504c:	7bcb      	ldrb	r3, [r1, #15]
    504e:	4393      	bics	r3, r2
    5050:	d1fc      	bne.n	504c <tc_init+0x200>
    5052:	464b      	mov	r3, r9
    5054:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
    5056:	2000      	movs	r0, #0
    5058:	8373      	strh	r3, [r6, #26]
    505a:	e736      	b.n	4eca <tc_init+0x7e>
    505c:	7bd3      	ldrb	r3, [r2, #15]
    505e:	438b      	bics	r3, r1
    5060:	d1fc      	bne.n	505c <tc_init+0x210>
    5062:	464b      	mov	r3, r9
    5064:	227f      	movs	r2, #127	; 0x7f
    5066:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    5068:	6133      	str	r3, [r6, #16]
    506a:	6829      	ldr	r1, [r5, #0]
    506c:	7bcb      	ldrb	r3, [r1, #15]
    506e:	4393      	bics	r3, r2
    5070:	d1fc      	bne.n	506c <tc_init+0x220>
    5072:	464b      	mov	r3, r9
    5074:	227f      	movs	r2, #127	; 0x7f
    5076:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    5078:	61b3      	str	r3, [r6, #24]
    507a:	6829      	ldr	r1, [r5, #0]
    507c:	7bcb      	ldrb	r3, [r1, #15]
    507e:	4393      	bics	r3, r2
    5080:	d1fc      	bne.n	507c <tc_init+0x230>
    5082:	464b      	mov	r3, r9
    5084:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    5086:	2000      	movs	r0, #0
    5088:	61f3      	str	r3, [r6, #28]
    508a:	e71e      	b.n	4eca <tc_init+0x7e>
    508c:	2300      	movs	r3, #0
    508e:	4698      	mov	r8, r3
    5090:	e6f9      	b.n	4e86 <tc_init+0x3a>
    5092:	2301      	movs	r3, #1
    5094:	4698      	mov	r8, r3
    5096:	e6f6      	b.n	4e86 <tc_init+0x3a>
    5098:	2302      	movs	r3, #2
    509a:	4698      	mov	r8, r3
    509c:	e6f3      	b.n	4e86 <tc_init+0x3a>
    509e:	a902      	add	r1, sp, #8
    50a0:	70cb      	strb	r3, [r1, #3]
    50a2:	464b      	mov	r3, r9
    50a4:	7e1b      	ldrb	r3, [r3, #24]
    50a6:	708a      	strb	r2, [r1, #2]
    50a8:	700b      	strb	r3, [r1, #0]
    50aa:	464b      	mov	r3, r9
    50ac:	7d18      	ldrb	r0, [r3, #20]
    50ae:	704a      	strb	r2, [r1, #1]
    50b0:	f7fe fa96 	bl	35e0 <system_pinmux_pin_set_config>
    50b4:	e721      	b.n	4efa <tc_init+0xae>
    50b6:	2301      	movs	r3, #1
    50b8:	2200      	movs	r2, #0
    50ba:	a902      	add	r1, sp, #8
    50bc:	708b      	strb	r3, [r1, #2]
    50be:	704b      	strb	r3, [r1, #1]
    50c0:	464b      	mov	r3, r9
    50c2:	70ca      	strb	r2, [r1, #3]
    50c4:	464a      	mov	r2, r9
    50c6:	6a1b      	ldr	r3, [r3, #32]
    50c8:	6a52      	ldr	r2, [r2, #36]	; 0x24
    50ca:	b2d8      	uxtb	r0, r3
    50cc:	700a      	strb	r2, [r1, #0]
    50ce:	f7fe fa87 	bl	35e0 <system_pinmux_pin_set_config>
    50d2:	e717      	b.n	4f04 <tc_init+0xb8>
    50d4:	4641      	mov	r1, r8
    50d6:	3101      	adds	r1, #1
    50d8:	0049      	lsls	r1, r1, #1
    50da:	6a13      	ldr	r3, [r2, #32]
    50dc:	5a41      	ldrh	r1, [r0, r1]
    50de:	430b      	orrs	r3, r1
    50e0:	6213      	str	r3, [r2, #32]
    50e2:	e71c      	b.n	4f1e <tc_init+0xd2>
    50e4:	0000e248 	.word	0x0000e248
    50e8:	2000447c 	.word	0x2000447c
    50ec:	40000400 	.word	0x40000400

000050f0 <tc_get_count_value>:
    50f0:	217f      	movs	r1, #127	; 0x7f
    50f2:	6802      	ldr	r2, [r0, #0]
    50f4:	7bd3      	ldrb	r3, [r2, #15]
    50f6:	438b      	bics	r3, r1
    50f8:	d1fc      	bne.n	50f4 <tc_get_count_value+0x4>
    50fa:	7903      	ldrb	r3, [r0, #4]
    50fc:	2b04      	cmp	r3, #4
    50fe:	d00a      	beq.n	5116 <tc_get_count_value+0x26>
    5100:	2b08      	cmp	r3, #8
    5102:	d006      	beq.n	5112 <tc_get_count_value+0x22>
    5104:	2000      	movs	r0, #0
    5106:	2b00      	cmp	r3, #0
    5108:	d000      	beq.n	510c <tc_get_count_value+0x1c>
    510a:	4770      	bx	lr
    510c:	8a10      	ldrh	r0, [r2, #16]
    510e:	b280      	uxth	r0, r0
    5110:	e7fb      	b.n	510a <tc_get_count_value+0x1a>
    5112:	6910      	ldr	r0, [r2, #16]
    5114:	e7f9      	b.n	510a <tc_get_count_value+0x1a>
    5116:	7c10      	ldrb	r0, [r2, #16]
    5118:	b2c0      	uxtb	r0, r0
    511a:	e7f6      	b.n	510a <tc_get_count_value+0x1a>

0000511c <tc_set_compare_value>:
    511c:	b530      	push	{r4, r5, lr}
    511e:	257f      	movs	r5, #127	; 0x7f
    5120:	6804      	ldr	r4, [r0, #0]
    5122:	7be3      	ldrb	r3, [r4, #15]
    5124:	43ab      	bics	r3, r5
    5126:	d1fc      	bne.n	5122 <tc_set_compare_value+0x6>
    5128:	7903      	ldrb	r3, [r0, #4]
    512a:	2b04      	cmp	r3, #4
    512c:	d016      	beq.n	515c <tc_set_compare_value+0x40>
    512e:	2b08      	cmp	r3, #8
    5130:	d00c      	beq.n	514c <tc_set_compare_value+0x30>
    5132:	2017      	movs	r0, #23
    5134:	2b00      	cmp	r3, #0
    5136:	d000      	beq.n	513a <tc_set_compare_value+0x1e>
    5138:	bd30      	pop	{r4, r5, pc}
    513a:	2017      	movs	r0, #23
    513c:	2901      	cmp	r1, #1
    513e:	d8fb      	bhi.n	5138 <tc_set_compare_value+0x1c>
    5140:	310c      	adds	r1, #12
    5142:	b292      	uxth	r2, r2
    5144:	0049      	lsls	r1, r1, #1
    5146:	530a      	strh	r2, [r1, r4]
    5148:	2000      	movs	r0, #0
    514a:	e7f5      	b.n	5138 <tc_set_compare_value+0x1c>
    514c:	2017      	movs	r0, #23
    514e:	2901      	cmp	r1, #1
    5150:	d8f2      	bhi.n	5138 <tc_set_compare_value+0x1c>
    5152:	3106      	adds	r1, #6
    5154:	0089      	lsls	r1, r1, #2
    5156:	510a      	str	r2, [r1, r4]
    5158:	2000      	movs	r0, #0
    515a:	e7ed      	b.n	5138 <tc_set_compare_value+0x1c>
    515c:	2017      	movs	r0, #23
    515e:	2901      	cmp	r1, #1
    5160:	d8ea      	bhi.n	5138 <tc_set_compare_value+0x1c>
    5162:	b2d2      	uxtb	r2, r2
    5164:	1861      	adds	r1, r4, r1
    5166:	760a      	strb	r2, [r1, #24]
    5168:	2000      	movs	r0, #0
    516a:	e7e5      	b.n	5138 <tc_set_compare_value+0x1c>

0000516c <ticker_irq_handler>:
    516c:	b538      	push	{r3, r4, r5, lr}
    516e:	6803      	ldr	r3, [r0, #0]
    5170:	1c05      	adds	r5, r0, #0
    5172:	68db      	ldr	r3, [r3, #12]
    5174:	4798      	blx	r3
    5176:	686b      	ldr	r3, [r5, #4]
    5178:	685b      	ldr	r3, [r3, #4]
    517a:	e00d      	b.n	5198 <ticker_irq_handler+0x2c>
    517c:	681c      	ldr	r4, [r3, #0]
    517e:	682b      	ldr	r3, [r5, #0]
    5180:	685b      	ldr	r3, [r3, #4]
    5182:	4798      	blx	r3
    5184:	1a24      	subs	r4, r4, r0
    5186:	2c00      	cmp	r4, #0
    5188:	dc0c      	bgt.n	51a4 <ticker_irq_handler+0x38>
    518a:	686a      	ldr	r2, [r5, #4]
    518c:	6851      	ldr	r1, [r2, #4]
    518e:	688b      	ldr	r3, [r1, #8]
    5190:	6053      	str	r3, [r2, #4]
    5192:	6812      	ldr	r2, [r2, #0]
    5194:	2a00      	cmp	r2, #0
    5196:	d10c      	bne.n	51b2 <ticker_irq_handler+0x46>
    5198:	2b00      	cmp	r3, #0
    519a:	d1ef      	bne.n	517c <ticker_irq_handler+0x10>
    519c:	682b      	ldr	r3, [r5, #0]
    519e:	689b      	ldr	r3, [r3, #8]
    51a0:	4798      	blx	r3
    51a2:	bd38      	pop	{r3, r4, r5, pc}
    51a4:	686a      	ldr	r2, [r5, #4]
    51a6:	682b      	ldr	r3, [r5, #0]
    51a8:	6852      	ldr	r2, [r2, #4]
    51aa:	691b      	ldr	r3, [r3, #16]
    51ac:	6810      	ldr	r0, [r2, #0]
    51ae:	4798      	blx	r3
    51b0:	e7f7      	b.n	51a2 <ticker_irq_handler+0x36>
    51b2:	6848      	ldr	r0, [r1, #4]
    51b4:	4790      	blx	r2
    51b6:	e7de      	b.n	5176 <ticker_irq_handler+0xa>

000051b8 <__aeabi_atexit>:
    51b8:	b508      	push	{r3, lr}
    51ba:	1c03      	adds	r3, r0, #0
    51bc:	1c08      	adds	r0, r1, #0
    51be:	1c19      	adds	r1, r3, #0
    51c0:	f003 f836 	bl	8230 <__cxa_atexit>
    51c4:	bd08      	pop	{r3, pc}

000051c6 <_ZdlPv>:
    51c6:	b508      	push	{r3, lr}
    51c8:	f003 fbcc 	bl	8964 <free>
    51cc:	bd08      	pop	{r3, pc}
	...

000051d0 <__aeabi_uidiv>:
    51d0:	2200      	movs	r2, #0
    51d2:	0843      	lsrs	r3, r0, #1
    51d4:	428b      	cmp	r3, r1
    51d6:	d374      	bcc.n	52c2 <__aeabi_uidiv+0xf2>
    51d8:	0903      	lsrs	r3, r0, #4
    51da:	428b      	cmp	r3, r1
    51dc:	d35f      	bcc.n	529e <__aeabi_uidiv+0xce>
    51de:	0a03      	lsrs	r3, r0, #8
    51e0:	428b      	cmp	r3, r1
    51e2:	d344      	bcc.n	526e <__aeabi_uidiv+0x9e>
    51e4:	0b03      	lsrs	r3, r0, #12
    51e6:	428b      	cmp	r3, r1
    51e8:	d328      	bcc.n	523c <__aeabi_uidiv+0x6c>
    51ea:	0c03      	lsrs	r3, r0, #16
    51ec:	428b      	cmp	r3, r1
    51ee:	d30d      	bcc.n	520c <__aeabi_uidiv+0x3c>
    51f0:	22ff      	movs	r2, #255	; 0xff
    51f2:	0209      	lsls	r1, r1, #8
    51f4:	ba12      	rev	r2, r2
    51f6:	0c03      	lsrs	r3, r0, #16
    51f8:	428b      	cmp	r3, r1
    51fa:	d302      	bcc.n	5202 <__aeabi_uidiv+0x32>
    51fc:	1212      	asrs	r2, r2, #8
    51fe:	0209      	lsls	r1, r1, #8
    5200:	d065      	beq.n	52ce <__aeabi_uidiv+0xfe>
    5202:	0b03      	lsrs	r3, r0, #12
    5204:	428b      	cmp	r3, r1
    5206:	d319      	bcc.n	523c <__aeabi_uidiv+0x6c>
    5208:	e000      	b.n	520c <__aeabi_uidiv+0x3c>
    520a:	0a09      	lsrs	r1, r1, #8
    520c:	0bc3      	lsrs	r3, r0, #15
    520e:	428b      	cmp	r3, r1
    5210:	d301      	bcc.n	5216 <__aeabi_uidiv+0x46>
    5212:	03cb      	lsls	r3, r1, #15
    5214:	1ac0      	subs	r0, r0, r3
    5216:	4152      	adcs	r2, r2
    5218:	0b83      	lsrs	r3, r0, #14
    521a:	428b      	cmp	r3, r1
    521c:	d301      	bcc.n	5222 <__aeabi_uidiv+0x52>
    521e:	038b      	lsls	r3, r1, #14
    5220:	1ac0      	subs	r0, r0, r3
    5222:	4152      	adcs	r2, r2
    5224:	0b43      	lsrs	r3, r0, #13
    5226:	428b      	cmp	r3, r1
    5228:	d301      	bcc.n	522e <__aeabi_uidiv+0x5e>
    522a:	034b      	lsls	r3, r1, #13
    522c:	1ac0      	subs	r0, r0, r3
    522e:	4152      	adcs	r2, r2
    5230:	0b03      	lsrs	r3, r0, #12
    5232:	428b      	cmp	r3, r1
    5234:	d301      	bcc.n	523a <__aeabi_uidiv+0x6a>
    5236:	030b      	lsls	r3, r1, #12
    5238:	1ac0      	subs	r0, r0, r3
    523a:	4152      	adcs	r2, r2
    523c:	0ac3      	lsrs	r3, r0, #11
    523e:	428b      	cmp	r3, r1
    5240:	d301      	bcc.n	5246 <__aeabi_uidiv+0x76>
    5242:	02cb      	lsls	r3, r1, #11
    5244:	1ac0      	subs	r0, r0, r3
    5246:	4152      	adcs	r2, r2
    5248:	0a83      	lsrs	r3, r0, #10
    524a:	428b      	cmp	r3, r1
    524c:	d301      	bcc.n	5252 <__aeabi_uidiv+0x82>
    524e:	028b      	lsls	r3, r1, #10
    5250:	1ac0      	subs	r0, r0, r3
    5252:	4152      	adcs	r2, r2
    5254:	0a43      	lsrs	r3, r0, #9
    5256:	428b      	cmp	r3, r1
    5258:	d301      	bcc.n	525e <__aeabi_uidiv+0x8e>
    525a:	024b      	lsls	r3, r1, #9
    525c:	1ac0      	subs	r0, r0, r3
    525e:	4152      	adcs	r2, r2
    5260:	0a03      	lsrs	r3, r0, #8
    5262:	428b      	cmp	r3, r1
    5264:	d301      	bcc.n	526a <__aeabi_uidiv+0x9a>
    5266:	020b      	lsls	r3, r1, #8
    5268:	1ac0      	subs	r0, r0, r3
    526a:	4152      	adcs	r2, r2
    526c:	d2cd      	bcs.n	520a <__aeabi_uidiv+0x3a>
    526e:	09c3      	lsrs	r3, r0, #7
    5270:	428b      	cmp	r3, r1
    5272:	d301      	bcc.n	5278 <__aeabi_uidiv+0xa8>
    5274:	01cb      	lsls	r3, r1, #7
    5276:	1ac0      	subs	r0, r0, r3
    5278:	4152      	adcs	r2, r2
    527a:	0983      	lsrs	r3, r0, #6
    527c:	428b      	cmp	r3, r1
    527e:	d301      	bcc.n	5284 <__aeabi_uidiv+0xb4>
    5280:	018b      	lsls	r3, r1, #6
    5282:	1ac0      	subs	r0, r0, r3
    5284:	4152      	adcs	r2, r2
    5286:	0943      	lsrs	r3, r0, #5
    5288:	428b      	cmp	r3, r1
    528a:	d301      	bcc.n	5290 <__aeabi_uidiv+0xc0>
    528c:	014b      	lsls	r3, r1, #5
    528e:	1ac0      	subs	r0, r0, r3
    5290:	4152      	adcs	r2, r2
    5292:	0903      	lsrs	r3, r0, #4
    5294:	428b      	cmp	r3, r1
    5296:	d301      	bcc.n	529c <__aeabi_uidiv+0xcc>
    5298:	010b      	lsls	r3, r1, #4
    529a:	1ac0      	subs	r0, r0, r3
    529c:	4152      	adcs	r2, r2
    529e:	08c3      	lsrs	r3, r0, #3
    52a0:	428b      	cmp	r3, r1
    52a2:	d301      	bcc.n	52a8 <__aeabi_uidiv+0xd8>
    52a4:	00cb      	lsls	r3, r1, #3
    52a6:	1ac0      	subs	r0, r0, r3
    52a8:	4152      	adcs	r2, r2
    52aa:	0883      	lsrs	r3, r0, #2
    52ac:	428b      	cmp	r3, r1
    52ae:	d301      	bcc.n	52b4 <__aeabi_uidiv+0xe4>
    52b0:	008b      	lsls	r3, r1, #2
    52b2:	1ac0      	subs	r0, r0, r3
    52b4:	4152      	adcs	r2, r2
    52b6:	0843      	lsrs	r3, r0, #1
    52b8:	428b      	cmp	r3, r1
    52ba:	d301      	bcc.n	52c0 <__aeabi_uidiv+0xf0>
    52bc:	004b      	lsls	r3, r1, #1
    52be:	1ac0      	subs	r0, r0, r3
    52c0:	4152      	adcs	r2, r2
    52c2:	1a41      	subs	r1, r0, r1
    52c4:	d200      	bcs.n	52c8 <__aeabi_uidiv+0xf8>
    52c6:	4601      	mov	r1, r0
    52c8:	4152      	adcs	r2, r2
    52ca:	4610      	mov	r0, r2
    52cc:	4770      	bx	lr
    52ce:	e7ff      	b.n	52d0 <__aeabi_uidiv+0x100>
    52d0:	b501      	push	{r0, lr}
    52d2:	2000      	movs	r0, #0
    52d4:	f000 f8fc 	bl	54d0 <__aeabi_idiv0>
    52d8:	bd02      	pop	{r1, pc}
    52da:	46c0      	nop			; (mov r8, r8)

000052dc <__aeabi_uidivmod>:
    52dc:	2900      	cmp	r1, #0
    52de:	d0f7      	beq.n	52d0 <__aeabi_uidiv+0x100>
    52e0:	b503      	push	{r0, r1, lr}
    52e2:	f7ff ff75 	bl	51d0 <__aeabi_uidiv>
    52e6:	bc0e      	pop	{r1, r2, r3}
    52e8:	4342      	muls	r2, r0
    52ea:	1a89      	subs	r1, r1, r2
    52ec:	4718      	bx	r3
    52ee:	46c0      	nop			; (mov r8, r8)

000052f0 <__aeabi_idiv>:
    52f0:	4603      	mov	r3, r0
    52f2:	430b      	orrs	r3, r1
    52f4:	d47f      	bmi.n	53f6 <__aeabi_idiv+0x106>
    52f6:	2200      	movs	r2, #0
    52f8:	0843      	lsrs	r3, r0, #1
    52fa:	428b      	cmp	r3, r1
    52fc:	d374      	bcc.n	53e8 <__aeabi_idiv+0xf8>
    52fe:	0903      	lsrs	r3, r0, #4
    5300:	428b      	cmp	r3, r1
    5302:	d35f      	bcc.n	53c4 <__aeabi_idiv+0xd4>
    5304:	0a03      	lsrs	r3, r0, #8
    5306:	428b      	cmp	r3, r1
    5308:	d344      	bcc.n	5394 <__aeabi_idiv+0xa4>
    530a:	0b03      	lsrs	r3, r0, #12
    530c:	428b      	cmp	r3, r1
    530e:	d328      	bcc.n	5362 <__aeabi_idiv+0x72>
    5310:	0c03      	lsrs	r3, r0, #16
    5312:	428b      	cmp	r3, r1
    5314:	d30d      	bcc.n	5332 <__aeabi_idiv+0x42>
    5316:	22ff      	movs	r2, #255	; 0xff
    5318:	0209      	lsls	r1, r1, #8
    531a:	ba12      	rev	r2, r2
    531c:	0c03      	lsrs	r3, r0, #16
    531e:	428b      	cmp	r3, r1
    5320:	d302      	bcc.n	5328 <__aeabi_idiv+0x38>
    5322:	1212      	asrs	r2, r2, #8
    5324:	0209      	lsls	r1, r1, #8
    5326:	d065      	beq.n	53f4 <__aeabi_idiv+0x104>
    5328:	0b03      	lsrs	r3, r0, #12
    532a:	428b      	cmp	r3, r1
    532c:	d319      	bcc.n	5362 <__aeabi_idiv+0x72>
    532e:	e000      	b.n	5332 <__aeabi_idiv+0x42>
    5330:	0a09      	lsrs	r1, r1, #8
    5332:	0bc3      	lsrs	r3, r0, #15
    5334:	428b      	cmp	r3, r1
    5336:	d301      	bcc.n	533c <__aeabi_idiv+0x4c>
    5338:	03cb      	lsls	r3, r1, #15
    533a:	1ac0      	subs	r0, r0, r3
    533c:	4152      	adcs	r2, r2
    533e:	0b83      	lsrs	r3, r0, #14
    5340:	428b      	cmp	r3, r1
    5342:	d301      	bcc.n	5348 <__aeabi_idiv+0x58>
    5344:	038b      	lsls	r3, r1, #14
    5346:	1ac0      	subs	r0, r0, r3
    5348:	4152      	adcs	r2, r2
    534a:	0b43      	lsrs	r3, r0, #13
    534c:	428b      	cmp	r3, r1
    534e:	d301      	bcc.n	5354 <__aeabi_idiv+0x64>
    5350:	034b      	lsls	r3, r1, #13
    5352:	1ac0      	subs	r0, r0, r3
    5354:	4152      	adcs	r2, r2
    5356:	0b03      	lsrs	r3, r0, #12
    5358:	428b      	cmp	r3, r1
    535a:	d301      	bcc.n	5360 <__aeabi_idiv+0x70>
    535c:	030b      	lsls	r3, r1, #12
    535e:	1ac0      	subs	r0, r0, r3
    5360:	4152      	adcs	r2, r2
    5362:	0ac3      	lsrs	r3, r0, #11
    5364:	428b      	cmp	r3, r1
    5366:	d301      	bcc.n	536c <__aeabi_idiv+0x7c>
    5368:	02cb      	lsls	r3, r1, #11
    536a:	1ac0      	subs	r0, r0, r3
    536c:	4152      	adcs	r2, r2
    536e:	0a83      	lsrs	r3, r0, #10
    5370:	428b      	cmp	r3, r1
    5372:	d301      	bcc.n	5378 <__aeabi_idiv+0x88>
    5374:	028b      	lsls	r3, r1, #10
    5376:	1ac0      	subs	r0, r0, r3
    5378:	4152      	adcs	r2, r2
    537a:	0a43      	lsrs	r3, r0, #9
    537c:	428b      	cmp	r3, r1
    537e:	d301      	bcc.n	5384 <__aeabi_idiv+0x94>
    5380:	024b      	lsls	r3, r1, #9
    5382:	1ac0      	subs	r0, r0, r3
    5384:	4152      	adcs	r2, r2
    5386:	0a03      	lsrs	r3, r0, #8
    5388:	428b      	cmp	r3, r1
    538a:	d301      	bcc.n	5390 <__aeabi_idiv+0xa0>
    538c:	020b      	lsls	r3, r1, #8
    538e:	1ac0      	subs	r0, r0, r3
    5390:	4152      	adcs	r2, r2
    5392:	d2cd      	bcs.n	5330 <__aeabi_idiv+0x40>
    5394:	09c3      	lsrs	r3, r0, #7
    5396:	428b      	cmp	r3, r1
    5398:	d301      	bcc.n	539e <__aeabi_idiv+0xae>
    539a:	01cb      	lsls	r3, r1, #7
    539c:	1ac0      	subs	r0, r0, r3
    539e:	4152      	adcs	r2, r2
    53a0:	0983      	lsrs	r3, r0, #6
    53a2:	428b      	cmp	r3, r1
    53a4:	d301      	bcc.n	53aa <__aeabi_idiv+0xba>
    53a6:	018b      	lsls	r3, r1, #6
    53a8:	1ac0      	subs	r0, r0, r3
    53aa:	4152      	adcs	r2, r2
    53ac:	0943      	lsrs	r3, r0, #5
    53ae:	428b      	cmp	r3, r1
    53b0:	d301      	bcc.n	53b6 <__aeabi_idiv+0xc6>
    53b2:	014b      	lsls	r3, r1, #5
    53b4:	1ac0      	subs	r0, r0, r3
    53b6:	4152      	adcs	r2, r2
    53b8:	0903      	lsrs	r3, r0, #4
    53ba:	428b      	cmp	r3, r1
    53bc:	d301      	bcc.n	53c2 <__aeabi_idiv+0xd2>
    53be:	010b      	lsls	r3, r1, #4
    53c0:	1ac0      	subs	r0, r0, r3
    53c2:	4152      	adcs	r2, r2
    53c4:	08c3      	lsrs	r3, r0, #3
    53c6:	428b      	cmp	r3, r1
    53c8:	d301      	bcc.n	53ce <__aeabi_idiv+0xde>
    53ca:	00cb      	lsls	r3, r1, #3
    53cc:	1ac0      	subs	r0, r0, r3
    53ce:	4152      	adcs	r2, r2
    53d0:	0883      	lsrs	r3, r0, #2
    53d2:	428b      	cmp	r3, r1
    53d4:	d301      	bcc.n	53da <__aeabi_idiv+0xea>
    53d6:	008b      	lsls	r3, r1, #2
    53d8:	1ac0      	subs	r0, r0, r3
    53da:	4152      	adcs	r2, r2
    53dc:	0843      	lsrs	r3, r0, #1
    53de:	428b      	cmp	r3, r1
    53e0:	d301      	bcc.n	53e6 <__aeabi_idiv+0xf6>
    53e2:	004b      	lsls	r3, r1, #1
    53e4:	1ac0      	subs	r0, r0, r3
    53e6:	4152      	adcs	r2, r2
    53e8:	1a41      	subs	r1, r0, r1
    53ea:	d200      	bcs.n	53ee <__aeabi_idiv+0xfe>
    53ec:	4601      	mov	r1, r0
    53ee:	4152      	adcs	r2, r2
    53f0:	4610      	mov	r0, r2
    53f2:	4770      	bx	lr
    53f4:	e05d      	b.n	54b2 <__aeabi_idiv+0x1c2>
    53f6:	0fca      	lsrs	r2, r1, #31
    53f8:	d000      	beq.n	53fc <__aeabi_idiv+0x10c>
    53fa:	4249      	negs	r1, r1
    53fc:	1003      	asrs	r3, r0, #32
    53fe:	d300      	bcc.n	5402 <__aeabi_idiv+0x112>
    5400:	4240      	negs	r0, r0
    5402:	4053      	eors	r3, r2
    5404:	2200      	movs	r2, #0
    5406:	469c      	mov	ip, r3
    5408:	0903      	lsrs	r3, r0, #4
    540a:	428b      	cmp	r3, r1
    540c:	d32d      	bcc.n	546a <__aeabi_idiv+0x17a>
    540e:	0a03      	lsrs	r3, r0, #8
    5410:	428b      	cmp	r3, r1
    5412:	d312      	bcc.n	543a <__aeabi_idiv+0x14a>
    5414:	22fc      	movs	r2, #252	; 0xfc
    5416:	0189      	lsls	r1, r1, #6
    5418:	ba12      	rev	r2, r2
    541a:	0a03      	lsrs	r3, r0, #8
    541c:	428b      	cmp	r3, r1
    541e:	d30c      	bcc.n	543a <__aeabi_idiv+0x14a>
    5420:	0189      	lsls	r1, r1, #6
    5422:	1192      	asrs	r2, r2, #6
    5424:	428b      	cmp	r3, r1
    5426:	d308      	bcc.n	543a <__aeabi_idiv+0x14a>
    5428:	0189      	lsls	r1, r1, #6
    542a:	1192      	asrs	r2, r2, #6
    542c:	428b      	cmp	r3, r1
    542e:	d304      	bcc.n	543a <__aeabi_idiv+0x14a>
    5430:	0189      	lsls	r1, r1, #6
    5432:	d03a      	beq.n	54aa <__aeabi_idiv+0x1ba>
    5434:	1192      	asrs	r2, r2, #6
    5436:	e000      	b.n	543a <__aeabi_idiv+0x14a>
    5438:	0989      	lsrs	r1, r1, #6
    543a:	09c3      	lsrs	r3, r0, #7
    543c:	428b      	cmp	r3, r1
    543e:	d301      	bcc.n	5444 <__aeabi_idiv+0x154>
    5440:	01cb      	lsls	r3, r1, #7
    5442:	1ac0      	subs	r0, r0, r3
    5444:	4152      	adcs	r2, r2
    5446:	0983      	lsrs	r3, r0, #6
    5448:	428b      	cmp	r3, r1
    544a:	d301      	bcc.n	5450 <__aeabi_idiv+0x160>
    544c:	018b      	lsls	r3, r1, #6
    544e:	1ac0      	subs	r0, r0, r3
    5450:	4152      	adcs	r2, r2
    5452:	0943      	lsrs	r3, r0, #5
    5454:	428b      	cmp	r3, r1
    5456:	d301      	bcc.n	545c <__aeabi_idiv+0x16c>
    5458:	014b      	lsls	r3, r1, #5
    545a:	1ac0      	subs	r0, r0, r3
    545c:	4152      	adcs	r2, r2
    545e:	0903      	lsrs	r3, r0, #4
    5460:	428b      	cmp	r3, r1
    5462:	d301      	bcc.n	5468 <__aeabi_idiv+0x178>
    5464:	010b      	lsls	r3, r1, #4
    5466:	1ac0      	subs	r0, r0, r3
    5468:	4152      	adcs	r2, r2
    546a:	08c3      	lsrs	r3, r0, #3
    546c:	428b      	cmp	r3, r1
    546e:	d301      	bcc.n	5474 <__aeabi_idiv+0x184>
    5470:	00cb      	lsls	r3, r1, #3
    5472:	1ac0      	subs	r0, r0, r3
    5474:	4152      	adcs	r2, r2
    5476:	0883      	lsrs	r3, r0, #2
    5478:	428b      	cmp	r3, r1
    547a:	d301      	bcc.n	5480 <__aeabi_idiv+0x190>
    547c:	008b      	lsls	r3, r1, #2
    547e:	1ac0      	subs	r0, r0, r3
    5480:	4152      	adcs	r2, r2
    5482:	d2d9      	bcs.n	5438 <__aeabi_idiv+0x148>
    5484:	0843      	lsrs	r3, r0, #1
    5486:	428b      	cmp	r3, r1
    5488:	d301      	bcc.n	548e <__aeabi_idiv+0x19e>
    548a:	004b      	lsls	r3, r1, #1
    548c:	1ac0      	subs	r0, r0, r3
    548e:	4152      	adcs	r2, r2
    5490:	1a41      	subs	r1, r0, r1
    5492:	d200      	bcs.n	5496 <__aeabi_idiv+0x1a6>
    5494:	4601      	mov	r1, r0
    5496:	4663      	mov	r3, ip
    5498:	4152      	adcs	r2, r2
    549a:	105b      	asrs	r3, r3, #1
    549c:	4610      	mov	r0, r2
    549e:	d301      	bcc.n	54a4 <__aeabi_idiv+0x1b4>
    54a0:	4240      	negs	r0, r0
    54a2:	2b00      	cmp	r3, #0
    54a4:	d500      	bpl.n	54a8 <__aeabi_idiv+0x1b8>
    54a6:	4249      	negs	r1, r1
    54a8:	4770      	bx	lr
    54aa:	4663      	mov	r3, ip
    54ac:	105b      	asrs	r3, r3, #1
    54ae:	d300      	bcc.n	54b2 <__aeabi_idiv+0x1c2>
    54b0:	4240      	negs	r0, r0
    54b2:	b501      	push	{r0, lr}
    54b4:	2000      	movs	r0, #0
    54b6:	f000 f80b 	bl	54d0 <__aeabi_idiv0>
    54ba:	bd02      	pop	{r1, pc}

000054bc <__aeabi_idivmod>:
    54bc:	2900      	cmp	r1, #0
    54be:	d0f8      	beq.n	54b2 <__aeabi_idiv+0x1c2>
    54c0:	b503      	push	{r0, r1, lr}
    54c2:	f7ff ff15 	bl	52f0 <__aeabi_idiv>
    54c6:	bc0e      	pop	{r1, r2, r3}
    54c8:	4342      	muls	r2, r0
    54ca:	1a89      	subs	r1, r1, r2
    54cc:	4718      	bx	r3
    54ce:	46c0      	nop			; (mov r8, r8)

000054d0 <__aeabi_idiv0>:
    54d0:	4770      	bx	lr
    54d2:	46c0      	nop			; (mov r8, r8)

000054d4 <__aeabi_cdrcmple>:
    54d4:	4684      	mov	ip, r0
    54d6:	1c10      	adds	r0, r2, #0
    54d8:	4662      	mov	r2, ip
    54da:	468c      	mov	ip, r1
    54dc:	1c19      	adds	r1, r3, #0
    54de:	4663      	mov	r3, ip
    54e0:	e000      	b.n	54e4 <__aeabi_cdcmpeq>
    54e2:	46c0      	nop			; (mov r8, r8)

000054e4 <__aeabi_cdcmpeq>:
    54e4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    54e6:	f001 fe83 	bl	71f0 <__ledf2>
    54ea:	2800      	cmp	r0, #0
    54ec:	d401      	bmi.n	54f2 <__aeabi_cdcmpeq+0xe>
    54ee:	2100      	movs	r1, #0
    54f0:	42c8      	cmn	r0, r1
    54f2:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

000054f4 <__aeabi_dcmpeq>:
    54f4:	b510      	push	{r4, lr}
    54f6:	f001 fdc7 	bl	7088 <__eqdf2>
    54fa:	4240      	negs	r0, r0
    54fc:	3001      	adds	r0, #1
    54fe:	bd10      	pop	{r4, pc}

00005500 <__aeabi_dcmplt>:
    5500:	b510      	push	{r4, lr}
    5502:	f001 fe75 	bl	71f0 <__ledf2>
    5506:	2800      	cmp	r0, #0
    5508:	db01      	blt.n	550e <__aeabi_dcmplt+0xe>
    550a:	2000      	movs	r0, #0
    550c:	bd10      	pop	{r4, pc}
    550e:	2001      	movs	r0, #1
    5510:	bd10      	pop	{r4, pc}
    5512:	46c0      	nop			; (mov r8, r8)

00005514 <__aeabi_dcmple>:
    5514:	b510      	push	{r4, lr}
    5516:	f001 fe6b 	bl	71f0 <__ledf2>
    551a:	2800      	cmp	r0, #0
    551c:	dd01      	ble.n	5522 <__aeabi_dcmple+0xe>
    551e:	2000      	movs	r0, #0
    5520:	bd10      	pop	{r4, pc}
    5522:	2001      	movs	r0, #1
    5524:	bd10      	pop	{r4, pc}
    5526:	46c0      	nop			; (mov r8, r8)

00005528 <__aeabi_dcmpgt>:
    5528:	b510      	push	{r4, lr}
    552a:	f001 fdf1 	bl	7110 <__gedf2>
    552e:	2800      	cmp	r0, #0
    5530:	dc01      	bgt.n	5536 <__aeabi_dcmpgt+0xe>
    5532:	2000      	movs	r0, #0
    5534:	bd10      	pop	{r4, pc}
    5536:	2001      	movs	r0, #1
    5538:	bd10      	pop	{r4, pc}
    553a:	46c0      	nop			; (mov r8, r8)

0000553c <__aeabi_dcmpge>:
    553c:	b510      	push	{r4, lr}
    553e:	f001 fde7 	bl	7110 <__gedf2>
    5542:	2800      	cmp	r0, #0
    5544:	da01      	bge.n	554a <__aeabi_dcmpge+0xe>
    5546:	2000      	movs	r0, #0
    5548:	bd10      	pop	{r4, pc}
    554a:	2001      	movs	r0, #1
    554c:	bd10      	pop	{r4, pc}
    554e:	46c0      	nop			; (mov r8, r8)

00005550 <__aeabi_cfrcmple>:
    5550:	4684      	mov	ip, r0
    5552:	1c08      	adds	r0, r1, #0
    5554:	4661      	mov	r1, ip
    5556:	e7ff      	b.n	5558 <__aeabi_cfcmpeq>

00005558 <__aeabi_cfcmpeq>:
    5558:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    555a:	f000 fba3 	bl	5ca4 <__lesf2>
    555e:	2800      	cmp	r0, #0
    5560:	d401      	bmi.n	5566 <__aeabi_cfcmpeq+0xe>
    5562:	2100      	movs	r1, #0
    5564:	42c8      	cmn	r0, r1
    5566:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00005568 <__aeabi_fcmpeq>:
    5568:	b510      	push	{r4, lr}
    556a:	f000 fb27 	bl	5bbc <__eqsf2>
    556e:	4240      	negs	r0, r0
    5570:	3001      	adds	r0, #1
    5572:	bd10      	pop	{r4, pc}

00005574 <__aeabi_fcmplt>:
    5574:	b510      	push	{r4, lr}
    5576:	f000 fb95 	bl	5ca4 <__lesf2>
    557a:	2800      	cmp	r0, #0
    557c:	db01      	blt.n	5582 <__aeabi_fcmplt+0xe>
    557e:	2000      	movs	r0, #0
    5580:	bd10      	pop	{r4, pc}
    5582:	2001      	movs	r0, #1
    5584:	bd10      	pop	{r4, pc}
    5586:	46c0      	nop			; (mov r8, r8)

00005588 <__aeabi_fcmple>:
    5588:	b510      	push	{r4, lr}
    558a:	f000 fb8b 	bl	5ca4 <__lesf2>
    558e:	2800      	cmp	r0, #0
    5590:	dd01      	ble.n	5596 <__aeabi_fcmple+0xe>
    5592:	2000      	movs	r0, #0
    5594:	bd10      	pop	{r4, pc}
    5596:	2001      	movs	r0, #1
    5598:	bd10      	pop	{r4, pc}
    559a:	46c0      	nop			; (mov r8, r8)

0000559c <__aeabi_fcmpgt>:
    559c:	b510      	push	{r4, lr}
    559e:	f000 fb37 	bl	5c10 <__gesf2>
    55a2:	2800      	cmp	r0, #0
    55a4:	dc01      	bgt.n	55aa <__aeabi_fcmpgt+0xe>
    55a6:	2000      	movs	r0, #0
    55a8:	bd10      	pop	{r4, pc}
    55aa:	2001      	movs	r0, #1
    55ac:	bd10      	pop	{r4, pc}
    55ae:	46c0      	nop			; (mov r8, r8)

000055b0 <__aeabi_fcmpge>:
    55b0:	b510      	push	{r4, lr}
    55b2:	f000 fb2d 	bl	5c10 <__gesf2>
    55b6:	2800      	cmp	r0, #0
    55b8:	da01      	bge.n	55be <__aeabi_fcmpge+0xe>
    55ba:	2000      	movs	r0, #0
    55bc:	bd10      	pop	{r4, pc}
    55be:	2001      	movs	r0, #1
    55c0:	bd10      	pop	{r4, pc}
    55c2:	46c0      	nop			; (mov r8, r8)

000055c4 <__aeabi_lmul>:
    55c4:	b5f0      	push	{r4, r5, r6, r7, lr}
    55c6:	464f      	mov	r7, r9
    55c8:	4646      	mov	r6, r8
    55ca:	0405      	lsls	r5, r0, #16
    55cc:	0c2d      	lsrs	r5, r5, #16
    55ce:	1c2c      	adds	r4, r5, #0
    55d0:	b4c0      	push	{r6, r7}
    55d2:	0417      	lsls	r7, r2, #16
    55d4:	0c16      	lsrs	r6, r2, #16
    55d6:	0c3f      	lsrs	r7, r7, #16
    55d8:	4699      	mov	r9, r3
    55da:	0c03      	lsrs	r3, r0, #16
    55dc:	437c      	muls	r4, r7
    55de:	4375      	muls	r5, r6
    55e0:	435f      	muls	r7, r3
    55e2:	4373      	muls	r3, r6
    55e4:	197d      	adds	r5, r7, r5
    55e6:	0c26      	lsrs	r6, r4, #16
    55e8:	19ad      	adds	r5, r5, r6
    55ea:	469c      	mov	ip, r3
    55ec:	42af      	cmp	r7, r5
    55ee:	d903      	bls.n	55f8 <__aeabi_lmul+0x34>
    55f0:	2380      	movs	r3, #128	; 0x80
    55f2:	025b      	lsls	r3, r3, #9
    55f4:	4698      	mov	r8, r3
    55f6:	44c4      	add	ip, r8
    55f8:	464b      	mov	r3, r9
    55fa:	4351      	muls	r1, r2
    55fc:	4343      	muls	r3, r0
    55fe:	0424      	lsls	r4, r4, #16
    5600:	0c2e      	lsrs	r6, r5, #16
    5602:	0c24      	lsrs	r4, r4, #16
    5604:	042d      	lsls	r5, r5, #16
    5606:	4466      	add	r6, ip
    5608:	192c      	adds	r4, r5, r4
    560a:	1859      	adds	r1, r3, r1
    560c:	1989      	adds	r1, r1, r6
    560e:	1c20      	adds	r0, r4, #0
    5610:	bc0c      	pop	{r2, r3}
    5612:	4690      	mov	r8, r2
    5614:	4699      	mov	r9, r3
    5616:	bdf0      	pop	{r4, r5, r6, r7, pc}

00005618 <__aeabi_d2uiz>:
    5618:	b538      	push	{r3, r4, r5, lr}
    561a:	2200      	movs	r2, #0
    561c:	4b0c      	ldr	r3, [pc, #48]	; (5650 <__aeabi_d2uiz+0x38>)
    561e:	1c04      	adds	r4, r0, #0
    5620:	1c0d      	adds	r5, r1, #0
    5622:	f7ff ff8b 	bl	553c <__aeabi_dcmpge>
    5626:	2800      	cmp	r0, #0
    5628:	d104      	bne.n	5634 <__aeabi_d2uiz+0x1c>
    562a:	1c20      	adds	r0, r4, #0
    562c:	1c29      	adds	r1, r5, #0
    562e:	f002 fc59 	bl	7ee4 <__aeabi_d2iz>
    5632:	bd38      	pop	{r3, r4, r5, pc}
    5634:	4b06      	ldr	r3, [pc, #24]	; (5650 <__aeabi_d2uiz+0x38>)
    5636:	2200      	movs	r2, #0
    5638:	1c20      	adds	r0, r4, #0
    563a:	1c29      	adds	r1, r5, #0
    563c:	f002 f8d8 	bl	77f0 <__aeabi_dsub>
    5640:	f002 fc50 	bl	7ee4 <__aeabi_d2iz>
    5644:	2380      	movs	r3, #128	; 0x80
    5646:	061b      	lsls	r3, r3, #24
    5648:	469c      	mov	ip, r3
    564a:	4460      	add	r0, ip
    564c:	e7f1      	b.n	5632 <__aeabi_d2uiz+0x1a>
    564e:	46c0      	nop			; (mov r8, r8)
    5650:	41e00000 	.word	0x41e00000

00005654 <__aeabi_fadd>:
    5654:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5656:	004a      	lsls	r2, r1, #1
    5658:	0243      	lsls	r3, r0, #9
    565a:	0044      	lsls	r4, r0, #1
    565c:	024e      	lsls	r6, r1, #9
    565e:	0fc5      	lsrs	r5, r0, #31
    5660:	0e24      	lsrs	r4, r4, #24
    5662:	1c28      	adds	r0, r5, #0
    5664:	099b      	lsrs	r3, r3, #6
    5666:	0e12      	lsrs	r2, r2, #24
    5668:	0fc9      	lsrs	r1, r1, #31
    566a:	09b7      	lsrs	r7, r6, #6
    566c:	428d      	cmp	r5, r1
    566e:	d040      	beq.n	56f2 <__aeabi_fadd+0x9e>
    5670:	1aa0      	subs	r0, r4, r2
    5672:	2800      	cmp	r0, #0
    5674:	dc00      	bgt.n	5678 <__aeabi_fadd+0x24>
    5676:	e084      	b.n	5782 <__aeabi_fadd+0x12e>
    5678:	2a00      	cmp	r2, #0
    567a:	d11c      	bne.n	56b6 <__aeabi_fadd+0x62>
    567c:	2f00      	cmp	r7, #0
    567e:	d15c      	bne.n	573a <__aeabi_fadd+0xe6>
    5680:	075a      	lsls	r2, r3, #29
    5682:	d004      	beq.n	568e <__aeabi_fadd+0x3a>
    5684:	220f      	movs	r2, #15
    5686:	401a      	ands	r2, r3
    5688:	2a04      	cmp	r2, #4
    568a:	d000      	beq.n	568e <__aeabi_fadd+0x3a>
    568c:	3304      	adds	r3, #4
    568e:	2280      	movs	r2, #128	; 0x80
    5690:	04d2      	lsls	r2, r2, #19
    5692:	401a      	ands	r2, r3
    5694:	1c28      	adds	r0, r5, #0
    5696:	2a00      	cmp	r2, #0
    5698:	d024      	beq.n	56e4 <__aeabi_fadd+0x90>
    569a:	3401      	adds	r4, #1
    569c:	2cff      	cmp	r4, #255	; 0xff
    569e:	d100      	bne.n	56a2 <__aeabi_fadd+0x4e>
    56a0:	e07b      	b.n	579a <__aeabi_fadd+0x146>
    56a2:	019b      	lsls	r3, r3, #6
    56a4:	0a5b      	lsrs	r3, r3, #9
    56a6:	b2e4      	uxtb	r4, r4
    56a8:	025b      	lsls	r3, r3, #9
    56aa:	05e4      	lsls	r4, r4, #23
    56ac:	0a5b      	lsrs	r3, r3, #9
    56ae:	4323      	orrs	r3, r4
    56b0:	07c0      	lsls	r0, r0, #31
    56b2:	4318      	orrs	r0, r3
    56b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    56b6:	2cff      	cmp	r4, #255	; 0xff
    56b8:	d0e2      	beq.n	5680 <__aeabi_fadd+0x2c>
    56ba:	2280      	movs	r2, #128	; 0x80
    56bc:	04d2      	lsls	r2, r2, #19
    56be:	4317      	orrs	r7, r2
    56c0:	2601      	movs	r6, #1
    56c2:	281b      	cmp	r0, #27
    56c4:	dc08      	bgt.n	56d8 <__aeabi_fadd+0x84>
    56c6:	1c39      	adds	r1, r7, #0
    56c8:	2220      	movs	r2, #32
    56ca:	1c3e      	adds	r6, r7, #0
    56cc:	40c1      	lsrs	r1, r0
    56ce:	1a10      	subs	r0, r2, r0
    56d0:	4086      	lsls	r6, r0
    56d2:	1e77      	subs	r7, r6, #1
    56d4:	41be      	sbcs	r6, r7
    56d6:	430e      	orrs	r6, r1
    56d8:	1b9b      	subs	r3, r3, r6
    56da:	015a      	lsls	r2, r3, #5
    56dc:	d433      	bmi.n	5746 <__aeabi_fadd+0xf2>
    56de:	1c28      	adds	r0, r5, #0
    56e0:	075a      	lsls	r2, r3, #29
    56e2:	d1cf      	bne.n	5684 <__aeabi_fadd+0x30>
    56e4:	08db      	lsrs	r3, r3, #3
    56e6:	2cff      	cmp	r4, #255	; 0xff
    56e8:	d01e      	beq.n	5728 <__aeabi_fadd+0xd4>
    56ea:	025b      	lsls	r3, r3, #9
    56ec:	0a5b      	lsrs	r3, r3, #9
    56ee:	b2e4      	uxtb	r4, r4
    56f0:	e7da      	b.n	56a8 <__aeabi_fadd+0x54>
    56f2:	1aa1      	subs	r1, r4, r2
    56f4:	2900      	cmp	r1, #0
    56f6:	dd57      	ble.n	57a8 <__aeabi_fadd+0x154>
    56f8:	2a00      	cmp	r2, #0
    56fa:	d03a      	beq.n	5772 <__aeabi_fadd+0x11e>
    56fc:	2cff      	cmp	r4, #255	; 0xff
    56fe:	d0bf      	beq.n	5680 <__aeabi_fadd+0x2c>
    5700:	2280      	movs	r2, #128	; 0x80
    5702:	04d2      	lsls	r2, r2, #19
    5704:	4317      	orrs	r7, r2
    5706:	2601      	movs	r6, #1
    5708:	291b      	cmp	r1, #27
    570a:	dd72      	ble.n	57f2 <__aeabi_fadd+0x19e>
    570c:	199b      	adds	r3, r3, r6
    570e:	015a      	lsls	r2, r3, #5
    5710:	d5e5      	bpl.n	56de <__aeabi_fadd+0x8a>
    5712:	3401      	adds	r4, #1
    5714:	2cff      	cmp	r4, #255	; 0xff
    5716:	d100      	bne.n	571a <__aeabi_fadd+0xc6>
    5718:	e087      	b.n	582a <__aeabi_fadd+0x1d6>
    571a:	2101      	movs	r1, #1
    571c:	4a8a      	ldr	r2, [pc, #552]	; (5948 <__aeabi_fadd+0x2f4>)
    571e:	4019      	ands	r1, r3
    5720:	4013      	ands	r3, r2
    5722:	085b      	lsrs	r3, r3, #1
    5724:	430b      	orrs	r3, r1
    5726:	e7ab      	b.n	5680 <__aeabi_fadd+0x2c>
    5728:	2b00      	cmp	r3, #0
    572a:	d036      	beq.n	579a <__aeabi_fadd+0x146>
    572c:	2280      	movs	r2, #128	; 0x80
    572e:	03d2      	lsls	r2, r2, #15
    5730:	4313      	orrs	r3, r2
    5732:	025b      	lsls	r3, r3, #9
    5734:	0a5b      	lsrs	r3, r3, #9
    5736:	24ff      	movs	r4, #255	; 0xff
    5738:	e7b6      	b.n	56a8 <__aeabi_fadd+0x54>
    573a:	3801      	subs	r0, #1
    573c:	2800      	cmp	r0, #0
    573e:	d13f      	bne.n	57c0 <__aeabi_fadd+0x16c>
    5740:	1bdb      	subs	r3, r3, r7
    5742:	015a      	lsls	r2, r3, #5
    5744:	d5cb      	bpl.n	56de <__aeabi_fadd+0x8a>
    5746:	019b      	lsls	r3, r3, #6
    5748:	099e      	lsrs	r6, r3, #6
    574a:	1c30      	adds	r0, r6, #0
    574c:	f002 fd52 	bl	81f4 <__clzsi2>
    5750:	3805      	subs	r0, #5
    5752:	4086      	lsls	r6, r0
    5754:	4284      	cmp	r4, r0
    5756:	dc23      	bgt.n	57a0 <__aeabi_fadd+0x14c>
    5758:	1b00      	subs	r0, r0, r4
    575a:	241f      	movs	r4, #31
    575c:	1c32      	adds	r2, r6, #0
    575e:	1c43      	adds	r3, r0, #1
    5760:	1a20      	subs	r0, r4, r0
    5762:	40da      	lsrs	r2, r3
    5764:	4086      	lsls	r6, r0
    5766:	1c13      	adds	r3, r2, #0
    5768:	1e74      	subs	r4, r6, #1
    576a:	41a6      	sbcs	r6, r4
    576c:	2400      	movs	r4, #0
    576e:	4333      	orrs	r3, r6
    5770:	e786      	b.n	5680 <__aeabi_fadd+0x2c>
    5772:	2f00      	cmp	r7, #0
    5774:	d100      	bne.n	5778 <__aeabi_fadd+0x124>
    5776:	e783      	b.n	5680 <__aeabi_fadd+0x2c>
    5778:	3901      	subs	r1, #1
    577a:	2900      	cmp	r1, #0
    577c:	d150      	bne.n	5820 <__aeabi_fadd+0x1cc>
    577e:	19db      	adds	r3, r3, r7
    5780:	e7c5      	b.n	570e <__aeabi_fadd+0xba>
    5782:	2800      	cmp	r0, #0
    5784:	d120      	bne.n	57c8 <__aeabi_fadd+0x174>
    5786:	1c62      	adds	r2, r4, #1
    5788:	b2d2      	uxtb	r2, r2
    578a:	2a01      	cmp	r2, #1
    578c:	dd5e      	ble.n	584c <__aeabi_fadd+0x1f8>
    578e:	1bde      	subs	r6, r3, r7
    5790:	0172      	lsls	r2, r6, #5
    5792:	d528      	bpl.n	57e6 <__aeabi_fadd+0x192>
    5794:	1afe      	subs	r6, r7, r3
    5796:	1c0d      	adds	r5, r1, #0
    5798:	e7d7      	b.n	574a <__aeabi_fadd+0xf6>
    579a:	24ff      	movs	r4, #255	; 0xff
    579c:	2300      	movs	r3, #0
    579e:	e783      	b.n	56a8 <__aeabi_fadd+0x54>
    57a0:	4b69      	ldr	r3, [pc, #420]	; (5948 <__aeabi_fadd+0x2f4>)
    57a2:	1a24      	subs	r4, r4, r0
    57a4:	4033      	ands	r3, r6
    57a6:	e76b      	b.n	5680 <__aeabi_fadd+0x2c>
    57a8:	2900      	cmp	r1, #0
    57aa:	d158      	bne.n	585e <__aeabi_fadd+0x20a>
    57ac:	1c62      	adds	r2, r4, #1
    57ae:	b2d1      	uxtb	r1, r2
    57b0:	2901      	cmp	r1, #1
    57b2:	dd3c      	ble.n	582e <__aeabi_fadd+0x1da>
    57b4:	2aff      	cmp	r2, #255	; 0xff
    57b6:	d037      	beq.n	5828 <__aeabi_fadd+0x1d4>
    57b8:	18fb      	adds	r3, r7, r3
    57ba:	085b      	lsrs	r3, r3, #1
    57bc:	1c14      	adds	r4, r2, #0
    57be:	e75f      	b.n	5680 <__aeabi_fadd+0x2c>
    57c0:	2cff      	cmp	r4, #255	; 0xff
    57c2:	d000      	beq.n	57c6 <__aeabi_fadd+0x172>
    57c4:	e77c      	b.n	56c0 <__aeabi_fadd+0x6c>
    57c6:	e75b      	b.n	5680 <__aeabi_fadd+0x2c>
    57c8:	2c00      	cmp	r4, #0
    57ca:	d01e      	beq.n	580a <__aeabi_fadd+0x1b6>
    57cc:	2aff      	cmp	r2, #255	; 0xff
    57ce:	d023      	beq.n	5818 <__aeabi_fadd+0x1c4>
    57d0:	2480      	movs	r4, #128	; 0x80
    57d2:	04e4      	lsls	r4, r4, #19
    57d4:	4240      	negs	r0, r0
    57d6:	4323      	orrs	r3, r4
    57d8:	281b      	cmp	r0, #27
    57da:	dd5b      	ble.n	5894 <__aeabi_fadd+0x240>
    57dc:	2301      	movs	r3, #1
    57de:	1afb      	subs	r3, r7, r3
    57e0:	1c14      	adds	r4, r2, #0
    57e2:	1c0d      	adds	r5, r1, #0
    57e4:	e7ad      	b.n	5742 <__aeabi_fadd+0xee>
    57e6:	2e00      	cmp	r6, #0
    57e8:	d1af      	bne.n	574a <__aeabi_fadd+0xf6>
    57ea:	2300      	movs	r3, #0
    57ec:	2000      	movs	r0, #0
    57ee:	2400      	movs	r4, #0
    57f0:	e778      	b.n	56e4 <__aeabi_fadd+0x90>
    57f2:	1c3a      	adds	r2, r7, #0
    57f4:	40ca      	lsrs	r2, r1
    57f6:	4694      	mov	ip, r2
    57f8:	2220      	movs	r2, #32
    57fa:	1c3e      	adds	r6, r7, #0
    57fc:	1a51      	subs	r1, r2, r1
    57fe:	408e      	lsls	r6, r1
    5800:	4662      	mov	r2, ip
    5802:	1e77      	subs	r7, r6, #1
    5804:	41be      	sbcs	r6, r7
    5806:	4316      	orrs	r6, r2
    5808:	e780      	b.n	570c <__aeabi_fadd+0xb8>
    580a:	2b00      	cmp	r3, #0
    580c:	d03e      	beq.n	588c <__aeabi_fadd+0x238>
    580e:	43c0      	mvns	r0, r0
    5810:	2800      	cmp	r0, #0
    5812:	d0e4      	beq.n	57de <__aeabi_fadd+0x18a>
    5814:	2aff      	cmp	r2, #255	; 0xff
    5816:	d1df      	bne.n	57d8 <__aeabi_fadd+0x184>
    5818:	1c3b      	adds	r3, r7, #0
    581a:	24ff      	movs	r4, #255	; 0xff
    581c:	1c0d      	adds	r5, r1, #0
    581e:	e72f      	b.n	5680 <__aeabi_fadd+0x2c>
    5820:	2cff      	cmp	r4, #255	; 0xff
    5822:	d000      	beq.n	5826 <__aeabi_fadd+0x1d2>
    5824:	e76f      	b.n	5706 <__aeabi_fadd+0xb2>
    5826:	e72b      	b.n	5680 <__aeabi_fadd+0x2c>
    5828:	24ff      	movs	r4, #255	; 0xff
    582a:	2300      	movs	r3, #0
    582c:	e75a      	b.n	56e4 <__aeabi_fadd+0x90>
    582e:	2c00      	cmp	r4, #0
    5830:	d15a      	bne.n	58e8 <__aeabi_fadd+0x294>
    5832:	2b00      	cmp	r3, #0
    5834:	d07f      	beq.n	5936 <__aeabi_fadd+0x2e2>
    5836:	2f00      	cmp	r7, #0
    5838:	d100      	bne.n	583c <__aeabi_fadd+0x1e8>
    583a:	e721      	b.n	5680 <__aeabi_fadd+0x2c>
    583c:	19db      	adds	r3, r3, r7
    583e:	015a      	lsls	r2, r3, #5
    5840:	d400      	bmi.n	5844 <__aeabi_fadd+0x1f0>
    5842:	e74c      	b.n	56de <__aeabi_fadd+0x8a>
    5844:	4a40      	ldr	r2, [pc, #256]	; (5948 <__aeabi_fadd+0x2f4>)
    5846:	3401      	adds	r4, #1
    5848:	4013      	ands	r3, r2
    584a:	e719      	b.n	5680 <__aeabi_fadd+0x2c>
    584c:	2c00      	cmp	r4, #0
    584e:	d115      	bne.n	587c <__aeabi_fadd+0x228>
    5850:	2b00      	cmp	r3, #0
    5852:	d12f      	bne.n	58b4 <__aeabi_fadd+0x260>
    5854:	2f00      	cmp	r7, #0
    5856:	d05d      	beq.n	5914 <__aeabi_fadd+0x2c0>
    5858:	1c3b      	adds	r3, r7, #0
    585a:	1c0d      	adds	r5, r1, #0
    585c:	e710      	b.n	5680 <__aeabi_fadd+0x2c>
    585e:	2c00      	cmp	r4, #0
    5860:	d121      	bne.n	58a6 <__aeabi_fadd+0x252>
    5862:	2b00      	cmp	r3, #0
    5864:	d053      	beq.n	590e <__aeabi_fadd+0x2ba>
    5866:	43c9      	mvns	r1, r1
    5868:	2900      	cmp	r1, #0
    586a:	d004      	beq.n	5876 <__aeabi_fadd+0x222>
    586c:	2aff      	cmp	r2, #255	; 0xff
    586e:	d04b      	beq.n	5908 <__aeabi_fadd+0x2b4>
    5870:	291b      	cmp	r1, #27
    5872:	dd57      	ble.n	5924 <__aeabi_fadd+0x2d0>
    5874:	2301      	movs	r3, #1
    5876:	19db      	adds	r3, r3, r7
    5878:	1c14      	adds	r4, r2, #0
    587a:	e748      	b.n	570e <__aeabi_fadd+0xba>
    587c:	2b00      	cmp	r3, #0
    587e:	d122      	bne.n	58c6 <__aeabi_fadd+0x272>
    5880:	2f00      	cmp	r7, #0
    5882:	d04a      	beq.n	591a <__aeabi_fadd+0x2c6>
    5884:	1c3b      	adds	r3, r7, #0
    5886:	1c0d      	adds	r5, r1, #0
    5888:	24ff      	movs	r4, #255	; 0xff
    588a:	e6f9      	b.n	5680 <__aeabi_fadd+0x2c>
    588c:	1c3b      	adds	r3, r7, #0
    588e:	1c14      	adds	r4, r2, #0
    5890:	1c0d      	adds	r5, r1, #0
    5892:	e6f5      	b.n	5680 <__aeabi_fadd+0x2c>
    5894:	1c1d      	adds	r5, r3, #0
    5896:	2420      	movs	r4, #32
    5898:	40c5      	lsrs	r5, r0
    589a:	1a20      	subs	r0, r4, r0
    589c:	4083      	lsls	r3, r0
    589e:	1e58      	subs	r0, r3, #1
    58a0:	4183      	sbcs	r3, r0
    58a2:	432b      	orrs	r3, r5
    58a4:	e79b      	b.n	57de <__aeabi_fadd+0x18a>
    58a6:	2aff      	cmp	r2, #255	; 0xff
    58a8:	d02e      	beq.n	5908 <__aeabi_fadd+0x2b4>
    58aa:	2480      	movs	r4, #128	; 0x80
    58ac:	04e4      	lsls	r4, r4, #19
    58ae:	4249      	negs	r1, r1
    58b0:	4323      	orrs	r3, r4
    58b2:	e7dd      	b.n	5870 <__aeabi_fadd+0x21c>
    58b4:	2f00      	cmp	r7, #0
    58b6:	d100      	bne.n	58ba <__aeabi_fadd+0x266>
    58b8:	e6e2      	b.n	5680 <__aeabi_fadd+0x2c>
    58ba:	1bda      	subs	r2, r3, r7
    58bc:	0150      	lsls	r0, r2, #5
    58be:	d53c      	bpl.n	593a <__aeabi_fadd+0x2e6>
    58c0:	1afb      	subs	r3, r7, r3
    58c2:	1c0d      	adds	r5, r1, #0
    58c4:	e6dc      	b.n	5680 <__aeabi_fadd+0x2c>
    58c6:	24ff      	movs	r4, #255	; 0xff
    58c8:	2f00      	cmp	r7, #0
    58ca:	d100      	bne.n	58ce <__aeabi_fadd+0x27a>
    58cc:	e6d8      	b.n	5680 <__aeabi_fadd+0x2c>
    58ce:	2280      	movs	r2, #128	; 0x80
    58d0:	08db      	lsrs	r3, r3, #3
    58d2:	03d2      	lsls	r2, r2, #15
    58d4:	4213      	tst	r3, r2
    58d6:	d004      	beq.n	58e2 <__aeabi_fadd+0x28e>
    58d8:	08fe      	lsrs	r6, r7, #3
    58da:	4216      	tst	r6, r2
    58dc:	d101      	bne.n	58e2 <__aeabi_fadd+0x28e>
    58de:	1c33      	adds	r3, r6, #0
    58e0:	1c0d      	adds	r5, r1, #0
    58e2:	00db      	lsls	r3, r3, #3
    58e4:	24ff      	movs	r4, #255	; 0xff
    58e6:	e6cb      	b.n	5680 <__aeabi_fadd+0x2c>
    58e8:	2b00      	cmp	r3, #0
    58ea:	d00d      	beq.n	5908 <__aeabi_fadd+0x2b4>
    58ec:	24ff      	movs	r4, #255	; 0xff
    58ee:	2f00      	cmp	r7, #0
    58f0:	d100      	bne.n	58f4 <__aeabi_fadd+0x2a0>
    58f2:	e6c5      	b.n	5680 <__aeabi_fadd+0x2c>
    58f4:	2280      	movs	r2, #128	; 0x80
    58f6:	08db      	lsrs	r3, r3, #3
    58f8:	03d2      	lsls	r2, r2, #15
    58fa:	4213      	tst	r3, r2
    58fc:	d0f1      	beq.n	58e2 <__aeabi_fadd+0x28e>
    58fe:	08fe      	lsrs	r6, r7, #3
    5900:	4216      	tst	r6, r2
    5902:	d1ee      	bne.n	58e2 <__aeabi_fadd+0x28e>
    5904:	1c33      	adds	r3, r6, #0
    5906:	e7ec      	b.n	58e2 <__aeabi_fadd+0x28e>
    5908:	1c3b      	adds	r3, r7, #0
    590a:	24ff      	movs	r4, #255	; 0xff
    590c:	e6b8      	b.n	5680 <__aeabi_fadd+0x2c>
    590e:	1c3b      	adds	r3, r7, #0
    5910:	1c14      	adds	r4, r2, #0
    5912:	e6b5      	b.n	5680 <__aeabi_fadd+0x2c>
    5914:	1c23      	adds	r3, r4, #0
    5916:	2000      	movs	r0, #0
    5918:	e6e4      	b.n	56e4 <__aeabi_fadd+0x90>
    591a:	2380      	movs	r3, #128	; 0x80
    591c:	2000      	movs	r0, #0
    591e:	049b      	lsls	r3, r3, #18
    5920:	24ff      	movs	r4, #255	; 0xff
    5922:	e6df      	b.n	56e4 <__aeabi_fadd+0x90>
    5924:	1c1e      	adds	r6, r3, #0
    5926:	2420      	movs	r4, #32
    5928:	40ce      	lsrs	r6, r1
    592a:	1a61      	subs	r1, r4, r1
    592c:	408b      	lsls	r3, r1
    592e:	1e59      	subs	r1, r3, #1
    5930:	418b      	sbcs	r3, r1
    5932:	4333      	orrs	r3, r6
    5934:	e79f      	b.n	5876 <__aeabi_fadd+0x222>
    5936:	1c3b      	adds	r3, r7, #0
    5938:	e6a2      	b.n	5680 <__aeabi_fadd+0x2c>
    593a:	1e13      	subs	r3, r2, #0
    593c:	d000      	beq.n	5940 <__aeabi_fadd+0x2ec>
    593e:	e6ce      	b.n	56de <__aeabi_fadd+0x8a>
    5940:	2300      	movs	r3, #0
    5942:	2000      	movs	r0, #0
    5944:	e6ce      	b.n	56e4 <__aeabi_fadd+0x90>
    5946:	46c0      	nop			; (mov r8, r8)
    5948:	fbffffff 	.word	0xfbffffff

0000594c <__aeabi_fdiv>:
    594c:	b5f0      	push	{r4, r5, r6, r7, lr}
    594e:	4656      	mov	r6, sl
    5950:	464d      	mov	r5, r9
    5952:	465f      	mov	r7, fp
    5954:	4644      	mov	r4, r8
    5956:	b4f0      	push	{r4, r5, r6, r7}
    5958:	0243      	lsls	r3, r0, #9
    595a:	0045      	lsls	r5, r0, #1
    595c:	0fc7      	lsrs	r7, r0, #31
    595e:	b083      	sub	sp, #12
    5960:	468a      	mov	sl, r1
    5962:	0a5c      	lsrs	r4, r3, #9
    5964:	0e2e      	lsrs	r6, r5, #24
    5966:	46b9      	mov	r9, r7
    5968:	d041      	beq.n	59ee <__aeabi_fdiv+0xa2>
    596a:	2eff      	cmp	r6, #255	; 0xff
    596c:	d026      	beq.n	59bc <__aeabi_fdiv+0x70>
    596e:	2380      	movs	r3, #128	; 0x80
    5970:	041b      	lsls	r3, r3, #16
    5972:	4323      	orrs	r3, r4
    5974:	00dc      	lsls	r4, r3, #3
    5976:	2300      	movs	r3, #0
    5978:	4698      	mov	r8, r3
    597a:	469b      	mov	fp, r3
    597c:	3e7f      	subs	r6, #127	; 0x7f
    597e:	4653      	mov	r3, sl
    5980:	025b      	lsls	r3, r3, #9
    5982:	0a5d      	lsrs	r5, r3, #9
    5984:	4653      	mov	r3, sl
    5986:	005a      	lsls	r2, r3, #1
    5988:	0fdb      	lsrs	r3, r3, #31
    598a:	0e12      	lsrs	r2, r2, #24
    598c:	469a      	mov	sl, r3
    598e:	d039      	beq.n	5a04 <__aeabi_fdiv+0xb8>
    5990:	2aff      	cmp	r2, #255	; 0xff
    5992:	d033      	beq.n	59fc <__aeabi_fdiv+0xb0>
    5994:	2380      	movs	r3, #128	; 0x80
    5996:	041b      	lsls	r3, r3, #16
    5998:	432b      	orrs	r3, r5
    599a:	00dd      	lsls	r5, r3, #3
    599c:	2300      	movs	r3, #0
    599e:	3a7f      	subs	r2, #127	; 0x7f
    59a0:	4651      	mov	r1, sl
    59a2:	1ab2      	subs	r2, r6, r2
    59a4:	4646      	mov	r6, r8
    59a6:	4079      	eors	r1, r7
    59a8:	1c08      	adds	r0, r1, #0
    59aa:	9201      	str	r2, [sp, #4]
    59ac:	431e      	orrs	r6, r3
    59ae:	2e0f      	cmp	r6, #15
    59b0:	d900      	bls.n	59b4 <__aeabi_fdiv+0x68>
    59b2:	e076      	b.n	5aa2 <__aeabi_fdiv+0x156>
    59b4:	4a7e      	ldr	r2, [pc, #504]	; (5bb0 <__aeabi_fdiv+0x264>)
    59b6:	00b6      	lsls	r6, r6, #2
    59b8:	5996      	ldr	r6, [r2, r6]
    59ba:	46b7      	mov	pc, r6
    59bc:	2c00      	cmp	r4, #0
    59be:	d130      	bne.n	5a22 <__aeabi_fdiv+0xd6>
    59c0:	2308      	movs	r3, #8
    59c2:	4698      	mov	r8, r3
    59c4:	3b06      	subs	r3, #6
    59c6:	469b      	mov	fp, r3
    59c8:	e7d9      	b.n	597e <__aeabi_fdiv+0x32>
    59ca:	2380      	movs	r3, #128	; 0x80
    59cc:	2100      	movs	r1, #0
    59ce:	03db      	lsls	r3, r3, #15
    59d0:	24ff      	movs	r4, #255	; 0xff
    59d2:	025b      	lsls	r3, r3, #9
    59d4:	05e4      	lsls	r4, r4, #23
    59d6:	0a5b      	lsrs	r3, r3, #9
    59d8:	07c9      	lsls	r1, r1, #31
    59da:	4323      	orrs	r3, r4
    59dc:	430b      	orrs	r3, r1
    59de:	1c18      	adds	r0, r3, #0
    59e0:	b003      	add	sp, #12
    59e2:	bc3c      	pop	{r2, r3, r4, r5}
    59e4:	4690      	mov	r8, r2
    59e6:	4699      	mov	r9, r3
    59e8:	46a2      	mov	sl, r4
    59ea:	46ab      	mov	fp, r5
    59ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    59ee:	2c00      	cmp	r4, #0
    59f0:	d128      	bne.n	5a44 <__aeabi_fdiv+0xf8>
    59f2:	2304      	movs	r3, #4
    59f4:	4698      	mov	r8, r3
    59f6:	3b03      	subs	r3, #3
    59f8:	469b      	mov	fp, r3
    59fa:	e7c0      	b.n	597e <__aeabi_fdiv+0x32>
    59fc:	2d00      	cmp	r5, #0
    59fe:	d11f      	bne.n	5a40 <__aeabi_fdiv+0xf4>
    5a00:	2302      	movs	r3, #2
    5a02:	e002      	b.n	5a0a <__aeabi_fdiv+0xbe>
    5a04:	2d00      	cmp	r5, #0
    5a06:	d111      	bne.n	5a2c <__aeabi_fdiv+0xe0>
    5a08:	2301      	movs	r3, #1
    5a0a:	1ab2      	subs	r2, r6, r2
    5a0c:	4650      	mov	r0, sl
    5a0e:	4646      	mov	r6, r8
    5a10:	4078      	eors	r0, r7
    5a12:	9201      	str	r2, [sp, #4]
    5a14:	431e      	orrs	r6, r3
    5a16:	2e0f      	cmp	r6, #15
    5a18:	d827      	bhi.n	5a6a <__aeabi_fdiv+0x11e>
    5a1a:	4966      	ldr	r1, [pc, #408]	; (5bb4 <__aeabi_fdiv+0x268>)
    5a1c:	00b6      	lsls	r6, r6, #2
    5a1e:	5989      	ldr	r1, [r1, r6]
    5a20:	468f      	mov	pc, r1
    5a22:	230c      	movs	r3, #12
    5a24:	4698      	mov	r8, r3
    5a26:	3b09      	subs	r3, #9
    5a28:	469b      	mov	fp, r3
    5a2a:	e7a8      	b.n	597e <__aeabi_fdiv+0x32>
    5a2c:	1c28      	adds	r0, r5, #0
    5a2e:	f002 fbe1 	bl	81f4 <__clzsi2>
    5a32:	2276      	movs	r2, #118	; 0x76
    5a34:	1f43      	subs	r3, r0, #5
    5a36:	4252      	negs	r2, r2
    5a38:	409d      	lsls	r5, r3
    5a3a:	1a12      	subs	r2, r2, r0
    5a3c:	2300      	movs	r3, #0
    5a3e:	e7af      	b.n	59a0 <__aeabi_fdiv+0x54>
    5a40:	2303      	movs	r3, #3
    5a42:	e7ad      	b.n	59a0 <__aeabi_fdiv+0x54>
    5a44:	1c20      	adds	r0, r4, #0
    5a46:	f002 fbd5 	bl	81f4 <__clzsi2>
    5a4a:	1f43      	subs	r3, r0, #5
    5a4c:	409c      	lsls	r4, r3
    5a4e:	2376      	movs	r3, #118	; 0x76
    5a50:	425b      	negs	r3, r3
    5a52:	1a1e      	subs	r6, r3, r0
    5a54:	2300      	movs	r3, #0
    5a56:	4698      	mov	r8, r3
    5a58:	469b      	mov	fp, r3
    5a5a:	e790      	b.n	597e <__aeabi_fdiv+0x32>
    5a5c:	2500      	movs	r5, #0
    5a5e:	46d1      	mov	r9, sl
    5a60:	469b      	mov	fp, r3
    5a62:	465b      	mov	r3, fp
    5a64:	4648      	mov	r0, r9
    5a66:	2b02      	cmp	r3, #2
    5a68:	d16f      	bne.n	5b4a <__aeabi_fdiv+0x1fe>
    5a6a:	2101      	movs	r1, #1
    5a6c:	24ff      	movs	r4, #255	; 0xff
    5a6e:	4001      	ands	r1, r0
    5a70:	2300      	movs	r3, #0
    5a72:	e7ae      	b.n	59d2 <__aeabi_fdiv+0x86>
    5a74:	237e      	movs	r3, #126	; 0x7e
    5a76:	9a01      	ldr	r2, [sp, #4]
    5a78:	425b      	negs	r3, r3
    5a7a:	1a9b      	subs	r3, r3, r2
    5a7c:	2b1b      	cmp	r3, #27
    5a7e:	dd6d      	ble.n	5b5c <__aeabi_fdiv+0x210>
    5a80:	2101      	movs	r1, #1
    5a82:	464b      	mov	r3, r9
    5a84:	4019      	ands	r1, r3
    5a86:	2400      	movs	r4, #0
    5a88:	2300      	movs	r3, #0
    5a8a:	e7a2      	b.n	59d2 <__aeabi_fdiv+0x86>
    5a8c:	2380      	movs	r3, #128	; 0x80
    5a8e:	03db      	lsls	r3, r3, #15
    5a90:	421c      	tst	r4, r3
    5a92:	d149      	bne.n	5b28 <__aeabi_fdiv+0x1dc>
    5a94:	2380      	movs	r3, #128	; 0x80
    5a96:	03db      	lsls	r3, r3, #15
    5a98:	4323      	orrs	r3, r4
    5a9a:	025b      	lsls	r3, r3, #9
    5a9c:	0a5b      	lsrs	r3, r3, #9
    5a9e:	1c39      	adds	r1, r7, #0
    5aa0:	e796      	b.n	59d0 <__aeabi_fdiv+0x84>
    5aa2:	0163      	lsls	r3, r4, #5
    5aa4:	016d      	lsls	r5, r5, #5
    5aa6:	42ab      	cmp	r3, r5
    5aa8:	d337      	bcc.n	5b1a <__aeabi_fdiv+0x1ce>
    5aaa:	4689      	mov	r9, r1
    5aac:	201a      	movs	r0, #26
    5aae:	2101      	movs	r1, #1
    5ab0:	1b5b      	subs	r3, r3, r5
    5ab2:	2401      	movs	r4, #1
    5ab4:	1c1e      	adds	r6, r3, #0
    5ab6:	0049      	lsls	r1, r1, #1
    5ab8:	005b      	lsls	r3, r3, #1
    5aba:	2e00      	cmp	r6, #0
    5abc:	db01      	blt.n	5ac2 <__aeabi_fdiv+0x176>
    5abe:	42ab      	cmp	r3, r5
    5ac0:	d301      	bcc.n	5ac6 <__aeabi_fdiv+0x17a>
    5ac2:	1b5b      	subs	r3, r3, r5
    5ac4:	4321      	orrs	r1, r4
    5ac6:	3801      	subs	r0, #1
    5ac8:	2800      	cmp	r0, #0
    5aca:	d1f3      	bne.n	5ab4 <__aeabi_fdiv+0x168>
    5acc:	1e58      	subs	r0, r3, #1
    5ace:	4183      	sbcs	r3, r0
    5ad0:	430b      	orrs	r3, r1
    5ad2:	1c1d      	adds	r5, r3, #0
    5ad4:	9c01      	ldr	r4, [sp, #4]
    5ad6:	347f      	adds	r4, #127	; 0x7f
    5ad8:	2c00      	cmp	r4, #0
    5ada:	ddcb      	ble.n	5a74 <__aeabi_fdiv+0x128>
    5adc:	076b      	lsls	r3, r5, #29
    5ade:	d004      	beq.n	5aea <__aeabi_fdiv+0x19e>
    5ae0:	230f      	movs	r3, #15
    5ae2:	402b      	ands	r3, r5
    5ae4:	2b04      	cmp	r3, #4
    5ae6:	d000      	beq.n	5aea <__aeabi_fdiv+0x19e>
    5ae8:	3504      	adds	r5, #4
    5aea:	012b      	lsls	r3, r5, #4
    5aec:	d504      	bpl.n	5af8 <__aeabi_fdiv+0x1ac>
    5aee:	9a01      	ldr	r2, [sp, #4]
    5af0:	4b31      	ldr	r3, [pc, #196]	; (5bb8 <__aeabi_fdiv+0x26c>)
    5af2:	3280      	adds	r2, #128	; 0x80
    5af4:	1c14      	adds	r4, r2, #0
    5af6:	401d      	ands	r5, r3
    5af8:	2cfe      	cmp	r4, #254	; 0xfe
    5afa:	dd07      	ble.n	5b0c <__aeabi_fdiv+0x1c0>
    5afc:	464b      	mov	r3, r9
    5afe:	2101      	movs	r1, #1
    5b00:	24ff      	movs	r4, #255	; 0xff
    5b02:	4019      	ands	r1, r3
    5b04:	2300      	movs	r3, #0
    5b06:	e764      	b.n	59d2 <__aeabi_fdiv+0x86>
    5b08:	1c25      	adds	r5, r4, #0
    5b0a:	e7aa      	b.n	5a62 <__aeabi_fdiv+0x116>
    5b0c:	2101      	movs	r1, #1
    5b0e:	464a      	mov	r2, r9
    5b10:	01ab      	lsls	r3, r5, #6
    5b12:	0a5b      	lsrs	r3, r3, #9
    5b14:	b2e4      	uxtb	r4, r4
    5b16:	4011      	ands	r1, r2
    5b18:	e75b      	b.n	59d2 <__aeabi_fdiv+0x86>
    5b1a:	9a01      	ldr	r2, [sp, #4]
    5b1c:	4689      	mov	r9, r1
    5b1e:	3a01      	subs	r2, #1
    5b20:	9201      	str	r2, [sp, #4]
    5b22:	201b      	movs	r0, #27
    5b24:	2100      	movs	r1, #0
    5b26:	e7c4      	b.n	5ab2 <__aeabi_fdiv+0x166>
    5b28:	421d      	tst	r5, r3
    5b2a:	d007      	beq.n	5b3c <__aeabi_fdiv+0x1f0>
    5b2c:	4323      	orrs	r3, r4
    5b2e:	025b      	lsls	r3, r3, #9
    5b30:	0a5b      	lsrs	r3, r3, #9
    5b32:	1c39      	adds	r1, r7, #0
    5b34:	e74c      	b.n	59d0 <__aeabi_fdiv+0x84>
    5b36:	2500      	movs	r5, #0
    5b38:	0263      	lsls	r3, r4, #9
    5b3a:	d5ab      	bpl.n	5a94 <__aeabi_fdiv+0x148>
    5b3c:	2380      	movs	r3, #128	; 0x80
    5b3e:	03db      	lsls	r3, r3, #15
    5b40:	432b      	orrs	r3, r5
    5b42:	025b      	lsls	r3, r3, #9
    5b44:	0a5b      	lsrs	r3, r3, #9
    5b46:	4651      	mov	r1, sl
    5b48:	e742      	b.n	59d0 <__aeabi_fdiv+0x84>
    5b4a:	2b03      	cmp	r3, #3
    5b4c:	d025      	beq.n	5b9a <__aeabi_fdiv+0x24e>
    5b4e:	2b01      	cmp	r3, #1
    5b50:	d1c0      	bne.n	5ad4 <__aeabi_fdiv+0x188>
    5b52:	2101      	movs	r1, #1
    5b54:	2400      	movs	r4, #0
    5b56:	4001      	ands	r1, r0
    5b58:	2300      	movs	r3, #0
    5b5a:	e73a      	b.n	59d2 <__aeabi_fdiv+0x86>
    5b5c:	1c29      	adds	r1, r5, #0
    5b5e:	40d9      	lsrs	r1, r3
    5b60:	1c2b      	adds	r3, r5, #0
    5b62:	9a01      	ldr	r2, [sp, #4]
    5b64:	329e      	adds	r2, #158	; 0x9e
    5b66:	4093      	lsls	r3, r2
    5b68:	1e5d      	subs	r5, r3, #1
    5b6a:	41ab      	sbcs	r3, r5
    5b6c:	430b      	orrs	r3, r1
    5b6e:	075a      	lsls	r2, r3, #29
    5b70:	d004      	beq.n	5b7c <__aeabi_fdiv+0x230>
    5b72:	220f      	movs	r2, #15
    5b74:	401a      	ands	r2, r3
    5b76:	2a04      	cmp	r2, #4
    5b78:	d000      	beq.n	5b7c <__aeabi_fdiv+0x230>
    5b7a:	3304      	adds	r3, #4
    5b7c:	015a      	lsls	r2, r3, #5
    5b7e:	d505      	bpl.n	5b8c <__aeabi_fdiv+0x240>
    5b80:	464b      	mov	r3, r9
    5b82:	2101      	movs	r1, #1
    5b84:	2401      	movs	r4, #1
    5b86:	4019      	ands	r1, r3
    5b88:	2300      	movs	r3, #0
    5b8a:	e722      	b.n	59d2 <__aeabi_fdiv+0x86>
    5b8c:	2101      	movs	r1, #1
    5b8e:	464a      	mov	r2, r9
    5b90:	019b      	lsls	r3, r3, #6
    5b92:	0a5b      	lsrs	r3, r3, #9
    5b94:	4011      	ands	r1, r2
    5b96:	2400      	movs	r4, #0
    5b98:	e71b      	b.n	59d2 <__aeabi_fdiv+0x86>
    5b9a:	2380      	movs	r3, #128	; 0x80
    5b9c:	2101      	movs	r1, #1
    5b9e:	464a      	mov	r2, r9
    5ba0:	03db      	lsls	r3, r3, #15
    5ba2:	432b      	orrs	r3, r5
    5ba4:	025b      	lsls	r3, r3, #9
    5ba6:	400a      	ands	r2, r1
    5ba8:	0a5b      	lsrs	r3, r3, #9
    5baa:	1c11      	adds	r1, r2, #0
    5bac:	e710      	b.n	59d0 <__aeabi_fdiv+0x84>
    5bae:	46c0      	nop			; (mov r8, r8)
    5bb0:	0000e260 	.word	0x0000e260
    5bb4:	0000e2a0 	.word	0x0000e2a0
    5bb8:	f7ffffff 	.word	0xf7ffffff

00005bbc <__eqsf2>:
    5bbc:	0243      	lsls	r3, r0, #9
    5bbe:	b570      	push	{r4, r5, r6, lr}
    5bc0:	0042      	lsls	r2, r0, #1
    5bc2:	004c      	lsls	r4, r1, #1
    5bc4:	0a5d      	lsrs	r5, r3, #9
    5bc6:	0fc3      	lsrs	r3, r0, #31
    5bc8:	0248      	lsls	r0, r1, #9
    5bca:	0e12      	lsrs	r2, r2, #24
    5bcc:	0a46      	lsrs	r6, r0, #9
    5bce:	0e24      	lsrs	r4, r4, #24
    5bd0:	0fc9      	lsrs	r1, r1, #31
    5bd2:	2aff      	cmp	r2, #255	; 0xff
    5bd4:	d005      	beq.n	5be2 <__eqsf2+0x26>
    5bd6:	2cff      	cmp	r4, #255	; 0xff
    5bd8:	d008      	beq.n	5bec <__eqsf2+0x30>
    5bda:	2001      	movs	r0, #1
    5bdc:	42a2      	cmp	r2, r4
    5bde:	d00b      	beq.n	5bf8 <__eqsf2+0x3c>
    5be0:	bd70      	pop	{r4, r5, r6, pc}
    5be2:	2001      	movs	r0, #1
    5be4:	2d00      	cmp	r5, #0
    5be6:	d1fb      	bne.n	5be0 <__eqsf2+0x24>
    5be8:	2cff      	cmp	r4, #255	; 0xff
    5bea:	d1f6      	bne.n	5bda <__eqsf2+0x1e>
    5bec:	2001      	movs	r0, #1
    5bee:	2e00      	cmp	r6, #0
    5bf0:	d1f6      	bne.n	5be0 <__eqsf2+0x24>
    5bf2:	2001      	movs	r0, #1
    5bf4:	42a2      	cmp	r2, r4
    5bf6:	d1f3      	bne.n	5be0 <__eqsf2+0x24>
    5bf8:	42b5      	cmp	r5, r6
    5bfa:	d1f1      	bne.n	5be0 <__eqsf2+0x24>
    5bfc:	428b      	cmp	r3, r1
    5bfe:	d005      	beq.n	5c0c <__eqsf2+0x50>
    5c00:	2a00      	cmp	r2, #0
    5c02:	d1ed      	bne.n	5be0 <__eqsf2+0x24>
    5c04:	1c28      	adds	r0, r5, #0
    5c06:	1e43      	subs	r3, r0, #1
    5c08:	4198      	sbcs	r0, r3
    5c0a:	e7e9      	b.n	5be0 <__eqsf2+0x24>
    5c0c:	2000      	movs	r0, #0
    5c0e:	e7e7      	b.n	5be0 <__eqsf2+0x24>

00005c10 <__gesf2>:
    5c10:	b5f0      	push	{r4, r5, r6, r7, lr}
    5c12:	0243      	lsls	r3, r0, #9
    5c14:	024d      	lsls	r5, r1, #9
    5c16:	004a      	lsls	r2, r1, #1
    5c18:	0044      	lsls	r4, r0, #1
    5c1a:	0a5e      	lsrs	r6, r3, #9
    5c1c:	0e24      	lsrs	r4, r4, #24
    5c1e:	0fc3      	lsrs	r3, r0, #31
    5c20:	0a6d      	lsrs	r5, r5, #9
    5c22:	0e12      	lsrs	r2, r2, #24
    5c24:	0fc9      	lsrs	r1, r1, #31
    5c26:	2cff      	cmp	r4, #255	; 0xff
    5c28:	d00d      	beq.n	5c46 <__gesf2+0x36>
    5c2a:	2aff      	cmp	r2, #255	; 0xff
    5c2c:	d031      	beq.n	5c92 <__gesf2+0x82>
    5c2e:	2c00      	cmp	r4, #0
    5c30:	d10d      	bne.n	5c4e <__gesf2+0x3e>
    5c32:	4277      	negs	r7, r6
    5c34:	4177      	adcs	r7, r6
    5c36:	2a00      	cmp	r2, #0
    5c38:	d123      	bne.n	5c82 <__gesf2+0x72>
    5c3a:	2d00      	cmp	r5, #0
    5c3c:	d121      	bne.n	5c82 <__gesf2+0x72>
    5c3e:	2000      	movs	r0, #0
    5c40:	2f00      	cmp	r7, #0
    5c42:	d10b      	bne.n	5c5c <__gesf2+0x4c>
    5c44:	e007      	b.n	5c56 <__gesf2+0x46>
    5c46:	2e00      	cmp	r6, #0
    5c48:	d128      	bne.n	5c9c <__gesf2+0x8c>
    5c4a:	2aff      	cmp	r2, #255	; 0xff
    5c4c:	d021      	beq.n	5c92 <__gesf2+0x82>
    5c4e:	2a00      	cmp	r2, #0
    5c50:	d005      	beq.n	5c5e <__gesf2+0x4e>
    5c52:	428b      	cmp	r3, r1
    5c54:	d007      	beq.n	5c66 <__gesf2+0x56>
    5c56:	4258      	negs	r0, r3
    5c58:	2301      	movs	r3, #1
    5c5a:	4318      	orrs	r0, r3
    5c5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5c5e:	2d00      	cmp	r5, #0
    5c60:	d0f9      	beq.n	5c56 <__gesf2+0x46>
    5c62:	428b      	cmp	r3, r1
    5c64:	d1f7      	bne.n	5c56 <__gesf2+0x46>
    5c66:	4294      	cmp	r4, r2
    5c68:	dcf5      	bgt.n	5c56 <__gesf2+0x46>
    5c6a:	db04      	blt.n	5c76 <__gesf2+0x66>
    5c6c:	42ae      	cmp	r6, r5
    5c6e:	d8f2      	bhi.n	5c56 <__gesf2+0x46>
    5c70:	2000      	movs	r0, #0
    5c72:	42ae      	cmp	r6, r5
    5c74:	d2f2      	bcs.n	5c5c <__gesf2+0x4c>
    5c76:	4258      	negs	r0, r3
    5c78:	4143      	adcs	r3, r0
    5c7a:	2001      	movs	r0, #1
    5c7c:	425b      	negs	r3, r3
    5c7e:	4318      	orrs	r0, r3
    5c80:	e7ec      	b.n	5c5c <__gesf2+0x4c>
    5c82:	2f00      	cmp	r7, #0
    5c84:	d0e5      	beq.n	5c52 <__gesf2+0x42>
    5c86:	4248      	negs	r0, r1
    5c88:	4141      	adcs	r1, r0
    5c8a:	2001      	movs	r0, #1
    5c8c:	4249      	negs	r1, r1
    5c8e:	4308      	orrs	r0, r1
    5c90:	e7e4      	b.n	5c5c <__gesf2+0x4c>
    5c92:	2d00      	cmp	r5, #0
    5c94:	d102      	bne.n	5c9c <__gesf2+0x8c>
    5c96:	2c00      	cmp	r4, #0
    5c98:	d0cb      	beq.n	5c32 <__gesf2+0x22>
    5c9a:	e7da      	b.n	5c52 <__gesf2+0x42>
    5c9c:	2002      	movs	r0, #2
    5c9e:	4240      	negs	r0, r0
    5ca0:	e7dc      	b.n	5c5c <__gesf2+0x4c>
    5ca2:	46c0      	nop			; (mov r8, r8)

00005ca4 <__lesf2>:
    5ca4:	0243      	lsls	r3, r0, #9
    5ca6:	b5f0      	push	{r4, r5, r6, r7, lr}
    5ca8:	0042      	lsls	r2, r0, #1
    5caa:	004c      	lsls	r4, r1, #1
    5cac:	0a5e      	lsrs	r6, r3, #9
    5cae:	0fc3      	lsrs	r3, r0, #31
    5cb0:	0248      	lsls	r0, r1, #9
    5cb2:	0e12      	lsrs	r2, r2, #24
    5cb4:	0a45      	lsrs	r5, r0, #9
    5cb6:	0e24      	lsrs	r4, r4, #24
    5cb8:	0fc9      	lsrs	r1, r1, #31
    5cba:	2aff      	cmp	r2, #255	; 0xff
    5cbc:	d00f      	beq.n	5cde <__lesf2+0x3a>
    5cbe:	2cff      	cmp	r4, #255	; 0xff
    5cc0:	d01a      	beq.n	5cf8 <__lesf2+0x54>
    5cc2:	2a00      	cmp	r2, #0
    5cc4:	d110      	bne.n	5ce8 <__lesf2+0x44>
    5cc6:	4277      	negs	r7, r6
    5cc8:	4177      	adcs	r7, r6
    5cca:	2c00      	cmp	r4, #0
    5ccc:	d029      	beq.n	5d22 <__lesf2+0x7e>
    5cce:	2f00      	cmp	r7, #0
    5cd0:	d017      	beq.n	5d02 <__lesf2+0x5e>
    5cd2:	4248      	negs	r0, r1
    5cd4:	4141      	adcs	r1, r0
    5cd6:	2001      	movs	r0, #1
    5cd8:	4249      	negs	r1, r1
    5cda:	4308      	orrs	r0, r1
    5cdc:	e00b      	b.n	5cf6 <__lesf2+0x52>
    5cde:	2002      	movs	r0, #2
    5ce0:	2e00      	cmp	r6, #0
    5ce2:	d108      	bne.n	5cf6 <__lesf2+0x52>
    5ce4:	2cff      	cmp	r4, #255	; 0xff
    5ce6:	d007      	beq.n	5cf8 <__lesf2+0x54>
    5ce8:	2c00      	cmp	r4, #0
    5cea:	d10a      	bne.n	5d02 <__lesf2+0x5e>
    5cec:	2d00      	cmp	r5, #0
    5cee:	d108      	bne.n	5d02 <__lesf2+0x5e>
    5cf0:	4258      	negs	r0, r3
    5cf2:	2301      	movs	r3, #1
    5cf4:	4318      	orrs	r0, r3
    5cf6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5cf8:	2002      	movs	r0, #2
    5cfa:	2d00      	cmp	r5, #0
    5cfc:	d1fb      	bne.n	5cf6 <__lesf2+0x52>
    5cfe:	2a00      	cmp	r2, #0
    5d00:	d0e1      	beq.n	5cc6 <__lesf2+0x22>
    5d02:	428b      	cmp	r3, r1
    5d04:	d1f4      	bne.n	5cf0 <__lesf2+0x4c>
    5d06:	42a2      	cmp	r2, r4
    5d08:	dcf2      	bgt.n	5cf0 <__lesf2+0x4c>
    5d0a:	db04      	blt.n	5d16 <__lesf2+0x72>
    5d0c:	42ae      	cmp	r6, r5
    5d0e:	d8ef      	bhi.n	5cf0 <__lesf2+0x4c>
    5d10:	2000      	movs	r0, #0
    5d12:	42ae      	cmp	r6, r5
    5d14:	d2ef      	bcs.n	5cf6 <__lesf2+0x52>
    5d16:	4258      	negs	r0, r3
    5d18:	4143      	adcs	r3, r0
    5d1a:	2001      	movs	r0, #1
    5d1c:	425b      	negs	r3, r3
    5d1e:	4318      	orrs	r0, r3
    5d20:	e7e9      	b.n	5cf6 <__lesf2+0x52>
    5d22:	2d00      	cmp	r5, #0
    5d24:	d1d3      	bne.n	5cce <__lesf2+0x2a>
    5d26:	2000      	movs	r0, #0
    5d28:	2f00      	cmp	r7, #0
    5d2a:	d1e4      	bne.n	5cf6 <__lesf2+0x52>
    5d2c:	e7e0      	b.n	5cf0 <__lesf2+0x4c>
    5d2e:	46c0      	nop			; (mov r8, r8)

00005d30 <__aeabi_fmul>:
    5d30:	b5f0      	push	{r4, r5, r6, r7, lr}
    5d32:	465f      	mov	r7, fp
    5d34:	4656      	mov	r6, sl
    5d36:	464d      	mov	r5, r9
    5d38:	4644      	mov	r4, r8
    5d3a:	b4f0      	push	{r4, r5, r6, r7}
    5d3c:	0245      	lsls	r5, r0, #9
    5d3e:	0046      	lsls	r6, r0, #1
    5d40:	0fc4      	lsrs	r4, r0, #31
    5d42:	b083      	sub	sp, #12
    5d44:	1c0f      	adds	r7, r1, #0
    5d46:	0a6d      	lsrs	r5, r5, #9
    5d48:	0e36      	lsrs	r6, r6, #24
    5d4a:	46a3      	mov	fp, r4
    5d4c:	d045      	beq.n	5dda <__aeabi_fmul+0xaa>
    5d4e:	2eff      	cmp	r6, #255	; 0xff
    5d50:	d025      	beq.n	5d9e <__aeabi_fmul+0x6e>
    5d52:	2380      	movs	r3, #128	; 0x80
    5d54:	041b      	lsls	r3, r3, #16
    5d56:	431d      	orrs	r5, r3
    5d58:	2300      	movs	r3, #0
    5d5a:	469a      	mov	sl, r3
    5d5c:	00ed      	lsls	r5, r5, #3
    5d5e:	3e7f      	subs	r6, #127	; 0x7f
    5d60:	9301      	str	r3, [sp, #4]
    5d62:	027b      	lsls	r3, r7, #9
    5d64:	0a5b      	lsrs	r3, r3, #9
    5d66:	4698      	mov	r8, r3
    5d68:	0078      	lsls	r0, r7, #1
    5d6a:	0ffb      	lsrs	r3, r7, #31
    5d6c:	0e00      	lsrs	r0, r0, #24
    5d6e:	4699      	mov	r9, r3
    5d70:	d040      	beq.n	5df4 <__aeabi_fmul+0xc4>
    5d72:	28ff      	cmp	r0, #255	; 0xff
    5d74:	d038      	beq.n	5de8 <__aeabi_fmul+0xb8>
    5d76:	2380      	movs	r3, #128	; 0x80
    5d78:	4642      	mov	r2, r8
    5d7a:	041b      	lsls	r3, r3, #16
    5d7c:	4313      	orrs	r3, r2
    5d7e:	00db      	lsls	r3, r3, #3
    5d80:	4698      	mov	r8, r3
    5d82:	2300      	movs	r3, #0
    5d84:	387f      	subs	r0, #127	; 0x7f
    5d86:	464a      	mov	r2, r9
    5d88:	9f01      	ldr	r7, [sp, #4]
    5d8a:	1830      	adds	r0, r6, r0
    5d8c:	4062      	eors	r2, r4
    5d8e:	1c41      	adds	r1, r0, #1
    5d90:	431f      	orrs	r7, r3
    5d92:	2f0f      	cmp	r7, #15
    5d94:	d869      	bhi.n	5e6a <__aeabi_fmul+0x13a>
    5d96:	4e7d      	ldr	r6, [pc, #500]	; (5f8c <__aeabi_fmul+0x25c>)
    5d98:	00bf      	lsls	r7, r7, #2
    5d9a:	59f6      	ldr	r6, [r6, r7]
    5d9c:	46b7      	mov	pc, r6
    5d9e:	2d00      	cmp	r5, #0
    5da0:	d145      	bne.n	5e2e <__aeabi_fmul+0xfe>
    5da2:	2308      	movs	r3, #8
    5da4:	9301      	str	r3, [sp, #4]
    5da6:	3b06      	subs	r3, #6
    5da8:	469a      	mov	sl, r3
    5daa:	e7da      	b.n	5d62 <__aeabi_fmul+0x32>
    5dac:	4693      	mov	fp, r2
    5dae:	4653      	mov	r3, sl
    5db0:	2b02      	cmp	r3, #2
    5db2:	d12f      	bne.n	5e14 <__aeabi_fmul+0xe4>
    5db4:	465b      	mov	r3, fp
    5db6:	2401      	movs	r4, #1
    5db8:	2500      	movs	r5, #0
    5dba:	401c      	ands	r4, r3
    5dbc:	23ff      	movs	r3, #255	; 0xff
    5dbe:	026d      	lsls	r5, r5, #9
    5dc0:	05db      	lsls	r3, r3, #23
    5dc2:	0a6d      	lsrs	r5, r5, #9
    5dc4:	07e4      	lsls	r4, r4, #31
    5dc6:	431d      	orrs	r5, r3
    5dc8:	4325      	orrs	r5, r4
    5dca:	1c28      	adds	r0, r5, #0
    5dcc:	b003      	add	sp, #12
    5dce:	bc3c      	pop	{r2, r3, r4, r5}
    5dd0:	4690      	mov	r8, r2
    5dd2:	4699      	mov	r9, r3
    5dd4:	46a2      	mov	sl, r4
    5dd6:	46ab      	mov	fp, r5
    5dd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5dda:	2d00      	cmp	r5, #0
    5ddc:	d12c      	bne.n	5e38 <__aeabi_fmul+0x108>
    5dde:	2304      	movs	r3, #4
    5de0:	9301      	str	r3, [sp, #4]
    5de2:	3b03      	subs	r3, #3
    5de4:	469a      	mov	sl, r3
    5de6:	e7bc      	b.n	5d62 <__aeabi_fmul+0x32>
    5de8:	4643      	mov	r3, r8
    5dea:	425a      	negs	r2, r3
    5dec:	4153      	adcs	r3, r2
    5dee:	2203      	movs	r2, #3
    5df0:	1ad3      	subs	r3, r2, r3
    5df2:	e7c8      	b.n	5d86 <__aeabi_fmul+0x56>
    5df4:	4642      	mov	r2, r8
    5df6:	2301      	movs	r3, #1
    5df8:	2a00      	cmp	r2, #0
    5dfa:	d0c4      	beq.n	5d86 <__aeabi_fmul+0x56>
    5dfc:	4640      	mov	r0, r8
    5dfe:	f002 f9f9 	bl	81f4 <__clzsi2>
    5e02:	4642      	mov	r2, r8
    5e04:	1f43      	subs	r3, r0, #5
    5e06:	409a      	lsls	r2, r3
    5e08:	2376      	movs	r3, #118	; 0x76
    5e0a:	425b      	negs	r3, r3
    5e0c:	1a18      	subs	r0, r3, r0
    5e0e:	4690      	mov	r8, r2
    5e10:	2300      	movs	r3, #0
    5e12:	e7b8      	b.n	5d86 <__aeabi_fmul+0x56>
    5e14:	2b03      	cmp	r3, #3
    5e16:	d100      	bne.n	5e1a <__aeabi_fmul+0xea>
    5e18:	e0ad      	b.n	5f76 <__aeabi_fmul+0x246>
    5e1a:	2b01      	cmp	r3, #1
    5e1c:	d000      	beq.n	5e20 <__aeabi_fmul+0xf0>
    5e1e:	e08c      	b.n	5f3a <__aeabi_fmul+0x20a>
    5e20:	465b      	mov	r3, fp
    5e22:	4654      	mov	r4, sl
    5e24:	401c      	ands	r4, r3
    5e26:	b2e4      	uxtb	r4, r4
    5e28:	2300      	movs	r3, #0
    5e2a:	2500      	movs	r5, #0
    5e2c:	e7c7      	b.n	5dbe <__aeabi_fmul+0x8e>
    5e2e:	230c      	movs	r3, #12
    5e30:	9301      	str	r3, [sp, #4]
    5e32:	3b09      	subs	r3, #9
    5e34:	469a      	mov	sl, r3
    5e36:	e794      	b.n	5d62 <__aeabi_fmul+0x32>
    5e38:	1c28      	adds	r0, r5, #0
    5e3a:	f002 f9db 	bl	81f4 <__clzsi2>
    5e3e:	2676      	movs	r6, #118	; 0x76
    5e40:	1f43      	subs	r3, r0, #5
    5e42:	409d      	lsls	r5, r3
    5e44:	2300      	movs	r3, #0
    5e46:	4276      	negs	r6, r6
    5e48:	1a36      	subs	r6, r6, r0
    5e4a:	9301      	str	r3, [sp, #4]
    5e4c:	469a      	mov	sl, r3
    5e4e:	e788      	b.n	5d62 <__aeabi_fmul+0x32>
    5e50:	2580      	movs	r5, #128	; 0x80
    5e52:	2400      	movs	r4, #0
    5e54:	03ed      	lsls	r5, r5, #15
    5e56:	23ff      	movs	r3, #255	; 0xff
    5e58:	e7b1      	b.n	5dbe <__aeabi_fmul+0x8e>
    5e5a:	4645      	mov	r5, r8
    5e5c:	46cb      	mov	fp, r9
    5e5e:	469a      	mov	sl, r3
    5e60:	e7a5      	b.n	5dae <__aeabi_fmul+0x7e>
    5e62:	4645      	mov	r5, r8
    5e64:	4693      	mov	fp, r2
    5e66:	469a      	mov	sl, r3
    5e68:	e7a1      	b.n	5dae <__aeabi_fmul+0x7e>
    5e6a:	4643      	mov	r3, r8
    5e6c:	042c      	lsls	r4, r5, #16
    5e6e:	0c1b      	lsrs	r3, r3, #16
    5e70:	469c      	mov	ip, r3
    5e72:	0c23      	lsrs	r3, r4, #16
    5e74:	4644      	mov	r4, r8
    5e76:	0426      	lsls	r6, r4, #16
    5e78:	1c1c      	adds	r4, r3, #0
    5e7a:	0c36      	lsrs	r6, r6, #16
    5e7c:	0c2f      	lsrs	r7, r5, #16
    5e7e:	4374      	muls	r4, r6
    5e80:	1c35      	adds	r5, r6, #0
    5e82:	4666      	mov	r6, ip
    5e84:	437d      	muls	r5, r7
    5e86:	4373      	muls	r3, r6
    5e88:	4377      	muls	r7, r6
    5e8a:	18eb      	adds	r3, r5, r3
    5e8c:	0c26      	lsrs	r6, r4, #16
    5e8e:	199e      	adds	r6, r3, r6
    5e90:	42b5      	cmp	r5, r6
    5e92:	d903      	bls.n	5e9c <__aeabi_fmul+0x16c>
    5e94:	2380      	movs	r3, #128	; 0x80
    5e96:	025b      	lsls	r3, r3, #9
    5e98:	469c      	mov	ip, r3
    5e9a:	4467      	add	r7, ip
    5e9c:	0424      	lsls	r4, r4, #16
    5e9e:	0433      	lsls	r3, r6, #16
    5ea0:	0c24      	lsrs	r4, r4, #16
    5ea2:	191b      	adds	r3, r3, r4
    5ea4:	019d      	lsls	r5, r3, #6
    5ea6:	1e6c      	subs	r4, r5, #1
    5ea8:	41a5      	sbcs	r5, r4
    5eaa:	0e9b      	lsrs	r3, r3, #26
    5eac:	0c36      	lsrs	r6, r6, #16
    5eae:	432b      	orrs	r3, r5
    5eb0:	19bd      	adds	r5, r7, r6
    5eb2:	01ad      	lsls	r5, r5, #6
    5eb4:	431d      	orrs	r5, r3
    5eb6:	012b      	lsls	r3, r5, #4
    5eb8:	d504      	bpl.n	5ec4 <__aeabi_fmul+0x194>
    5eba:	2301      	movs	r3, #1
    5ebc:	0868      	lsrs	r0, r5, #1
    5ebe:	401d      	ands	r5, r3
    5ec0:	4305      	orrs	r5, r0
    5ec2:	1c08      	adds	r0, r1, #0
    5ec4:	1c03      	adds	r3, r0, #0
    5ec6:	337f      	adds	r3, #127	; 0x7f
    5ec8:	2b00      	cmp	r3, #0
    5eca:	dd2c      	ble.n	5f26 <__aeabi_fmul+0x1f6>
    5ecc:	0769      	lsls	r1, r5, #29
    5ece:	d004      	beq.n	5eda <__aeabi_fmul+0x1aa>
    5ed0:	210f      	movs	r1, #15
    5ed2:	4029      	ands	r1, r5
    5ed4:	2904      	cmp	r1, #4
    5ed6:	d000      	beq.n	5eda <__aeabi_fmul+0x1aa>
    5ed8:	3504      	adds	r5, #4
    5eda:	0129      	lsls	r1, r5, #4
    5edc:	d503      	bpl.n	5ee6 <__aeabi_fmul+0x1b6>
    5ede:	4b2c      	ldr	r3, [pc, #176]	; (5f90 <__aeabi_fmul+0x260>)
    5ee0:	401d      	ands	r5, r3
    5ee2:	1c03      	adds	r3, r0, #0
    5ee4:	3380      	adds	r3, #128	; 0x80
    5ee6:	2bfe      	cmp	r3, #254	; 0xfe
    5ee8:	dd17      	ble.n	5f1a <__aeabi_fmul+0x1ea>
    5eea:	2401      	movs	r4, #1
    5eec:	23ff      	movs	r3, #255	; 0xff
    5eee:	4014      	ands	r4, r2
    5ef0:	2500      	movs	r5, #0
    5ef2:	e764      	b.n	5dbe <__aeabi_fmul+0x8e>
    5ef4:	2080      	movs	r0, #128	; 0x80
    5ef6:	03c0      	lsls	r0, r0, #15
    5ef8:	4205      	tst	r5, r0
    5efa:	d009      	beq.n	5f10 <__aeabi_fmul+0x1e0>
    5efc:	4643      	mov	r3, r8
    5efe:	4203      	tst	r3, r0
    5f00:	d106      	bne.n	5f10 <__aeabi_fmul+0x1e0>
    5f02:	4645      	mov	r5, r8
    5f04:	4305      	orrs	r5, r0
    5f06:	026d      	lsls	r5, r5, #9
    5f08:	0a6d      	lsrs	r5, r5, #9
    5f0a:	464c      	mov	r4, r9
    5f0c:	23ff      	movs	r3, #255	; 0xff
    5f0e:	e756      	b.n	5dbe <__aeabi_fmul+0x8e>
    5f10:	4305      	orrs	r5, r0
    5f12:	026d      	lsls	r5, r5, #9
    5f14:	0a6d      	lsrs	r5, r5, #9
    5f16:	23ff      	movs	r3, #255	; 0xff
    5f18:	e751      	b.n	5dbe <__aeabi_fmul+0x8e>
    5f1a:	2401      	movs	r4, #1
    5f1c:	01ad      	lsls	r5, r5, #6
    5f1e:	0a6d      	lsrs	r5, r5, #9
    5f20:	b2db      	uxtb	r3, r3
    5f22:	4014      	ands	r4, r2
    5f24:	e74b      	b.n	5dbe <__aeabi_fmul+0x8e>
    5f26:	237e      	movs	r3, #126	; 0x7e
    5f28:	425b      	negs	r3, r3
    5f2a:	1a1b      	subs	r3, r3, r0
    5f2c:	2b1b      	cmp	r3, #27
    5f2e:	dd07      	ble.n	5f40 <__aeabi_fmul+0x210>
    5f30:	2401      	movs	r4, #1
    5f32:	2300      	movs	r3, #0
    5f34:	4014      	ands	r4, r2
    5f36:	2500      	movs	r5, #0
    5f38:	e741      	b.n	5dbe <__aeabi_fmul+0x8e>
    5f3a:	1c08      	adds	r0, r1, #0
    5f3c:	465a      	mov	r2, fp
    5f3e:	e7c1      	b.n	5ec4 <__aeabi_fmul+0x194>
    5f40:	309e      	adds	r0, #158	; 0x9e
    5f42:	1c29      	adds	r1, r5, #0
    5f44:	4085      	lsls	r5, r0
    5f46:	40d9      	lsrs	r1, r3
    5f48:	1e68      	subs	r0, r5, #1
    5f4a:	4185      	sbcs	r5, r0
    5f4c:	430d      	orrs	r5, r1
    5f4e:	076b      	lsls	r3, r5, #29
    5f50:	d004      	beq.n	5f5c <__aeabi_fmul+0x22c>
    5f52:	230f      	movs	r3, #15
    5f54:	402b      	ands	r3, r5
    5f56:	2b04      	cmp	r3, #4
    5f58:	d000      	beq.n	5f5c <__aeabi_fmul+0x22c>
    5f5a:	3504      	adds	r5, #4
    5f5c:	016b      	lsls	r3, r5, #5
    5f5e:	d504      	bpl.n	5f6a <__aeabi_fmul+0x23a>
    5f60:	2401      	movs	r4, #1
    5f62:	2301      	movs	r3, #1
    5f64:	4014      	ands	r4, r2
    5f66:	2500      	movs	r5, #0
    5f68:	e729      	b.n	5dbe <__aeabi_fmul+0x8e>
    5f6a:	2401      	movs	r4, #1
    5f6c:	01ad      	lsls	r5, r5, #6
    5f6e:	0a6d      	lsrs	r5, r5, #9
    5f70:	4014      	ands	r4, r2
    5f72:	2300      	movs	r3, #0
    5f74:	e723      	b.n	5dbe <__aeabi_fmul+0x8e>
    5f76:	2380      	movs	r3, #128	; 0x80
    5f78:	03db      	lsls	r3, r3, #15
    5f7a:	431d      	orrs	r5, r3
    5f7c:	2401      	movs	r4, #1
    5f7e:	465b      	mov	r3, fp
    5f80:	026d      	lsls	r5, r5, #9
    5f82:	4023      	ands	r3, r4
    5f84:	1c1c      	adds	r4, r3, #0
    5f86:	0a6d      	lsrs	r5, r5, #9
    5f88:	23ff      	movs	r3, #255	; 0xff
    5f8a:	e718      	b.n	5dbe <__aeabi_fmul+0x8e>
    5f8c:	0000e2e0 	.word	0x0000e2e0
    5f90:	f7ffffff 	.word	0xf7ffffff

00005f94 <__aeabi_fsub>:
    5f94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5f96:	004a      	lsls	r2, r1, #1
    5f98:	0243      	lsls	r3, r0, #9
    5f9a:	0044      	lsls	r4, r0, #1
    5f9c:	024d      	lsls	r5, r1, #9
    5f9e:	0fc0      	lsrs	r0, r0, #31
    5fa0:	0e24      	lsrs	r4, r4, #24
    5fa2:	1c06      	adds	r6, r0, #0
    5fa4:	099b      	lsrs	r3, r3, #6
    5fa6:	0e12      	lsrs	r2, r2, #24
    5fa8:	0fc9      	lsrs	r1, r1, #31
    5faa:	09ad      	lsrs	r5, r5, #6
    5fac:	2aff      	cmp	r2, #255	; 0xff
    5fae:	d100      	bne.n	5fb2 <__aeabi_fsub+0x1e>
    5fb0:	e075      	b.n	609e <__aeabi_fsub+0x10a>
    5fb2:	2701      	movs	r7, #1
    5fb4:	4079      	eors	r1, r7
    5fb6:	4288      	cmp	r0, r1
    5fb8:	d050      	beq.n	605c <__aeabi_fsub+0xc8>
    5fba:	1aa0      	subs	r0, r4, r2
    5fbc:	2800      	cmp	r0, #0
    5fbe:	dc00      	bgt.n	5fc2 <__aeabi_fsub+0x2e>
    5fc0:	e08f      	b.n	60e2 <__aeabi_fsub+0x14e>
    5fc2:	2a00      	cmp	r2, #0
    5fc4:	d11e      	bne.n	6004 <__aeabi_fsub+0x70>
    5fc6:	2d00      	cmp	r5, #0
    5fc8:	d000      	beq.n	5fcc <__aeabi_fsub+0x38>
    5fca:	e075      	b.n	60b8 <__aeabi_fsub+0x124>
    5fcc:	075a      	lsls	r2, r3, #29
    5fce:	d004      	beq.n	5fda <__aeabi_fsub+0x46>
    5fd0:	220f      	movs	r2, #15
    5fd2:	401a      	ands	r2, r3
    5fd4:	2a04      	cmp	r2, #4
    5fd6:	d000      	beq.n	5fda <__aeabi_fsub+0x46>
    5fd8:	3304      	adds	r3, #4
    5fda:	2280      	movs	r2, #128	; 0x80
    5fdc:	2001      	movs	r0, #1
    5fde:	04d2      	lsls	r2, r2, #19
    5fe0:	401a      	ands	r2, r3
    5fe2:	4030      	ands	r0, r6
    5fe4:	2a00      	cmp	r2, #0
    5fe6:	d032      	beq.n	604e <__aeabi_fsub+0xba>
    5fe8:	3401      	adds	r4, #1
    5fea:	2cff      	cmp	r4, #255	; 0xff
    5fec:	d100      	bne.n	5ff0 <__aeabi_fsub+0x5c>
    5fee:	e084      	b.n	60fa <__aeabi_fsub+0x166>
    5ff0:	019b      	lsls	r3, r3, #6
    5ff2:	0a5b      	lsrs	r3, r3, #9
    5ff4:	b2e4      	uxtb	r4, r4
    5ff6:	025b      	lsls	r3, r3, #9
    5ff8:	05e4      	lsls	r4, r4, #23
    5ffa:	0a5b      	lsrs	r3, r3, #9
    5ffc:	4323      	orrs	r3, r4
    5ffe:	07c0      	lsls	r0, r0, #31
    6000:	4318      	orrs	r0, r3
    6002:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6004:	2cff      	cmp	r4, #255	; 0xff
    6006:	d0e1      	beq.n	5fcc <__aeabi_fsub+0x38>
    6008:	2280      	movs	r2, #128	; 0x80
    600a:	04d2      	lsls	r2, r2, #19
    600c:	4315      	orrs	r5, r2
    600e:	281b      	cmp	r0, #27
    6010:	dd7a      	ble.n	6108 <__aeabi_fsub+0x174>
    6012:	2501      	movs	r5, #1
    6014:	1b5b      	subs	r3, r3, r5
    6016:	015a      	lsls	r2, r3, #5
    6018:	d55d      	bpl.n	60d6 <__aeabi_fsub+0x142>
    601a:	019b      	lsls	r3, r3, #6
    601c:	099f      	lsrs	r7, r3, #6
    601e:	1c38      	adds	r0, r7, #0
    6020:	f002 f8e8 	bl	81f4 <__clzsi2>
    6024:	3805      	subs	r0, #5
    6026:	4087      	lsls	r7, r0
    6028:	4284      	cmp	r4, r0
    602a:	dc69      	bgt.n	6100 <__aeabi_fsub+0x16c>
    602c:	1b00      	subs	r0, r0, r4
    602e:	241f      	movs	r4, #31
    6030:	1c3a      	adds	r2, r7, #0
    6032:	1c43      	adds	r3, r0, #1
    6034:	1a20      	subs	r0, r4, r0
    6036:	40da      	lsrs	r2, r3
    6038:	4087      	lsls	r7, r0
    603a:	1c13      	adds	r3, r2, #0
    603c:	1e7c      	subs	r4, r7, #1
    603e:	41a7      	sbcs	r7, r4
    6040:	2400      	movs	r4, #0
    6042:	433b      	orrs	r3, r7
    6044:	e7c2      	b.n	5fcc <__aeabi_fsub+0x38>
    6046:	1e13      	subs	r3, r2, #0
    6048:	d145      	bne.n	60d6 <__aeabi_fsub+0x142>
    604a:	2300      	movs	r3, #0
    604c:	2000      	movs	r0, #0
    604e:	08db      	lsrs	r3, r3, #3
    6050:	2cff      	cmp	r4, #255	; 0xff
    6052:	d028      	beq.n	60a6 <__aeabi_fsub+0x112>
    6054:	025b      	lsls	r3, r3, #9
    6056:	0a5b      	lsrs	r3, r3, #9
    6058:	b2e4      	uxtb	r4, r4
    605a:	e7cc      	b.n	5ff6 <__aeabi_fsub+0x62>
    605c:	1aa1      	subs	r1, r4, r2
    605e:	2900      	cmp	r1, #0
    6060:	dd5b      	ble.n	611a <__aeabi_fsub+0x186>
    6062:	2a00      	cmp	r2, #0
    6064:	d02e      	beq.n	60c4 <__aeabi_fsub+0x130>
    6066:	2cff      	cmp	r4, #255	; 0xff
    6068:	d0b0      	beq.n	5fcc <__aeabi_fsub+0x38>
    606a:	2280      	movs	r2, #128	; 0x80
    606c:	04d2      	lsls	r2, r2, #19
    606e:	4315      	orrs	r5, r2
    6070:	291b      	cmp	r1, #27
    6072:	dc74      	bgt.n	615e <__aeabi_fsub+0x1ca>
    6074:	1c2f      	adds	r7, r5, #0
    6076:	2220      	movs	r2, #32
    6078:	40cf      	lsrs	r7, r1
    607a:	1a51      	subs	r1, r2, r1
    607c:	408d      	lsls	r5, r1
    607e:	1e69      	subs	r1, r5, #1
    6080:	418d      	sbcs	r5, r1
    6082:	433d      	orrs	r5, r7
    6084:	195b      	adds	r3, r3, r5
    6086:	015a      	lsls	r2, r3, #5
    6088:	d525      	bpl.n	60d6 <__aeabi_fsub+0x142>
    608a:	3401      	adds	r4, #1
    608c:	2cff      	cmp	r4, #255	; 0xff
    608e:	d074      	beq.n	617a <__aeabi_fsub+0x1e6>
    6090:	2101      	movs	r1, #1
    6092:	4a7e      	ldr	r2, [pc, #504]	; (628c <__aeabi_fsub+0x2f8>)
    6094:	4019      	ands	r1, r3
    6096:	4013      	ands	r3, r2
    6098:	085b      	lsrs	r3, r3, #1
    609a:	430b      	orrs	r3, r1
    609c:	e796      	b.n	5fcc <__aeabi_fsub+0x38>
    609e:	2d00      	cmp	r5, #0
    60a0:	d000      	beq.n	60a4 <__aeabi_fsub+0x110>
    60a2:	e788      	b.n	5fb6 <__aeabi_fsub+0x22>
    60a4:	e785      	b.n	5fb2 <__aeabi_fsub+0x1e>
    60a6:	2b00      	cmp	r3, #0
    60a8:	d027      	beq.n	60fa <__aeabi_fsub+0x166>
    60aa:	2280      	movs	r2, #128	; 0x80
    60ac:	03d2      	lsls	r2, r2, #15
    60ae:	4313      	orrs	r3, r2
    60b0:	025b      	lsls	r3, r3, #9
    60b2:	0a5b      	lsrs	r3, r3, #9
    60b4:	24ff      	movs	r4, #255	; 0xff
    60b6:	e79e      	b.n	5ff6 <__aeabi_fsub+0x62>
    60b8:	3801      	subs	r0, #1
    60ba:	2800      	cmp	r0, #0
    60bc:	d0aa      	beq.n	6014 <__aeabi_fsub+0x80>
    60be:	2cff      	cmp	r4, #255	; 0xff
    60c0:	d1a5      	bne.n	600e <__aeabi_fsub+0x7a>
    60c2:	e783      	b.n	5fcc <__aeabi_fsub+0x38>
    60c4:	2d00      	cmp	r5, #0
    60c6:	d100      	bne.n	60ca <__aeabi_fsub+0x136>
    60c8:	e780      	b.n	5fcc <__aeabi_fsub+0x38>
    60ca:	3901      	subs	r1, #1
    60cc:	2900      	cmp	r1, #0
    60ce:	d0d9      	beq.n	6084 <__aeabi_fsub+0xf0>
    60d0:	2cff      	cmp	r4, #255	; 0xff
    60d2:	d1cd      	bne.n	6070 <__aeabi_fsub+0xdc>
    60d4:	e77a      	b.n	5fcc <__aeabi_fsub+0x38>
    60d6:	075a      	lsls	r2, r3, #29
    60d8:	d000      	beq.n	60dc <__aeabi_fsub+0x148>
    60da:	e779      	b.n	5fd0 <__aeabi_fsub+0x3c>
    60dc:	2001      	movs	r0, #1
    60de:	4030      	ands	r0, r6
    60e0:	e7b5      	b.n	604e <__aeabi_fsub+0xba>
    60e2:	2800      	cmp	r0, #0
    60e4:	d125      	bne.n	6132 <__aeabi_fsub+0x19e>
    60e6:	1c62      	adds	r2, r4, #1
    60e8:	b2d2      	uxtb	r2, r2
    60ea:	2a01      	cmp	r2, #1
    60ec:	dd55      	ble.n	619a <__aeabi_fsub+0x206>
    60ee:	1b5f      	subs	r7, r3, r5
    60f0:	017a      	lsls	r2, r7, #5
    60f2:	d52d      	bpl.n	6150 <__aeabi_fsub+0x1bc>
    60f4:	1aef      	subs	r7, r5, r3
    60f6:	1c0e      	adds	r6, r1, #0
    60f8:	e791      	b.n	601e <__aeabi_fsub+0x8a>
    60fa:	24ff      	movs	r4, #255	; 0xff
    60fc:	2300      	movs	r3, #0
    60fe:	e77a      	b.n	5ff6 <__aeabi_fsub+0x62>
    6100:	4b62      	ldr	r3, [pc, #392]	; (628c <__aeabi_fsub+0x2f8>)
    6102:	1a24      	subs	r4, r4, r0
    6104:	403b      	ands	r3, r7
    6106:	e761      	b.n	5fcc <__aeabi_fsub+0x38>
    6108:	1c29      	adds	r1, r5, #0
    610a:	2220      	movs	r2, #32
    610c:	40c1      	lsrs	r1, r0
    610e:	1a10      	subs	r0, r2, r0
    6110:	4085      	lsls	r5, r0
    6112:	1e68      	subs	r0, r5, #1
    6114:	4185      	sbcs	r5, r0
    6116:	430d      	orrs	r5, r1
    6118:	e77c      	b.n	6014 <__aeabi_fsub+0x80>
    611a:	2900      	cmp	r1, #0
    611c:	d146      	bne.n	61ac <__aeabi_fsub+0x218>
    611e:	1c62      	adds	r2, r4, #1
    6120:	b2d1      	uxtb	r1, r2
    6122:	2901      	cmp	r1, #1
    6124:	dd2b      	ble.n	617e <__aeabi_fsub+0x1ea>
    6126:	2aff      	cmp	r2, #255	; 0xff
    6128:	d026      	beq.n	6178 <__aeabi_fsub+0x1e4>
    612a:	18eb      	adds	r3, r5, r3
    612c:	085b      	lsrs	r3, r3, #1
    612e:	1c14      	adds	r4, r2, #0
    6130:	e74c      	b.n	5fcc <__aeabi_fsub+0x38>
    6132:	2c00      	cmp	r4, #0
    6134:	d015      	beq.n	6162 <__aeabi_fsub+0x1ce>
    6136:	2aff      	cmp	r2, #255	; 0xff
    6138:	d01a      	beq.n	6170 <__aeabi_fsub+0x1dc>
    613a:	2480      	movs	r4, #128	; 0x80
    613c:	04e4      	lsls	r4, r4, #19
    613e:	4240      	negs	r0, r0
    6140:	4323      	orrs	r3, r4
    6142:	281b      	cmp	r0, #27
    6144:	dd4d      	ble.n	61e2 <__aeabi_fsub+0x24e>
    6146:	2301      	movs	r3, #1
    6148:	1aeb      	subs	r3, r5, r3
    614a:	1c14      	adds	r4, r2, #0
    614c:	1c0e      	adds	r6, r1, #0
    614e:	e762      	b.n	6016 <__aeabi_fsub+0x82>
    6150:	2f00      	cmp	r7, #0
    6152:	d000      	beq.n	6156 <__aeabi_fsub+0x1c2>
    6154:	e763      	b.n	601e <__aeabi_fsub+0x8a>
    6156:	2300      	movs	r3, #0
    6158:	2000      	movs	r0, #0
    615a:	2400      	movs	r4, #0
    615c:	e777      	b.n	604e <__aeabi_fsub+0xba>
    615e:	2501      	movs	r5, #1
    6160:	e790      	b.n	6084 <__aeabi_fsub+0xf0>
    6162:	2b00      	cmp	r3, #0
    6164:	d039      	beq.n	61da <__aeabi_fsub+0x246>
    6166:	43c0      	mvns	r0, r0
    6168:	2800      	cmp	r0, #0
    616a:	d0ed      	beq.n	6148 <__aeabi_fsub+0x1b4>
    616c:	2aff      	cmp	r2, #255	; 0xff
    616e:	d1e8      	bne.n	6142 <__aeabi_fsub+0x1ae>
    6170:	1c2b      	adds	r3, r5, #0
    6172:	24ff      	movs	r4, #255	; 0xff
    6174:	1c0e      	adds	r6, r1, #0
    6176:	e729      	b.n	5fcc <__aeabi_fsub+0x38>
    6178:	24ff      	movs	r4, #255	; 0xff
    617a:	2300      	movs	r3, #0
    617c:	e767      	b.n	604e <__aeabi_fsub+0xba>
    617e:	2c00      	cmp	r4, #0
    6180:	d15a      	bne.n	6238 <__aeabi_fsub+0x2a4>
    6182:	2b00      	cmp	r3, #0
    6184:	d07f      	beq.n	6286 <__aeabi_fsub+0x2f2>
    6186:	2d00      	cmp	r5, #0
    6188:	d100      	bne.n	618c <__aeabi_fsub+0x1f8>
    618a:	e71f      	b.n	5fcc <__aeabi_fsub+0x38>
    618c:	195b      	adds	r3, r3, r5
    618e:	015a      	lsls	r2, r3, #5
    6190:	d5a1      	bpl.n	60d6 <__aeabi_fsub+0x142>
    6192:	4a3e      	ldr	r2, [pc, #248]	; (628c <__aeabi_fsub+0x2f8>)
    6194:	3401      	adds	r4, #1
    6196:	4013      	ands	r3, r2
    6198:	e718      	b.n	5fcc <__aeabi_fsub+0x38>
    619a:	2c00      	cmp	r4, #0
    619c:	d115      	bne.n	61ca <__aeabi_fsub+0x236>
    619e:	2b00      	cmp	r3, #0
    61a0:	d12f      	bne.n	6202 <__aeabi_fsub+0x26e>
    61a2:	2d00      	cmp	r5, #0
    61a4:	d05e      	beq.n	6264 <__aeabi_fsub+0x2d0>
    61a6:	1c2b      	adds	r3, r5, #0
    61a8:	1c0e      	adds	r6, r1, #0
    61aa:	e70f      	b.n	5fcc <__aeabi_fsub+0x38>
    61ac:	2c00      	cmp	r4, #0
    61ae:	d121      	bne.n	61f4 <__aeabi_fsub+0x260>
    61b0:	2b00      	cmp	r3, #0
    61b2:	d054      	beq.n	625e <__aeabi_fsub+0x2ca>
    61b4:	43c9      	mvns	r1, r1
    61b6:	2900      	cmp	r1, #0
    61b8:	d004      	beq.n	61c4 <__aeabi_fsub+0x230>
    61ba:	2aff      	cmp	r2, #255	; 0xff
    61bc:	d04c      	beq.n	6258 <__aeabi_fsub+0x2c4>
    61be:	291b      	cmp	r1, #27
    61c0:	dd58      	ble.n	6274 <__aeabi_fsub+0x2e0>
    61c2:	2301      	movs	r3, #1
    61c4:	195b      	adds	r3, r3, r5
    61c6:	1c14      	adds	r4, r2, #0
    61c8:	e75d      	b.n	6086 <__aeabi_fsub+0xf2>
    61ca:	2b00      	cmp	r3, #0
    61cc:	d123      	bne.n	6216 <__aeabi_fsub+0x282>
    61ce:	2d00      	cmp	r5, #0
    61d0:	d04b      	beq.n	626a <__aeabi_fsub+0x2d6>
    61d2:	1c2b      	adds	r3, r5, #0
    61d4:	1c0e      	adds	r6, r1, #0
    61d6:	24ff      	movs	r4, #255	; 0xff
    61d8:	e6f8      	b.n	5fcc <__aeabi_fsub+0x38>
    61da:	1c2b      	adds	r3, r5, #0
    61dc:	1c14      	adds	r4, r2, #0
    61de:	1c0e      	adds	r6, r1, #0
    61e0:	e6f4      	b.n	5fcc <__aeabi_fsub+0x38>
    61e2:	1c1e      	adds	r6, r3, #0
    61e4:	2420      	movs	r4, #32
    61e6:	40c6      	lsrs	r6, r0
    61e8:	1a20      	subs	r0, r4, r0
    61ea:	4083      	lsls	r3, r0
    61ec:	1e58      	subs	r0, r3, #1
    61ee:	4183      	sbcs	r3, r0
    61f0:	4333      	orrs	r3, r6
    61f2:	e7a9      	b.n	6148 <__aeabi_fsub+0x1b4>
    61f4:	2aff      	cmp	r2, #255	; 0xff
    61f6:	d02f      	beq.n	6258 <__aeabi_fsub+0x2c4>
    61f8:	2480      	movs	r4, #128	; 0x80
    61fa:	04e4      	lsls	r4, r4, #19
    61fc:	4249      	negs	r1, r1
    61fe:	4323      	orrs	r3, r4
    6200:	e7dd      	b.n	61be <__aeabi_fsub+0x22a>
    6202:	2d00      	cmp	r5, #0
    6204:	d100      	bne.n	6208 <__aeabi_fsub+0x274>
    6206:	e6e1      	b.n	5fcc <__aeabi_fsub+0x38>
    6208:	1b5a      	subs	r2, r3, r5
    620a:	0150      	lsls	r0, r2, #5
    620c:	d400      	bmi.n	6210 <__aeabi_fsub+0x27c>
    620e:	e71a      	b.n	6046 <__aeabi_fsub+0xb2>
    6210:	1aeb      	subs	r3, r5, r3
    6212:	1c0e      	adds	r6, r1, #0
    6214:	e6da      	b.n	5fcc <__aeabi_fsub+0x38>
    6216:	24ff      	movs	r4, #255	; 0xff
    6218:	2d00      	cmp	r5, #0
    621a:	d100      	bne.n	621e <__aeabi_fsub+0x28a>
    621c:	e6d6      	b.n	5fcc <__aeabi_fsub+0x38>
    621e:	2280      	movs	r2, #128	; 0x80
    6220:	08db      	lsrs	r3, r3, #3
    6222:	03d2      	lsls	r2, r2, #15
    6224:	4213      	tst	r3, r2
    6226:	d004      	beq.n	6232 <__aeabi_fsub+0x29e>
    6228:	08ed      	lsrs	r5, r5, #3
    622a:	4215      	tst	r5, r2
    622c:	d101      	bne.n	6232 <__aeabi_fsub+0x29e>
    622e:	1c2b      	adds	r3, r5, #0
    6230:	1c0e      	adds	r6, r1, #0
    6232:	00db      	lsls	r3, r3, #3
    6234:	24ff      	movs	r4, #255	; 0xff
    6236:	e6c9      	b.n	5fcc <__aeabi_fsub+0x38>
    6238:	2b00      	cmp	r3, #0
    623a:	d00d      	beq.n	6258 <__aeabi_fsub+0x2c4>
    623c:	24ff      	movs	r4, #255	; 0xff
    623e:	2d00      	cmp	r5, #0
    6240:	d100      	bne.n	6244 <__aeabi_fsub+0x2b0>
    6242:	e6c3      	b.n	5fcc <__aeabi_fsub+0x38>
    6244:	2280      	movs	r2, #128	; 0x80
    6246:	08db      	lsrs	r3, r3, #3
    6248:	03d2      	lsls	r2, r2, #15
    624a:	4213      	tst	r3, r2
    624c:	d0f1      	beq.n	6232 <__aeabi_fsub+0x29e>
    624e:	08ed      	lsrs	r5, r5, #3
    6250:	4215      	tst	r5, r2
    6252:	d1ee      	bne.n	6232 <__aeabi_fsub+0x29e>
    6254:	1c2b      	adds	r3, r5, #0
    6256:	e7ec      	b.n	6232 <__aeabi_fsub+0x29e>
    6258:	1c2b      	adds	r3, r5, #0
    625a:	24ff      	movs	r4, #255	; 0xff
    625c:	e6b6      	b.n	5fcc <__aeabi_fsub+0x38>
    625e:	1c2b      	adds	r3, r5, #0
    6260:	1c14      	adds	r4, r2, #0
    6262:	e6b3      	b.n	5fcc <__aeabi_fsub+0x38>
    6264:	1c23      	adds	r3, r4, #0
    6266:	2000      	movs	r0, #0
    6268:	e6f1      	b.n	604e <__aeabi_fsub+0xba>
    626a:	2380      	movs	r3, #128	; 0x80
    626c:	2000      	movs	r0, #0
    626e:	049b      	lsls	r3, r3, #18
    6270:	24ff      	movs	r4, #255	; 0xff
    6272:	e6ec      	b.n	604e <__aeabi_fsub+0xba>
    6274:	1c1f      	adds	r7, r3, #0
    6276:	2420      	movs	r4, #32
    6278:	40cf      	lsrs	r7, r1
    627a:	1a61      	subs	r1, r4, r1
    627c:	408b      	lsls	r3, r1
    627e:	1e59      	subs	r1, r3, #1
    6280:	418b      	sbcs	r3, r1
    6282:	433b      	orrs	r3, r7
    6284:	e79e      	b.n	61c4 <__aeabi_fsub+0x230>
    6286:	1c2b      	adds	r3, r5, #0
    6288:	e6a0      	b.n	5fcc <__aeabi_fsub+0x38>
    628a:	46c0      	nop			; (mov r8, r8)
    628c:	fbffffff 	.word	0xfbffffff

00006290 <__aeabi_f2iz>:
    6290:	0242      	lsls	r2, r0, #9
    6292:	0a51      	lsrs	r1, r2, #9
    6294:	0042      	lsls	r2, r0, #1
    6296:	0fc3      	lsrs	r3, r0, #31
    6298:	0e12      	lsrs	r2, r2, #24
    629a:	2000      	movs	r0, #0
    629c:	2a7e      	cmp	r2, #126	; 0x7e
    629e:	dd0d      	ble.n	62bc <__aeabi_f2iz+0x2c>
    62a0:	2a9d      	cmp	r2, #157	; 0x9d
    62a2:	dc0c      	bgt.n	62be <__aeabi_f2iz+0x2e>
    62a4:	2080      	movs	r0, #128	; 0x80
    62a6:	0400      	lsls	r0, r0, #16
    62a8:	4301      	orrs	r1, r0
    62aa:	2a95      	cmp	r2, #149	; 0x95
    62ac:	dc0a      	bgt.n	62c4 <__aeabi_f2iz+0x34>
    62ae:	2096      	movs	r0, #150	; 0x96
    62b0:	1a82      	subs	r2, r0, r2
    62b2:	40d1      	lsrs	r1, r2
    62b4:	1c0a      	adds	r2, r1, #0
    62b6:	4258      	negs	r0, r3
    62b8:	4042      	eors	r2, r0
    62ba:	18d0      	adds	r0, r2, r3
    62bc:	4770      	bx	lr
    62be:	4a03      	ldr	r2, [pc, #12]	; (62cc <__aeabi_f2iz+0x3c>)
    62c0:	1898      	adds	r0, r3, r2
    62c2:	e7fb      	b.n	62bc <__aeabi_f2iz+0x2c>
    62c4:	3a96      	subs	r2, #150	; 0x96
    62c6:	4091      	lsls	r1, r2
    62c8:	1c0a      	adds	r2, r1, #0
    62ca:	e7f4      	b.n	62b6 <__aeabi_f2iz+0x26>
    62cc:	7fffffff 	.word	0x7fffffff

000062d0 <__aeabi_i2f>:
    62d0:	b570      	push	{r4, r5, r6, lr}
    62d2:	1e04      	subs	r4, r0, #0
    62d4:	d039      	beq.n	634a <__aeabi_i2f+0x7a>
    62d6:	0fc5      	lsrs	r5, r0, #31
    62d8:	d000      	beq.n	62dc <__aeabi_i2f+0xc>
    62da:	4244      	negs	r4, r0
    62dc:	1c20      	adds	r0, r4, #0
    62de:	f001 ff89 	bl	81f4 <__clzsi2>
    62e2:	239e      	movs	r3, #158	; 0x9e
    62e4:	1c26      	adds	r6, r4, #0
    62e6:	1a1b      	subs	r3, r3, r0
    62e8:	2b96      	cmp	r3, #150	; 0x96
    62ea:	dc07      	bgt.n	62fc <__aeabi_i2f+0x2c>
    62ec:	2808      	cmp	r0, #8
    62ee:	dd01      	ble.n	62f4 <__aeabi_i2f+0x24>
    62f0:	3808      	subs	r0, #8
    62f2:	4084      	lsls	r4, r0
    62f4:	0264      	lsls	r4, r4, #9
    62f6:	0a64      	lsrs	r4, r4, #9
    62f8:	b2d8      	uxtb	r0, r3
    62fa:	e01e      	b.n	633a <__aeabi_i2f+0x6a>
    62fc:	2b99      	cmp	r3, #153	; 0x99
    62fe:	dd0a      	ble.n	6316 <__aeabi_i2f+0x46>
    6300:	2205      	movs	r2, #5
    6302:	1c21      	adds	r1, r4, #0
    6304:	1a12      	subs	r2, r2, r0
    6306:	40d1      	lsrs	r1, r2
    6308:	1c0a      	adds	r2, r1, #0
    630a:	1c01      	adds	r1, r0, #0
    630c:	311b      	adds	r1, #27
    630e:	408e      	lsls	r6, r1
    6310:	1e71      	subs	r1, r6, #1
    6312:	418e      	sbcs	r6, r1
    6314:	4316      	orrs	r6, r2
    6316:	2805      	cmp	r0, #5
    6318:	dd01      	ble.n	631e <__aeabi_i2f+0x4e>
    631a:	1f42      	subs	r2, r0, #5
    631c:	4096      	lsls	r6, r2
    631e:	4c0f      	ldr	r4, [pc, #60]	; (635c <__aeabi_i2f+0x8c>)
    6320:	4034      	ands	r4, r6
    6322:	0772      	lsls	r2, r6, #29
    6324:	d004      	beq.n	6330 <__aeabi_i2f+0x60>
    6326:	220f      	movs	r2, #15
    6328:	4016      	ands	r6, r2
    632a:	2e04      	cmp	r6, #4
    632c:	d000      	beq.n	6330 <__aeabi_i2f+0x60>
    632e:	3404      	adds	r4, #4
    6330:	0162      	lsls	r2, r4, #5
    6332:	d40e      	bmi.n	6352 <__aeabi_i2f+0x82>
    6334:	01a4      	lsls	r4, r4, #6
    6336:	0a64      	lsrs	r4, r4, #9
    6338:	b2d8      	uxtb	r0, r3
    633a:	0264      	lsls	r4, r4, #9
    633c:	05c0      	lsls	r0, r0, #23
    633e:	0a64      	lsrs	r4, r4, #9
    6340:	07ed      	lsls	r5, r5, #31
    6342:	4304      	orrs	r4, r0
    6344:	432c      	orrs	r4, r5
    6346:	1c20      	adds	r0, r4, #0
    6348:	bd70      	pop	{r4, r5, r6, pc}
    634a:	2500      	movs	r5, #0
    634c:	2000      	movs	r0, #0
    634e:	2400      	movs	r4, #0
    6350:	e7f3      	b.n	633a <__aeabi_i2f+0x6a>
    6352:	4b02      	ldr	r3, [pc, #8]	; (635c <__aeabi_i2f+0x8c>)
    6354:	401c      	ands	r4, r3
    6356:	239f      	movs	r3, #159	; 0x9f
    6358:	1a1b      	subs	r3, r3, r0
    635a:	e7eb      	b.n	6334 <__aeabi_i2f+0x64>
    635c:	fbffffff 	.word	0xfbffffff

00006360 <__aeabi_ui2f>:
    6360:	b510      	push	{r4, lr}
    6362:	1e04      	subs	r4, r0, #0
    6364:	d035      	beq.n	63d2 <__aeabi_ui2f+0x72>
    6366:	f001 ff45 	bl	81f4 <__clzsi2>
    636a:	219e      	movs	r1, #158	; 0x9e
    636c:	1a09      	subs	r1, r1, r0
    636e:	2996      	cmp	r1, #150	; 0x96
    6370:	dc09      	bgt.n	6386 <__aeabi_ui2f+0x26>
    6372:	2808      	cmp	r0, #8
    6374:	dd30      	ble.n	63d8 <__aeabi_ui2f+0x78>
    6376:	1c02      	adds	r2, r0, #0
    6378:	1c23      	adds	r3, r4, #0
    637a:	3a08      	subs	r2, #8
    637c:	4093      	lsls	r3, r2
    637e:	025b      	lsls	r3, r3, #9
    6380:	0a5b      	lsrs	r3, r3, #9
    6382:	b2c8      	uxtb	r0, r1
    6384:	e020      	b.n	63c8 <__aeabi_ui2f+0x68>
    6386:	2999      	cmp	r1, #153	; 0x99
    6388:	dd0c      	ble.n	63a4 <__aeabi_ui2f+0x44>
    638a:	2205      	movs	r2, #5
    638c:	1c23      	adds	r3, r4, #0
    638e:	1a12      	subs	r2, r2, r0
    6390:	40d3      	lsrs	r3, r2
    6392:	1c1a      	adds	r2, r3, #0
    6394:	1c03      	adds	r3, r0, #0
    6396:	331b      	adds	r3, #27
    6398:	409c      	lsls	r4, r3
    639a:	1c23      	adds	r3, r4, #0
    639c:	1e5c      	subs	r4, r3, #1
    639e:	41a3      	sbcs	r3, r4
    63a0:	4313      	orrs	r3, r2
    63a2:	1c1c      	adds	r4, r3, #0
    63a4:	2805      	cmp	r0, #5
    63a6:	dd01      	ble.n	63ac <__aeabi_ui2f+0x4c>
    63a8:	1f43      	subs	r3, r0, #5
    63aa:	409c      	lsls	r4, r3
    63ac:	4b0f      	ldr	r3, [pc, #60]	; (63ec <__aeabi_ui2f+0x8c>)
    63ae:	4023      	ands	r3, r4
    63b0:	0762      	lsls	r2, r4, #29
    63b2:	d004      	beq.n	63be <__aeabi_ui2f+0x5e>
    63b4:	220f      	movs	r2, #15
    63b6:	4014      	ands	r4, r2
    63b8:	2c04      	cmp	r4, #4
    63ba:	d000      	beq.n	63be <__aeabi_ui2f+0x5e>
    63bc:	3304      	adds	r3, #4
    63be:	015a      	lsls	r2, r3, #5
    63c0:	d40e      	bmi.n	63e0 <__aeabi_ui2f+0x80>
    63c2:	019b      	lsls	r3, r3, #6
    63c4:	0a5b      	lsrs	r3, r3, #9
    63c6:	b2c8      	uxtb	r0, r1
    63c8:	025b      	lsls	r3, r3, #9
    63ca:	0a5b      	lsrs	r3, r3, #9
    63cc:	05c0      	lsls	r0, r0, #23
    63ce:	4318      	orrs	r0, r3
    63d0:	bd10      	pop	{r4, pc}
    63d2:	2000      	movs	r0, #0
    63d4:	2300      	movs	r3, #0
    63d6:	e7f7      	b.n	63c8 <__aeabi_ui2f+0x68>
    63d8:	0263      	lsls	r3, r4, #9
    63da:	0a5b      	lsrs	r3, r3, #9
    63dc:	b2c8      	uxtb	r0, r1
    63de:	e7f3      	b.n	63c8 <__aeabi_ui2f+0x68>
    63e0:	219f      	movs	r1, #159	; 0x9f
    63e2:	4a02      	ldr	r2, [pc, #8]	; (63ec <__aeabi_ui2f+0x8c>)
    63e4:	1a09      	subs	r1, r1, r0
    63e6:	4013      	ands	r3, r2
    63e8:	e7eb      	b.n	63c2 <__aeabi_ui2f+0x62>
    63ea:	46c0      	nop			; (mov r8, r8)
    63ec:	fbffffff 	.word	0xfbffffff

000063f0 <__aeabi_dadd>:
    63f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    63f2:	4645      	mov	r5, r8
    63f4:	4657      	mov	r7, sl
    63f6:	464e      	mov	r6, r9
    63f8:	4694      	mov	ip, r2
    63fa:	004c      	lsls	r4, r1, #1
    63fc:	030a      	lsls	r2, r1, #12
    63fe:	0fc9      	lsrs	r1, r1, #31
    6400:	b4e0      	push	{r5, r6, r7}
    6402:	4688      	mov	r8, r1
    6404:	1c0e      	adds	r6, r1, #0
    6406:	0319      	lsls	r1, r3, #12
    6408:	0f47      	lsrs	r7, r0, #29
    640a:	00c5      	lsls	r5, r0, #3
    640c:	0a48      	lsrs	r0, r1, #9
    640e:	4661      	mov	r1, ip
    6410:	0f49      	lsrs	r1, r1, #29
    6412:	4301      	orrs	r1, r0
    6414:	4660      	mov	r0, ip
    6416:	0a52      	lsrs	r2, r2, #9
    6418:	4317      	orrs	r7, r2
    641a:	00c0      	lsls	r0, r0, #3
    641c:	005a      	lsls	r2, r3, #1
    641e:	0d64      	lsrs	r4, r4, #21
    6420:	0d52      	lsrs	r2, r2, #21
    6422:	0fdb      	lsrs	r3, r3, #31
    6424:	4684      	mov	ip, r0
    6426:	4598      	cmp	r8, r3
    6428:	d100      	bne.n	642c <__aeabi_dadd+0x3c>
    642a:	e0a7      	b.n	657c <__aeabi_dadd+0x18c>
    642c:	1aa0      	subs	r0, r4, r2
    642e:	2800      	cmp	r0, #0
    6430:	dc00      	bgt.n	6434 <__aeabi_dadd+0x44>
    6432:	e101      	b.n	6638 <__aeabi_dadd+0x248>
    6434:	2a00      	cmp	r2, #0
    6436:	d13d      	bne.n	64b4 <__aeabi_dadd+0xc4>
    6438:	4663      	mov	r3, ip
    643a:	430b      	orrs	r3, r1
    643c:	d000      	beq.n	6440 <__aeabi_dadd+0x50>
    643e:	e0d4      	b.n	65ea <__aeabi_dadd+0x1fa>
    6440:	076b      	lsls	r3, r5, #29
    6442:	d100      	bne.n	6446 <__aeabi_dadd+0x56>
    6444:	e088      	b.n	6558 <__aeabi_dadd+0x168>
    6446:	230f      	movs	r3, #15
    6448:	402b      	ands	r3, r5
    644a:	2b04      	cmp	r3, #4
    644c:	d100      	bne.n	6450 <__aeabi_dadd+0x60>
    644e:	e083      	b.n	6558 <__aeabi_dadd+0x168>
    6450:	1d2a      	adds	r2, r5, #4
    6452:	42aa      	cmp	r2, r5
    6454:	41ad      	sbcs	r5, r5
    6456:	2380      	movs	r3, #128	; 0x80
    6458:	426d      	negs	r5, r5
    645a:	197f      	adds	r7, r7, r5
    645c:	041b      	lsls	r3, r3, #16
    645e:	403b      	ands	r3, r7
    6460:	4646      	mov	r6, r8
    6462:	1c15      	adds	r5, r2, #0
    6464:	2b00      	cmp	r3, #0
    6466:	d100      	bne.n	646a <__aeabi_dadd+0x7a>
    6468:	e07c      	b.n	6564 <__aeabi_dadd+0x174>
    646a:	4bcc      	ldr	r3, [pc, #816]	; (679c <__aeabi_dadd+0x3ac>)
    646c:	3401      	adds	r4, #1
    646e:	429c      	cmp	r4, r3
    6470:	d100      	bne.n	6474 <__aeabi_dadd+0x84>
    6472:	e0fd      	b.n	6670 <__aeabi_dadd+0x280>
    6474:	1c3a      	adds	r2, r7, #0
    6476:	4bca      	ldr	r3, [pc, #808]	; (67a0 <__aeabi_dadd+0x3b0>)
    6478:	08ed      	lsrs	r5, r5, #3
    647a:	401a      	ands	r2, r3
    647c:	0750      	lsls	r0, r2, #29
    647e:	0564      	lsls	r4, r4, #21
    6480:	0252      	lsls	r2, r2, #9
    6482:	4305      	orrs	r5, r0
    6484:	0b12      	lsrs	r2, r2, #12
    6486:	0d64      	lsrs	r4, r4, #21
    6488:	2100      	movs	r1, #0
    648a:	0312      	lsls	r2, r2, #12
    648c:	0d0b      	lsrs	r3, r1, #20
    648e:	051b      	lsls	r3, r3, #20
    6490:	0564      	lsls	r4, r4, #21
    6492:	0b12      	lsrs	r2, r2, #12
    6494:	431a      	orrs	r2, r3
    6496:	0863      	lsrs	r3, r4, #1
    6498:	4cc2      	ldr	r4, [pc, #776]	; (67a4 <__aeabi_dadd+0x3b4>)
    649a:	07f6      	lsls	r6, r6, #31
    649c:	4014      	ands	r4, r2
    649e:	431c      	orrs	r4, r3
    64a0:	0064      	lsls	r4, r4, #1
    64a2:	0864      	lsrs	r4, r4, #1
    64a4:	4334      	orrs	r4, r6
    64a6:	1c28      	adds	r0, r5, #0
    64a8:	1c21      	adds	r1, r4, #0
    64aa:	bc1c      	pop	{r2, r3, r4}
    64ac:	4690      	mov	r8, r2
    64ae:	4699      	mov	r9, r3
    64b0:	46a2      	mov	sl, r4
    64b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    64b4:	4bb9      	ldr	r3, [pc, #740]	; (679c <__aeabi_dadd+0x3ac>)
    64b6:	429c      	cmp	r4, r3
    64b8:	d0c2      	beq.n	6440 <__aeabi_dadd+0x50>
    64ba:	2380      	movs	r3, #128	; 0x80
    64bc:	041b      	lsls	r3, r3, #16
    64be:	4319      	orrs	r1, r3
    64c0:	2838      	cmp	r0, #56	; 0x38
    64c2:	dd00      	ble.n	64c6 <__aeabi_dadd+0xd6>
    64c4:	e0ec      	b.n	66a0 <__aeabi_dadd+0x2b0>
    64c6:	281f      	cmp	r0, #31
    64c8:	dd00      	ble.n	64cc <__aeabi_dadd+0xdc>
    64ca:	e121      	b.n	6710 <__aeabi_dadd+0x320>
    64cc:	2220      	movs	r2, #32
    64ce:	1c0e      	adds	r6, r1, #0
    64d0:	4663      	mov	r3, ip
    64d2:	1a12      	subs	r2, r2, r0
    64d4:	4096      	lsls	r6, r2
    64d6:	40c3      	lsrs	r3, r0
    64d8:	4333      	orrs	r3, r6
    64da:	4666      	mov	r6, ip
    64dc:	4096      	lsls	r6, r2
    64de:	1c32      	adds	r2, r6, #0
    64e0:	1e56      	subs	r6, r2, #1
    64e2:	41b2      	sbcs	r2, r6
    64e4:	4313      	orrs	r3, r2
    64e6:	1c0a      	adds	r2, r1, #0
    64e8:	40c2      	lsrs	r2, r0
    64ea:	1aeb      	subs	r3, r5, r3
    64ec:	429d      	cmp	r5, r3
    64ee:	41b6      	sbcs	r6, r6
    64f0:	1c1d      	adds	r5, r3, #0
    64f2:	1aba      	subs	r2, r7, r2
    64f4:	4276      	negs	r6, r6
    64f6:	1b97      	subs	r7, r2, r6
    64f8:	023b      	lsls	r3, r7, #8
    64fa:	d400      	bmi.n	64fe <__aeabi_dadd+0x10e>
    64fc:	e097      	b.n	662e <__aeabi_dadd+0x23e>
    64fe:	027a      	lsls	r2, r7, #9
    6500:	0a56      	lsrs	r6, r2, #9
    6502:	2e00      	cmp	r6, #0
    6504:	d100      	bne.n	6508 <__aeabi_dadd+0x118>
    6506:	e0b6      	b.n	6676 <__aeabi_dadd+0x286>
    6508:	1c30      	adds	r0, r6, #0
    650a:	f001 fe73 	bl	81f4 <__clzsi2>
    650e:	1c03      	adds	r3, r0, #0
    6510:	3b08      	subs	r3, #8
    6512:	2b1f      	cmp	r3, #31
    6514:	dd00      	ble.n	6518 <__aeabi_dadd+0x128>
    6516:	e0b7      	b.n	6688 <__aeabi_dadd+0x298>
    6518:	409e      	lsls	r6, r3
    651a:	1c37      	adds	r7, r6, #0
    651c:	2628      	movs	r6, #40	; 0x28
    651e:	1c2a      	adds	r2, r5, #0
    6520:	1a36      	subs	r6, r6, r0
    6522:	40f2      	lsrs	r2, r6
    6524:	1c16      	adds	r6, r2, #0
    6526:	409d      	lsls	r5, r3
    6528:	433e      	orrs	r6, r7
    652a:	429c      	cmp	r4, r3
    652c:	dd00      	ble.n	6530 <__aeabi_dadd+0x140>
    652e:	e0b2      	b.n	6696 <__aeabi_dadd+0x2a6>
    6530:	1b1c      	subs	r4, r3, r4
    6532:	1c62      	adds	r2, r4, #1
    6534:	2a1f      	cmp	r2, #31
    6536:	dd00      	ble.n	653a <__aeabi_dadd+0x14a>
    6538:	e0d8      	b.n	66ec <__aeabi_dadd+0x2fc>
    653a:	231f      	movs	r3, #31
    653c:	1c29      	adds	r1, r5, #0
    653e:	1b1c      	subs	r4, r3, r4
    6540:	1c33      	adds	r3, r6, #0
    6542:	40a5      	lsls	r5, r4
    6544:	40a3      	lsls	r3, r4
    6546:	40d1      	lsrs	r1, r2
    6548:	1e6c      	subs	r4, r5, #1
    654a:	41a5      	sbcs	r5, r4
    654c:	40d6      	lsrs	r6, r2
    654e:	4319      	orrs	r1, r3
    6550:	430d      	orrs	r5, r1
    6552:	1c37      	adds	r7, r6, #0
    6554:	2400      	movs	r4, #0
    6556:	e773      	b.n	6440 <__aeabi_dadd+0x50>
    6558:	2380      	movs	r3, #128	; 0x80
    655a:	041b      	lsls	r3, r3, #16
    655c:	403b      	ands	r3, r7
    655e:	4646      	mov	r6, r8
    6560:	d000      	beq.n	6564 <__aeabi_dadd+0x174>
    6562:	e782      	b.n	646a <__aeabi_dadd+0x7a>
    6564:	4b8d      	ldr	r3, [pc, #564]	; (679c <__aeabi_dadd+0x3ac>)
    6566:	08ed      	lsrs	r5, r5, #3
    6568:	0778      	lsls	r0, r7, #29
    656a:	4305      	orrs	r5, r0
    656c:	08fa      	lsrs	r2, r7, #3
    656e:	429c      	cmp	r4, r3
    6570:	d032      	beq.n	65d8 <__aeabi_dadd+0x1e8>
    6572:	0312      	lsls	r2, r2, #12
    6574:	0564      	lsls	r4, r4, #21
    6576:	0b12      	lsrs	r2, r2, #12
    6578:	0d64      	lsrs	r4, r4, #21
    657a:	e785      	b.n	6488 <__aeabi_dadd+0x98>
    657c:	1aa3      	subs	r3, r4, r2
    657e:	2b00      	cmp	r3, #0
    6580:	dc00      	bgt.n	6584 <__aeabi_dadd+0x194>
    6582:	e094      	b.n	66ae <__aeabi_dadd+0x2be>
    6584:	2a00      	cmp	r2, #0
    6586:	d03c      	beq.n	6602 <__aeabi_dadd+0x212>
    6588:	4a84      	ldr	r2, [pc, #528]	; (679c <__aeabi_dadd+0x3ac>)
    658a:	4294      	cmp	r4, r2
    658c:	d100      	bne.n	6590 <__aeabi_dadd+0x1a0>
    658e:	e757      	b.n	6440 <__aeabi_dadd+0x50>
    6590:	2280      	movs	r2, #128	; 0x80
    6592:	0412      	lsls	r2, r2, #16
    6594:	4311      	orrs	r1, r2
    6596:	2b38      	cmp	r3, #56	; 0x38
    6598:	dc00      	bgt.n	659c <__aeabi_dadd+0x1ac>
    659a:	e105      	b.n	67a8 <__aeabi_dadd+0x3b8>
    659c:	4663      	mov	r3, ip
    659e:	4319      	orrs	r1, r3
    65a0:	1e48      	subs	r0, r1, #1
    65a2:	4181      	sbcs	r1, r0
    65a4:	2200      	movs	r2, #0
    65a6:	b2c8      	uxtb	r0, r1
    65a8:	1940      	adds	r0, r0, r5
    65aa:	42a8      	cmp	r0, r5
    65ac:	419b      	sbcs	r3, r3
    65ae:	1c05      	adds	r5, r0, #0
    65b0:	19d2      	adds	r2, r2, r7
    65b2:	425b      	negs	r3, r3
    65b4:	18d7      	adds	r7, r2, r3
    65b6:	023b      	lsls	r3, r7, #8
    65b8:	d539      	bpl.n	662e <__aeabi_dadd+0x23e>
    65ba:	4b78      	ldr	r3, [pc, #480]	; (679c <__aeabi_dadd+0x3ac>)
    65bc:	3401      	adds	r4, #1
    65be:	429c      	cmp	r4, r3
    65c0:	d100      	bne.n	65c4 <__aeabi_dadd+0x1d4>
    65c2:	e14c      	b.n	685e <__aeabi_dadd+0x46e>
    65c4:	2001      	movs	r0, #1
    65c6:	4a76      	ldr	r2, [pc, #472]	; (67a0 <__aeabi_dadd+0x3b0>)
    65c8:	086b      	lsrs	r3, r5, #1
    65ca:	403a      	ands	r2, r7
    65cc:	4028      	ands	r0, r5
    65ce:	4318      	orrs	r0, r3
    65d0:	07d5      	lsls	r5, r2, #31
    65d2:	4305      	orrs	r5, r0
    65d4:	0857      	lsrs	r7, r2, #1
    65d6:	e733      	b.n	6440 <__aeabi_dadd+0x50>
    65d8:	1c2b      	adds	r3, r5, #0
    65da:	4313      	orrs	r3, r2
    65dc:	d048      	beq.n	6670 <__aeabi_dadd+0x280>
    65de:	2380      	movs	r3, #128	; 0x80
    65e0:	031b      	lsls	r3, r3, #12
    65e2:	431a      	orrs	r2, r3
    65e4:	0312      	lsls	r2, r2, #12
    65e6:	0b12      	lsrs	r2, r2, #12
    65e8:	e74e      	b.n	6488 <__aeabi_dadd+0x98>
    65ea:	3801      	subs	r0, #1
    65ec:	2800      	cmp	r0, #0
    65ee:	d178      	bne.n	66e2 <__aeabi_dadd+0x2f2>
    65f0:	4663      	mov	r3, ip
    65f2:	1aee      	subs	r6, r5, r3
    65f4:	42b5      	cmp	r5, r6
    65f6:	419b      	sbcs	r3, r3
    65f8:	1a7a      	subs	r2, r7, r1
    65fa:	425b      	negs	r3, r3
    65fc:	1ad7      	subs	r7, r2, r3
    65fe:	1c35      	adds	r5, r6, #0
    6600:	e77a      	b.n	64f8 <__aeabi_dadd+0x108>
    6602:	1c02      	adds	r2, r0, #0
    6604:	430a      	orrs	r2, r1
    6606:	d100      	bne.n	660a <__aeabi_dadd+0x21a>
    6608:	e71a      	b.n	6440 <__aeabi_dadd+0x50>
    660a:	3b01      	subs	r3, #1
    660c:	2b00      	cmp	r3, #0
    660e:	d000      	beq.n	6612 <__aeabi_dadd+0x222>
    6610:	e0f2      	b.n	67f8 <__aeabi_dadd+0x408>
    6612:	1940      	adds	r0, r0, r5
    6614:	42a8      	cmp	r0, r5
    6616:	419b      	sbcs	r3, r3
    6618:	19ca      	adds	r2, r1, r7
    661a:	425b      	negs	r3, r3
    661c:	18d7      	adds	r7, r2, r3
    661e:	1c05      	adds	r5, r0, #0
    6620:	e7c9      	b.n	65b6 <__aeabi_dadd+0x1c6>
    6622:	1c13      	adds	r3, r2, #0
    6624:	4333      	orrs	r3, r6
    6626:	d100      	bne.n	662a <__aeabi_dadd+0x23a>
    6628:	e118      	b.n	685c <__aeabi_dadd+0x46c>
    662a:	1c17      	adds	r7, r2, #0
    662c:	1c35      	adds	r5, r6, #0
    662e:	4646      	mov	r6, r8
    6630:	076b      	lsls	r3, r5, #29
    6632:	d000      	beq.n	6636 <__aeabi_dadd+0x246>
    6634:	e707      	b.n	6446 <__aeabi_dadd+0x56>
    6636:	e795      	b.n	6564 <__aeabi_dadd+0x174>
    6638:	2800      	cmp	r0, #0
    663a:	d17a      	bne.n	6732 <__aeabi_dadd+0x342>
    663c:	1c62      	adds	r2, r4, #1
    663e:	0552      	lsls	r2, r2, #21
    6640:	0d52      	lsrs	r2, r2, #21
    6642:	2a01      	cmp	r2, #1
    6644:	dc00      	bgt.n	6648 <__aeabi_dadd+0x258>
    6646:	e0fb      	b.n	6840 <__aeabi_dadd+0x450>
    6648:	4662      	mov	r2, ip
    664a:	1aaa      	subs	r2, r5, r2
    664c:	4295      	cmp	r5, r2
    664e:	41b6      	sbcs	r6, r6
    6650:	4691      	mov	r9, r2
    6652:	1a78      	subs	r0, r7, r1
    6654:	4272      	negs	r2, r6
    6656:	1a86      	subs	r6, r0, r2
    6658:	0232      	lsls	r2, r6, #8
    665a:	d400      	bmi.n	665e <__aeabi_dadd+0x26e>
    665c:	e093      	b.n	6786 <__aeabi_dadd+0x396>
    665e:	4662      	mov	r2, ip
    6660:	1b55      	subs	r5, r2, r5
    6662:	45ac      	cmp	ip, r5
    6664:	4180      	sbcs	r0, r0
    6666:	1bcf      	subs	r7, r1, r7
    6668:	4240      	negs	r0, r0
    666a:	1a3e      	subs	r6, r7, r0
    666c:	4698      	mov	r8, r3
    666e:	e748      	b.n	6502 <__aeabi_dadd+0x112>
    6670:	2200      	movs	r2, #0
    6672:	2500      	movs	r5, #0
    6674:	e708      	b.n	6488 <__aeabi_dadd+0x98>
    6676:	1c28      	adds	r0, r5, #0
    6678:	f001 fdbc 	bl	81f4 <__clzsi2>
    667c:	3020      	adds	r0, #32
    667e:	1c03      	adds	r3, r0, #0
    6680:	3b08      	subs	r3, #8
    6682:	2b1f      	cmp	r3, #31
    6684:	dc00      	bgt.n	6688 <__aeabi_dadd+0x298>
    6686:	e747      	b.n	6518 <__aeabi_dadd+0x128>
    6688:	3828      	subs	r0, #40	; 0x28
    668a:	4085      	lsls	r5, r0
    668c:	1c2e      	adds	r6, r5, #0
    668e:	2500      	movs	r5, #0
    6690:	429c      	cmp	r4, r3
    6692:	dc00      	bgt.n	6696 <__aeabi_dadd+0x2a6>
    6694:	e74c      	b.n	6530 <__aeabi_dadd+0x140>
    6696:	4a42      	ldr	r2, [pc, #264]	; (67a0 <__aeabi_dadd+0x3b0>)
    6698:	1ae4      	subs	r4, r4, r3
    669a:	4016      	ands	r6, r2
    669c:	1c37      	adds	r7, r6, #0
    669e:	e6cf      	b.n	6440 <__aeabi_dadd+0x50>
    66a0:	4663      	mov	r3, ip
    66a2:	4319      	orrs	r1, r3
    66a4:	1e4b      	subs	r3, r1, #1
    66a6:	4199      	sbcs	r1, r3
    66a8:	2200      	movs	r2, #0
    66aa:	b2cb      	uxtb	r3, r1
    66ac:	e71d      	b.n	64ea <__aeabi_dadd+0xfa>
    66ae:	2b00      	cmp	r3, #0
    66b0:	d000      	beq.n	66b4 <__aeabi_dadd+0x2c4>
    66b2:	e0f2      	b.n	689a <__aeabi_dadd+0x4aa>
    66b4:	1c60      	adds	r0, r4, #1
    66b6:	0543      	lsls	r3, r0, #21
    66b8:	0d5b      	lsrs	r3, r3, #21
    66ba:	2b01      	cmp	r3, #1
    66bc:	dc00      	bgt.n	66c0 <__aeabi_dadd+0x2d0>
    66be:	e0a4      	b.n	680a <__aeabi_dadd+0x41a>
    66c0:	4b36      	ldr	r3, [pc, #216]	; (679c <__aeabi_dadd+0x3ac>)
    66c2:	4298      	cmp	r0, r3
    66c4:	d100      	bne.n	66c8 <__aeabi_dadd+0x2d8>
    66c6:	e121      	b.n	690c <__aeabi_dadd+0x51c>
    66c8:	4663      	mov	r3, ip
    66ca:	195c      	adds	r4, r3, r5
    66cc:	42ac      	cmp	r4, r5
    66ce:	419b      	sbcs	r3, r3
    66d0:	19cf      	adds	r7, r1, r7
    66d2:	425b      	negs	r3, r3
    66d4:	18fa      	adds	r2, r7, r3
    66d6:	0864      	lsrs	r4, r4, #1
    66d8:	07d5      	lsls	r5, r2, #31
    66da:	4325      	orrs	r5, r4
    66dc:	0857      	lsrs	r7, r2, #1
    66de:	1c04      	adds	r4, r0, #0
    66e0:	e6ae      	b.n	6440 <__aeabi_dadd+0x50>
    66e2:	4b2e      	ldr	r3, [pc, #184]	; (679c <__aeabi_dadd+0x3ac>)
    66e4:	429c      	cmp	r4, r3
    66e6:	d000      	beq.n	66ea <__aeabi_dadd+0x2fa>
    66e8:	e6ea      	b.n	64c0 <__aeabi_dadd+0xd0>
    66ea:	e6a9      	b.n	6440 <__aeabi_dadd+0x50>
    66ec:	1c21      	adds	r1, r4, #0
    66ee:	1c33      	adds	r3, r6, #0
    66f0:	391f      	subs	r1, #31
    66f2:	40cb      	lsrs	r3, r1
    66f4:	1c19      	adds	r1, r3, #0
    66f6:	2a20      	cmp	r2, #32
    66f8:	d100      	bne.n	66fc <__aeabi_dadd+0x30c>
    66fa:	e082      	b.n	6802 <__aeabi_dadd+0x412>
    66fc:	233f      	movs	r3, #63	; 0x3f
    66fe:	1b1c      	subs	r4, r3, r4
    6700:	40a6      	lsls	r6, r4
    6702:	4335      	orrs	r5, r6
    6704:	1e6e      	subs	r6, r5, #1
    6706:	41b5      	sbcs	r5, r6
    6708:	2700      	movs	r7, #0
    670a:	430d      	orrs	r5, r1
    670c:	2400      	movs	r4, #0
    670e:	e78e      	b.n	662e <__aeabi_dadd+0x23e>
    6710:	1c03      	adds	r3, r0, #0
    6712:	1c0e      	adds	r6, r1, #0
    6714:	3b20      	subs	r3, #32
    6716:	40de      	lsrs	r6, r3
    6718:	2820      	cmp	r0, #32
    671a:	d074      	beq.n	6806 <__aeabi_dadd+0x416>
    671c:	2340      	movs	r3, #64	; 0x40
    671e:	1a1b      	subs	r3, r3, r0
    6720:	4099      	lsls	r1, r3
    6722:	1c0b      	adds	r3, r1, #0
    6724:	4662      	mov	r2, ip
    6726:	4313      	orrs	r3, r2
    6728:	1e59      	subs	r1, r3, #1
    672a:	418b      	sbcs	r3, r1
    672c:	2200      	movs	r2, #0
    672e:	4333      	orrs	r3, r6
    6730:	e6db      	b.n	64ea <__aeabi_dadd+0xfa>
    6732:	2c00      	cmp	r4, #0
    6734:	d050      	beq.n	67d8 <__aeabi_dadd+0x3e8>
    6736:	4c19      	ldr	r4, [pc, #100]	; (679c <__aeabi_dadd+0x3ac>)
    6738:	42a2      	cmp	r2, r4
    673a:	d100      	bne.n	673e <__aeabi_dadd+0x34e>
    673c:	e0a8      	b.n	6890 <__aeabi_dadd+0x4a0>
    673e:	2480      	movs	r4, #128	; 0x80
    6740:	0424      	lsls	r4, r4, #16
    6742:	4240      	negs	r0, r0
    6744:	4327      	orrs	r7, r4
    6746:	2838      	cmp	r0, #56	; 0x38
    6748:	dd00      	ble.n	674c <__aeabi_dadd+0x35c>
    674a:	e0d9      	b.n	6900 <__aeabi_dadd+0x510>
    674c:	281f      	cmp	r0, #31
    674e:	dd00      	ble.n	6752 <__aeabi_dadd+0x362>
    6750:	e139      	b.n	69c6 <__aeabi_dadd+0x5d6>
    6752:	2420      	movs	r4, #32
    6754:	1c3e      	adds	r6, r7, #0
    6756:	1a24      	subs	r4, r4, r0
    6758:	40a6      	lsls	r6, r4
    675a:	46b0      	mov	r8, r6
    675c:	1c2e      	adds	r6, r5, #0
    675e:	46a1      	mov	r9, r4
    6760:	40c6      	lsrs	r6, r0
    6762:	4644      	mov	r4, r8
    6764:	4326      	orrs	r6, r4
    6766:	464c      	mov	r4, r9
    6768:	40a5      	lsls	r5, r4
    676a:	1e6c      	subs	r4, r5, #1
    676c:	41a5      	sbcs	r5, r4
    676e:	40c7      	lsrs	r7, r0
    6770:	4335      	orrs	r5, r6
    6772:	4660      	mov	r0, ip
    6774:	1b45      	subs	r5, r0, r5
    6776:	1bcf      	subs	r7, r1, r7
    6778:	45ac      	cmp	ip, r5
    677a:	4189      	sbcs	r1, r1
    677c:	4249      	negs	r1, r1
    677e:	1a7f      	subs	r7, r7, r1
    6780:	1c14      	adds	r4, r2, #0
    6782:	4698      	mov	r8, r3
    6784:	e6b8      	b.n	64f8 <__aeabi_dadd+0x108>
    6786:	464b      	mov	r3, r9
    6788:	464d      	mov	r5, r9
    678a:	4333      	orrs	r3, r6
    678c:	d000      	beq.n	6790 <__aeabi_dadd+0x3a0>
    678e:	e6b8      	b.n	6502 <__aeabi_dadd+0x112>
    6790:	2600      	movs	r6, #0
    6792:	2700      	movs	r7, #0
    6794:	2400      	movs	r4, #0
    6796:	2500      	movs	r5, #0
    6798:	e6e4      	b.n	6564 <__aeabi_dadd+0x174>
    679a:	46c0      	nop			; (mov r8, r8)
    679c:	000007ff 	.word	0x000007ff
    67a0:	ff7fffff 	.word	0xff7fffff
    67a4:	800fffff 	.word	0x800fffff
    67a8:	2b1f      	cmp	r3, #31
    67aa:	dc5b      	bgt.n	6864 <__aeabi_dadd+0x474>
    67ac:	2220      	movs	r2, #32
    67ae:	1c08      	adds	r0, r1, #0
    67b0:	1ad2      	subs	r2, r2, r3
    67b2:	4090      	lsls	r0, r2
    67b4:	4681      	mov	r9, r0
    67b6:	4660      	mov	r0, ip
    67b8:	4692      	mov	sl, r2
    67ba:	40d8      	lsrs	r0, r3
    67bc:	464a      	mov	r2, r9
    67be:	4310      	orrs	r0, r2
    67c0:	4681      	mov	r9, r0
    67c2:	4652      	mov	r2, sl
    67c4:	4660      	mov	r0, ip
    67c6:	4090      	lsls	r0, r2
    67c8:	1c02      	adds	r2, r0, #0
    67ca:	1e50      	subs	r0, r2, #1
    67cc:	4182      	sbcs	r2, r0
    67ce:	4648      	mov	r0, r9
    67d0:	4310      	orrs	r0, r2
    67d2:	1c0a      	adds	r2, r1, #0
    67d4:	40da      	lsrs	r2, r3
    67d6:	e6e7      	b.n	65a8 <__aeabi_dadd+0x1b8>
    67d8:	1c3c      	adds	r4, r7, #0
    67da:	432c      	orrs	r4, r5
    67dc:	d058      	beq.n	6890 <__aeabi_dadd+0x4a0>
    67de:	43c0      	mvns	r0, r0
    67e0:	2800      	cmp	r0, #0
    67e2:	d151      	bne.n	6888 <__aeabi_dadd+0x498>
    67e4:	4660      	mov	r0, ip
    67e6:	1b45      	subs	r5, r0, r5
    67e8:	45ac      	cmp	ip, r5
    67ea:	4180      	sbcs	r0, r0
    67ec:	1bcf      	subs	r7, r1, r7
    67ee:	4240      	negs	r0, r0
    67f0:	1a3f      	subs	r7, r7, r0
    67f2:	1c14      	adds	r4, r2, #0
    67f4:	4698      	mov	r8, r3
    67f6:	e67f      	b.n	64f8 <__aeabi_dadd+0x108>
    67f8:	4a8f      	ldr	r2, [pc, #572]	; (6a38 <__aeabi_dadd+0x648>)
    67fa:	4294      	cmp	r4, r2
    67fc:	d000      	beq.n	6800 <__aeabi_dadd+0x410>
    67fe:	e6ca      	b.n	6596 <__aeabi_dadd+0x1a6>
    6800:	e61e      	b.n	6440 <__aeabi_dadd+0x50>
    6802:	2600      	movs	r6, #0
    6804:	e77d      	b.n	6702 <__aeabi_dadd+0x312>
    6806:	2300      	movs	r3, #0
    6808:	e78c      	b.n	6724 <__aeabi_dadd+0x334>
    680a:	1c3b      	adds	r3, r7, #0
    680c:	432b      	orrs	r3, r5
    680e:	2c00      	cmp	r4, #0
    6810:	d000      	beq.n	6814 <__aeabi_dadd+0x424>
    6812:	e0bd      	b.n	6990 <__aeabi_dadd+0x5a0>
    6814:	2b00      	cmp	r3, #0
    6816:	d100      	bne.n	681a <__aeabi_dadd+0x42a>
    6818:	e0f5      	b.n	6a06 <__aeabi_dadd+0x616>
    681a:	4663      	mov	r3, ip
    681c:	430b      	orrs	r3, r1
    681e:	d100      	bne.n	6822 <__aeabi_dadd+0x432>
    6820:	e60e      	b.n	6440 <__aeabi_dadd+0x50>
    6822:	4663      	mov	r3, ip
    6824:	195b      	adds	r3, r3, r5
    6826:	42ab      	cmp	r3, r5
    6828:	4180      	sbcs	r0, r0
    682a:	19ca      	adds	r2, r1, r7
    682c:	4240      	negs	r0, r0
    682e:	1817      	adds	r7, r2, r0
    6830:	023a      	lsls	r2, r7, #8
    6832:	d400      	bmi.n	6836 <__aeabi_dadd+0x446>
    6834:	e0fc      	b.n	6a30 <__aeabi_dadd+0x640>
    6836:	4a81      	ldr	r2, [pc, #516]	; (6a3c <__aeabi_dadd+0x64c>)
    6838:	1c1d      	adds	r5, r3, #0
    683a:	4017      	ands	r7, r2
    683c:	3401      	adds	r4, #1
    683e:	e5ff      	b.n	6440 <__aeabi_dadd+0x50>
    6840:	1c3a      	adds	r2, r7, #0
    6842:	432a      	orrs	r2, r5
    6844:	2c00      	cmp	r4, #0
    6846:	d151      	bne.n	68ec <__aeabi_dadd+0x4fc>
    6848:	2a00      	cmp	r2, #0
    684a:	d000      	beq.n	684e <__aeabi_dadd+0x45e>
    684c:	e085      	b.n	695a <__aeabi_dadd+0x56a>
    684e:	4662      	mov	r2, ip
    6850:	430a      	orrs	r2, r1
    6852:	d003      	beq.n	685c <__aeabi_dadd+0x46c>
    6854:	1c0f      	adds	r7, r1, #0
    6856:	4665      	mov	r5, ip
    6858:	4698      	mov	r8, r3
    685a:	e5f1      	b.n	6440 <__aeabi_dadd+0x50>
    685c:	2600      	movs	r6, #0
    685e:	2700      	movs	r7, #0
    6860:	2500      	movs	r5, #0
    6862:	e67f      	b.n	6564 <__aeabi_dadd+0x174>
    6864:	1c18      	adds	r0, r3, #0
    6866:	1c0a      	adds	r2, r1, #0
    6868:	3820      	subs	r0, #32
    686a:	40c2      	lsrs	r2, r0
    686c:	2b20      	cmp	r3, #32
    686e:	d100      	bne.n	6872 <__aeabi_dadd+0x482>
    6870:	e0a7      	b.n	69c2 <__aeabi_dadd+0x5d2>
    6872:	2040      	movs	r0, #64	; 0x40
    6874:	1ac0      	subs	r0, r0, r3
    6876:	4081      	lsls	r1, r0
    6878:	1c08      	adds	r0, r1, #0
    687a:	4663      	mov	r3, ip
    687c:	4318      	orrs	r0, r3
    687e:	1e41      	subs	r1, r0, #1
    6880:	4188      	sbcs	r0, r1
    6882:	4310      	orrs	r0, r2
    6884:	2200      	movs	r2, #0
    6886:	e68f      	b.n	65a8 <__aeabi_dadd+0x1b8>
    6888:	4c6b      	ldr	r4, [pc, #428]	; (6a38 <__aeabi_dadd+0x648>)
    688a:	42a2      	cmp	r2, r4
    688c:	d000      	beq.n	6890 <__aeabi_dadd+0x4a0>
    688e:	e75a      	b.n	6746 <__aeabi_dadd+0x356>
    6890:	1c0f      	adds	r7, r1, #0
    6892:	4665      	mov	r5, ip
    6894:	1c14      	adds	r4, r2, #0
    6896:	4698      	mov	r8, r3
    6898:	e5d2      	b.n	6440 <__aeabi_dadd+0x50>
    689a:	2c00      	cmp	r4, #0
    689c:	d13a      	bne.n	6914 <__aeabi_dadd+0x524>
    689e:	1c38      	adds	r0, r7, #0
    68a0:	4328      	orrs	r0, r5
    68a2:	d071      	beq.n	6988 <__aeabi_dadd+0x598>
    68a4:	43db      	mvns	r3, r3
    68a6:	2b00      	cmp	r3, #0
    68a8:	d018      	beq.n	68dc <__aeabi_dadd+0x4ec>
    68aa:	4863      	ldr	r0, [pc, #396]	; (6a38 <__aeabi_dadd+0x648>)
    68ac:	4282      	cmp	r2, r0
    68ae:	d06b      	beq.n	6988 <__aeabi_dadd+0x598>
    68b0:	2b38      	cmp	r3, #56	; 0x38
    68b2:	dd00      	ble.n	68b6 <__aeabi_dadd+0x4c6>
    68b4:	e09d      	b.n	69f2 <__aeabi_dadd+0x602>
    68b6:	2b1f      	cmp	r3, #31
    68b8:	dd00      	ble.n	68bc <__aeabi_dadd+0x4cc>
    68ba:	e0a7      	b.n	6a0c <__aeabi_dadd+0x61c>
    68bc:	2020      	movs	r0, #32
    68be:	1c3c      	adds	r4, r7, #0
    68c0:	1ac0      	subs	r0, r0, r3
    68c2:	4084      	lsls	r4, r0
    68c4:	46a1      	mov	r9, r4
    68c6:	1c2c      	adds	r4, r5, #0
    68c8:	4682      	mov	sl, r0
    68ca:	40dc      	lsrs	r4, r3
    68cc:	4648      	mov	r0, r9
    68ce:	4304      	orrs	r4, r0
    68d0:	4650      	mov	r0, sl
    68d2:	4085      	lsls	r5, r0
    68d4:	1e68      	subs	r0, r5, #1
    68d6:	4185      	sbcs	r5, r0
    68d8:	40df      	lsrs	r7, r3
    68da:	4325      	orrs	r5, r4
    68dc:	4465      	add	r5, ip
    68de:	4565      	cmp	r5, ip
    68e0:	419b      	sbcs	r3, r3
    68e2:	187f      	adds	r7, r7, r1
    68e4:	425b      	negs	r3, r3
    68e6:	18ff      	adds	r7, r7, r3
    68e8:	1c14      	adds	r4, r2, #0
    68ea:	e664      	b.n	65b6 <__aeabi_dadd+0x1c6>
    68ec:	2a00      	cmp	r2, #0
    68ee:	d119      	bne.n	6924 <__aeabi_dadd+0x534>
    68f0:	4662      	mov	r2, ip
    68f2:	430a      	orrs	r2, r1
    68f4:	d077      	beq.n	69e6 <__aeabi_dadd+0x5f6>
    68f6:	1c0f      	adds	r7, r1, #0
    68f8:	4665      	mov	r5, ip
    68fa:	4698      	mov	r8, r3
    68fc:	4c4e      	ldr	r4, [pc, #312]	; (6a38 <__aeabi_dadd+0x648>)
    68fe:	e59f      	b.n	6440 <__aeabi_dadd+0x50>
    6900:	433d      	orrs	r5, r7
    6902:	1e6f      	subs	r7, r5, #1
    6904:	41bd      	sbcs	r5, r7
    6906:	2700      	movs	r7, #0
    6908:	b2ed      	uxtb	r5, r5
    690a:	e732      	b.n	6772 <__aeabi_dadd+0x382>
    690c:	1c04      	adds	r4, r0, #0
    690e:	2700      	movs	r7, #0
    6910:	2500      	movs	r5, #0
    6912:	e627      	b.n	6564 <__aeabi_dadd+0x174>
    6914:	4848      	ldr	r0, [pc, #288]	; (6a38 <__aeabi_dadd+0x648>)
    6916:	4282      	cmp	r2, r0
    6918:	d036      	beq.n	6988 <__aeabi_dadd+0x598>
    691a:	2080      	movs	r0, #128	; 0x80
    691c:	0400      	lsls	r0, r0, #16
    691e:	425b      	negs	r3, r3
    6920:	4307      	orrs	r7, r0
    6922:	e7c5      	b.n	68b0 <__aeabi_dadd+0x4c0>
    6924:	4662      	mov	r2, ip
    6926:	430a      	orrs	r2, r1
    6928:	d049      	beq.n	69be <__aeabi_dadd+0x5ce>
    692a:	2480      	movs	r4, #128	; 0x80
    692c:	08ed      	lsrs	r5, r5, #3
    692e:	0778      	lsls	r0, r7, #29
    6930:	08fa      	lsrs	r2, r7, #3
    6932:	0324      	lsls	r4, r4, #12
    6934:	4328      	orrs	r0, r5
    6936:	4222      	tst	r2, r4
    6938:	d009      	beq.n	694e <__aeabi_dadd+0x55e>
    693a:	08ce      	lsrs	r6, r1, #3
    693c:	4226      	tst	r6, r4
    693e:	d106      	bne.n	694e <__aeabi_dadd+0x55e>
    6940:	4662      	mov	r2, ip
    6942:	074f      	lsls	r7, r1, #29
    6944:	1c38      	adds	r0, r7, #0
    6946:	08d2      	lsrs	r2, r2, #3
    6948:	4310      	orrs	r0, r2
    694a:	4698      	mov	r8, r3
    694c:	1c32      	adds	r2, r6, #0
    694e:	00d2      	lsls	r2, r2, #3
    6950:	0f47      	lsrs	r7, r0, #29
    6952:	4317      	orrs	r7, r2
    6954:	00c5      	lsls	r5, r0, #3
    6956:	4c38      	ldr	r4, [pc, #224]	; (6a38 <__aeabi_dadd+0x648>)
    6958:	e572      	b.n	6440 <__aeabi_dadd+0x50>
    695a:	4662      	mov	r2, ip
    695c:	430a      	orrs	r2, r1
    695e:	d100      	bne.n	6962 <__aeabi_dadd+0x572>
    6960:	e56e      	b.n	6440 <__aeabi_dadd+0x50>
    6962:	4662      	mov	r2, ip
    6964:	1aae      	subs	r6, r5, r2
    6966:	42b5      	cmp	r5, r6
    6968:	4192      	sbcs	r2, r2
    696a:	1a78      	subs	r0, r7, r1
    696c:	4252      	negs	r2, r2
    696e:	1a82      	subs	r2, r0, r2
    6970:	0210      	lsls	r0, r2, #8
    6972:	d400      	bmi.n	6976 <__aeabi_dadd+0x586>
    6974:	e655      	b.n	6622 <__aeabi_dadd+0x232>
    6976:	4662      	mov	r2, ip
    6978:	1b55      	subs	r5, r2, r5
    697a:	45ac      	cmp	ip, r5
    697c:	4180      	sbcs	r0, r0
    697e:	1bca      	subs	r2, r1, r7
    6980:	4240      	negs	r0, r0
    6982:	1a17      	subs	r7, r2, r0
    6984:	4698      	mov	r8, r3
    6986:	e55b      	b.n	6440 <__aeabi_dadd+0x50>
    6988:	1c0f      	adds	r7, r1, #0
    698a:	4665      	mov	r5, ip
    698c:	1c14      	adds	r4, r2, #0
    698e:	e557      	b.n	6440 <__aeabi_dadd+0x50>
    6990:	2b00      	cmp	r3, #0
    6992:	d034      	beq.n	69fe <__aeabi_dadd+0x60e>
    6994:	4663      	mov	r3, ip
    6996:	430b      	orrs	r3, r1
    6998:	d011      	beq.n	69be <__aeabi_dadd+0x5ce>
    699a:	2480      	movs	r4, #128	; 0x80
    699c:	08ed      	lsrs	r5, r5, #3
    699e:	0778      	lsls	r0, r7, #29
    69a0:	08fa      	lsrs	r2, r7, #3
    69a2:	0324      	lsls	r4, r4, #12
    69a4:	4328      	orrs	r0, r5
    69a6:	4222      	tst	r2, r4
    69a8:	d0d1      	beq.n	694e <__aeabi_dadd+0x55e>
    69aa:	08cb      	lsrs	r3, r1, #3
    69ac:	4223      	tst	r3, r4
    69ae:	d1ce      	bne.n	694e <__aeabi_dadd+0x55e>
    69b0:	4662      	mov	r2, ip
    69b2:	074f      	lsls	r7, r1, #29
    69b4:	1c38      	adds	r0, r7, #0
    69b6:	08d2      	lsrs	r2, r2, #3
    69b8:	4310      	orrs	r0, r2
    69ba:	1c1a      	adds	r2, r3, #0
    69bc:	e7c7      	b.n	694e <__aeabi_dadd+0x55e>
    69be:	4c1e      	ldr	r4, [pc, #120]	; (6a38 <__aeabi_dadd+0x648>)
    69c0:	e53e      	b.n	6440 <__aeabi_dadd+0x50>
    69c2:	2000      	movs	r0, #0
    69c4:	e759      	b.n	687a <__aeabi_dadd+0x48a>
    69c6:	1c04      	adds	r4, r0, #0
    69c8:	1c3e      	adds	r6, r7, #0
    69ca:	3c20      	subs	r4, #32
    69cc:	40e6      	lsrs	r6, r4
    69ce:	1c34      	adds	r4, r6, #0
    69d0:	2820      	cmp	r0, #32
    69d2:	d02b      	beq.n	6a2c <__aeabi_dadd+0x63c>
    69d4:	2640      	movs	r6, #64	; 0x40
    69d6:	1a30      	subs	r0, r6, r0
    69d8:	4087      	lsls	r7, r0
    69da:	433d      	orrs	r5, r7
    69dc:	1e6f      	subs	r7, r5, #1
    69de:	41bd      	sbcs	r5, r7
    69e0:	2700      	movs	r7, #0
    69e2:	4325      	orrs	r5, r4
    69e4:	e6c5      	b.n	6772 <__aeabi_dadd+0x382>
    69e6:	2780      	movs	r7, #128	; 0x80
    69e8:	2600      	movs	r6, #0
    69ea:	03ff      	lsls	r7, r7, #15
    69ec:	4c12      	ldr	r4, [pc, #72]	; (6a38 <__aeabi_dadd+0x648>)
    69ee:	2500      	movs	r5, #0
    69f0:	e5b8      	b.n	6564 <__aeabi_dadd+0x174>
    69f2:	433d      	orrs	r5, r7
    69f4:	1e6f      	subs	r7, r5, #1
    69f6:	41bd      	sbcs	r5, r7
    69f8:	2700      	movs	r7, #0
    69fa:	b2ed      	uxtb	r5, r5
    69fc:	e76e      	b.n	68dc <__aeabi_dadd+0x4ec>
    69fe:	1c0f      	adds	r7, r1, #0
    6a00:	4665      	mov	r5, ip
    6a02:	4c0d      	ldr	r4, [pc, #52]	; (6a38 <__aeabi_dadd+0x648>)
    6a04:	e51c      	b.n	6440 <__aeabi_dadd+0x50>
    6a06:	1c0f      	adds	r7, r1, #0
    6a08:	4665      	mov	r5, ip
    6a0a:	e519      	b.n	6440 <__aeabi_dadd+0x50>
    6a0c:	1c1c      	adds	r4, r3, #0
    6a0e:	1c38      	adds	r0, r7, #0
    6a10:	3c20      	subs	r4, #32
    6a12:	40e0      	lsrs	r0, r4
    6a14:	1c04      	adds	r4, r0, #0
    6a16:	2b20      	cmp	r3, #32
    6a18:	d00c      	beq.n	6a34 <__aeabi_dadd+0x644>
    6a1a:	2040      	movs	r0, #64	; 0x40
    6a1c:	1ac3      	subs	r3, r0, r3
    6a1e:	409f      	lsls	r7, r3
    6a20:	433d      	orrs	r5, r7
    6a22:	1e6f      	subs	r7, r5, #1
    6a24:	41bd      	sbcs	r5, r7
    6a26:	2700      	movs	r7, #0
    6a28:	4325      	orrs	r5, r4
    6a2a:	e757      	b.n	68dc <__aeabi_dadd+0x4ec>
    6a2c:	2700      	movs	r7, #0
    6a2e:	e7d4      	b.n	69da <__aeabi_dadd+0x5ea>
    6a30:	1c1d      	adds	r5, r3, #0
    6a32:	e5fc      	b.n	662e <__aeabi_dadd+0x23e>
    6a34:	2700      	movs	r7, #0
    6a36:	e7f3      	b.n	6a20 <__aeabi_dadd+0x630>
    6a38:	000007ff 	.word	0x000007ff
    6a3c:	ff7fffff 	.word	0xff7fffff

00006a40 <__aeabi_ddiv>:
    6a40:	b5f0      	push	{r4, r5, r6, r7, lr}
    6a42:	465f      	mov	r7, fp
    6a44:	4656      	mov	r6, sl
    6a46:	464d      	mov	r5, r9
    6a48:	4644      	mov	r4, r8
    6a4a:	b4f0      	push	{r4, r5, r6, r7}
    6a4c:	030f      	lsls	r7, r1, #12
    6a4e:	b087      	sub	sp, #28
    6a50:	4698      	mov	r8, r3
    6a52:	004d      	lsls	r5, r1, #1
    6a54:	0b3b      	lsrs	r3, r7, #12
    6a56:	0fcc      	lsrs	r4, r1, #31
    6a58:	1c06      	adds	r6, r0, #0
    6a5a:	4692      	mov	sl, r2
    6a5c:	4681      	mov	r9, r0
    6a5e:	469b      	mov	fp, r3
    6a60:	0d6d      	lsrs	r5, r5, #21
    6a62:	9401      	str	r4, [sp, #4]
    6a64:	d06b      	beq.n	6b3e <__aeabi_ddiv+0xfe>
    6a66:	4b66      	ldr	r3, [pc, #408]	; (6c00 <__aeabi_ddiv+0x1c0>)
    6a68:	429d      	cmp	r5, r3
    6a6a:	d035      	beq.n	6ad8 <__aeabi_ddiv+0x98>
    6a6c:	2780      	movs	r7, #128	; 0x80
    6a6e:	465b      	mov	r3, fp
    6a70:	037f      	lsls	r7, r7, #13
    6a72:	431f      	orrs	r7, r3
    6a74:	00f3      	lsls	r3, r6, #3
    6a76:	4699      	mov	r9, r3
    6a78:	4b62      	ldr	r3, [pc, #392]	; (6c04 <__aeabi_ddiv+0x1c4>)
    6a7a:	00ff      	lsls	r7, r7, #3
    6a7c:	0f40      	lsrs	r0, r0, #29
    6a7e:	469c      	mov	ip, r3
    6a80:	4307      	orrs	r7, r0
    6a82:	2300      	movs	r3, #0
    6a84:	46bb      	mov	fp, r7
    6a86:	2600      	movs	r6, #0
    6a88:	4465      	add	r5, ip
    6a8a:	9300      	str	r3, [sp, #0]
    6a8c:	4642      	mov	r2, r8
    6a8e:	0317      	lsls	r7, r2, #12
    6a90:	0050      	lsls	r0, r2, #1
    6a92:	0fd2      	lsrs	r2, r2, #31
    6a94:	4653      	mov	r3, sl
    6a96:	0b3f      	lsrs	r7, r7, #12
    6a98:	0d40      	lsrs	r0, r0, #21
    6a9a:	4690      	mov	r8, r2
    6a9c:	d100      	bne.n	6aa0 <__aeabi_ddiv+0x60>
    6a9e:	e072      	b.n	6b86 <__aeabi_ddiv+0x146>
    6aa0:	4a57      	ldr	r2, [pc, #348]	; (6c00 <__aeabi_ddiv+0x1c0>)
    6aa2:	4290      	cmp	r0, r2
    6aa4:	d067      	beq.n	6b76 <__aeabi_ddiv+0x136>
    6aa6:	2380      	movs	r3, #128	; 0x80
    6aa8:	035b      	lsls	r3, r3, #13
    6aaa:	431f      	orrs	r7, r3
    6aac:	4653      	mov	r3, sl
    6aae:	4a55      	ldr	r2, [pc, #340]	; (6c04 <__aeabi_ddiv+0x1c4>)
    6ab0:	0f5b      	lsrs	r3, r3, #29
    6ab2:	00ff      	lsls	r7, r7, #3
    6ab4:	431f      	orrs	r7, r3
    6ab6:	4694      	mov	ip, r2
    6ab8:	4653      	mov	r3, sl
    6aba:	2100      	movs	r1, #0
    6abc:	00db      	lsls	r3, r3, #3
    6abe:	4460      	add	r0, ip
    6ac0:	4642      	mov	r2, r8
    6ac2:	4062      	eors	r2, r4
    6ac4:	4692      	mov	sl, r2
    6ac6:	1a2d      	subs	r5, r5, r0
    6ac8:	430e      	orrs	r6, r1
    6aca:	2e0f      	cmp	r6, #15
    6acc:	d900      	bls.n	6ad0 <__aeabi_ddiv+0x90>
    6ace:	e0a1      	b.n	6c14 <__aeabi_ddiv+0x1d4>
    6ad0:	484d      	ldr	r0, [pc, #308]	; (6c08 <__aeabi_ddiv+0x1c8>)
    6ad2:	00b6      	lsls	r6, r6, #2
    6ad4:	5980      	ldr	r0, [r0, r6]
    6ad6:	4687      	mov	pc, r0
    6ad8:	465b      	mov	r3, fp
    6ada:	431e      	orrs	r6, r3
    6adc:	d000      	beq.n	6ae0 <__aeabi_ddiv+0xa0>
    6ade:	e076      	b.n	6bce <__aeabi_ddiv+0x18e>
    6ae0:	2300      	movs	r3, #0
    6ae2:	469b      	mov	fp, r3
    6ae4:	4699      	mov	r9, r3
    6ae6:	3302      	adds	r3, #2
    6ae8:	2608      	movs	r6, #8
    6aea:	9300      	str	r3, [sp, #0]
    6aec:	e7ce      	b.n	6a8c <__aeabi_ddiv+0x4c>
    6aee:	4699      	mov	r9, r3
    6af0:	4643      	mov	r3, r8
    6af2:	46bb      	mov	fp, r7
    6af4:	9301      	str	r3, [sp, #4]
    6af6:	9100      	str	r1, [sp, #0]
    6af8:	9b00      	ldr	r3, [sp, #0]
    6afa:	2b02      	cmp	r3, #2
    6afc:	d16b      	bne.n	6bd6 <__aeabi_ddiv+0x196>
    6afe:	9b01      	ldr	r3, [sp, #4]
    6b00:	469a      	mov	sl, r3
    6b02:	2100      	movs	r1, #0
    6b04:	4653      	mov	r3, sl
    6b06:	2201      	movs	r2, #1
    6b08:	2700      	movs	r7, #0
    6b0a:	4689      	mov	r9, r1
    6b0c:	401a      	ands	r2, r3
    6b0e:	4b3c      	ldr	r3, [pc, #240]	; (6c00 <__aeabi_ddiv+0x1c0>)
    6b10:	2100      	movs	r1, #0
    6b12:	033f      	lsls	r7, r7, #12
    6b14:	0d0c      	lsrs	r4, r1, #20
    6b16:	0524      	lsls	r4, r4, #20
    6b18:	0b3f      	lsrs	r7, r7, #12
    6b1a:	4327      	orrs	r7, r4
    6b1c:	4c3b      	ldr	r4, [pc, #236]	; (6c0c <__aeabi_ddiv+0x1cc>)
    6b1e:	051b      	lsls	r3, r3, #20
    6b20:	4027      	ands	r7, r4
    6b22:	431f      	orrs	r7, r3
    6b24:	007f      	lsls	r7, r7, #1
    6b26:	07d2      	lsls	r2, r2, #31
    6b28:	087f      	lsrs	r7, r7, #1
    6b2a:	4317      	orrs	r7, r2
    6b2c:	4648      	mov	r0, r9
    6b2e:	1c39      	adds	r1, r7, #0
    6b30:	b007      	add	sp, #28
    6b32:	bc3c      	pop	{r2, r3, r4, r5}
    6b34:	4690      	mov	r8, r2
    6b36:	4699      	mov	r9, r3
    6b38:	46a2      	mov	sl, r4
    6b3a:	46ab      	mov	fp, r5
    6b3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6b3e:	4303      	orrs	r3, r0
    6b40:	d03e      	beq.n	6bc0 <__aeabi_ddiv+0x180>
    6b42:	465b      	mov	r3, fp
    6b44:	2b00      	cmp	r3, #0
    6b46:	d100      	bne.n	6b4a <__aeabi_ddiv+0x10a>
    6b48:	e19c      	b.n	6e84 <__aeabi_ddiv+0x444>
    6b4a:	4658      	mov	r0, fp
    6b4c:	f001 fb52 	bl	81f4 <__clzsi2>
    6b50:	2328      	movs	r3, #40	; 0x28
    6b52:	1c31      	adds	r1, r6, #0
    6b54:	1a1b      	subs	r3, r3, r0
    6b56:	1c02      	adds	r2, r0, #0
    6b58:	465f      	mov	r7, fp
    6b5a:	40d9      	lsrs	r1, r3
    6b5c:	3a08      	subs	r2, #8
    6b5e:	4097      	lsls	r7, r2
    6b60:	1c0b      	adds	r3, r1, #0
    6b62:	4096      	lsls	r6, r2
    6b64:	433b      	orrs	r3, r7
    6b66:	469b      	mov	fp, r3
    6b68:	46b1      	mov	r9, r6
    6b6a:	2300      	movs	r3, #0
    6b6c:	4d28      	ldr	r5, [pc, #160]	; (6c10 <__aeabi_ddiv+0x1d0>)
    6b6e:	2600      	movs	r6, #0
    6b70:	1a2d      	subs	r5, r5, r0
    6b72:	9300      	str	r3, [sp, #0]
    6b74:	e78a      	b.n	6a8c <__aeabi_ddiv+0x4c>
    6b76:	4652      	mov	r2, sl
    6b78:	2103      	movs	r1, #3
    6b7a:	433a      	orrs	r2, r7
    6b7c:	d1a0      	bne.n	6ac0 <__aeabi_ddiv+0x80>
    6b7e:	2700      	movs	r7, #0
    6b80:	2300      	movs	r3, #0
    6b82:	2102      	movs	r1, #2
    6b84:	e79c      	b.n	6ac0 <__aeabi_ddiv+0x80>
    6b86:	4652      	mov	r2, sl
    6b88:	433a      	orrs	r2, r7
    6b8a:	d015      	beq.n	6bb8 <__aeabi_ddiv+0x178>
    6b8c:	2f00      	cmp	r7, #0
    6b8e:	d100      	bne.n	6b92 <__aeabi_ddiv+0x152>
    6b90:	e185      	b.n	6e9e <__aeabi_ddiv+0x45e>
    6b92:	1c38      	adds	r0, r7, #0
    6b94:	f001 fb2e 	bl	81f4 <__clzsi2>
    6b98:	1c02      	adds	r2, r0, #0
    6b9a:	2128      	movs	r1, #40	; 0x28
    6b9c:	4650      	mov	r0, sl
    6b9e:	1a89      	subs	r1, r1, r2
    6ba0:	1c13      	adds	r3, r2, #0
    6ba2:	40c8      	lsrs	r0, r1
    6ba4:	4651      	mov	r1, sl
    6ba6:	3b08      	subs	r3, #8
    6ba8:	4099      	lsls	r1, r3
    6baa:	409f      	lsls	r7, r3
    6bac:	1c0b      	adds	r3, r1, #0
    6bae:	4307      	orrs	r7, r0
    6bb0:	4817      	ldr	r0, [pc, #92]	; (6c10 <__aeabi_ddiv+0x1d0>)
    6bb2:	2100      	movs	r1, #0
    6bb4:	1a80      	subs	r0, r0, r2
    6bb6:	e783      	b.n	6ac0 <__aeabi_ddiv+0x80>
    6bb8:	2700      	movs	r7, #0
    6bba:	2300      	movs	r3, #0
    6bbc:	2101      	movs	r1, #1
    6bbe:	e77f      	b.n	6ac0 <__aeabi_ddiv+0x80>
    6bc0:	2300      	movs	r3, #0
    6bc2:	469b      	mov	fp, r3
    6bc4:	4699      	mov	r9, r3
    6bc6:	3301      	adds	r3, #1
    6bc8:	2604      	movs	r6, #4
    6bca:	9300      	str	r3, [sp, #0]
    6bcc:	e75e      	b.n	6a8c <__aeabi_ddiv+0x4c>
    6bce:	2303      	movs	r3, #3
    6bd0:	260c      	movs	r6, #12
    6bd2:	9300      	str	r3, [sp, #0]
    6bd4:	e75a      	b.n	6a8c <__aeabi_ddiv+0x4c>
    6bd6:	2b03      	cmp	r3, #3
    6bd8:	d100      	bne.n	6bdc <__aeabi_ddiv+0x19c>
    6bda:	e23c      	b.n	7056 <__aeabi_ddiv+0x616>
    6bdc:	2b01      	cmp	r3, #1
    6bde:	d000      	beq.n	6be2 <__aeabi_ddiv+0x1a2>
    6be0:	e1bf      	b.n	6f62 <__aeabi_ddiv+0x522>
    6be2:	1c1a      	adds	r2, r3, #0
    6be4:	9b01      	ldr	r3, [sp, #4]
    6be6:	401a      	ands	r2, r3
    6be8:	2100      	movs	r1, #0
    6bea:	2300      	movs	r3, #0
    6bec:	2700      	movs	r7, #0
    6bee:	4689      	mov	r9, r1
    6bf0:	e78e      	b.n	6b10 <__aeabi_ddiv+0xd0>
    6bf2:	2300      	movs	r3, #0
    6bf4:	2780      	movs	r7, #128	; 0x80
    6bf6:	4699      	mov	r9, r3
    6bf8:	2200      	movs	r2, #0
    6bfa:	033f      	lsls	r7, r7, #12
    6bfc:	4b00      	ldr	r3, [pc, #0]	; (6c00 <__aeabi_ddiv+0x1c0>)
    6bfe:	e787      	b.n	6b10 <__aeabi_ddiv+0xd0>
    6c00:	000007ff 	.word	0x000007ff
    6c04:	fffffc01 	.word	0xfffffc01
    6c08:	0000e320 	.word	0x0000e320
    6c0c:	800fffff 	.word	0x800fffff
    6c10:	fffffc0d 	.word	0xfffffc0d
    6c14:	45bb      	cmp	fp, r7
    6c16:	d900      	bls.n	6c1a <__aeabi_ddiv+0x1da>
    6c18:	e151      	b.n	6ebe <__aeabi_ddiv+0x47e>
    6c1a:	d100      	bne.n	6c1e <__aeabi_ddiv+0x1de>
    6c1c:	e14c      	b.n	6eb8 <__aeabi_ddiv+0x478>
    6c1e:	464a      	mov	r2, r9
    6c20:	9203      	str	r2, [sp, #12]
    6c22:	2200      	movs	r2, #0
    6c24:	465c      	mov	r4, fp
    6c26:	4690      	mov	r8, r2
    6c28:	3d01      	subs	r5, #1
    6c2a:	0e18      	lsrs	r0, r3, #24
    6c2c:	023f      	lsls	r7, r7, #8
    6c2e:	4338      	orrs	r0, r7
    6c30:	021b      	lsls	r3, r3, #8
    6c32:	9301      	str	r3, [sp, #4]
    6c34:	0c03      	lsrs	r3, r0, #16
    6c36:	4699      	mov	r9, r3
    6c38:	0403      	lsls	r3, r0, #16
    6c3a:	0c1b      	lsrs	r3, r3, #16
    6c3c:	4649      	mov	r1, r9
    6c3e:	1c06      	adds	r6, r0, #0
    6c40:	1c20      	adds	r0, r4, #0
    6c42:	1c1f      	adds	r7, r3, #0
    6c44:	9300      	str	r3, [sp, #0]
    6c46:	f7fe fac3 	bl	51d0 <__aeabi_uidiv>
    6c4a:	1c02      	adds	r2, r0, #0
    6c4c:	437a      	muls	r2, r7
    6c4e:	9002      	str	r0, [sp, #8]
    6c50:	4649      	mov	r1, r9
    6c52:	1c20      	adds	r0, r4, #0
    6c54:	1c17      	adds	r7, r2, #0
    6c56:	f7fe fb41 	bl	52dc <__aeabi_uidivmod>
    6c5a:	9b03      	ldr	r3, [sp, #12]
    6c5c:	0409      	lsls	r1, r1, #16
    6c5e:	0c1b      	lsrs	r3, r3, #16
    6c60:	4319      	orrs	r1, r3
    6c62:	428f      	cmp	r7, r1
    6c64:	d90c      	bls.n	6c80 <__aeabi_ddiv+0x240>
    6c66:	9b02      	ldr	r3, [sp, #8]
    6c68:	1989      	adds	r1, r1, r6
    6c6a:	3b01      	subs	r3, #1
    6c6c:	428e      	cmp	r6, r1
    6c6e:	d900      	bls.n	6c72 <__aeabi_ddiv+0x232>
    6c70:	e152      	b.n	6f18 <__aeabi_ddiv+0x4d8>
    6c72:	428f      	cmp	r7, r1
    6c74:	d800      	bhi.n	6c78 <__aeabi_ddiv+0x238>
    6c76:	e14f      	b.n	6f18 <__aeabi_ddiv+0x4d8>
    6c78:	9b02      	ldr	r3, [sp, #8]
    6c7a:	1989      	adds	r1, r1, r6
    6c7c:	3b02      	subs	r3, #2
    6c7e:	9302      	str	r3, [sp, #8]
    6c80:	1bcc      	subs	r4, r1, r7
    6c82:	1c20      	adds	r0, r4, #0
    6c84:	4649      	mov	r1, r9
    6c86:	f7fe faa3 	bl	51d0 <__aeabi_uidiv>
    6c8a:	9f00      	ldr	r7, [sp, #0]
    6c8c:	4683      	mov	fp, r0
    6c8e:	4347      	muls	r7, r0
    6c90:	4649      	mov	r1, r9
    6c92:	1c20      	adds	r0, r4, #0
    6c94:	f7fe fb22 	bl	52dc <__aeabi_uidivmod>
    6c98:	9a03      	ldr	r2, [sp, #12]
    6c9a:	040b      	lsls	r3, r1, #16
    6c9c:	0414      	lsls	r4, r2, #16
    6c9e:	0c24      	lsrs	r4, r4, #16
    6ca0:	4323      	orrs	r3, r4
    6ca2:	429f      	cmp	r7, r3
    6ca4:	d90d      	bls.n	6cc2 <__aeabi_ddiv+0x282>
    6ca6:	465a      	mov	r2, fp
    6ca8:	199b      	adds	r3, r3, r6
    6caa:	3a01      	subs	r2, #1
    6cac:	429e      	cmp	r6, r3
    6cae:	d900      	bls.n	6cb2 <__aeabi_ddiv+0x272>
    6cb0:	e130      	b.n	6f14 <__aeabi_ddiv+0x4d4>
    6cb2:	429f      	cmp	r7, r3
    6cb4:	d800      	bhi.n	6cb8 <__aeabi_ddiv+0x278>
    6cb6:	e12d      	b.n	6f14 <__aeabi_ddiv+0x4d4>
    6cb8:	2202      	movs	r2, #2
    6cba:	4252      	negs	r2, r2
    6cbc:	4694      	mov	ip, r2
    6cbe:	199b      	adds	r3, r3, r6
    6cc0:	44e3      	add	fp, ip
    6cc2:	9a02      	ldr	r2, [sp, #8]
    6cc4:	1bdb      	subs	r3, r3, r7
    6cc6:	0417      	lsls	r7, r2, #16
    6cc8:	465a      	mov	r2, fp
    6cca:	433a      	orrs	r2, r7
    6ccc:	4693      	mov	fp, r2
    6cce:	9c01      	ldr	r4, [sp, #4]
    6cd0:	0c17      	lsrs	r7, r2, #16
    6cd2:	0c22      	lsrs	r2, r4, #16
    6cd4:	1c10      	adds	r0, r2, #0
    6cd6:	9204      	str	r2, [sp, #16]
    6cd8:	465a      	mov	r2, fp
    6cda:	0411      	lsls	r1, r2, #16
    6cdc:	0422      	lsls	r2, r4, #16
    6cde:	0c12      	lsrs	r2, r2, #16
    6ce0:	1c14      	adds	r4, r2, #0
    6ce2:	0c09      	lsrs	r1, r1, #16
    6ce4:	437c      	muls	r4, r7
    6ce6:	9205      	str	r2, [sp, #20]
    6ce8:	434a      	muls	r2, r1
    6cea:	4341      	muls	r1, r0
    6cec:	4347      	muls	r7, r0
    6cee:	1861      	adds	r1, r4, r1
    6cf0:	0c10      	lsrs	r0, r2, #16
    6cf2:	1809      	adds	r1, r1, r0
    6cf4:	428c      	cmp	r4, r1
    6cf6:	d903      	bls.n	6d00 <__aeabi_ddiv+0x2c0>
    6cf8:	2080      	movs	r0, #128	; 0x80
    6cfa:	0240      	lsls	r0, r0, #9
    6cfc:	4684      	mov	ip, r0
    6cfe:	4467      	add	r7, ip
    6d00:	0c0c      	lsrs	r4, r1, #16
    6d02:	0412      	lsls	r2, r2, #16
    6d04:	0408      	lsls	r0, r1, #16
    6d06:	0c12      	lsrs	r2, r2, #16
    6d08:	193c      	adds	r4, r7, r4
    6d0a:	1881      	adds	r1, r0, r2
    6d0c:	42a3      	cmp	r3, r4
    6d0e:	d200      	bcs.n	6d12 <__aeabi_ddiv+0x2d2>
    6d10:	e0e5      	b.n	6ede <__aeabi_ddiv+0x49e>
    6d12:	d100      	bne.n	6d16 <__aeabi_ddiv+0x2d6>
    6d14:	e0df      	b.n	6ed6 <__aeabi_ddiv+0x496>
    6d16:	1b1f      	subs	r7, r3, r4
    6d18:	4643      	mov	r3, r8
    6d1a:	1a5c      	subs	r4, r3, r1
    6d1c:	45a0      	cmp	r8, r4
    6d1e:	4192      	sbcs	r2, r2
    6d20:	4252      	negs	r2, r2
    6d22:	1abf      	subs	r7, r7, r2
    6d24:	42b7      	cmp	r7, r6
    6d26:	d100      	bne.n	6d2a <__aeabi_ddiv+0x2ea>
    6d28:	e10e      	b.n	6f48 <__aeabi_ddiv+0x508>
    6d2a:	1c38      	adds	r0, r7, #0
    6d2c:	4649      	mov	r1, r9
    6d2e:	f7fe fa4f 	bl	51d0 <__aeabi_uidiv>
    6d32:	9b00      	ldr	r3, [sp, #0]
    6d34:	9002      	str	r0, [sp, #8]
    6d36:	4343      	muls	r3, r0
    6d38:	4649      	mov	r1, r9
    6d3a:	1c38      	adds	r0, r7, #0
    6d3c:	4698      	mov	r8, r3
    6d3e:	f7fe facd 	bl	52dc <__aeabi_uidivmod>
    6d42:	0c23      	lsrs	r3, r4, #16
    6d44:	040f      	lsls	r7, r1, #16
    6d46:	431f      	orrs	r7, r3
    6d48:	45b8      	cmp	r8, r7
    6d4a:	d90c      	bls.n	6d66 <__aeabi_ddiv+0x326>
    6d4c:	9b02      	ldr	r3, [sp, #8]
    6d4e:	19bf      	adds	r7, r7, r6
    6d50:	3b01      	subs	r3, #1
    6d52:	42be      	cmp	r6, r7
    6d54:	d900      	bls.n	6d58 <__aeabi_ddiv+0x318>
    6d56:	e0fb      	b.n	6f50 <__aeabi_ddiv+0x510>
    6d58:	45b8      	cmp	r8, r7
    6d5a:	d800      	bhi.n	6d5e <__aeabi_ddiv+0x31e>
    6d5c:	e0f8      	b.n	6f50 <__aeabi_ddiv+0x510>
    6d5e:	9b02      	ldr	r3, [sp, #8]
    6d60:	19bf      	adds	r7, r7, r6
    6d62:	3b02      	subs	r3, #2
    6d64:	9302      	str	r3, [sp, #8]
    6d66:	4643      	mov	r3, r8
    6d68:	1aff      	subs	r7, r7, r3
    6d6a:	4649      	mov	r1, r9
    6d6c:	1c38      	adds	r0, r7, #0
    6d6e:	f7fe fa2f 	bl	51d0 <__aeabi_uidiv>
    6d72:	9b00      	ldr	r3, [sp, #0]
    6d74:	9003      	str	r0, [sp, #12]
    6d76:	4343      	muls	r3, r0
    6d78:	4649      	mov	r1, r9
    6d7a:	1c38      	adds	r0, r7, #0
    6d7c:	4698      	mov	r8, r3
    6d7e:	f7fe faad 	bl	52dc <__aeabi_uidivmod>
    6d82:	0424      	lsls	r4, r4, #16
    6d84:	0409      	lsls	r1, r1, #16
    6d86:	0c24      	lsrs	r4, r4, #16
    6d88:	4321      	orrs	r1, r4
    6d8a:	4588      	cmp	r8, r1
    6d8c:	d90c      	bls.n	6da8 <__aeabi_ddiv+0x368>
    6d8e:	9b03      	ldr	r3, [sp, #12]
    6d90:	1989      	adds	r1, r1, r6
    6d92:	3b01      	subs	r3, #1
    6d94:	428e      	cmp	r6, r1
    6d96:	d900      	bls.n	6d9a <__aeabi_ddiv+0x35a>
    6d98:	e0dc      	b.n	6f54 <__aeabi_ddiv+0x514>
    6d9a:	4588      	cmp	r8, r1
    6d9c:	d800      	bhi.n	6da0 <__aeabi_ddiv+0x360>
    6d9e:	e0d9      	b.n	6f54 <__aeabi_ddiv+0x514>
    6da0:	9b03      	ldr	r3, [sp, #12]
    6da2:	1989      	adds	r1, r1, r6
    6da4:	3b02      	subs	r3, #2
    6da6:	9303      	str	r3, [sp, #12]
    6da8:	4643      	mov	r3, r8
    6daa:	1ac9      	subs	r1, r1, r3
    6dac:	9b02      	ldr	r3, [sp, #8]
    6dae:	9a03      	ldr	r2, [sp, #12]
    6db0:	041b      	lsls	r3, r3, #16
    6db2:	9c05      	ldr	r4, [sp, #20]
    6db4:	431a      	orrs	r2, r3
    6db6:	0c10      	lsrs	r0, r2, #16
    6db8:	0413      	lsls	r3, r2, #16
    6dba:	4691      	mov	r9, r2
    6dbc:	1c22      	adds	r2, r4, #0
    6dbe:	9f04      	ldr	r7, [sp, #16]
    6dc0:	0c1b      	lsrs	r3, r3, #16
    6dc2:	435a      	muls	r2, r3
    6dc4:	4344      	muls	r4, r0
    6dc6:	437b      	muls	r3, r7
    6dc8:	4378      	muls	r0, r7
    6dca:	18e3      	adds	r3, r4, r3
    6dcc:	0c17      	lsrs	r7, r2, #16
    6dce:	19db      	adds	r3, r3, r7
    6dd0:	429c      	cmp	r4, r3
    6dd2:	d903      	bls.n	6ddc <__aeabi_ddiv+0x39c>
    6dd4:	2480      	movs	r4, #128	; 0x80
    6dd6:	0264      	lsls	r4, r4, #9
    6dd8:	46a4      	mov	ip, r4
    6dda:	4460      	add	r0, ip
    6ddc:	0c1c      	lsrs	r4, r3, #16
    6dde:	0412      	lsls	r2, r2, #16
    6de0:	041b      	lsls	r3, r3, #16
    6de2:	0c12      	lsrs	r2, r2, #16
    6de4:	1900      	adds	r0, r0, r4
    6de6:	189b      	adds	r3, r3, r2
    6de8:	4281      	cmp	r1, r0
    6dea:	d200      	bcs.n	6dee <__aeabi_ddiv+0x3ae>
    6dec:	e096      	b.n	6f1c <__aeabi_ddiv+0x4dc>
    6dee:	d100      	bne.n	6df2 <__aeabi_ddiv+0x3b2>
    6df0:	e0fc      	b.n	6fec <__aeabi_ddiv+0x5ac>
    6df2:	464a      	mov	r2, r9
    6df4:	2301      	movs	r3, #1
    6df6:	431a      	orrs	r2, r3
    6df8:	4691      	mov	r9, r2
    6dfa:	4b9b      	ldr	r3, [pc, #620]	; (7068 <__aeabi_ddiv+0x628>)
    6dfc:	18eb      	adds	r3, r5, r3
    6dfe:	2b00      	cmp	r3, #0
    6e00:	dc00      	bgt.n	6e04 <__aeabi_ddiv+0x3c4>
    6e02:	e099      	b.n	6f38 <__aeabi_ddiv+0x4f8>
    6e04:	464a      	mov	r2, r9
    6e06:	0752      	lsls	r2, r2, #29
    6e08:	d00a      	beq.n	6e20 <__aeabi_ddiv+0x3e0>
    6e0a:	220f      	movs	r2, #15
    6e0c:	4649      	mov	r1, r9
    6e0e:	400a      	ands	r2, r1
    6e10:	2a04      	cmp	r2, #4
    6e12:	d005      	beq.n	6e20 <__aeabi_ddiv+0x3e0>
    6e14:	3104      	adds	r1, #4
    6e16:	4549      	cmp	r1, r9
    6e18:	4192      	sbcs	r2, r2
    6e1a:	4689      	mov	r9, r1
    6e1c:	4252      	negs	r2, r2
    6e1e:	4493      	add	fp, r2
    6e20:	465a      	mov	r2, fp
    6e22:	01d2      	lsls	r2, r2, #7
    6e24:	d506      	bpl.n	6e34 <__aeabi_ddiv+0x3f4>
    6e26:	465a      	mov	r2, fp
    6e28:	4b90      	ldr	r3, [pc, #576]	; (706c <__aeabi_ddiv+0x62c>)
    6e2a:	401a      	ands	r2, r3
    6e2c:	2380      	movs	r3, #128	; 0x80
    6e2e:	4693      	mov	fp, r2
    6e30:	00db      	lsls	r3, r3, #3
    6e32:	18eb      	adds	r3, r5, r3
    6e34:	4a8e      	ldr	r2, [pc, #568]	; (7070 <__aeabi_ddiv+0x630>)
    6e36:	4293      	cmp	r3, r2
    6e38:	dd00      	ble.n	6e3c <__aeabi_ddiv+0x3fc>
    6e3a:	e662      	b.n	6b02 <__aeabi_ddiv+0xc2>
    6e3c:	464a      	mov	r2, r9
    6e3e:	4659      	mov	r1, fp
    6e40:	08d2      	lsrs	r2, r2, #3
    6e42:	0749      	lsls	r1, r1, #29
    6e44:	4311      	orrs	r1, r2
    6e46:	465a      	mov	r2, fp
    6e48:	4689      	mov	r9, r1
    6e4a:	0257      	lsls	r7, r2, #9
    6e4c:	4651      	mov	r1, sl
    6e4e:	2201      	movs	r2, #1
    6e50:	055b      	lsls	r3, r3, #21
    6e52:	0b3f      	lsrs	r7, r7, #12
    6e54:	0d5b      	lsrs	r3, r3, #21
    6e56:	400a      	ands	r2, r1
    6e58:	e65a      	b.n	6b10 <__aeabi_ddiv+0xd0>
    6e5a:	2080      	movs	r0, #128	; 0x80
    6e5c:	465a      	mov	r2, fp
    6e5e:	0300      	lsls	r0, r0, #12
    6e60:	4202      	tst	r2, r0
    6e62:	d008      	beq.n	6e76 <__aeabi_ddiv+0x436>
    6e64:	4207      	tst	r7, r0
    6e66:	d106      	bne.n	6e76 <__aeabi_ddiv+0x436>
    6e68:	4307      	orrs	r7, r0
    6e6a:	033f      	lsls	r7, r7, #12
    6e6c:	4699      	mov	r9, r3
    6e6e:	0b3f      	lsrs	r7, r7, #12
    6e70:	4642      	mov	r2, r8
    6e72:	4b80      	ldr	r3, [pc, #512]	; (7074 <__aeabi_ddiv+0x634>)
    6e74:	e64c      	b.n	6b10 <__aeabi_ddiv+0xd0>
    6e76:	465f      	mov	r7, fp
    6e78:	4307      	orrs	r7, r0
    6e7a:	033f      	lsls	r7, r7, #12
    6e7c:	0b3f      	lsrs	r7, r7, #12
    6e7e:	1c22      	adds	r2, r4, #0
    6e80:	4b7c      	ldr	r3, [pc, #496]	; (7074 <__aeabi_ddiv+0x634>)
    6e82:	e645      	b.n	6b10 <__aeabi_ddiv+0xd0>
    6e84:	f001 f9b6 	bl	81f4 <__clzsi2>
    6e88:	1c03      	adds	r3, r0, #0
    6e8a:	3020      	adds	r0, #32
    6e8c:	2827      	cmp	r0, #39	; 0x27
    6e8e:	dc00      	bgt.n	6e92 <__aeabi_ddiv+0x452>
    6e90:	e65e      	b.n	6b50 <__aeabi_ddiv+0x110>
    6e92:	3b08      	subs	r3, #8
    6e94:	409e      	lsls	r6, r3
    6e96:	2300      	movs	r3, #0
    6e98:	46b3      	mov	fp, r6
    6e9a:	4699      	mov	r9, r3
    6e9c:	e665      	b.n	6b6a <__aeabi_ddiv+0x12a>
    6e9e:	4650      	mov	r0, sl
    6ea0:	f001 f9a8 	bl	81f4 <__clzsi2>
    6ea4:	1c02      	adds	r2, r0, #0
    6ea6:	3220      	adds	r2, #32
    6ea8:	2a27      	cmp	r2, #39	; 0x27
    6eaa:	dc00      	bgt.n	6eae <__aeabi_ddiv+0x46e>
    6eac:	e675      	b.n	6b9a <__aeabi_ddiv+0x15a>
    6eae:	4657      	mov	r7, sl
    6eb0:	3808      	subs	r0, #8
    6eb2:	4087      	lsls	r7, r0
    6eb4:	2300      	movs	r3, #0
    6eb6:	e67b      	b.n	6bb0 <__aeabi_ddiv+0x170>
    6eb8:	4599      	cmp	r9, r3
    6eba:	d200      	bcs.n	6ebe <__aeabi_ddiv+0x47e>
    6ebc:	e6af      	b.n	6c1e <__aeabi_ddiv+0x1de>
    6ebe:	465a      	mov	r2, fp
    6ec0:	4659      	mov	r1, fp
    6ec2:	0854      	lsrs	r4, r2, #1
    6ec4:	464a      	mov	r2, r9
    6ec6:	07c8      	lsls	r0, r1, #31
    6ec8:	0852      	lsrs	r2, r2, #1
    6eca:	4302      	orrs	r2, r0
    6ecc:	9203      	str	r2, [sp, #12]
    6ece:	464a      	mov	r2, r9
    6ed0:	07d2      	lsls	r2, r2, #31
    6ed2:	4690      	mov	r8, r2
    6ed4:	e6a9      	b.n	6c2a <__aeabi_ddiv+0x1ea>
    6ed6:	2700      	movs	r7, #0
    6ed8:	4588      	cmp	r8, r1
    6eda:	d300      	bcc.n	6ede <__aeabi_ddiv+0x49e>
    6edc:	e71c      	b.n	6d18 <__aeabi_ddiv+0x2d8>
    6ede:	9f01      	ldr	r7, [sp, #4]
    6ee0:	465a      	mov	r2, fp
    6ee2:	46bc      	mov	ip, r7
    6ee4:	44e0      	add	r8, ip
    6ee6:	45b8      	cmp	r8, r7
    6ee8:	41bf      	sbcs	r7, r7
    6eea:	427f      	negs	r7, r7
    6eec:	19bf      	adds	r7, r7, r6
    6eee:	18ff      	adds	r7, r7, r3
    6ef0:	3a01      	subs	r2, #1
    6ef2:	42be      	cmp	r6, r7
    6ef4:	d206      	bcs.n	6f04 <__aeabi_ddiv+0x4c4>
    6ef6:	42bc      	cmp	r4, r7
    6ef8:	d85f      	bhi.n	6fba <__aeabi_ddiv+0x57a>
    6efa:	d100      	bne.n	6efe <__aeabi_ddiv+0x4be>
    6efc:	e09f      	b.n	703e <__aeabi_ddiv+0x5fe>
    6efe:	1b3f      	subs	r7, r7, r4
    6f00:	4693      	mov	fp, r2
    6f02:	e709      	b.n	6d18 <__aeabi_ddiv+0x2d8>
    6f04:	42b7      	cmp	r7, r6
    6f06:	d1fa      	bne.n	6efe <__aeabi_ddiv+0x4be>
    6f08:	9b01      	ldr	r3, [sp, #4]
    6f0a:	4543      	cmp	r3, r8
    6f0c:	d9f3      	bls.n	6ef6 <__aeabi_ddiv+0x4b6>
    6f0e:	1b37      	subs	r7, r6, r4
    6f10:	4693      	mov	fp, r2
    6f12:	e701      	b.n	6d18 <__aeabi_ddiv+0x2d8>
    6f14:	4693      	mov	fp, r2
    6f16:	e6d4      	b.n	6cc2 <__aeabi_ddiv+0x282>
    6f18:	9302      	str	r3, [sp, #8]
    6f1a:	e6b1      	b.n	6c80 <__aeabi_ddiv+0x240>
    6f1c:	464a      	mov	r2, r9
    6f1e:	1989      	adds	r1, r1, r6
    6f20:	3a01      	subs	r2, #1
    6f22:	428e      	cmp	r6, r1
    6f24:	d918      	bls.n	6f58 <__aeabi_ddiv+0x518>
    6f26:	4691      	mov	r9, r2
    6f28:	4281      	cmp	r1, r0
    6f2a:	d000      	beq.n	6f2e <__aeabi_ddiv+0x4ee>
    6f2c:	e761      	b.n	6df2 <__aeabi_ddiv+0x3b2>
    6f2e:	9a01      	ldr	r2, [sp, #4]
    6f30:	429a      	cmp	r2, r3
    6f32:	d000      	beq.n	6f36 <__aeabi_ddiv+0x4f6>
    6f34:	e75d      	b.n	6df2 <__aeabi_ddiv+0x3b2>
    6f36:	e760      	b.n	6dfa <__aeabi_ddiv+0x3ba>
    6f38:	4f4f      	ldr	r7, [pc, #316]	; (7078 <__aeabi_ddiv+0x638>)
    6f3a:	1b7f      	subs	r7, r7, r5
    6f3c:	2f38      	cmp	r7, #56	; 0x38
    6f3e:	dd13      	ble.n	6f68 <__aeabi_ddiv+0x528>
    6f40:	2201      	movs	r2, #1
    6f42:	4653      	mov	r3, sl
    6f44:	401a      	ands	r2, r3
    6f46:	e64f      	b.n	6be8 <__aeabi_ddiv+0x1a8>
    6f48:	2301      	movs	r3, #1
    6f4a:	425b      	negs	r3, r3
    6f4c:	4699      	mov	r9, r3
    6f4e:	e754      	b.n	6dfa <__aeabi_ddiv+0x3ba>
    6f50:	9302      	str	r3, [sp, #8]
    6f52:	e708      	b.n	6d66 <__aeabi_ddiv+0x326>
    6f54:	9303      	str	r3, [sp, #12]
    6f56:	e727      	b.n	6da8 <__aeabi_ddiv+0x368>
    6f58:	4288      	cmp	r0, r1
    6f5a:	d83c      	bhi.n	6fd6 <__aeabi_ddiv+0x596>
    6f5c:	d074      	beq.n	7048 <__aeabi_ddiv+0x608>
    6f5e:	4691      	mov	r9, r2
    6f60:	e747      	b.n	6df2 <__aeabi_ddiv+0x3b2>
    6f62:	9b01      	ldr	r3, [sp, #4]
    6f64:	469a      	mov	sl, r3
    6f66:	e748      	b.n	6dfa <__aeabi_ddiv+0x3ba>
    6f68:	2f1f      	cmp	r7, #31
    6f6a:	dc44      	bgt.n	6ff6 <__aeabi_ddiv+0x5b6>
    6f6c:	4b43      	ldr	r3, [pc, #268]	; (707c <__aeabi_ddiv+0x63c>)
    6f6e:	464a      	mov	r2, r9
    6f70:	469c      	mov	ip, r3
    6f72:	465b      	mov	r3, fp
    6f74:	4465      	add	r5, ip
    6f76:	40fa      	lsrs	r2, r7
    6f78:	40ab      	lsls	r3, r5
    6f7a:	4313      	orrs	r3, r2
    6f7c:	464a      	mov	r2, r9
    6f7e:	40aa      	lsls	r2, r5
    6f80:	1c15      	adds	r5, r2, #0
    6f82:	1e6a      	subs	r2, r5, #1
    6f84:	4195      	sbcs	r5, r2
    6f86:	465a      	mov	r2, fp
    6f88:	40fa      	lsrs	r2, r7
    6f8a:	432b      	orrs	r3, r5
    6f8c:	1c17      	adds	r7, r2, #0
    6f8e:	075a      	lsls	r2, r3, #29
    6f90:	d009      	beq.n	6fa6 <__aeabi_ddiv+0x566>
    6f92:	220f      	movs	r2, #15
    6f94:	401a      	ands	r2, r3
    6f96:	2a04      	cmp	r2, #4
    6f98:	d005      	beq.n	6fa6 <__aeabi_ddiv+0x566>
    6f9a:	1d1a      	adds	r2, r3, #4
    6f9c:	429a      	cmp	r2, r3
    6f9e:	419b      	sbcs	r3, r3
    6fa0:	425b      	negs	r3, r3
    6fa2:	18ff      	adds	r7, r7, r3
    6fa4:	1c13      	adds	r3, r2, #0
    6fa6:	023a      	lsls	r2, r7, #8
    6fa8:	d53e      	bpl.n	7028 <__aeabi_ddiv+0x5e8>
    6faa:	4653      	mov	r3, sl
    6fac:	2201      	movs	r2, #1
    6fae:	2100      	movs	r1, #0
    6fb0:	401a      	ands	r2, r3
    6fb2:	2700      	movs	r7, #0
    6fb4:	2301      	movs	r3, #1
    6fb6:	4689      	mov	r9, r1
    6fb8:	e5aa      	b.n	6b10 <__aeabi_ddiv+0xd0>
    6fba:	2302      	movs	r3, #2
    6fbc:	425b      	negs	r3, r3
    6fbe:	469c      	mov	ip, r3
    6fc0:	9a01      	ldr	r2, [sp, #4]
    6fc2:	44e3      	add	fp, ip
    6fc4:	4694      	mov	ip, r2
    6fc6:	44e0      	add	r8, ip
    6fc8:	4590      	cmp	r8, r2
    6fca:	419b      	sbcs	r3, r3
    6fcc:	425b      	negs	r3, r3
    6fce:	199b      	adds	r3, r3, r6
    6fd0:	19df      	adds	r7, r3, r7
    6fd2:	1b3f      	subs	r7, r7, r4
    6fd4:	e6a0      	b.n	6d18 <__aeabi_ddiv+0x2d8>
    6fd6:	9f01      	ldr	r7, [sp, #4]
    6fd8:	464a      	mov	r2, r9
    6fda:	007c      	lsls	r4, r7, #1
    6fdc:	42bc      	cmp	r4, r7
    6fde:	41bf      	sbcs	r7, r7
    6fe0:	427f      	negs	r7, r7
    6fe2:	19bf      	adds	r7, r7, r6
    6fe4:	3a02      	subs	r2, #2
    6fe6:	19c9      	adds	r1, r1, r7
    6fe8:	9401      	str	r4, [sp, #4]
    6fea:	e79c      	b.n	6f26 <__aeabi_ddiv+0x4e6>
    6fec:	2b00      	cmp	r3, #0
    6fee:	d195      	bne.n	6f1c <__aeabi_ddiv+0x4dc>
    6ff0:	2200      	movs	r2, #0
    6ff2:	9201      	str	r2, [sp, #4]
    6ff4:	e79b      	b.n	6f2e <__aeabi_ddiv+0x4ee>
    6ff6:	465a      	mov	r2, fp
    6ff8:	4b21      	ldr	r3, [pc, #132]	; (7080 <__aeabi_ddiv+0x640>)
    6ffa:	1b5b      	subs	r3, r3, r5
    6ffc:	40da      	lsrs	r2, r3
    6ffe:	2f20      	cmp	r7, #32
    7000:	d027      	beq.n	7052 <__aeabi_ddiv+0x612>
    7002:	4b20      	ldr	r3, [pc, #128]	; (7084 <__aeabi_ddiv+0x644>)
    7004:	469c      	mov	ip, r3
    7006:	465b      	mov	r3, fp
    7008:	4465      	add	r5, ip
    700a:	40ab      	lsls	r3, r5
    700c:	4649      	mov	r1, r9
    700e:	430b      	orrs	r3, r1
    7010:	1e59      	subs	r1, r3, #1
    7012:	418b      	sbcs	r3, r1
    7014:	4313      	orrs	r3, r2
    7016:	2207      	movs	r2, #7
    7018:	2700      	movs	r7, #0
    701a:	401a      	ands	r2, r3
    701c:	d007      	beq.n	702e <__aeabi_ddiv+0x5ee>
    701e:	220f      	movs	r2, #15
    7020:	2700      	movs	r7, #0
    7022:	401a      	ands	r2, r3
    7024:	2a04      	cmp	r2, #4
    7026:	d1b8      	bne.n	6f9a <__aeabi_ddiv+0x55a>
    7028:	077a      	lsls	r2, r7, #29
    702a:	027f      	lsls	r7, r7, #9
    702c:	0b3f      	lsrs	r7, r7, #12
    702e:	08db      	lsrs	r3, r3, #3
    7030:	4313      	orrs	r3, r2
    7032:	4699      	mov	r9, r3
    7034:	2201      	movs	r2, #1
    7036:	4653      	mov	r3, sl
    7038:	401a      	ands	r2, r3
    703a:	2300      	movs	r3, #0
    703c:	e568      	b.n	6b10 <__aeabi_ddiv+0xd0>
    703e:	4541      	cmp	r1, r8
    7040:	d8bb      	bhi.n	6fba <__aeabi_ddiv+0x57a>
    7042:	4693      	mov	fp, r2
    7044:	2700      	movs	r7, #0
    7046:	e667      	b.n	6d18 <__aeabi_ddiv+0x2d8>
    7048:	9c01      	ldr	r4, [sp, #4]
    704a:	429c      	cmp	r4, r3
    704c:	d3c3      	bcc.n	6fd6 <__aeabi_ddiv+0x596>
    704e:	4691      	mov	r9, r2
    7050:	e76d      	b.n	6f2e <__aeabi_ddiv+0x4ee>
    7052:	2300      	movs	r3, #0
    7054:	e7da      	b.n	700c <__aeabi_ddiv+0x5cc>
    7056:	2780      	movs	r7, #128	; 0x80
    7058:	465b      	mov	r3, fp
    705a:	033f      	lsls	r7, r7, #12
    705c:	431f      	orrs	r7, r3
    705e:	033f      	lsls	r7, r7, #12
    7060:	0b3f      	lsrs	r7, r7, #12
    7062:	9a01      	ldr	r2, [sp, #4]
    7064:	4b03      	ldr	r3, [pc, #12]	; (7074 <__aeabi_ddiv+0x634>)
    7066:	e553      	b.n	6b10 <__aeabi_ddiv+0xd0>
    7068:	000003ff 	.word	0x000003ff
    706c:	feffffff 	.word	0xfeffffff
    7070:	000007fe 	.word	0x000007fe
    7074:	000007ff 	.word	0x000007ff
    7078:	fffffc02 	.word	0xfffffc02
    707c:	0000041e 	.word	0x0000041e
    7080:	fffffbe2 	.word	0xfffffbe2
    7084:	0000043e 	.word	0x0000043e

00007088 <__eqdf2>:
    7088:	b5f0      	push	{r4, r5, r6, r7, lr}
    708a:	465f      	mov	r7, fp
    708c:	464d      	mov	r5, r9
    708e:	4644      	mov	r4, r8
    7090:	4656      	mov	r6, sl
    7092:	b4f0      	push	{r4, r5, r6, r7}
    7094:	031f      	lsls	r7, r3, #12
    7096:	005c      	lsls	r4, r3, #1
    7098:	0fdb      	lsrs	r3, r3, #31
    709a:	4699      	mov	r9, r3
    709c:	4b1b      	ldr	r3, [pc, #108]	; (710c <__eqdf2+0x84>)
    709e:	030e      	lsls	r6, r1, #12
    70a0:	004d      	lsls	r5, r1, #1
    70a2:	0fc9      	lsrs	r1, r1, #31
    70a4:	4684      	mov	ip, r0
    70a6:	0b36      	lsrs	r6, r6, #12
    70a8:	0d6d      	lsrs	r5, r5, #21
    70aa:	468b      	mov	fp, r1
    70ac:	4690      	mov	r8, r2
    70ae:	0b3f      	lsrs	r7, r7, #12
    70b0:	0d64      	lsrs	r4, r4, #21
    70b2:	429d      	cmp	r5, r3
    70b4:	d00c      	beq.n	70d0 <__eqdf2+0x48>
    70b6:	4b15      	ldr	r3, [pc, #84]	; (710c <__eqdf2+0x84>)
    70b8:	429c      	cmp	r4, r3
    70ba:	d010      	beq.n	70de <__eqdf2+0x56>
    70bc:	2301      	movs	r3, #1
    70be:	42a5      	cmp	r5, r4
    70c0:	d014      	beq.n	70ec <__eqdf2+0x64>
    70c2:	1c18      	adds	r0, r3, #0
    70c4:	bc3c      	pop	{r2, r3, r4, r5}
    70c6:	4690      	mov	r8, r2
    70c8:	4699      	mov	r9, r3
    70ca:	46a2      	mov	sl, r4
    70cc:	46ab      	mov	fp, r5
    70ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
    70d0:	1c31      	adds	r1, r6, #0
    70d2:	2301      	movs	r3, #1
    70d4:	4301      	orrs	r1, r0
    70d6:	d1f4      	bne.n	70c2 <__eqdf2+0x3a>
    70d8:	4b0c      	ldr	r3, [pc, #48]	; (710c <__eqdf2+0x84>)
    70da:	429c      	cmp	r4, r3
    70dc:	d1ee      	bne.n	70bc <__eqdf2+0x34>
    70de:	433a      	orrs	r2, r7
    70e0:	2301      	movs	r3, #1
    70e2:	2a00      	cmp	r2, #0
    70e4:	d1ed      	bne.n	70c2 <__eqdf2+0x3a>
    70e6:	2301      	movs	r3, #1
    70e8:	42a5      	cmp	r5, r4
    70ea:	d1ea      	bne.n	70c2 <__eqdf2+0x3a>
    70ec:	42be      	cmp	r6, r7
    70ee:	d1e8      	bne.n	70c2 <__eqdf2+0x3a>
    70f0:	45c4      	cmp	ip, r8
    70f2:	d1e6      	bne.n	70c2 <__eqdf2+0x3a>
    70f4:	45cb      	cmp	fp, r9
    70f6:	d006      	beq.n	7106 <__eqdf2+0x7e>
    70f8:	2d00      	cmp	r5, #0
    70fa:	d1e2      	bne.n	70c2 <__eqdf2+0x3a>
    70fc:	4330      	orrs	r0, r6
    70fe:	1c03      	adds	r3, r0, #0
    7100:	1e58      	subs	r0, r3, #1
    7102:	4183      	sbcs	r3, r0
    7104:	e7dd      	b.n	70c2 <__eqdf2+0x3a>
    7106:	2300      	movs	r3, #0
    7108:	e7db      	b.n	70c2 <__eqdf2+0x3a>
    710a:	46c0      	nop			; (mov r8, r8)
    710c:	000007ff 	.word	0x000007ff

00007110 <__gedf2>:
    7110:	b5f0      	push	{r4, r5, r6, r7, lr}
    7112:	4657      	mov	r7, sl
    7114:	4645      	mov	r5, r8
    7116:	464e      	mov	r6, r9
    7118:	b4e0      	push	{r5, r6, r7}
    711a:	030f      	lsls	r7, r1, #12
    711c:	004e      	lsls	r6, r1, #1
    711e:	0fc9      	lsrs	r1, r1, #31
    7120:	468a      	mov	sl, r1
    7122:	4932      	ldr	r1, [pc, #200]	; (71ec <__gedf2+0xdc>)
    7124:	031d      	lsls	r5, r3, #12
    7126:	005c      	lsls	r4, r3, #1
    7128:	4684      	mov	ip, r0
    712a:	0b3f      	lsrs	r7, r7, #12
    712c:	0d76      	lsrs	r6, r6, #21
    712e:	4690      	mov	r8, r2
    7130:	0b2d      	lsrs	r5, r5, #12
    7132:	0d64      	lsrs	r4, r4, #21
    7134:	0fdb      	lsrs	r3, r3, #31
    7136:	428e      	cmp	r6, r1
    7138:	d00f      	beq.n	715a <__gedf2+0x4a>
    713a:	428c      	cmp	r4, r1
    713c:	d039      	beq.n	71b2 <__gedf2+0xa2>
    713e:	2e00      	cmp	r6, #0
    7140:	d110      	bne.n	7164 <__gedf2+0x54>
    7142:	4338      	orrs	r0, r7
    7144:	4241      	negs	r1, r0
    7146:	4141      	adcs	r1, r0
    7148:	4689      	mov	r9, r1
    714a:	2c00      	cmp	r4, #0
    714c:	d127      	bne.n	719e <__gedf2+0x8e>
    714e:	432a      	orrs	r2, r5
    7150:	d125      	bne.n	719e <__gedf2+0x8e>
    7152:	2000      	movs	r0, #0
    7154:	2900      	cmp	r1, #0
    7156:	d10e      	bne.n	7176 <__gedf2+0x66>
    7158:	e008      	b.n	716c <__gedf2+0x5c>
    715a:	1c39      	adds	r1, r7, #0
    715c:	4301      	orrs	r1, r0
    715e:	d12e      	bne.n	71be <__gedf2+0xae>
    7160:	42b4      	cmp	r4, r6
    7162:	d026      	beq.n	71b2 <__gedf2+0xa2>
    7164:	2c00      	cmp	r4, #0
    7166:	d00b      	beq.n	7180 <__gedf2+0x70>
    7168:	459a      	cmp	sl, r3
    716a:	d00d      	beq.n	7188 <__gedf2+0x78>
    716c:	4653      	mov	r3, sl
    716e:	4259      	negs	r1, r3
    7170:	2301      	movs	r3, #1
    7172:	4319      	orrs	r1, r3
    7174:	1c08      	adds	r0, r1, #0
    7176:	bc1c      	pop	{r2, r3, r4}
    7178:	4690      	mov	r8, r2
    717a:	4699      	mov	r9, r3
    717c:	46a2      	mov	sl, r4
    717e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7180:	432a      	orrs	r2, r5
    7182:	d0f3      	beq.n	716c <__gedf2+0x5c>
    7184:	459a      	cmp	sl, r3
    7186:	d1f1      	bne.n	716c <__gedf2+0x5c>
    7188:	42a6      	cmp	r6, r4
    718a:	dcef      	bgt.n	716c <__gedf2+0x5c>
    718c:	da1a      	bge.n	71c4 <__gedf2+0xb4>
    718e:	4650      	mov	r0, sl
    7190:	4241      	negs	r1, r0
    7192:	4148      	adcs	r0, r1
    7194:	2301      	movs	r3, #1
    7196:	4241      	negs	r1, r0
    7198:	4319      	orrs	r1, r3
    719a:	1c08      	adds	r0, r1, #0
    719c:	e7eb      	b.n	7176 <__gedf2+0x66>
    719e:	464a      	mov	r2, r9
    71a0:	2a00      	cmp	r2, #0
    71a2:	d0e1      	beq.n	7168 <__gedf2+0x58>
    71a4:	4258      	negs	r0, r3
    71a6:	4158      	adcs	r0, r3
    71a8:	2201      	movs	r2, #1
    71aa:	4241      	negs	r1, r0
    71ac:	4311      	orrs	r1, r2
    71ae:	1c08      	adds	r0, r1, #0
    71b0:	e7e1      	b.n	7176 <__gedf2+0x66>
    71b2:	1c29      	adds	r1, r5, #0
    71b4:	4311      	orrs	r1, r2
    71b6:	d102      	bne.n	71be <__gedf2+0xae>
    71b8:	2e00      	cmp	r6, #0
    71ba:	d0c2      	beq.n	7142 <__gedf2+0x32>
    71bc:	e7d4      	b.n	7168 <__gedf2+0x58>
    71be:	2002      	movs	r0, #2
    71c0:	4240      	negs	r0, r0
    71c2:	e7d8      	b.n	7176 <__gedf2+0x66>
    71c4:	42af      	cmp	r7, r5
    71c6:	d8d1      	bhi.n	716c <__gedf2+0x5c>
    71c8:	d009      	beq.n	71de <__gedf2+0xce>
    71ca:	2000      	movs	r0, #0
    71cc:	42af      	cmp	r7, r5
    71ce:	d2d2      	bcs.n	7176 <__gedf2+0x66>
    71d0:	4650      	mov	r0, sl
    71d2:	4241      	negs	r1, r0
    71d4:	4148      	adcs	r0, r1
    71d6:	2301      	movs	r3, #1
    71d8:	4240      	negs	r0, r0
    71da:	4318      	orrs	r0, r3
    71dc:	e7cb      	b.n	7176 <__gedf2+0x66>
    71de:	45c4      	cmp	ip, r8
    71e0:	d8c4      	bhi.n	716c <__gedf2+0x5c>
    71e2:	2000      	movs	r0, #0
    71e4:	45c4      	cmp	ip, r8
    71e6:	d3f3      	bcc.n	71d0 <__gedf2+0xc0>
    71e8:	e7c5      	b.n	7176 <__gedf2+0x66>
    71ea:	46c0      	nop			; (mov r8, r8)
    71ec:	000007ff 	.word	0x000007ff

000071f0 <__ledf2>:
    71f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    71f2:	465f      	mov	r7, fp
    71f4:	464d      	mov	r5, r9
    71f6:	4644      	mov	r4, r8
    71f8:	4656      	mov	r6, sl
    71fa:	4680      	mov	r8, r0
    71fc:	b4f0      	push	{r4, r5, r6, r7}
    71fe:	1c06      	adds	r6, r0, #0
    7200:	0308      	lsls	r0, r1, #12
    7202:	0b00      	lsrs	r0, r0, #12
    7204:	4684      	mov	ip, r0
    7206:	482c      	ldr	r0, [pc, #176]	; (72b8 <__ledf2+0xc8>)
    7208:	004c      	lsls	r4, r1, #1
    720a:	031f      	lsls	r7, r3, #12
    720c:	005d      	lsls	r5, r3, #1
    720e:	0fc9      	lsrs	r1, r1, #31
    7210:	0d64      	lsrs	r4, r4, #21
    7212:	468b      	mov	fp, r1
    7214:	4691      	mov	r9, r2
    7216:	0b3f      	lsrs	r7, r7, #12
    7218:	0d6d      	lsrs	r5, r5, #21
    721a:	0fdb      	lsrs	r3, r3, #31
    721c:	4284      	cmp	r4, r0
    721e:	d012      	beq.n	7246 <__ledf2+0x56>
    7220:	4285      	cmp	r5, r0
    7222:	d025      	beq.n	7270 <__ledf2+0x80>
    7224:	2c00      	cmp	r4, #0
    7226:	d114      	bne.n	7252 <__ledf2+0x62>
    7228:	4661      	mov	r1, ip
    722a:	430e      	orrs	r6, r1
    722c:	4270      	negs	r0, r6
    722e:	4146      	adcs	r6, r0
    7230:	2d00      	cmp	r5, #0
    7232:	d035      	beq.n	72a0 <__ledf2+0xb0>
    7234:	2e00      	cmp	r6, #0
    7236:	d021      	beq.n	727c <__ledf2+0x8c>
    7238:	4258      	negs	r0, r3
    723a:	4158      	adcs	r0, r3
    723c:	2101      	movs	r1, #1
    723e:	4243      	negs	r3, r0
    7240:	430b      	orrs	r3, r1
    7242:	1c18      	adds	r0, r3, #0
    7244:	e00e      	b.n	7264 <__ledf2+0x74>
    7246:	4661      	mov	r1, ip
    7248:	2002      	movs	r0, #2
    724a:	4331      	orrs	r1, r6
    724c:	d10a      	bne.n	7264 <__ledf2+0x74>
    724e:	42a5      	cmp	r5, r4
    7250:	d00e      	beq.n	7270 <__ledf2+0x80>
    7252:	2d00      	cmp	r5, #0
    7254:	d112      	bne.n	727c <__ledf2+0x8c>
    7256:	433a      	orrs	r2, r7
    7258:	d110      	bne.n	727c <__ledf2+0x8c>
    725a:	465b      	mov	r3, fp
    725c:	4259      	negs	r1, r3
    725e:	2301      	movs	r3, #1
    7260:	4319      	orrs	r1, r3
    7262:	1c08      	adds	r0, r1, #0
    7264:	bc3c      	pop	{r2, r3, r4, r5}
    7266:	4690      	mov	r8, r2
    7268:	4699      	mov	r9, r3
    726a:	46a2      	mov	sl, r4
    726c:	46ab      	mov	fp, r5
    726e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7270:	1c39      	adds	r1, r7, #0
    7272:	2002      	movs	r0, #2
    7274:	4311      	orrs	r1, r2
    7276:	d1f5      	bne.n	7264 <__ledf2+0x74>
    7278:	2c00      	cmp	r4, #0
    727a:	d0d5      	beq.n	7228 <__ledf2+0x38>
    727c:	459b      	cmp	fp, r3
    727e:	d1ec      	bne.n	725a <__ledf2+0x6a>
    7280:	42ac      	cmp	r4, r5
    7282:	dcea      	bgt.n	725a <__ledf2+0x6a>
    7284:	db05      	blt.n	7292 <__ledf2+0xa2>
    7286:	45bc      	cmp	ip, r7
    7288:	d8e7      	bhi.n	725a <__ledf2+0x6a>
    728a:	d00f      	beq.n	72ac <__ledf2+0xbc>
    728c:	2000      	movs	r0, #0
    728e:	45bc      	cmp	ip, r7
    7290:	d2e8      	bcs.n	7264 <__ledf2+0x74>
    7292:	4658      	mov	r0, fp
    7294:	4241      	negs	r1, r0
    7296:	4148      	adcs	r0, r1
    7298:	4241      	negs	r1, r0
    729a:	2001      	movs	r0, #1
    729c:	4308      	orrs	r0, r1
    729e:	e7e1      	b.n	7264 <__ledf2+0x74>
    72a0:	433a      	orrs	r2, r7
    72a2:	d1c7      	bne.n	7234 <__ledf2+0x44>
    72a4:	2000      	movs	r0, #0
    72a6:	2e00      	cmp	r6, #0
    72a8:	d1dc      	bne.n	7264 <__ledf2+0x74>
    72aa:	e7d6      	b.n	725a <__ledf2+0x6a>
    72ac:	45c8      	cmp	r8, r9
    72ae:	d8d4      	bhi.n	725a <__ledf2+0x6a>
    72b0:	2000      	movs	r0, #0
    72b2:	45c8      	cmp	r8, r9
    72b4:	d3ed      	bcc.n	7292 <__ledf2+0xa2>
    72b6:	e7d5      	b.n	7264 <__ledf2+0x74>
    72b8:	000007ff 	.word	0x000007ff

000072bc <__aeabi_dmul>:
    72bc:	b5f0      	push	{r4, r5, r6, r7, lr}
    72be:	465f      	mov	r7, fp
    72c0:	4656      	mov	r6, sl
    72c2:	464d      	mov	r5, r9
    72c4:	4644      	mov	r4, r8
    72c6:	b4f0      	push	{r4, r5, r6, r7}
    72c8:	1c05      	adds	r5, r0, #0
    72ca:	1c06      	adds	r6, r0, #0
    72cc:	0308      	lsls	r0, r1, #12
    72ce:	b087      	sub	sp, #28
    72d0:	4699      	mov	r9, r3
    72d2:	004f      	lsls	r7, r1, #1
    72d4:	0b03      	lsrs	r3, r0, #12
    72d6:	0fcc      	lsrs	r4, r1, #31
    72d8:	4692      	mov	sl, r2
    72da:	469b      	mov	fp, r3
    72dc:	0d7f      	lsrs	r7, r7, #21
    72de:	9401      	str	r4, [sp, #4]
    72e0:	d067      	beq.n	73b2 <__aeabi_dmul+0xf6>
    72e2:	4b6c      	ldr	r3, [pc, #432]	; (7494 <__aeabi_dmul+0x1d8>)
    72e4:	429f      	cmp	r7, r3
    72e6:	d036      	beq.n	7356 <__aeabi_dmul+0x9a>
    72e8:	2080      	movs	r0, #128	; 0x80
    72ea:	465b      	mov	r3, fp
    72ec:	0340      	lsls	r0, r0, #13
    72ee:	4318      	orrs	r0, r3
    72f0:	00c0      	lsls	r0, r0, #3
    72f2:	0f6b      	lsrs	r3, r5, #29
    72f4:	4318      	orrs	r0, r3
    72f6:	4b68      	ldr	r3, [pc, #416]	; (7498 <__aeabi_dmul+0x1dc>)
    72f8:	4683      	mov	fp, r0
    72fa:	469c      	mov	ip, r3
    72fc:	2300      	movs	r3, #0
    72fe:	4698      	mov	r8, r3
    7300:	00ee      	lsls	r6, r5, #3
    7302:	4467      	add	r7, ip
    7304:	9300      	str	r3, [sp, #0]
    7306:	464b      	mov	r3, r9
    7308:	4649      	mov	r1, r9
    730a:	031d      	lsls	r5, r3, #12
    730c:	0fc9      	lsrs	r1, r1, #31
    730e:	005b      	lsls	r3, r3, #1
    7310:	4652      	mov	r2, sl
    7312:	0b2d      	lsrs	r5, r5, #12
    7314:	0d5b      	lsrs	r3, r3, #21
    7316:	4689      	mov	r9, r1
    7318:	d100      	bne.n	731c <__aeabi_dmul+0x60>
    731a:	e06e      	b.n	73fa <__aeabi_dmul+0x13e>
    731c:	495d      	ldr	r1, [pc, #372]	; (7494 <__aeabi_dmul+0x1d8>)
    731e:	428b      	cmp	r3, r1
    7320:	d064      	beq.n	73ec <__aeabi_dmul+0x130>
    7322:	2080      	movs	r0, #128	; 0x80
    7324:	495c      	ldr	r1, [pc, #368]	; (7498 <__aeabi_dmul+0x1dc>)
    7326:	0340      	lsls	r0, r0, #13
    7328:	468c      	mov	ip, r1
    732a:	2100      	movs	r1, #0
    732c:	4305      	orrs	r5, r0
    732e:	00ed      	lsls	r5, r5, #3
    7330:	0f50      	lsrs	r0, r2, #29
    7332:	4305      	orrs	r5, r0
    7334:	00d2      	lsls	r2, r2, #3
    7336:	4463      	add	r3, ip
    7338:	4648      	mov	r0, r9
    733a:	18ff      	adds	r7, r7, r3
    733c:	1c7b      	adds	r3, r7, #1
    733e:	469a      	mov	sl, r3
    7340:	9b00      	ldr	r3, [sp, #0]
    7342:	4060      	eors	r0, r4
    7344:	9002      	str	r0, [sp, #8]
    7346:	430b      	orrs	r3, r1
    7348:	2b0f      	cmp	r3, #15
    734a:	d900      	bls.n	734e <__aeabi_dmul+0x92>
    734c:	e0ac      	b.n	74a8 <__aeabi_dmul+0x1ec>
    734e:	4853      	ldr	r0, [pc, #332]	; (749c <__aeabi_dmul+0x1e0>)
    7350:	009b      	lsls	r3, r3, #2
    7352:	58c3      	ldr	r3, [r0, r3]
    7354:	469f      	mov	pc, r3
    7356:	465b      	mov	r3, fp
    7358:	431d      	orrs	r5, r3
    735a:	d000      	beq.n	735e <__aeabi_dmul+0xa2>
    735c:	e082      	b.n	7464 <__aeabi_dmul+0x1a8>
    735e:	2308      	movs	r3, #8
    7360:	9300      	str	r3, [sp, #0]
    7362:	2300      	movs	r3, #0
    7364:	469b      	mov	fp, r3
    7366:	3302      	adds	r3, #2
    7368:	2600      	movs	r6, #0
    736a:	4698      	mov	r8, r3
    736c:	e7cb      	b.n	7306 <__aeabi_dmul+0x4a>
    736e:	9b02      	ldr	r3, [sp, #8]
    7370:	9301      	str	r3, [sp, #4]
    7372:	4643      	mov	r3, r8
    7374:	2b02      	cmp	r3, #2
    7376:	d159      	bne.n	742c <__aeabi_dmul+0x170>
    7378:	2401      	movs	r4, #1
    737a:	2500      	movs	r5, #0
    737c:	2600      	movs	r6, #0
    737e:	9b01      	ldr	r3, [sp, #4]
    7380:	401c      	ands	r4, r3
    7382:	4b44      	ldr	r3, [pc, #272]	; (7494 <__aeabi_dmul+0x1d8>)
    7384:	2100      	movs	r1, #0
    7386:	032d      	lsls	r5, r5, #12
    7388:	0d0a      	lsrs	r2, r1, #20
    738a:	0512      	lsls	r2, r2, #20
    738c:	0b2d      	lsrs	r5, r5, #12
    738e:	4315      	orrs	r5, r2
    7390:	4a43      	ldr	r2, [pc, #268]	; (74a0 <__aeabi_dmul+0x1e4>)
    7392:	051b      	lsls	r3, r3, #20
    7394:	4015      	ands	r5, r2
    7396:	431d      	orrs	r5, r3
    7398:	006d      	lsls	r5, r5, #1
    739a:	07e4      	lsls	r4, r4, #31
    739c:	086d      	lsrs	r5, r5, #1
    739e:	4325      	orrs	r5, r4
    73a0:	1c30      	adds	r0, r6, #0
    73a2:	1c29      	adds	r1, r5, #0
    73a4:	b007      	add	sp, #28
    73a6:	bc3c      	pop	{r2, r3, r4, r5}
    73a8:	4690      	mov	r8, r2
    73aa:	4699      	mov	r9, r3
    73ac:	46a2      	mov	sl, r4
    73ae:	46ab      	mov	fp, r5
    73b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    73b2:	432b      	orrs	r3, r5
    73b4:	d04e      	beq.n	7454 <__aeabi_dmul+0x198>
    73b6:	465b      	mov	r3, fp
    73b8:	2b00      	cmp	r3, #0
    73ba:	d100      	bne.n	73be <__aeabi_dmul+0x102>
    73bc:	e185      	b.n	76ca <__aeabi_dmul+0x40e>
    73be:	4658      	mov	r0, fp
    73c0:	f000 ff18 	bl	81f4 <__clzsi2>
    73c4:	1c02      	adds	r2, r0, #0
    73c6:	2328      	movs	r3, #40	; 0x28
    73c8:	1c29      	adds	r1, r5, #0
    73ca:	1a9b      	subs	r3, r3, r2
    73cc:	1c16      	adds	r6, r2, #0
    73ce:	4658      	mov	r0, fp
    73d0:	40d9      	lsrs	r1, r3
    73d2:	3e08      	subs	r6, #8
    73d4:	40b0      	lsls	r0, r6
    73d6:	1c0b      	adds	r3, r1, #0
    73d8:	40b5      	lsls	r5, r6
    73da:	4303      	orrs	r3, r0
    73dc:	469b      	mov	fp, r3
    73de:	1c2e      	adds	r6, r5, #0
    73e0:	2300      	movs	r3, #0
    73e2:	4f30      	ldr	r7, [pc, #192]	; (74a4 <__aeabi_dmul+0x1e8>)
    73e4:	9300      	str	r3, [sp, #0]
    73e6:	1abf      	subs	r7, r7, r2
    73e8:	4698      	mov	r8, r3
    73ea:	e78c      	b.n	7306 <__aeabi_dmul+0x4a>
    73ec:	4651      	mov	r1, sl
    73ee:	4329      	orrs	r1, r5
    73f0:	d12e      	bne.n	7450 <__aeabi_dmul+0x194>
    73f2:	2500      	movs	r5, #0
    73f4:	2200      	movs	r2, #0
    73f6:	2102      	movs	r1, #2
    73f8:	e79e      	b.n	7338 <__aeabi_dmul+0x7c>
    73fa:	4651      	mov	r1, sl
    73fc:	4329      	orrs	r1, r5
    73fe:	d023      	beq.n	7448 <__aeabi_dmul+0x18c>
    7400:	2d00      	cmp	r5, #0
    7402:	d100      	bne.n	7406 <__aeabi_dmul+0x14a>
    7404:	e154      	b.n	76b0 <__aeabi_dmul+0x3f4>
    7406:	1c28      	adds	r0, r5, #0
    7408:	f000 fef4 	bl	81f4 <__clzsi2>
    740c:	1c03      	adds	r3, r0, #0
    740e:	2128      	movs	r1, #40	; 0x28
    7410:	4650      	mov	r0, sl
    7412:	1ac9      	subs	r1, r1, r3
    7414:	1c1a      	adds	r2, r3, #0
    7416:	40c8      	lsrs	r0, r1
    7418:	4651      	mov	r1, sl
    741a:	3a08      	subs	r2, #8
    741c:	4091      	lsls	r1, r2
    741e:	4095      	lsls	r5, r2
    7420:	1c0a      	adds	r2, r1, #0
    7422:	4305      	orrs	r5, r0
    7424:	481f      	ldr	r0, [pc, #124]	; (74a4 <__aeabi_dmul+0x1e8>)
    7426:	2100      	movs	r1, #0
    7428:	1ac3      	subs	r3, r0, r3
    742a:	e785      	b.n	7338 <__aeabi_dmul+0x7c>
    742c:	2b03      	cmp	r3, #3
    742e:	d100      	bne.n	7432 <__aeabi_dmul+0x176>
    7430:	e1c2      	b.n	77b8 <__aeabi_dmul+0x4fc>
    7432:	2b01      	cmp	r3, #1
    7434:	d000      	beq.n	7438 <__aeabi_dmul+0x17c>
    7436:	e16d      	b.n	7714 <__aeabi_dmul+0x458>
    7438:	4644      	mov	r4, r8
    743a:	9b01      	ldr	r3, [sp, #4]
    743c:	2500      	movs	r5, #0
    743e:	401c      	ands	r4, r3
    7440:	b2e4      	uxtb	r4, r4
    7442:	2300      	movs	r3, #0
    7444:	2600      	movs	r6, #0
    7446:	e79d      	b.n	7384 <__aeabi_dmul+0xc8>
    7448:	2500      	movs	r5, #0
    744a:	2200      	movs	r2, #0
    744c:	2101      	movs	r1, #1
    744e:	e773      	b.n	7338 <__aeabi_dmul+0x7c>
    7450:	2103      	movs	r1, #3
    7452:	e771      	b.n	7338 <__aeabi_dmul+0x7c>
    7454:	2304      	movs	r3, #4
    7456:	9300      	str	r3, [sp, #0]
    7458:	2300      	movs	r3, #0
    745a:	469b      	mov	fp, r3
    745c:	3301      	adds	r3, #1
    745e:	2600      	movs	r6, #0
    7460:	4698      	mov	r8, r3
    7462:	e750      	b.n	7306 <__aeabi_dmul+0x4a>
    7464:	230c      	movs	r3, #12
    7466:	9300      	str	r3, [sp, #0]
    7468:	3b09      	subs	r3, #9
    746a:	4698      	mov	r8, r3
    746c:	e74b      	b.n	7306 <__aeabi_dmul+0x4a>
    746e:	2580      	movs	r5, #128	; 0x80
    7470:	2400      	movs	r4, #0
    7472:	032d      	lsls	r5, r5, #12
    7474:	2600      	movs	r6, #0
    7476:	4b07      	ldr	r3, [pc, #28]	; (7494 <__aeabi_dmul+0x1d8>)
    7478:	e784      	b.n	7384 <__aeabi_dmul+0xc8>
    747a:	464b      	mov	r3, r9
    747c:	46ab      	mov	fp, r5
    747e:	1c16      	adds	r6, r2, #0
    7480:	9301      	str	r3, [sp, #4]
    7482:	4688      	mov	r8, r1
    7484:	e775      	b.n	7372 <__aeabi_dmul+0xb6>
    7486:	9b02      	ldr	r3, [sp, #8]
    7488:	46ab      	mov	fp, r5
    748a:	1c16      	adds	r6, r2, #0
    748c:	9301      	str	r3, [sp, #4]
    748e:	4688      	mov	r8, r1
    7490:	e76f      	b.n	7372 <__aeabi_dmul+0xb6>
    7492:	46c0      	nop			; (mov r8, r8)
    7494:	000007ff 	.word	0x000007ff
    7498:	fffffc01 	.word	0xfffffc01
    749c:	0000e360 	.word	0x0000e360
    74a0:	800fffff 	.word	0x800fffff
    74a4:	fffffc0d 	.word	0xfffffc0d
    74a8:	0c33      	lsrs	r3, r6, #16
    74aa:	0436      	lsls	r6, r6, #16
    74ac:	0c36      	lsrs	r6, r6, #16
    74ae:	469c      	mov	ip, r3
    74b0:	1c33      	adds	r3, r6, #0
    74b2:	0c14      	lsrs	r4, r2, #16
    74b4:	0412      	lsls	r2, r2, #16
    74b6:	0c12      	lsrs	r2, r2, #16
    74b8:	4353      	muls	r3, r2
    74ba:	4698      	mov	r8, r3
    74bc:	4663      	mov	r3, ip
    74be:	4353      	muls	r3, r2
    74c0:	4699      	mov	r9, r3
    74c2:	4663      	mov	r3, ip
    74c4:	4363      	muls	r3, r4
    74c6:	9301      	str	r3, [sp, #4]
    74c8:	1c33      	adds	r3, r6, #0
    74ca:	4641      	mov	r1, r8
    74cc:	4363      	muls	r3, r4
    74ce:	0c09      	lsrs	r1, r1, #16
    74d0:	444b      	add	r3, r9
    74d2:	185b      	adds	r3, r3, r1
    74d4:	4599      	cmp	r9, r3
    74d6:	d905      	bls.n	74e4 <__aeabi_dmul+0x228>
    74d8:	2080      	movs	r0, #128	; 0x80
    74da:	0240      	lsls	r0, r0, #9
    74dc:	4681      	mov	r9, r0
    74de:	9901      	ldr	r1, [sp, #4]
    74e0:	4449      	add	r1, r9
    74e2:	9101      	str	r1, [sp, #4]
    74e4:	0c19      	lsrs	r1, r3, #16
    74e6:	9103      	str	r1, [sp, #12]
    74e8:	4641      	mov	r1, r8
    74ea:	0409      	lsls	r1, r1, #16
    74ec:	0c09      	lsrs	r1, r1, #16
    74ee:	041b      	lsls	r3, r3, #16
    74f0:	185b      	adds	r3, r3, r1
    74f2:	9304      	str	r3, [sp, #16]
    74f4:	0c2b      	lsrs	r3, r5, #16
    74f6:	4698      	mov	r8, r3
    74f8:	1c33      	adds	r3, r6, #0
    74fa:	042d      	lsls	r5, r5, #16
    74fc:	0c29      	lsrs	r1, r5, #16
    74fe:	434b      	muls	r3, r1
    7500:	4660      	mov	r0, ip
    7502:	9300      	str	r3, [sp, #0]
    7504:	4643      	mov	r3, r8
    7506:	4665      	mov	r5, ip
    7508:	4358      	muls	r0, r3
    750a:	435e      	muls	r6, r3
    750c:	9b00      	ldr	r3, [sp, #0]
    750e:	434d      	muls	r5, r1
    7510:	0c1b      	lsrs	r3, r3, #16
    7512:	4699      	mov	r9, r3
    7514:	19ae      	adds	r6, r5, r6
    7516:	444e      	add	r6, r9
    7518:	4684      	mov	ip, r0
    751a:	42b5      	cmp	r5, r6
    751c:	d903      	bls.n	7526 <__aeabi_dmul+0x26a>
    751e:	2380      	movs	r3, #128	; 0x80
    7520:	025b      	lsls	r3, r3, #9
    7522:	4699      	mov	r9, r3
    7524:	44cc      	add	ip, r9
    7526:	0c35      	lsrs	r5, r6, #16
    7528:	1c2b      	adds	r3, r5, #0
    752a:	9803      	ldr	r0, [sp, #12]
    752c:	4463      	add	r3, ip
    752e:	4684      	mov	ip, r0
    7530:	9305      	str	r3, [sp, #20]
    7532:	9b00      	ldr	r3, [sp, #0]
    7534:	0436      	lsls	r6, r6, #16
    7536:	041b      	lsls	r3, r3, #16
    7538:	0c1b      	lsrs	r3, r3, #16
    753a:	18f3      	adds	r3, r6, r3
    753c:	449c      	add	ip, r3
    753e:	4660      	mov	r0, ip
    7540:	9003      	str	r0, [sp, #12]
    7542:	4658      	mov	r0, fp
    7544:	0405      	lsls	r5, r0, #16
    7546:	0c06      	lsrs	r6, r0, #16
    7548:	0c28      	lsrs	r0, r5, #16
    754a:	4684      	mov	ip, r0
    754c:	4350      	muls	r0, r2
    754e:	1c35      	adds	r5, r6, #0
    7550:	4681      	mov	r9, r0
    7552:	4660      	mov	r0, ip
    7554:	4365      	muls	r5, r4
    7556:	4344      	muls	r4, r0
    7558:	4648      	mov	r0, r9
    755a:	0c00      	lsrs	r0, r0, #16
    755c:	4683      	mov	fp, r0
    755e:	4372      	muls	r2, r6
    7560:	1914      	adds	r4, r2, r4
    7562:	445c      	add	r4, fp
    7564:	42a2      	cmp	r2, r4
    7566:	d903      	bls.n	7570 <__aeabi_dmul+0x2b4>
    7568:	2280      	movs	r2, #128	; 0x80
    756a:	0252      	lsls	r2, r2, #9
    756c:	4693      	mov	fp, r2
    756e:	445d      	add	r5, fp
    7570:	0c22      	lsrs	r2, r4, #16
    7572:	18ad      	adds	r5, r5, r2
    7574:	464a      	mov	r2, r9
    7576:	0412      	lsls	r2, r2, #16
    7578:	0c12      	lsrs	r2, r2, #16
    757a:	0424      	lsls	r4, r4, #16
    757c:	4640      	mov	r0, r8
    757e:	18a4      	adds	r4, r4, r2
    7580:	4662      	mov	r2, ip
    7582:	434a      	muls	r2, r1
    7584:	4371      	muls	r1, r6
    7586:	4346      	muls	r6, r0
    7588:	4660      	mov	r0, ip
    758a:	9600      	str	r6, [sp, #0]
    758c:	4646      	mov	r6, r8
    758e:	4370      	muls	r0, r6
    7590:	4680      	mov	r8, r0
    7592:	0c10      	lsrs	r0, r2, #16
    7594:	4684      	mov	ip, r0
    7596:	4488      	add	r8, r1
    7598:	44e0      	add	r8, ip
    759a:	4541      	cmp	r1, r8
    759c:	d905      	bls.n	75aa <__aeabi_dmul+0x2ee>
    759e:	2180      	movs	r1, #128	; 0x80
    75a0:	0249      	lsls	r1, r1, #9
    75a2:	468c      	mov	ip, r1
    75a4:	9900      	ldr	r1, [sp, #0]
    75a6:	4461      	add	r1, ip
    75a8:	9100      	str	r1, [sp, #0]
    75aa:	9801      	ldr	r0, [sp, #4]
    75ac:	9903      	ldr	r1, [sp, #12]
    75ae:	4684      	mov	ip, r0
    75b0:	4461      	add	r1, ip
    75b2:	4299      	cmp	r1, r3
    75b4:	419b      	sbcs	r3, r3
    75b6:	425b      	negs	r3, r3
    75b8:	4699      	mov	r9, r3
    75ba:	9805      	ldr	r0, [sp, #20]
    75bc:	4643      	mov	r3, r8
    75be:	4684      	mov	ip, r0
    75c0:	0412      	lsls	r2, r2, #16
    75c2:	0c12      	lsrs	r2, r2, #16
    75c4:	041b      	lsls	r3, r3, #16
    75c6:	189b      	adds	r3, r3, r2
    75c8:	4463      	add	r3, ip
    75ca:	469c      	mov	ip, r3
    75cc:	46ab      	mov	fp, r5
    75ce:	4283      	cmp	r3, r0
    75d0:	419b      	sbcs	r3, r3
    75d2:	4640      	mov	r0, r8
    75d4:	190a      	adds	r2, r1, r4
    75d6:	44cc      	add	ip, r9
    75d8:	42a2      	cmp	r2, r4
    75da:	4189      	sbcs	r1, r1
    75dc:	44e3      	add	fp, ip
    75de:	45cc      	cmp	ip, r9
    75e0:	41b6      	sbcs	r6, r6
    75e2:	465c      	mov	r4, fp
    75e4:	0c00      	lsrs	r0, r0, #16
    75e6:	4680      	mov	r8, r0
    75e8:	4249      	negs	r1, r1
    75ea:	4276      	negs	r6, r6
    75ec:	425b      	negs	r3, r3
    75ee:	1864      	adds	r4, r4, r1
    75f0:	4333      	orrs	r3, r6
    75f2:	4498      	add	r8, r3
    75f4:	428c      	cmp	r4, r1
    75f6:	4189      	sbcs	r1, r1
    75f8:	45ab      	cmp	fp, r5
    75fa:	419b      	sbcs	r3, r3
    75fc:	4249      	negs	r1, r1
    75fe:	425b      	negs	r3, r3
    7600:	4319      	orrs	r1, r3
    7602:	1c0d      	adds	r5, r1, #0
    7604:	9b00      	ldr	r3, [sp, #0]
    7606:	4445      	add	r5, r8
    7608:	18ee      	adds	r6, r5, r3
    760a:	0276      	lsls	r6, r6, #9
    760c:	0de5      	lsrs	r5, r4, #23
    760e:	432e      	orrs	r6, r5
    7610:	46b3      	mov	fp, r6
    7612:	9b04      	ldr	r3, [sp, #16]
    7614:	0256      	lsls	r6, r2, #9
    7616:	431e      	orrs	r6, r3
    7618:	1e73      	subs	r3, r6, #1
    761a:	419e      	sbcs	r6, r3
    761c:	465b      	mov	r3, fp
    761e:	0dd2      	lsrs	r2, r2, #23
    7620:	4332      	orrs	r2, r6
    7622:	0266      	lsls	r6, r4, #9
    7624:	4316      	orrs	r6, r2
    7626:	01db      	lsls	r3, r3, #7
    7628:	d50a      	bpl.n	7640 <__aeabi_dmul+0x384>
    762a:	2301      	movs	r3, #1
    762c:	4033      	ands	r3, r6
    762e:	0876      	lsrs	r6, r6, #1
    7630:	431e      	orrs	r6, r3
    7632:	465b      	mov	r3, fp
    7634:	07db      	lsls	r3, r3, #31
    7636:	431e      	orrs	r6, r3
    7638:	465b      	mov	r3, fp
    763a:	085b      	lsrs	r3, r3, #1
    763c:	469b      	mov	fp, r3
    763e:	4657      	mov	r7, sl
    7640:	4b63      	ldr	r3, [pc, #396]	; (77d0 <__aeabi_dmul+0x514>)
    7642:	18fb      	adds	r3, r7, r3
    7644:	2b00      	cmp	r3, #0
    7646:	dd5a      	ble.n	76fe <__aeabi_dmul+0x442>
    7648:	0772      	lsls	r2, r6, #29
    764a:	d009      	beq.n	7660 <__aeabi_dmul+0x3a4>
    764c:	220f      	movs	r2, #15
    764e:	4032      	ands	r2, r6
    7650:	2a04      	cmp	r2, #4
    7652:	d005      	beq.n	7660 <__aeabi_dmul+0x3a4>
    7654:	1d32      	adds	r2, r6, #4
    7656:	42b2      	cmp	r2, r6
    7658:	41b6      	sbcs	r6, r6
    765a:	4276      	negs	r6, r6
    765c:	44b3      	add	fp, r6
    765e:	1c16      	adds	r6, r2, #0
    7660:	465a      	mov	r2, fp
    7662:	01d2      	lsls	r2, r2, #7
    7664:	d506      	bpl.n	7674 <__aeabi_dmul+0x3b8>
    7666:	465a      	mov	r2, fp
    7668:	4b5a      	ldr	r3, [pc, #360]	; (77d4 <__aeabi_dmul+0x518>)
    766a:	401a      	ands	r2, r3
    766c:	2380      	movs	r3, #128	; 0x80
    766e:	4693      	mov	fp, r2
    7670:	00db      	lsls	r3, r3, #3
    7672:	18fb      	adds	r3, r7, r3
    7674:	4a58      	ldr	r2, [pc, #352]	; (77d8 <__aeabi_dmul+0x51c>)
    7676:	4293      	cmp	r3, r2
    7678:	dd34      	ble.n	76e4 <__aeabi_dmul+0x428>
    767a:	2401      	movs	r4, #1
    767c:	9b02      	ldr	r3, [sp, #8]
    767e:	2500      	movs	r5, #0
    7680:	401c      	ands	r4, r3
    7682:	2600      	movs	r6, #0
    7684:	4b55      	ldr	r3, [pc, #340]	; (77dc <__aeabi_dmul+0x520>)
    7686:	e67d      	b.n	7384 <__aeabi_dmul+0xc8>
    7688:	2080      	movs	r0, #128	; 0x80
    768a:	465b      	mov	r3, fp
    768c:	0300      	lsls	r0, r0, #12
    768e:	4203      	tst	r3, r0
    7690:	d008      	beq.n	76a4 <__aeabi_dmul+0x3e8>
    7692:	4205      	tst	r5, r0
    7694:	d106      	bne.n	76a4 <__aeabi_dmul+0x3e8>
    7696:	4305      	orrs	r5, r0
    7698:	032d      	lsls	r5, r5, #12
    769a:	0b2d      	lsrs	r5, r5, #12
    769c:	464c      	mov	r4, r9
    769e:	1c16      	adds	r6, r2, #0
    76a0:	4b4e      	ldr	r3, [pc, #312]	; (77dc <__aeabi_dmul+0x520>)
    76a2:	e66f      	b.n	7384 <__aeabi_dmul+0xc8>
    76a4:	465d      	mov	r5, fp
    76a6:	4305      	orrs	r5, r0
    76a8:	032d      	lsls	r5, r5, #12
    76aa:	0b2d      	lsrs	r5, r5, #12
    76ac:	4b4b      	ldr	r3, [pc, #300]	; (77dc <__aeabi_dmul+0x520>)
    76ae:	e669      	b.n	7384 <__aeabi_dmul+0xc8>
    76b0:	4650      	mov	r0, sl
    76b2:	f000 fd9f 	bl	81f4 <__clzsi2>
    76b6:	1c03      	adds	r3, r0, #0
    76b8:	3320      	adds	r3, #32
    76ba:	2b27      	cmp	r3, #39	; 0x27
    76bc:	dc00      	bgt.n	76c0 <__aeabi_dmul+0x404>
    76be:	e6a6      	b.n	740e <__aeabi_dmul+0x152>
    76c0:	4655      	mov	r5, sl
    76c2:	3808      	subs	r0, #8
    76c4:	4085      	lsls	r5, r0
    76c6:	2200      	movs	r2, #0
    76c8:	e6ac      	b.n	7424 <__aeabi_dmul+0x168>
    76ca:	1c28      	adds	r0, r5, #0
    76cc:	f000 fd92 	bl	81f4 <__clzsi2>
    76d0:	1c02      	adds	r2, r0, #0
    76d2:	3220      	adds	r2, #32
    76d4:	2a27      	cmp	r2, #39	; 0x27
    76d6:	dc00      	bgt.n	76da <__aeabi_dmul+0x41e>
    76d8:	e675      	b.n	73c6 <__aeabi_dmul+0x10a>
    76da:	3808      	subs	r0, #8
    76dc:	4085      	lsls	r5, r0
    76de:	2600      	movs	r6, #0
    76e0:	46ab      	mov	fp, r5
    76e2:	e67d      	b.n	73e0 <__aeabi_dmul+0x124>
    76e4:	465a      	mov	r2, fp
    76e6:	08f6      	lsrs	r6, r6, #3
    76e8:	0752      	lsls	r2, r2, #29
    76ea:	4316      	orrs	r6, r2
    76ec:	465a      	mov	r2, fp
    76ee:	2401      	movs	r4, #1
    76f0:	0255      	lsls	r5, r2, #9
    76f2:	9a02      	ldr	r2, [sp, #8]
    76f4:	055b      	lsls	r3, r3, #21
    76f6:	0b2d      	lsrs	r5, r5, #12
    76f8:	0d5b      	lsrs	r3, r3, #21
    76fa:	4014      	ands	r4, r2
    76fc:	e642      	b.n	7384 <__aeabi_dmul+0xc8>
    76fe:	4d38      	ldr	r5, [pc, #224]	; (77e0 <__aeabi_dmul+0x524>)
    7700:	1bed      	subs	r5, r5, r7
    7702:	2d38      	cmp	r5, #56	; 0x38
    7704:	dd0a      	ble.n	771c <__aeabi_dmul+0x460>
    7706:	2401      	movs	r4, #1
    7708:	9b02      	ldr	r3, [sp, #8]
    770a:	2500      	movs	r5, #0
    770c:	401c      	ands	r4, r3
    770e:	2600      	movs	r6, #0
    7710:	2300      	movs	r3, #0
    7712:	e637      	b.n	7384 <__aeabi_dmul+0xc8>
    7714:	9b01      	ldr	r3, [sp, #4]
    7716:	4657      	mov	r7, sl
    7718:	9302      	str	r3, [sp, #8]
    771a:	e791      	b.n	7640 <__aeabi_dmul+0x384>
    771c:	2d1f      	cmp	r5, #31
    771e:	dc25      	bgt.n	776c <__aeabi_dmul+0x4b0>
    7720:	4b30      	ldr	r3, [pc, #192]	; (77e4 <__aeabi_dmul+0x528>)
    7722:	1c32      	adds	r2, r6, #0
    7724:	469c      	mov	ip, r3
    7726:	4467      	add	r7, ip
    7728:	40be      	lsls	r6, r7
    772a:	465b      	mov	r3, fp
    772c:	40bb      	lsls	r3, r7
    772e:	1c37      	adds	r7, r6, #0
    7730:	40ea      	lsrs	r2, r5
    7732:	1e7e      	subs	r6, r7, #1
    7734:	41b7      	sbcs	r7, r6
    7736:	4313      	orrs	r3, r2
    7738:	433b      	orrs	r3, r7
    773a:	1c1e      	adds	r6, r3, #0
    773c:	465b      	mov	r3, fp
    773e:	40eb      	lsrs	r3, r5
    7740:	1c1d      	adds	r5, r3, #0
    7742:	0773      	lsls	r3, r6, #29
    7744:	d009      	beq.n	775a <__aeabi_dmul+0x49e>
    7746:	230f      	movs	r3, #15
    7748:	4033      	ands	r3, r6
    774a:	2b04      	cmp	r3, #4
    774c:	d005      	beq.n	775a <__aeabi_dmul+0x49e>
    774e:	1d33      	adds	r3, r6, #4
    7750:	42b3      	cmp	r3, r6
    7752:	41b6      	sbcs	r6, r6
    7754:	4276      	negs	r6, r6
    7756:	19ad      	adds	r5, r5, r6
    7758:	1c1e      	adds	r6, r3, #0
    775a:	022b      	lsls	r3, r5, #8
    775c:	d520      	bpl.n	77a0 <__aeabi_dmul+0x4e4>
    775e:	2401      	movs	r4, #1
    7760:	9b02      	ldr	r3, [sp, #8]
    7762:	2500      	movs	r5, #0
    7764:	401c      	ands	r4, r3
    7766:	2600      	movs	r6, #0
    7768:	2301      	movs	r3, #1
    776a:	e60b      	b.n	7384 <__aeabi_dmul+0xc8>
    776c:	465a      	mov	r2, fp
    776e:	4b1e      	ldr	r3, [pc, #120]	; (77e8 <__aeabi_dmul+0x52c>)
    7770:	1bdb      	subs	r3, r3, r7
    7772:	40da      	lsrs	r2, r3
    7774:	1c13      	adds	r3, r2, #0
    7776:	2d20      	cmp	r5, #32
    7778:	d01c      	beq.n	77b4 <__aeabi_dmul+0x4f8>
    777a:	4a1c      	ldr	r2, [pc, #112]	; (77ec <__aeabi_dmul+0x530>)
    777c:	4694      	mov	ip, r2
    777e:	465a      	mov	r2, fp
    7780:	4467      	add	r7, ip
    7782:	40ba      	lsls	r2, r7
    7784:	1c17      	adds	r7, r2, #0
    7786:	433e      	orrs	r6, r7
    7788:	1e72      	subs	r2, r6, #1
    778a:	4196      	sbcs	r6, r2
    778c:	431e      	orrs	r6, r3
    778e:	2307      	movs	r3, #7
    7790:	2500      	movs	r5, #0
    7792:	4033      	ands	r3, r6
    7794:	d007      	beq.n	77a6 <__aeabi_dmul+0x4ea>
    7796:	230f      	movs	r3, #15
    7798:	2500      	movs	r5, #0
    779a:	4033      	ands	r3, r6
    779c:	2b04      	cmp	r3, #4
    779e:	d1d6      	bne.n	774e <__aeabi_dmul+0x492>
    77a0:	076b      	lsls	r3, r5, #29
    77a2:	026d      	lsls	r5, r5, #9
    77a4:	0b2d      	lsrs	r5, r5, #12
    77a6:	2401      	movs	r4, #1
    77a8:	08f6      	lsrs	r6, r6, #3
    77aa:	431e      	orrs	r6, r3
    77ac:	9b02      	ldr	r3, [sp, #8]
    77ae:	401c      	ands	r4, r3
    77b0:	2300      	movs	r3, #0
    77b2:	e5e7      	b.n	7384 <__aeabi_dmul+0xc8>
    77b4:	2700      	movs	r7, #0
    77b6:	e7e6      	b.n	7786 <__aeabi_dmul+0x4ca>
    77b8:	2580      	movs	r5, #128	; 0x80
    77ba:	465b      	mov	r3, fp
    77bc:	2401      	movs	r4, #1
    77be:	032d      	lsls	r5, r5, #12
    77c0:	431d      	orrs	r5, r3
    77c2:	9b01      	ldr	r3, [sp, #4]
    77c4:	032d      	lsls	r5, r5, #12
    77c6:	4023      	ands	r3, r4
    77c8:	1c1c      	adds	r4, r3, #0
    77ca:	0b2d      	lsrs	r5, r5, #12
    77cc:	4b03      	ldr	r3, [pc, #12]	; (77dc <__aeabi_dmul+0x520>)
    77ce:	e5d9      	b.n	7384 <__aeabi_dmul+0xc8>
    77d0:	000003ff 	.word	0x000003ff
    77d4:	feffffff 	.word	0xfeffffff
    77d8:	000007fe 	.word	0x000007fe
    77dc:	000007ff 	.word	0x000007ff
    77e0:	fffffc02 	.word	0xfffffc02
    77e4:	0000041e 	.word	0x0000041e
    77e8:	fffffbe2 	.word	0xfffffbe2
    77ec:	0000043e 	.word	0x0000043e

000077f0 <__aeabi_dsub>:
    77f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    77f2:	464d      	mov	r5, r9
    77f4:	4644      	mov	r4, r8
    77f6:	465f      	mov	r7, fp
    77f8:	4656      	mov	r6, sl
    77fa:	b4f0      	push	{r4, r5, r6, r7}
    77fc:	1c0e      	adds	r6, r1, #0
    77fe:	1c11      	adds	r1, r2, #0
    7800:	0332      	lsls	r2, r6, #12
    7802:	0a52      	lsrs	r2, r2, #9
    7804:	0f47      	lsrs	r7, r0, #29
    7806:	4317      	orrs	r7, r2
    7808:	00c5      	lsls	r5, r0, #3
    780a:	031a      	lsls	r2, r3, #12
    780c:	0058      	lsls	r0, r3, #1
    780e:	0fdb      	lsrs	r3, r3, #31
    7810:	4699      	mov	r9, r3
    7812:	0a52      	lsrs	r2, r2, #9
    7814:	0f4b      	lsrs	r3, r1, #29
    7816:	b083      	sub	sp, #12
    7818:	431a      	orrs	r2, r3
    781a:	00cb      	lsls	r3, r1, #3
    781c:	9301      	str	r3, [sp, #4]
    781e:	4bcf      	ldr	r3, [pc, #828]	; (7b5c <__aeabi_dsub+0x36c>)
    7820:	0074      	lsls	r4, r6, #1
    7822:	0ff6      	lsrs	r6, r6, #31
    7824:	0d64      	lsrs	r4, r4, #21
    7826:	46b0      	mov	r8, r6
    7828:	0d40      	lsrs	r0, r0, #21
    782a:	4298      	cmp	r0, r3
    782c:	d100      	bne.n	7830 <__aeabi_dsub+0x40>
    782e:	e0e8      	b.n	7a02 <__aeabi_dsub+0x212>
    7830:	2301      	movs	r3, #1
    7832:	4649      	mov	r1, r9
    7834:	4059      	eors	r1, r3
    7836:	1c0b      	adds	r3, r1, #0
    7838:	429e      	cmp	r6, r3
    783a:	d100      	bne.n	783e <__aeabi_dsub+0x4e>
    783c:	e0b1      	b.n	79a2 <__aeabi_dsub+0x1b2>
    783e:	1a26      	subs	r6, r4, r0
    7840:	2e00      	cmp	r6, #0
    7842:	dc00      	bgt.n	7846 <__aeabi_dsub+0x56>
    7844:	e11c      	b.n	7a80 <__aeabi_dsub+0x290>
    7846:	2800      	cmp	r0, #0
    7848:	d142      	bne.n	78d0 <__aeabi_dsub+0xe0>
    784a:	1c13      	adds	r3, r2, #0
    784c:	9901      	ldr	r1, [sp, #4]
    784e:	430b      	orrs	r3, r1
    7850:	d000      	beq.n	7854 <__aeabi_dsub+0x64>
    7852:	e0e6      	b.n	7a22 <__aeabi_dsub+0x232>
    7854:	076b      	lsls	r3, r5, #29
    7856:	d100      	bne.n	785a <__aeabi_dsub+0x6a>
    7858:	e08e      	b.n	7978 <__aeabi_dsub+0x188>
    785a:	230f      	movs	r3, #15
    785c:	402b      	ands	r3, r5
    785e:	2b04      	cmp	r3, #4
    7860:	d100      	bne.n	7864 <__aeabi_dsub+0x74>
    7862:	e089      	b.n	7978 <__aeabi_dsub+0x188>
    7864:	1d2a      	adds	r2, r5, #4
    7866:	42aa      	cmp	r2, r5
    7868:	41ad      	sbcs	r5, r5
    786a:	2380      	movs	r3, #128	; 0x80
    786c:	2601      	movs	r6, #1
    786e:	4641      	mov	r1, r8
    7870:	426d      	negs	r5, r5
    7872:	197f      	adds	r7, r7, r5
    7874:	041b      	lsls	r3, r3, #16
    7876:	403b      	ands	r3, r7
    7878:	400e      	ands	r6, r1
    787a:	1c15      	adds	r5, r2, #0
    787c:	2b00      	cmp	r3, #0
    787e:	d100      	bne.n	7882 <__aeabi_dsub+0x92>
    7880:	e083      	b.n	798a <__aeabi_dsub+0x19a>
    7882:	4bb6      	ldr	r3, [pc, #728]	; (7b5c <__aeabi_dsub+0x36c>)
    7884:	3401      	adds	r4, #1
    7886:	429c      	cmp	r4, r3
    7888:	d100      	bne.n	788c <__aeabi_dsub+0x9c>
    788a:	e116      	b.n	7aba <__aeabi_dsub+0x2ca>
    788c:	1c3a      	adds	r2, r7, #0
    788e:	4bb4      	ldr	r3, [pc, #720]	; (7b60 <__aeabi_dsub+0x370>)
    7890:	08ed      	lsrs	r5, r5, #3
    7892:	401a      	ands	r2, r3
    7894:	0750      	lsls	r0, r2, #29
    7896:	0564      	lsls	r4, r4, #21
    7898:	0252      	lsls	r2, r2, #9
    789a:	4305      	orrs	r5, r0
    789c:	0b12      	lsrs	r2, r2, #12
    789e:	0d64      	lsrs	r4, r4, #21
    78a0:	2100      	movs	r1, #0
    78a2:	0312      	lsls	r2, r2, #12
    78a4:	0d0b      	lsrs	r3, r1, #20
    78a6:	051b      	lsls	r3, r3, #20
    78a8:	0564      	lsls	r4, r4, #21
    78aa:	0b12      	lsrs	r2, r2, #12
    78ac:	431a      	orrs	r2, r3
    78ae:	0863      	lsrs	r3, r4, #1
    78b0:	4cac      	ldr	r4, [pc, #688]	; (7b64 <__aeabi_dsub+0x374>)
    78b2:	07f6      	lsls	r6, r6, #31
    78b4:	4014      	ands	r4, r2
    78b6:	431c      	orrs	r4, r3
    78b8:	0064      	lsls	r4, r4, #1
    78ba:	0864      	lsrs	r4, r4, #1
    78bc:	4334      	orrs	r4, r6
    78be:	1c28      	adds	r0, r5, #0
    78c0:	1c21      	adds	r1, r4, #0
    78c2:	b003      	add	sp, #12
    78c4:	bc3c      	pop	{r2, r3, r4, r5}
    78c6:	4690      	mov	r8, r2
    78c8:	4699      	mov	r9, r3
    78ca:	46a2      	mov	sl, r4
    78cc:	46ab      	mov	fp, r5
    78ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
    78d0:	4ba2      	ldr	r3, [pc, #648]	; (7b5c <__aeabi_dsub+0x36c>)
    78d2:	429c      	cmp	r4, r3
    78d4:	d0be      	beq.n	7854 <__aeabi_dsub+0x64>
    78d6:	2380      	movs	r3, #128	; 0x80
    78d8:	041b      	lsls	r3, r3, #16
    78da:	431a      	orrs	r2, r3
    78dc:	2e38      	cmp	r6, #56	; 0x38
    78de:	dd00      	ble.n	78e2 <__aeabi_dsub+0xf2>
    78e0:	e103      	b.n	7aea <__aeabi_dsub+0x2fa>
    78e2:	2e1f      	cmp	r6, #31
    78e4:	dd00      	ble.n	78e8 <__aeabi_dsub+0xf8>
    78e6:	e13f      	b.n	7b68 <__aeabi_dsub+0x378>
    78e8:	2020      	movs	r0, #32
    78ea:	1b83      	subs	r3, r0, r6
    78ec:	4699      	mov	r9, r3
    78ee:	1c13      	adds	r3, r2, #0
    78f0:	4649      	mov	r1, r9
    78f2:	408b      	lsls	r3, r1
    78f4:	469c      	mov	ip, r3
    78f6:	9b01      	ldr	r3, [sp, #4]
    78f8:	4660      	mov	r0, ip
    78fa:	40f3      	lsrs	r3, r6
    78fc:	4303      	orrs	r3, r0
    78fe:	9801      	ldr	r0, [sp, #4]
    7900:	40f2      	lsrs	r2, r6
    7902:	4088      	lsls	r0, r1
    7904:	1c01      	adds	r1, r0, #0
    7906:	1e48      	subs	r0, r1, #1
    7908:	4181      	sbcs	r1, r0
    790a:	430b      	orrs	r3, r1
    790c:	1aeb      	subs	r3, r5, r3
    790e:	429d      	cmp	r5, r3
    7910:	4180      	sbcs	r0, r0
    7912:	1c1d      	adds	r5, r3, #0
    7914:	1aba      	subs	r2, r7, r2
    7916:	4240      	negs	r0, r0
    7918:	1a17      	subs	r7, r2, r0
    791a:	023b      	lsls	r3, r7, #8
    791c:	d400      	bmi.n	7920 <__aeabi_dsub+0x130>
    791e:	e0a8      	b.n	7a72 <__aeabi_dsub+0x282>
    7920:	027a      	lsls	r2, r7, #9
    7922:	0a56      	lsrs	r6, r2, #9
    7924:	2e00      	cmp	r6, #0
    7926:	d100      	bne.n	792a <__aeabi_dsub+0x13a>
    7928:	e0ca      	b.n	7ac0 <__aeabi_dsub+0x2d0>
    792a:	1c30      	adds	r0, r6, #0
    792c:	f000 fc62 	bl	81f4 <__clzsi2>
    7930:	1c03      	adds	r3, r0, #0
    7932:	3b08      	subs	r3, #8
    7934:	2b1f      	cmp	r3, #31
    7936:	dd00      	ble.n	793a <__aeabi_dsub+0x14a>
    7938:	e0cb      	b.n	7ad2 <__aeabi_dsub+0x2e2>
    793a:	2228      	movs	r2, #40	; 0x28
    793c:	1c29      	adds	r1, r5, #0
    793e:	1a12      	subs	r2, r2, r0
    7940:	40d1      	lsrs	r1, r2
    7942:	409e      	lsls	r6, r3
    7944:	1c0a      	adds	r2, r1, #0
    7946:	409d      	lsls	r5, r3
    7948:	4332      	orrs	r2, r6
    794a:	429c      	cmp	r4, r3
    794c:	dd00      	ble.n	7950 <__aeabi_dsub+0x160>
    794e:	e0c8      	b.n	7ae2 <__aeabi_dsub+0x2f2>
    7950:	1b1c      	subs	r4, r3, r4
    7952:	1c67      	adds	r7, r4, #1
    7954:	2f1f      	cmp	r7, #31
    7956:	dd00      	ble.n	795a <__aeabi_dsub+0x16a>
    7958:	e0ed      	b.n	7b36 <__aeabi_dsub+0x346>
    795a:	231f      	movs	r3, #31
    795c:	1c29      	adds	r1, r5, #0
    795e:	1b1c      	subs	r4, r3, r4
    7960:	1c13      	adds	r3, r2, #0
    7962:	40a5      	lsls	r5, r4
    7964:	40a3      	lsls	r3, r4
    7966:	40f9      	lsrs	r1, r7
    7968:	1e6c      	subs	r4, r5, #1
    796a:	41a5      	sbcs	r5, r4
    796c:	40fa      	lsrs	r2, r7
    796e:	4319      	orrs	r1, r3
    7970:	430d      	orrs	r5, r1
    7972:	1c17      	adds	r7, r2, #0
    7974:	2400      	movs	r4, #0
    7976:	e76d      	b.n	7854 <__aeabi_dsub+0x64>
    7978:	2380      	movs	r3, #128	; 0x80
    797a:	2601      	movs	r6, #1
    797c:	4642      	mov	r2, r8
    797e:	041b      	lsls	r3, r3, #16
    7980:	403b      	ands	r3, r7
    7982:	4016      	ands	r6, r2
    7984:	2b00      	cmp	r3, #0
    7986:	d000      	beq.n	798a <__aeabi_dsub+0x19a>
    7988:	e77b      	b.n	7882 <__aeabi_dsub+0x92>
    798a:	4b74      	ldr	r3, [pc, #464]	; (7b5c <__aeabi_dsub+0x36c>)
    798c:	08ed      	lsrs	r5, r5, #3
    798e:	0778      	lsls	r0, r7, #29
    7990:	4305      	orrs	r5, r0
    7992:	08fa      	lsrs	r2, r7, #3
    7994:	429c      	cmp	r4, r3
    7996:	d03b      	beq.n	7a10 <__aeabi_dsub+0x220>
    7998:	0312      	lsls	r2, r2, #12
    799a:	0564      	lsls	r4, r4, #21
    799c:	0b12      	lsrs	r2, r2, #12
    799e:	0d64      	lsrs	r4, r4, #21
    79a0:	e77e      	b.n	78a0 <__aeabi_dsub+0xb0>
    79a2:	1a23      	subs	r3, r4, r0
    79a4:	469a      	mov	sl, r3
    79a6:	2b00      	cmp	r3, #0
    79a8:	dc00      	bgt.n	79ac <__aeabi_dsub+0x1bc>
    79aa:	e0a5      	b.n	7af8 <__aeabi_dsub+0x308>
    79ac:	2800      	cmp	r0, #0
    79ae:	d044      	beq.n	7a3a <__aeabi_dsub+0x24a>
    79b0:	486a      	ldr	r0, [pc, #424]	; (7b5c <__aeabi_dsub+0x36c>)
    79b2:	4284      	cmp	r4, r0
    79b4:	d100      	bne.n	79b8 <__aeabi_dsub+0x1c8>
    79b6:	e74d      	b.n	7854 <__aeabi_dsub+0x64>
    79b8:	2080      	movs	r0, #128	; 0x80
    79ba:	0400      	lsls	r0, r0, #16
    79bc:	4302      	orrs	r2, r0
    79be:	4653      	mov	r3, sl
    79c0:	2b38      	cmp	r3, #56	; 0x38
    79c2:	dc00      	bgt.n	79c6 <__aeabi_dsub+0x1d6>
    79c4:	e11c      	b.n	7c00 <__aeabi_dsub+0x410>
    79c6:	9b01      	ldr	r3, [sp, #4]
    79c8:	431a      	orrs	r2, r3
    79ca:	1e51      	subs	r1, r2, #1
    79cc:	418a      	sbcs	r2, r1
    79ce:	b2d1      	uxtb	r1, r2
    79d0:	2200      	movs	r2, #0
    79d2:	1949      	adds	r1, r1, r5
    79d4:	42a9      	cmp	r1, r5
    79d6:	4180      	sbcs	r0, r0
    79d8:	1c0d      	adds	r5, r1, #0
    79da:	19d2      	adds	r2, r2, r7
    79dc:	4240      	negs	r0, r0
    79de:	1817      	adds	r7, r2, r0
    79e0:	023b      	lsls	r3, r7, #8
    79e2:	d546      	bpl.n	7a72 <__aeabi_dsub+0x282>
    79e4:	4b5d      	ldr	r3, [pc, #372]	; (7b5c <__aeabi_dsub+0x36c>)
    79e6:	3401      	adds	r4, #1
    79e8:	429c      	cmp	r4, r3
    79ea:	d100      	bne.n	79ee <__aeabi_dsub+0x1fe>
    79ec:	e169      	b.n	7cc2 <__aeabi_dsub+0x4d2>
    79ee:	2001      	movs	r0, #1
    79f0:	4a5b      	ldr	r2, [pc, #364]	; (7b60 <__aeabi_dsub+0x370>)
    79f2:	086b      	lsrs	r3, r5, #1
    79f4:	403a      	ands	r2, r7
    79f6:	4028      	ands	r0, r5
    79f8:	4318      	orrs	r0, r3
    79fa:	07d5      	lsls	r5, r2, #31
    79fc:	4305      	orrs	r5, r0
    79fe:	0857      	lsrs	r7, r2, #1
    7a00:	e728      	b.n	7854 <__aeabi_dsub+0x64>
    7a02:	1c13      	adds	r3, r2, #0
    7a04:	9901      	ldr	r1, [sp, #4]
    7a06:	430b      	orrs	r3, r1
    7a08:	d100      	bne.n	7a0c <__aeabi_dsub+0x21c>
    7a0a:	e711      	b.n	7830 <__aeabi_dsub+0x40>
    7a0c:	464b      	mov	r3, r9
    7a0e:	e713      	b.n	7838 <__aeabi_dsub+0x48>
    7a10:	1c2b      	adds	r3, r5, #0
    7a12:	4313      	orrs	r3, r2
    7a14:	d051      	beq.n	7aba <__aeabi_dsub+0x2ca>
    7a16:	2380      	movs	r3, #128	; 0x80
    7a18:	031b      	lsls	r3, r3, #12
    7a1a:	431a      	orrs	r2, r3
    7a1c:	0312      	lsls	r2, r2, #12
    7a1e:	0b12      	lsrs	r2, r2, #12
    7a20:	e73e      	b.n	78a0 <__aeabi_dsub+0xb0>
    7a22:	3e01      	subs	r6, #1
    7a24:	2e00      	cmp	r6, #0
    7a26:	d000      	beq.n	7a2a <__aeabi_dsub+0x23a>
    7a28:	e080      	b.n	7b2c <__aeabi_dsub+0x33c>
    7a2a:	1a69      	subs	r1, r5, r1
    7a2c:	428d      	cmp	r5, r1
    7a2e:	419b      	sbcs	r3, r3
    7a30:	1aba      	subs	r2, r7, r2
    7a32:	425b      	negs	r3, r3
    7a34:	1ad7      	subs	r7, r2, r3
    7a36:	1c0d      	adds	r5, r1, #0
    7a38:	e76f      	b.n	791a <__aeabi_dsub+0x12a>
    7a3a:	1c10      	adds	r0, r2, #0
    7a3c:	9b01      	ldr	r3, [sp, #4]
    7a3e:	4318      	orrs	r0, r3
    7a40:	d100      	bne.n	7a44 <__aeabi_dsub+0x254>
    7a42:	e707      	b.n	7854 <__aeabi_dsub+0x64>
    7a44:	2301      	movs	r3, #1
    7a46:	425b      	negs	r3, r3
    7a48:	469c      	mov	ip, r3
    7a4a:	44e2      	add	sl, ip
    7a4c:	4653      	mov	r3, sl
    7a4e:	2b00      	cmp	r3, #0
    7a50:	d000      	beq.n	7a54 <__aeabi_dsub+0x264>
    7a52:	e102      	b.n	7c5a <__aeabi_dsub+0x46a>
    7a54:	9b01      	ldr	r3, [sp, #4]
    7a56:	19d2      	adds	r2, r2, r7
    7a58:	1959      	adds	r1, r3, r5
    7a5a:	42a9      	cmp	r1, r5
    7a5c:	419b      	sbcs	r3, r3
    7a5e:	425b      	negs	r3, r3
    7a60:	18d7      	adds	r7, r2, r3
    7a62:	1c0d      	adds	r5, r1, #0
    7a64:	e7bc      	b.n	79e0 <__aeabi_dsub+0x1f0>
    7a66:	4663      	mov	r3, ip
    7a68:	4303      	orrs	r3, r0
    7a6a:	d100      	bne.n	7a6e <__aeabi_dsub+0x27e>
    7a6c:	e128      	b.n	7cc0 <__aeabi_dsub+0x4d0>
    7a6e:	1c07      	adds	r7, r0, #0
    7a70:	4665      	mov	r5, ip
    7a72:	076b      	lsls	r3, r5, #29
    7a74:	d000      	beq.n	7a78 <__aeabi_dsub+0x288>
    7a76:	e6f0      	b.n	785a <__aeabi_dsub+0x6a>
    7a78:	2601      	movs	r6, #1
    7a7a:	4643      	mov	r3, r8
    7a7c:	401e      	ands	r6, r3
    7a7e:	e784      	b.n	798a <__aeabi_dsub+0x19a>
    7a80:	2e00      	cmp	r6, #0
    7a82:	d000      	beq.n	7a86 <__aeabi_dsub+0x296>
    7a84:	e081      	b.n	7b8a <__aeabi_dsub+0x39a>
    7a86:	1c60      	adds	r0, r4, #1
    7a88:	0540      	lsls	r0, r0, #21
    7a8a:	0d40      	lsrs	r0, r0, #21
    7a8c:	2801      	cmp	r0, #1
    7a8e:	dc00      	bgt.n	7a92 <__aeabi_dsub+0x2a2>
    7a90:	e107      	b.n	7ca2 <__aeabi_dsub+0x4b2>
    7a92:	9901      	ldr	r1, [sp, #4]
    7a94:	1a68      	subs	r0, r5, r1
    7a96:	4684      	mov	ip, r0
    7a98:	4565      	cmp	r5, ip
    7a9a:	41b6      	sbcs	r6, r6
    7a9c:	1ab8      	subs	r0, r7, r2
    7a9e:	4276      	negs	r6, r6
    7aa0:	1b86      	subs	r6, r0, r6
    7aa2:	0230      	lsls	r0, r6, #8
    7aa4:	d400      	bmi.n	7aa8 <__aeabi_dsub+0x2b8>
    7aa6:	e0a1      	b.n	7bec <__aeabi_dsub+0x3fc>
    7aa8:	468c      	mov	ip, r1
    7aaa:	1b4d      	subs	r5, r1, r5
    7aac:	45ac      	cmp	ip, r5
    7aae:	4189      	sbcs	r1, r1
    7ab0:	1bd2      	subs	r2, r2, r7
    7ab2:	4249      	negs	r1, r1
    7ab4:	1a56      	subs	r6, r2, r1
    7ab6:	4698      	mov	r8, r3
    7ab8:	e734      	b.n	7924 <__aeabi_dsub+0x134>
    7aba:	2200      	movs	r2, #0
    7abc:	2500      	movs	r5, #0
    7abe:	e6ef      	b.n	78a0 <__aeabi_dsub+0xb0>
    7ac0:	1c28      	adds	r0, r5, #0
    7ac2:	f000 fb97 	bl	81f4 <__clzsi2>
    7ac6:	3020      	adds	r0, #32
    7ac8:	1c03      	adds	r3, r0, #0
    7aca:	3b08      	subs	r3, #8
    7acc:	2b1f      	cmp	r3, #31
    7ace:	dc00      	bgt.n	7ad2 <__aeabi_dsub+0x2e2>
    7ad0:	e733      	b.n	793a <__aeabi_dsub+0x14a>
    7ad2:	1c02      	adds	r2, r0, #0
    7ad4:	3a28      	subs	r2, #40	; 0x28
    7ad6:	4095      	lsls	r5, r2
    7ad8:	1c2a      	adds	r2, r5, #0
    7ada:	2500      	movs	r5, #0
    7adc:	429c      	cmp	r4, r3
    7ade:	dc00      	bgt.n	7ae2 <__aeabi_dsub+0x2f2>
    7ae0:	e736      	b.n	7950 <__aeabi_dsub+0x160>
    7ae2:	4f1f      	ldr	r7, [pc, #124]	; (7b60 <__aeabi_dsub+0x370>)
    7ae4:	1ae4      	subs	r4, r4, r3
    7ae6:	4017      	ands	r7, r2
    7ae8:	e6b4      	b.n	7854 <__aeabi_dsub+0x64>
    7aea:	9b01      	ldr	r3, [sp, #4]
    7aec:	431a      	orrs	r2, r3
    7aee:	1e51      	subs	r1, r2, #1
    7af0:	418a      	sbcs	r2, r1
    7af2:	b2d3      	uxtb	r3, r2
    7af4:	2200      	movs	r2, #0
    7af6:	e709      	b.n	790c <__aeabi_dsub+0x11c>
    7af8:	2b00      	cmp	r3, #0
    7afa:	d000      	beq.n	7afe <__aeabi_dsub+0x30e>
    7afc:	e101      	b.n	7d02 <__aeabi_dsub+0x512>
    7afe:	1c60      	adds	r0, r4, #1
    7b00:	0543      	lsls	r3, r0, #21
    7b02:	0d5b      	lsrs	r3, r3, #21
    7b04:	2b01      	cmp	r3, #1
    7b06:	dc00      	bgt.n	7b0a <__aeabi_dsub+0x31a>
    7b08:	e0b0      	b.n	7c6c <__aeabi_dsub+0x47c>
    7b0a:	4b14      	ldr	r3, [pc, #80]	; (7b5c <__aeabi_dsub+0x36c>)
    7b0c:	4298      	cmp	r0, r3
    7b0e:	d100      	bne.n	7b12 <__aeabi_dsub+0x322>
    7b10:	e11e      	b.n	7d50 <__aeabi_dsub+0x560>
    7b12:	9b01      	ldr	r3, [sp, #4]
    7b14:	19d2      	adds	r2, r2, r7
    7b16:	1959      	adds	r1, r3, r5
    7b18:	42a9      	cmp	r1, r5
    7b1a:	419b      	sbcs	r3, r3
    7b1c:	425b      	negs	r3, r3
    7b1e:	18d2      	adds	r2, r2, r3
    7b20:	0849      	lsrs	r1, r1, #1
    7b22:	07d5      	lsls	r5, r2, #31
    7b24:	430d      	orrs	r5, r1
    7b26:	0857      	lsrs	r7, r2, #1
    7b28:	1c04      	adds	r4, r0, #0
    7b2a:	e693      	b.n	7854 <__aeabi_dsub+0x64>
    7b2c:	4b0b      	ldr	r3, [pc, #44]	; (7b5c <__aeabi_dsub+0x36c>)
    7b2e:	429c      	cmp	r4, r3
    7b30:	d000      	beq.n	7b34 <__aeabi_dsub+0x344>
    7b32:	e6d3      	b.n	78dc <__aeabi_dsub+0xec>
    7b34:	e68e      	b.n	7854 <__aeabi_dsub+0x64>
    7b36:	1c21      	adds	r1, r4, #0
    7b38:	1c13      	adds	r3, r2, #0
    7b3a:	391f      	subs	r1, #31
    7b3c:	40cb      	lsrs	r3, r1
    7b3e:	1c19      	adds	r1, r3, #0
    7b40:	2f20      	cmp	r7, #32
    7b42:	d100      	bne.n	7b46 <__aeabi_dsub+0x356>
    7b44:	e08e      	b.n	7c64 <__aeabi_dsub+0x474>
    7b46:	233f      	movs	r3, #63	; 0x3f
    7b48:	1b1c      	subs	r4, r3, r4
    7b4a:	40a2      	lsls	r2, r4
    7b4c:	4315      	orrs	r5, r2
    7b4e:	1e6a      	subs	r2, r5, #1
    7b50:	4195      	sbcs	r5, r2
    7b52:	2700      	movs	r7, #0
    7b54:	430d      	orrs	r5, r1
    7b56:	2400      	movs	r4, #0
    7b58:	e78b      	b.n	7a72 <__aeabi_dsub+0x282>
    7b5a:	46c0      	nop			; (mov r8, r8)
    7b5c:	000007ff 	.word	0x000007ff
    7b60:	ff7fffff 	.word	0xff7fffff
    7b64:	800fffff 	.word	0x800fffff
    7b68:	1c33      	adds	r3, r6, #0
    7b6a:	1c10      	adds	r0, r2, #0
    7b6c:	3b20      	subs	r3, #32
    7b6e:	40d8      	lsrs	r0, r3
    7b70:	2e20      	cmp	r6, #32
    7b72:	d079      	beq.n	7c68 <__aeabi_dsub+0x478>
    7b74:	2340      	movs	r3, #64	; 0x40
    7b76:	1b9b      	subs	r3, r3, r6
    7b78:	409a      	lsls	r2, r3
    7b7a:	1c13      	adds	r3, r2, #0
    7b7c:	9a01      	ldr	r2, [sp, #4]
    7b7e:	4313      	orrs	r3, r2
    7b80:	1e59      	subs	r1, r3, #1
    7b82:	418b      	sbcs	r3, r1
    7b84:	2200      	movs	r2, #0
    7b86:	4303      	orrs	r3, r0
    7b88:	e6c0      	b.n	790c <__aeabi_dsub+0x11c>
    7b8a:	2c00      	cmp	r4, #0
    7b8c:	d053      	beq.n	7c36 <__aeabi_dsub+0x446>
    7b8e:	4cc7      	ldr	r4, [pc, #796]	; (7eac <__aeabi_dsub+0x6bc>)
    7b90:	42a0      	cmp	r0, r4
    7b92:	d100      	bne.n	7b96 <__aeabi_dsub+0x3a6>
    7b94:	e0b0      	b.n	7cf8 <__aeabi_dsub+0x508>
    7b96:	2480      	movs	r4, #128	; 0x80
    7b98:	4271      	negs	r1, r6
    7b9a:	4689      	mov	r9, r1
    7b9c:	0424      	lsls	r4, r4, #16
    7b9e:	4327      	orrs	r7, r4
    7ba0:	4649      	mov	r1, r9
    7ba2:	2938      	cmp	r1, #56	; 0x38
    7ba4:	dd00      	ble.n	7ba8 <__aeabi_dsub+0x3b8>
    7ba6:	e0cd      	b.n	7d44 <__aeabi_dsub+0x554>
    7ba8:	291f      	cmp	r1, #31
    7baa:	dd00      	ble.n	7bae <__aeabi_dsub+0x3be>
    7bac:	e159      	b.n	7e62 <__aeabi_dsub+0x672>
    7bae:	2420      	movs	r4, #32
    7bb0:	1c3e      	adds	r6, r7, #0
    7bb2:	1a61      	subs	r1, r4, r1
    7bb4:	408e      	lsls	r6, r1
    7bb6:	468a      	mov	sl, r1
    7bb8:	46b0      	mov	r8, r6
    7bba:	4649      	mov	r1, r9
    7bbc:	1c2e      	adds	r6, r5, #0
    7bbe:	40ce      	lsrs	r6, r1
    7bc0:	4651      	mov	r1, sl
    7bc2:	46b4      	mov	ip, r6
    7bc4:	408d      	lsls	r5, r1
    7bc6:	4664      	mov	r4, ip
    7bc8:	4646      	mov	r6, r8
    7bca:	4649      	mov	r1, r9
    7bcc:	4326      	orrs	r6, r4
    7bce:	1e6c      	subs	r4, r5, #1
    7bd0:	41a5      	sbcs	r5, r4
    7bd2:	40cf      	lsrs	r7, r1
    7bd4:	4335      	orrs	r5, r6
    7bd6:	9901      	ldr	r1, [sp, #4]
    7bd8:	1bd7      	subs	r7, r2, r7
    7bda:	468c      	mov	ip, r1
    7bdc:	1b4d      	subs	r5, r1, r5
    7bde:	45ac      	cmp	ip, r5
    7be0:	4192      	sbcs	r2, r2
    7be2:	4252      	negs	r2, r2
    7be4:	1abf      	subs	r7, r7, r2
    7be6:	1c04      	adds	r4, r0, #0
    7be8:	4698      	mov	r8, r3
    7bea:	e696      	b.n	791a <__aeabi_dsub+0x12a>
    7bec:	4663      	mov	r3, ip
    7bee:	4665      	mov	r5, ip
    7bf0:	4333      	orrs	r3, r6
    7bf2:	d000      	beq.n	7bf6 <__aeabi_dsub+0x406>
    7bf4:	e696      	b.n	7924 <__aeabi_dsub+0x134>
    7bf6:	2600      	movs	r6, #0
    7bf8:	2700      	movs	r7, #0
    7bfa:	2400      	movs	r4, #0
    7bfc:	2500      	movs	r5, #0
    7bfe:	e6c4      	b.n	798a <__aeabi_dsub+0x19a>
    7c00:	2b1f      	cmp	r3, #31
    7c02:	dc61      	bgt.n	7cc8 <__aeabi_dsub+0x4d8>
    7c04:	2020      	movs	r0, #32
    7c06:	1ac3      	subs	r3, r0, r3
    7c08:	469b      	mov	fp, r3
    7c0a:	1c13      	adds	r3, r2, #0
    7c0c:	4659      	mov	r1, fp
    7c0e:	408b      	lsls	r3, r1
    7c10:	4651      	mov	r1, sl
    7c12:	4699      	mov	r9, r3
    7c14:	9b01      	ldr	r3, [sp, #4]
    7c16:	40cb      	lsrs	r3, r1
    7c18:	469c      	mov	ip, r3
    7c1a:	464b      	mov	r3, r9
    7c1c:	4660      	mov	r0, ip
    7c1e:	4303      	orrs	r3, r0
    7c20:	469c      	mov	ip, r3
    7c22:	465b      	mov	r3, fp
    7c24:	9901      	ldr	r1, [sp, #4]
    7c26:	4099      	lsls	r1, r3
    7c28:	4663      	mov	r3, ip
    7c2a:	1e48      	subs	r0, r1, #1
    7c2c:	4181      	sbcs	r1, r0
    7c2e:	4319      	orrs	r1, r3
    7c30:	4653      	mov	r3, sl
    7c32:	40da      	lsrs	r2, r3
    7c34:	e6cd      	b.n	79d2 <__aeabi_dsub+0x1e2>
    7c36:	1c3c      	adds	r4, r7, #0
    7c38:	432c      	orrs	r4, r5
    7c3a:	d05d      	beq.n	7cf8 <__aeabi_dsub+0x508>
    7c3c:	43f1      	mvns	r1, r6
    7c3e:	4689      	mov	r9, r1
    7c40:	2900      	cmp	r1, #0
    7c42:	d155      	bne.n	7cf0 <__aeabi_dsub+0x500>
    7c44:	9901      	ldr	r1, [sp, #4]
    7c46:	1bd2      	subs	r2, r2, r7
    7c48:	468c      	mov	ip, r1
    7c4a:	1b4d      	subs	r5, r1, r5
    7c4c:	45ac      	cmp	ip, r5
    7c4e:	4189      	sbcs	r1, r1
    7c50:	4249      	negs	r1, r1
    7c52:	1a57      	subs	r7, r2, r1
    7c54:	1c04      	adds	r4, r0, #0
    7c56:	4698      	mov	r8, r3
    7c58:	e65f      	b.n	791a <__aeabi_dsub+0x12a>
    7c5a:	4894      	ldr	r0, [pc, #592]	; (7eac <__aeabi_dsub+0x6bc>)
    7c5c:	4284      	cmp	r4, r0
    7c5e:	d000      	beq.n	7c62 <__aeabi_dsub+0x472>
    7c60:	e6ad      	b.n	79be <__aeabi_dsub+0x1ce>
    7c62:	e5f7      	b.n	7854 <__aeabi_dsub+0x64>
    7c64:	2200      	movs	r2, #0
    7c66:	e771      	b.n	7b4c <__aeabi_dsub+0x35c>
    7c68:	2300      	movs	r3, #0
    7c6a:	e787      	b.n	7b7c <__aeabi_dsub+0x38c>
    7c6c:	1c3b      	adds	r3, r7, #0
    7c6e:	432b      	orrs	r3, r5
    7c70:	2c00      	cmp	r4, #0
    7c72:	d000      	beq.n	7c76 <__aeabi_dsub+0x486>
    7c74:	e0da      	b.n	7e2c <__aeabi_dsub+0x63c>
    7c76:	2b00      	cmp	r3, #0
    7c78:	d100      	bne.n	7c7c <__aeabi_dsub+0x48c>
    7c7a:	e113      	b.n	7ea4 <__aeabi_dsub+0x6b4>
    7c7c:	1c13      	adds	r3, r2, #0
    7c7e:	9901      	ldr	r1, [sp, #4]
    7c80:	430b      	orrs	r3, r1
    7c82:	d100      	bne.n	7c86 <__aeabi_dsub+0x496>
    7c84:	e5e6      	b.n	7854 <__aeabi_dsub+0x64>
    7c86:	1949      	adds	r1, r1, r5
    7c88:	42a9      	cmp	r1, r5
    7c8a:	419b      	sbcs	r3, r3
    7c8c:	19d2      	adds	r2, r2, r7
    7c8e:	425b      	negs	r3, r3
    7c90:	18d7      	adds	r7, r2, r3
    7c92:	023b      	lsls	r3, r7, #8
    7c94:	d400      	bmi.n	7c98 <__aeabi_dsub+0x4a8>
    7c96:	e121      	b.n	7edc <__aeabi_dsub+0x6ec>
    7c98:	4b85      	ldr	r3, [pc, #532]	; (7eb0 <__aeabi_dsub+0x6c0>)
    7c9a:	1c0d      	adds	r5, r1, #0
    7c9c:	401f      	ands	r7, r3
    7c9e:	1c04      	adds	r4, r0, #0
    7ca0:	e5d8      	b.n	7854 <__aeabi_dsub+0x64>
    7ca2:	1c38      	adds	r0, r7, #0
    7ca4:	4328      	orrs	r0, r5
    7ca6:	2c00      	cmp	r4, #0
    7ca8:	d140      	bne.n	7d2c <__aeabi_dsub+0x53c>
    7caa:	2800      	cmp	r0, #0
    7cac:	d000      	beq.n	7cb0 <__aeabi_dsub+0x4c0>
    7cae:	e083      	b.n	7db8 <__aeabi_dsub+0x5c8>
    7cb0:	1c10      	adds	r0, r2, #0
    7cb2:	9901      	ldr	r1, [sp, #4]
    7cb4:	4308      	orrs	r0, r1
    7cb6:	d003      	beq.n	7cc0 <__aeabi_dsub+0x4d0>
    7cb8:	1c17      	adds	r7, r2, #0
    7cba:	1c0d      	adds	r5, r1, #0
    7cbc:	4698      	mov	r8, r3
    7cbe:	e5c9      	b.n	7854 <__aeabi_dsub+0x64>
    7cc0:	2600      	movs	r6, #0
    7cc2:	2700      	movs	r7, #0
    7cc4:	2500      	movs	r5, #0
    7cc6:	e660      	b.n	798a <__aeabi_dsub+0x19a>
    7cc8:	4650      	mov	r0, sl
    7cca:	1c13      	adds	r3, r2, #0
    7ccc:	3820      	subs	r0, #32
    7cce:	40c3      	lsrs	r3, r0
    7cd0:	1c18      	adds	r0, r3, #0
    7cd2:	4653      	mov	r3, sl
    7cd4:	2b20      	cmp	r3, #32
    7cd6:	d100      	bne.n	7cda <__aeabi_dsub+0x4ea>
    7cd8:	e0c1      	b.n	7e5e <__aeabi_dsub+0x66e>
    7cda:	2340      	movs	r3, #64	; 0x40
    7cdc:	4651      	mov	r1, sl
    7cde:	1a5b      	subs	r3, r3, r1
    7ce0:	409a      	lsls	r2, r3
    7ce2:	9901      	ldr	r1, [sp, #4]
    7ce4:	4311      	orrs	r1, r2
    7ce6:	1e4a      	subs	r2, r1, #1
    7ce8:	4191      	sbcs	r1, r2
    7cea:	2200      	movs	r2, #0
    7cec:	4301      	orrs	r1, r0
    7cee:	e670      	b.n	79d2 <__aeabi_dsub+0x1e2>
    7cf0:	4c6e      	ldr	r4, [pc, #440]	; (7eac <__aeabi_dsub+0x6bc>)
    7cf2:	42a0      	cmp	r0, r4
    7cf4:	d000      	beq.n	7cf8 <__aeabi_dsub+0x508>
    7cf6:	e753      	b.n	7ba0 <__aeabi_dsub+0x3b0>
    7cf8:	1c17      	adds	r7, r2, #0
    7cfa:	9d01      	ldr	r5, [sp, #4]
    7cfc:	1c04      	adds	r4, r0, #0
    7cfe:	4698      	mov	r8, r3
    7d00:	e5a8      	b.n	7854 <__aeabi_dsub+0x64>
    7d02:	2c00      	cmp	r4, #0
    7d04:	d128      	bne.n	7d58 <__aeabi_dsub+0x568>
    7d06:	1c3c      	adds	r4, r7, #0
    7d08:	432c      	orrs	r4, r5
    7d0a:	d100      	bne.n	7d0e <__aeabi_dsub+0x51e>
    7d0c:	e08a      	b.n	7e24 <__aeabi_dsub+0x634>
    7d0e:	43db      	mvns	r3, r3
    7d10:	469a      	mov	sl, r3
    7d12:	2b00      	cmp	r3, #0
    7d14:	d000      	beq.n	7d18 <__aeabi_dsub+0x528>
    7d16:	e082      	b.n	7e1e <__aeabi_dsub+0x62e>
    7d18:	9b01      	ldr	r3, [sp, #4]
    7d1a:	19d2      	adds	r2, r2, r7
    7d1c:	469c      	mov	ip, r3
    7d1e:	4465      	add	r5, ip
    7d20:	429d      	cmp	r5, r3
    7d22:	4189      	sbcs	r1, r1
    7d24:	4249      	negs	r1, r1
    7d26:	1857      	adds	r7, r2, r1
    7d28:	1c04      	adds	r4, r0, #0
    7d2a:	e659      	b.n	79e0 <__aeabi_dsub+0x1f0>
    7d2c:	2800      	cmp	r0, #0
    7d2e:	d15b      	bne.n	7de8 <__aeabi_dsub+0x5f8>
    7d30:	1c10      	adds	r0, r2, #0
    7d32:	9901      	ldr	r1, [sp, #4]
    7d34:	4308      	orrs	r0, r1
    7d36:	d100      	bne.n	7d3a <__aeabi_dsub+0x54a>
    7d38:	e0a4      	b.n	7e84 <__aeabi_dsub+0x694>
    7d3a:	1c17      	adds	r7, r2, #0
    7d3c:	1c0d      	adds	r5, r1, #0
    7d3e:	4698      	mov	r8, r3
    7d40:	4c5a      	ldr	r4, [pc, #360]	; (7eac <__aeabi_dsub+0x6bc>)
    7d42:	e587      	b.n	7854 <__aeabi_dsub+0x64>
    7d44:	433d      	orrs	r5, r7
    7d46:	1e6f      	subs	r7, r5, #1
    7d48:	41bd      	sbcs	r5, r7
    7d4a:	2700      	movs	r7, #0
    7d4c:	b2ed      	uxtb	r5, r5
    7d4e:	e742      	b.n	7bd6 <__aeabi_dsub+0x3e6>
    7d50:	1c04      	adds	r4, r0, #0
    7d52:	2700      	movs	r7, #0
    7d54:	2500      	movs	r5, #0
    7d56:	e618      	b.n	798a <__aeabi_dsub+0x19a>
    7d58:	4c54      	ldr	r4, [pc, #336]	; (7eac <__aeabi_dsub+0x6bc>)
    7d5a:	42a0      	cmp	r0, r4
    7d5c:	d062      	beq.n	7e24 <__aeabi_dsub+0x634>
    7d5e:	4653      	mov	r3, sl
    7d60:	2480      	movs	r4, #128	; 0x80
    7d62:	425b      	negs	r3, r3
    7d64:	469a      	mov	sl, r3
    7d66:	0424      	lsls	r4, r4, #16
    7d68:	4327      	orrs	r7, r4
    7d6a:	4653      	mov	r3, sl
    7d6c:	2b38      	cmp	r3, #56	; 0x38
    7d6e:	dd00      	ble.n	7d72 <__aeabi_dsub+0x582>
    7d70:	e08e      	b.n	7e90 <__aeabi_dsub+0x6a0>
    7d72:	2b1f      	cmp	r3, #31
    7d74:	dd00      	ble.n	7d78 <__aeabi_dsub+0x588>
    7d76:	e09d      	b.n	7eb4 <__aeabi_dsub+0x6c4>
    7d78:	2420      	movs	r4, #32
    7d7a:	1ae3      	subs	r3, r4, r3
    7d7c:	469b      	mov	fp, r3
    7d7e:	1c3b      	adds	r3, r7, #0
    7d80:	4659      	mov	r1, fp
    7d82:	408b      	lsls	r3, r1
    7d84:	4651      	mov	r1, sl
    7d86:	4699      	mov	r9, r3
    7d88:	1c2b      	adds	r3, r5, #0
    7d8a:	40cb      	lsrs	r3, r1
    7d8c:	469c      	mov	ip, r3
    7d8e:	464b      	mov	r3, r9
    7d90:	4664      	mov	r4, ip
    7d92:	4323      	orrs	r3, r4
    7d94:	469c      	mov	ip, r3
    7d96:	465b      	mov	r3, fp
    7d98:	409d      	lsls	r5, r3
    7d9a:	4663      	mov	r3, ip
    7d9c:	1e6c      	subs	r4, r5, #1
    7d9e:	41a5      	sbcs	r5, r4
    7da0:	40cf      	lsrs	r7, r1
    7da2:	431d      	orrs	r5, r3
    7da4:	9b01      	ldr	r3, [sp, #4]
    7da6:	18bf      	adds	r7, r7, r2
    7da8:	469c      	mov	ip, r3
    7daa:	4465      	add	r5, ip
    7dac:	429d      	cmp	r5, r3
    7dae:	4192      	sbcs	r2, r2
    7db0:	4252      	negs	r2, r2
    7db2:	18bf      	adds	r7, r7, r2
    7db4:	1c04      	adds	r4, r0, #0
    7db6:	e613      	b.n	79e0 <__aeabi_dsub+0x1f0>
    7db8:	1c10      	adds	r0, r2, #0
    7dba:	9901      	ldr	r1, [sp, #4]
    7dbc:	4308      	orrs	r0, r1
    7dbe:	d100      	bne.n	7dc2 <__aeabi_dsub+0x5d2>
    7dc0:	e548      	b.n	7854 <__aeabi_dsub+0x64>
    7dc2:	1a68      	subs	r0, r5, r1
    7dc4:	4684      	mov	ip, r0
    7dc6:	4285      	cmp	r5, r0
    7dc8:	4180      	sbcs	r0, r0
    7dca:	1abe      	subs	r6, r7, r2
    7dcc:	4240      	negs	r0, r0
    7dce:	1a30      	subs	r0, r6, r0
    7dd0:	0206      	lsls	r6, r0, #8
    7dd2:	d400      	bmi.n	7dd6 <__aeabi_dsub+0x5e6>
    7dd4:	e647      	b.n	7a66 <__aeabi_dsub+0x276>
    7dd6:	468c      	mov	ip, r1
    7dd8:	1b4d      	subs	r5, r1, r5
    7dda:	45ac      	cmp	ip, r5
    7ddc:	4189      	sbcs	r1, r1
    7dde:	1bd2      	subs	r2, r2, r7
    7de0:	4249      	negs	r1, r1
    7de2:	1a57      	subs	r7, r2, r1
    7de4:	4698      	mov	r8, r3
    7de6:	e535      	b.n	7854 <__aeabi_dsub+0x64>
    7de8:	1c10      	adds	r0, r2, #0
    7dea:	9901      	ldr	r1, [sp, #4]
    7dec:	4308      	orrs	r0, r1
    7dee:	d034      	beq.n	7e5a <__aeabi_dsub+0x66a>
    7df0:	2480      	movs	r4, #128	; 0x80
    7df2:	0778      	lsls	r0, r7, #29
    7df4:	08ed      	lsrs	r5, r5, #3
    7df6:	08ff      	lsrs	r7, r7, #3
    7df8:	0324      	lsls	r4, r4, #12
    7dfa:	4328      	orrs	r0, r5
    7dfc:	4227      	tst	r7, r4
    7dfe:	d008      	beq.n	7e12 <__aeabi_dsub+0x622>
    7e00:	08d6      	lsrs	r6, r2, #3
    7e02:	4226      	tst	r6, r4
    7e04:	d105      	bne.n	7e12 <__aeabi_dsub+0x622>
    7e06:	08c9      	lsrs	r1, r1, #3
    7e08:	0752      	lsls	r2, r2, #29
    7e0a:	430a      	orrs	r2, r1
    7e0c:	1c10      	adds	r0, r2, #0
    7e0e:	1c37      	adds	r7, r6, #0
    7e10:	4698      	mov	r8, r3
    7e12:	00ff      	lsls	r7, r7, #3
    7e14:	0f42      	lsrs	r2, r0, #29
    7e16:	4317      	orrs	r7, r2
    7e18:	00c5      	lsls	r5, r0, #3
    7e1a:	4c24      	ldr	r4, [pc, #144]	; (7eac <__aeabi_dsub+0x6bc>)
    7e1c:	e51a      	b.n	7854 <__aeabi_dsub+0x64>
    7e1e:	4c23      	ldr	r4, [pc, #140]	; (7eac <__aeabi_dsub+0x6bc>)
    7e20:	42a0      	cmp	r0, r4
    7e22:	d1a2      	bne.n	7d6a <__aeabi_dsub+0x57a>
    7e24:	1c17      	adds	r7, r2, #0
    7e26:	9d01      	ldr	r5, [sp, #4]
    7e28:	1c04      	adds	r4, r0, #0
    7e2a:	e513      	b.n	7854 <__aeabi_dsub+0x64>
    7e2c:	2b00      	cmp	r3, #0
    7e2e:	d035      	beq.n	7e9c <__aeabi_dsub+0x6ac>
    7e30:	1c13      	adds	r3, r2, #0
    7e32:	9901      	ldr	r1, [sp, #4]
    7e34:	430b      	orrs	r3, r1
    7e36:	d010      	beq.n	7e5a <__aeabi_dsub+0x66a>
    7e38:	2480      	movs	r4, #128	; 0x80
    7e3a:	0778      	lsls	r0, r7, #29
    7e3c:	08ed      	lsrs	r5, r5, #3
    7e3e:	08ff      	lsrs	r7, r7, #3
    7e40:	0324      	lsls	r4, r4, #12
    7e42:	4328      	orrs	r0, r5
    7e44:	4227      	tst	r7, r4
    7e46:	d0e4      	beq.n	7e12 <__aeabi_dsub+0x622>
    7e48:	08d3      	lsrs	r3, r2, #3
    7e4a:	4223      	tst	r3, r4
    7e4c:	d1e1      	bne.n	7e12 <__aeabi_dsub+0x622>
    7e4e:	08c9      	lsrs	r1, r1, #3
    7e50:	0752      	lsls	r2, r2, #29
    7e52:	430a      	orrs	r2, r1
    7e54:	1c10      	adds	r0, r2, #0
    7e56:	1c1f      	adds	r7, r3, #0
    7e58:	e7db      	b.n	7e12 <__aeabi_dsub+0x622>
    7e5a:	4c14      	ldr	r4, [pc, #80]	; (7eac <__aeabi_dsub+0x6bc>)
    7e5c:	e4fa      	b.n	7854 <__aeabi_dsub+0x64>
    7e5e:	2200      	movs	r2, #0
    7e60:	e73f      	b.n	7ce2 <__aeabi_dsub+0x4f2>
    7e62:	464c      	mov	r4, r9
    7e64:	1c3e      	adds	r6, r7, #0
    7e66:	3c20      	subs	r4, #32
    7e68:	40e6      	lsrs	r6, r4
    7e6a:	4649      	mov	r1, r9
    7e6c:	1c34      	adds	r4, r6, #0
    7e6e:	2920      	cmp	r1, #32
    7e70:	d032      	beq.n	7ed8 <__aeabi_dsub+0x6e8>
    7e72:	2640      	movs	r6, #64	; 0x40
    7e74:	1a76      	subs	r6, r6, r1
    7e76:	40b7      	lsls	r7, r6
    7e78:	433d      	orrs	r5, r7
    7e7a:	1e6f      	subs	r7, r5, #1
    7e7c:	41bd      	sbcs	r5, r7
    7e7e:	2700      	movs	r7, #0
    7e80:	4325      	orrs	r5, r4
    7e82:	e6a8      	b.n	7bd6 <__aeabi_dsub+0x3e6>
    7e84:	2780      	movs	r7, #128	; 0x80
    7e86:	2600      	movs	r6, #0
    7e88:	03ff      	lsls	r7, r7, #15
    7e8a:	4c08      	ldr	r4, [pc, #32]	; (7eac <__aeabi_dsub+0x6bc>)
    7e8c:	2500      	movs	r5, #0
    7e8e:	e57c      	b.n	798a <__aeabi_dsub+0x19a>
    7e90:	433d      	orrs	r5, r7
    7e92:	1e6f      	subs	r7, r5, #1
    7e94:	41bd      	sbcs	r5, r7
    7e96:	2700      	movs	r7, #0
    7e98:	b2ed      	uxtb	r5, r5
    7e9a:	e783      	b.n	7da4 <__aeabi_dsub+0x5b4>
    7e9c:	1c17      	adds	r7, r2, #0
    7e9e:	9d01      	ldr	r5, [sp, #4]
    7ea0:	4c02      	ldr	r4, [pc, #8]	; (7eac <__aeabi_dsub+0x6bc>)
    7ea2:	e4d7      	b.n	7854 <__aeabi_dsub+0x64>
    7ea4:	1c17      	adds	r7, r2, #0
    7ea6:	9d01      	ldr	r5, [sp, #4]
    7ea8:	e4d4      	b.n	7854 <__aeabi_dsub+0x64>
    7eaa:	46c0      	nop			; (mov r8, r8)
    7eac:	000007ff 	.word	0x000007ff
    7eb0:	ff7fffff 	.word	0xff7fffff
    7eb4:	4654      	mov	r4, sl
    7eb6:	1c3b      	adds	r3, r7, #0
    7eb8:	3c20      	subs	r4, #32
    7eba:	40e3      	lsrs	r3, r4
    7ebc:	1c1c      	adds	r4, r3, #0
    7ebe:	4653      	mov	r3, sl
    7ec0:	2b20      	cmp	r3, #32
    7ec2:	d00d      	beq.n	7ee0 <__aeabi_dsub+0x6f0>
    7ec4:	2340      	movs	r3, #64	; 0x40
    7ec6:	4651      	mov	r1, sl
    7ec8:	1a5b      	subs	r3, r3, r1
    7eca:	409f      	lsls	r7, r3
    7ecc:	433d      	orrs	r5, r7
    7ece:	1e6f      	subs	r7, r5, #1
    7ed0:	41bd      	sbcs	r5, r7
    7ed2:	2700      	movs	r7, #0
    7ed4:	4325      	orrs	r5, r4
    7ed6:	e765      	b.n	7da4 <__aeabi_dsub+0x5b4>
    7ed8:	2700      	movs	r7, #0
    7eda:	e7cd      	b.n	7e78 <__aeabi_dsub+0x688>
    7edc:	1c0d      	adds	r5, r1, #0
    7ede:	e5c8      	b.n	7a72 <__aeabi_dsub+0x282>
    7ee0:	2700      	movs	r7, #0
    7ee2:	e7f3      	b.n	7ecc <__aeabi_dsub+0x6dc>

00007ee4 <__aeabi_d2iz>:
    7ee4:	030b      	lsls	r3, r1, #12
    7ee6:	b530      	push	{r4, r5, lr}
    7ee8:	4c13      	ldr	r4, [pc, #76]	; (7f38 <__aeabi_d2iz+0x54>)
    7eea:	0b1a      	lsrs	r2, r3, #12
    7eec:	004b      	lsls	r3, r1, #1
    7eee:	1c05      	adds	r5, r0, #0
    7ef0:	0d5b      	lsrs	r3, r3, #21
    7ef2:	0fc9      	lsrs	r1, r1, #31
    7ef4:	2000      	movs	r0, #0
    7ef6:	42a3      	cmp	r3, r4
    7ef8:	dd10      	ble.n	7f1c <__aeabi_d2iz+0x38>
    7efa:	4810      	ldr	r0, [pc, #64]	; (7f3c <__aeabi_d2iz+0x58>)
    7efc:	4283      	cmp	r3, r0
    7efe:	dc0e      	bgt.n	7f1e <__aeabi_d2iz+0x3a>
    7f00:	2080      	movs	r0, #128	; 0x80
    7f02:	4c0f      	ldr	r4, [pc, #60]	; (7f40 <__aeabi_d2iz+0x5c>)
    7f04:	0340      	lsls	r0, r0, #13
    7f06:	4302      	orrs	r2, r0
    7f08:	1ae4      	subs	r4, r4, r3
    7f0a:	2c1f      	cmp	r4, #31
    7f0c:	dd0a      	ble.n	7f24 <__aeabi_d2iz+0x40>
    7f0e:	480d      	ldr	r0, [pc, #52]	; (7f44 <__aeabi_d2iz+0x60>)
    7f10:	1ac3      	subs	r3, r0, r3
    7f12:	40da      	lsrs	r2, r3
    7f14:	1c13      	adds	r3, r2, #0
    7f16:	4248      	negs	r0, r1
    7f18:	4043      	eors	r3, r0
    7f1a:	1858      	adds	r0, r3, r1
    7f1c:	bd30      	pop	{r4, r5, pc}
    7f1e:	4b0a      	ldr	r3, [pc, #40]	; (7f48 <__aeabi_d2iz+0x64>)
    7f20:	18c8      	adds	r0, r1, r3
    7f22:	e7fb      	b.n	7f1c <__aeabi_d2iz+0x38>
    7f24:	1c28      	adds	r0, r5, #0
    7f26:	40e0      	lsrs	r0, r4
    7f28:	4c08      	ldr	r4, [pc, #32]	; (7f4c <__aeabi_d2iz+0x68>)
    7f2a:	46a4      	mov	ip, r4
    7f2c:	4463      	add	r3, ip
    7f2e:	409a      	lsls	r2, r3
    7f30:	1c13      	adds	r3, r2, #0
    7f32:	4303      	orrs	r3, r0
    7f34:	e7ef      	b.n	7f16 <__aeabi_d2iz+0x32>
    7f36:	46c0      	nop			; (mov r8, r8)
    7f38:	000003fe 	.word	0x000003fe
    7f3c:	0000041d 	.word	0x0000041d
    7f40:	00000433 	.word	0x00000433
    7f44:	00000413 	.word	0x00000413
    7f48:	7fffffff 	.word	0x7fffffff
    7f4c:	fffffbed 	.word	0xfffffbed

00007f50 <__aeabi_i2d>:
    7f50:	b538      	push	{r3, r4, r5, lr}
    7f52:	1e04      	subs	r4, r0, #0
    7f54:	d016      	beq.n	7f84 <__aeabi_i2d+0x34>
    7f56:	0fc5      	lsrs	r5, r0, #31
    7f58:	d000      	beq.n	7f5c <__aeabi_i2d+0xc>
    7f5a:	4244      	negs	r4, r0
    7f5c:	1c20      	adds	r0, r4, #0
    7f5e:	f000 f949 	bl	81f4 <__clzsi2>
    7f62:	4b17      	ldr	r3, [pc, #92]	; (7fc0 <__aeabi_i2d+0x70>)
    7f64:	1a1b      	subs	r3, r3, r0
    7f66:	280a      	cmp	r0, #10
    7f68:	dc21      	bgt.n	7fae <__aeabi_i2d+0x5e>
    7f6a:	1c02      	adds	r2, r0, #0
    7f6c:	1c21      	adds	r1, r4, #0
    7f6e:	3215      	adds	r2, #21
    7f70:	4091      	lsls	r1, r2
    7f72:	1c0a      	adds	r2, r1, #0
    7f74:	210b      	movs	r1, #11
    7f76:	1a08      	subs	r0, r1, r0
    7f78:	40c4      	lsrs	r4, r0
    7f7a:	055b      	lsls	r3, r3, #21
    7f7c:	0324      	lsls	r4, r4, #12
    7f7e:	0b24      	lsrs	r4, r4, #12
    7f80:	0d5b      	lsrs	r3, r3, #21
    7f82:	e003      	b.n	7f8c <__aeabi_i2d+0x3c>
    7f84:	2500      	movs	r5, #0
    7f86:	2300      	movs	r3, #0
    7f88:	2400      	movs	r4, #0
    7f8a:	2200      	movs	r2, #0
    7f8c:	2100      	movs	r1, #0
    7f8e:	1c10      	adds	r0, r2, #0
    7f90:	0324      	lsls	r4, r4, #12
    7f92:	0d0a      	lsrs	r2, r1, #20
    7f94:	0512      	lsls	r2, r2, #20
    7f96:	0b24      	lsrs	r4, r4, #12
    7f98:	4314      	orrs	r4, r2
    7f9a:	4a0a      	ldr	r2, [pc, #40]	; (7fc4 <__aeabi_i2d+0x74>)
    7f9c:	051b      	lsls	r3, r3, #20
    7f9e:	4014      	ands	r4, r2
    7fa0:	431c      	orrs	r4, r3
    7fa2:	0064      	lsls	r4, r4, #1
    7fa4:	07ed      	lsls	r5, r5, #31
    7fa6:	0864      	lsrs	r4, r4, #1
    7fa8:	432c      	orrs	r4, r5
    7faa:	1c21      	adds	r1, r4, #0
    7fac:	bd38      	pop	{r3, r4, r5, pc}
    7fae:	380b      	subs	r0, #11
    7fb0:	4084      	lsls	r4, r0
    7fb2:	055b      	lsls	r3, r3, #21
    7fb4:	0324      	lsls	r4, r4, #12
    7fb6:	0b24      	lsrs	r4, r4, #12
    7fb8:	0d5b      	lsrs	r3, r3, #21
    7fba:	2200      	movs	r2, #0
    7fbc:	e7e6      	b.n	7f8c <__aeabi_i2d+0x3c>
    7fbe:	46c0      	nop			; (mov r8, r8)
    7fc0:	0000041e 	.word	0x0000041e
    7fc4:	800fffff 	.word	0x800fffff

00007fc8 <__aeabi_ui2d>:
    7fc8:	b510      	push	{r4, lr}
    7fca:	1e04      	subs	r4, r0, #0
    7fcc:	d010      	beq.n	7ff0 <__aeabi_ui2d+0x28>
    7fce:	f000 f911 	bl	81f4 <__clzsi2>
    7fd2:	4a14      	ldr	r2, [pc, #80]	; (8024 <__aeabi_ui2d+0x5c>)
    7fd4:	1a12      	subs	r2, r2, r0
    7fd6:	280a      	cmp	r0, #10
    7fd8:	dc1a      	bgt.n	8010 <__aeabi_ui2d+0x48>
    7fda:	230b      	movs	r3, #11
    7fdc:	1c21      	adds	r1, r4, #0
    7fde:	1a1b      	subs	r3, r3, r0
    7fe0:	40d9      	lsrs	r1, r3
    7fe2:	3015      	adds	r0, #21
    7fe4:	030b      	lsls	r3, r1, #12
    7fe6:	0552      	lsls	r2, r2, #21
    7fe8:	4084      	lsls	r4, r0
    7fea:	0b1b      	lsrs	r3, r3, #12
    7fec:	0d52      	lsrs	r2, r2, #21
    7fee:	e001      	b.n	7ff4 <__aeabi_ui2d+0x2c>
    7ff0:	2200      	movs	r2, #0
    7ff2:	2300      	movs	r3, #0
    7ff4:	2100      	movs	r1, #0
    7ff6:	031b      	lsls	r3, r3, #12
    7ff8:	1c20      	adds	r0, r4, #0
    7ffa:	0b1c      	lsrs	r4, r3, #12
    7ffc:	0d0b      	lsrs	r3, r1, #20
    7ffe:	051b      	lsls	r3, r3, #20
    8000:	4323      	orrs	r3, r4
    8002:	4c09      	ldr	r4, [pc, #36]	; (8028 <__aeabi_ui2d+0x60>)
    8004:	0512      	lsls	r2, r2, #20
    8006:	4023      	ands	r3, r4
    8008:	4313      	orrs	r3, r2
    800a:	005b      	lsls	r3, r3, #1
    800c:	0859      	lsrs	r1, r3, #1
    800e:	bd10      	pop	{r4, pc}
    8010:	1c03      	adds	r3, r0, #0
    8012:	3b0b      	subs	r3, #11
    8014:	409c      	lsls	r4, r3
    8016:	0552      	lsls	r2, r2, #21
    8018:	0323      	lsls	r3, r4, #12
    801a:	0b1b      	lsrs	r3, r3, #12
    801c:	0d52      	lsrs	r2, r2, #21
    801e:	2400      	movs	r4, #0
    8020:	e7e8      	b.n	7ff4 <__aeabi_ui2d+0x2c>
    8022:	46c0      	nop			; (mov r8, r8)
    8024:	0000041e 	.word	0x0000041e
    8028:	800fffff 	.word	0x800fffff

0000802c <__aeabi_f2d>:
    802c:	0042      	lsls	r2, r0, #1
    802e:	0e12      	lsrs	r2, r2, #24
    8030:	1c51      	adds	r1, r2, #1
    8032:	b538      	push	{r3, r4, r5, lr}
    8034:	b2c9      	uxtb	r1, r1
    8036:	0243      	lsls	r3, r0, #9
    8038:	0a5d      	lsrs	r5, r3, #9
    803a:	0fc4      	lsrs	r4, r0, #31
    803c:	2901      	cmp	r1, #1
    803e:	dd15      	ble.n	806c <__aeabi_f2d+0x40>
    8040:	21e0      	movs	r1, #224	; 0xe0
    8042:	0089      	lsls	r1, r1, #2
    8044:	468c      	mov	ip, r1
    8046:	076d      	lsls	r5, r5, #29
    8048:	0b1b      	lsrs	r3, r3, #12
    804a:	4462      	add	r2, ip
    804c:	2100      	movs	r1, #0
    804e:	1c28      	adds	r0, r5, #0
    8050:	0d0d      	lsrs	r5, r1, #20
    8052:	052d      	lsls	r5, r5, #20
    8054:	432b      	orrs	r3, r5
    8056:	4d1c      	ldr	r5, [pc, #112]	; (80c8 <__aeabi_f2d+0x9c>)
    8058:	0552      	lsls	r2, r2, #21
    805a:	402b      	ands	r3, r5
    805c:	0852      	lsrs	r2, r2, #1
    805e:	4313      	orrs	r3, r2
    8060:	005b      	lsls	r3, r3, #1
    8062:	07e4      	lsls	r4, r4, #31
    8064:	085b      	lsrs	r3, r3, #1
    8066:	4323      	orrs	r3, r4
    8068:	1c19      	adds	r1, r3, #0
    806a:	bd38      	pop	{r3, r4, r5, pc}
    806c:	2a00      	cmp	r2, #0
    806e:	d115      	bne.n	809c <__aeabi_f2d+0x70>
    8070:	2d00      	cmp	r5, #0
    8072:	d01f      	beq.n	80b4 <__aeabi_f2d+0x88>
    8074:	1c28      	adds	r0, r5, #0
    8076:	f000 f8bd 	bl	81f4 <__clzsi2>
    807a:	280a      	cmp	r0, #10
    807c:	dc1d      	bgt.n	80ba <__aeabi_f2d+0x8e>
    807e:	230b      	movs	r3, #11
    8080:	1c2a      	adds	r2, r5, #0
    8082:	1a1b      	subs	r3, r3, r0
    8084:	40da      	lsrs	r2, r3
    8086:	1c13      	adds	r3, r2, #0
    8088:	1c02      	adds	r2, r0, #0
    808a:	3215      	adds	r2, #21
    808c:	4095      	lsls	r5, r2
    808e:	4a0f      	ldr	r2, [pc, #60]	; (80cc <__aeabi_f2d+0xa0>)
    8090:	031b      	lsls	r3, r3, #12
    8092:	1a12      	subs	r2, r2, r0
    8094:	0552      	lsls	r2, r2, #21
    8096:	0b1b      	lsrs	r3, r3, #12
    8098:	0d52      	lsrs	r2, r2, #21
    809a:	e7d7      	b.n	804c <__aeabi_f2d+0x20>
    809c:	2d00      	cmp	r5, #0
    809e:	d006      	beq.n	80ae <__aeabi_f2d+0x82>
    80a0:	2280      	movs	r2, #128	; 0x80
    80a2:	0b1b      	lsrs	r3, r3, #12
    80a4:	0312      	lsls	r2, r2, #12
    80a6:	4313      	orrs	r3, r2
    80a8:	076d      	lsls	r5, r5, #29
    80aa:	4a09      	ldr	r2, [pc, #36]	; (80d0 <__aeabi_f2d+0xa4>)
    80ac:	e7ce      	b.n	804c <__aeabi_f2d+0x20>
    80ae:	4a08      	ldr	r2, [pc, #32]	; (80d0 <__aeabi_f2d+0xa4>)
    80b0:	2300      	movs	r3, #0
    80b2:	e7cb      	b.n	804c <__aeabi_f2d+0x20>
    80b4:	2200      	movs	r2, #0
    80b6:	2300      	movs	r3, #0
    80b8:	e7c8      	b.n	804c <__aeabi_f2d+0x20>
    80ba:	1c03      	adds	r3, r0, #0
    80bc:	3b0b      	subs	r3, #11
    80be:	409d      	lsls	r5, r3
    80c0:	1c2b      	adds	r3, r5, #0
    80c2:	2500      	movs	r5, #0
    80c4:	e7e3      	b.n	808e <__aeabi_f2d+0x62>
    80c6:	46c0      	nop			; (mov r8, r8)
    80c8:	800fffff 	.word	0x800fffff
    80cc:	00000389 	.word	0x00000389
    80d0:	000007ff 	.word	0x000007ff

000080d4 <__aeabi_d2f>:
    80d4:	b570      	push	{r4, r5, r6, lr}
    80d6:	030b      	lsls	r3, r1, #12
    80d8:	004d      	lsls	r5, r1, #1
    80da:	0f44      	lsrs	r4, r0, #29
    80dc:	0d6d      	lsrs	r5, r5, #21
    80de:	0a5b      	lsrs	r3, r3, #9
    80e0:	4323      	orrs	r3, r4
    80e2:	1c6c      	adds	r4, r5, #1
    80e4:	0564      	lsls	r4, r4, #21
    80e6:	0fc9      	lsrs	r1, r1, #31
    80e8:	00c2      	lsls	r2, r0, #3
    80ea:	0d64      	lsrs	r4, r4, #21
    80ec:	2c01      	cmp	r4, #1
    80ee:	dd2a      	ble.n	8146 <__aeabi_d2f+0x72>
    80f0:	4c3b      	ldr	r4, [pc, #236]	; (81e0 <__aeabi_d2f+0x10c>)
    80f2:	192c      	adds	r4, r5, r4
    80f4:	2cfe      	cmp	r4, #254	; 0xfe
    80f6:	dc1a      	bgt.n	812e <__aeabi_d2f+0x5a>
    80f8:	2c00      	cmp	r4, #0
    80fa:	dd35      	ble.n	8168 <__aeabi_d2f+0x94>
    80fc:	0180      	lsls	r0, r0, #6
    80fe:	1e45      	subs	r5, r0, #1
    8100:	41a8      	sbcs	r0, r5
    8102:	00db      	lsls	r3, r3, #3
    8104:	4303      	orrs	r3, r0
    8106:	0f52      	lsrs	r2, r2, #29
    8108:	4313      	orrs	r3, r2
    810a:	075a      	lsls	r2, r3, #29
    810c:	d004      	beq.n	8118 <__aeabi_d2f+0x44>
    810e:	220f      	movs	r2, #15
    8110:	401a      	ands	r2, r3
    8112:	2a04      	cmp	r2, #4
    8114:	d000      	beq.n	8118 <__aeabi_d2f+0x44>
    8116:	3304      	adds	r3, #4
    8118:	2280      	movs	r2, #128	; 0x80
    811a:	04d2      	lsls	r2, r2, #19
    811c:	401a      	ands	r2, r3
    811e:	d027      	beq.n	8170 <__aeabi_d2f+0x9c>
    8120:	3401      	adds	r4, #1
    8122:	2cff      	cmp	r4, #255	; 0xff
    8124:	d003      	beq.n	812e <__aeabi_d2f+0x5a>
    8126:	019b      	lsls	r3, r3, #6
    8128:	0a5b      	lsrs	r3, r3, #9
    812a:	b2e4      	uxtb	r4, r4
    812c:	e001      	b.n	8132 <__aeabi_d2f+0x5e>
    812e:	24ff      	movs	r4, #255	; 0xff
    8130:	2300      	movs	r3, #0
    8132:	025b      	lsls	r3, r3, #9
    8134:	05e4      	lsls	r4, r4, #23
    8136:	0a5b      	lsrs	r3, r3, #9
    8138:	4323      	orrs	r3, r4
    813a:	005b      	lsls	r3, r3, #1
    813c:	07c9      	lsls	r1, r1, #31
    813e:	085b      	lsrs	r3, r3, #1
    8140:	430b      	orrs	r3, r1
    8142:	1c18      	adds	r0, r3, #0
    8144:	bd70      	pop	{r4, r5, r6, pc}
    8146:	2d00      	cmp	r5, #0
    8148:	d106      	bne.n	8158 <__aeabi_d2f+0x84>
    814a:	4313      	orrs	r3, r2
    814c:	d10e      	bne.n	816c <__aeabi_d2f+0x98>
    814e:	2400      	movs	r4, #0
    8150:	025b      	lsls	r3, r3, #9
    8152:	0a5b      	lsrs	r3, r3, #9
    8154:	b2e4      	uxtb	r4, r4
    8156:	e7ec      	b.n	8132 <__aeabi_d2f+0x5e>
    8158:	431a      	orrs	r2, r3
    815a:	d0e8      	beq.n	812e <__aeabi_d2f+0x5a>
    815c:	2080      	movs	r0, #128	; 0x80
    815e:	00db      	lsls	r3, r3, #3
    8160:	0480      	lsls	r0, r0, #18
    8162:	4303      	orrs	r3, r0
    8164:	24ff      	movs	r4, #255	; 0xff
    8166:	e7d0      	b.n	810a <__aeabi_d2f+0x36>
    8168:	3417      	adds	r4, #23
    816a:	da0c      	bge.n	8186 <__aeabi_d2f+0xb2>
    816c:	2305      	movs	r3, #5
    816e:	2400      	movs	r4, #0
    8170:	08db      	lsrs	r3, r3, #3
    8172:	2cff      	cmp	r4, #255	; 0xff
    8174:	d1ec      	bne.n	8150 <__aeabi_d2f+0x7c>
    8176:	2b00      	cmp	r3, #0
    8178:	d02d      	beq.n	81d6 <__aeabi_d2f+0x102>
    817a:	2280      	movs	r2, #128	; 0x80
    817c:	03d2      	lsls	r2, r2, #15
    817e:	4313      	orrs	r3, r2
    8180:	025b      	lsls	r3, r3, #9
    8182:	0a5b      	lsrs	r3, r3, #9
    8184:	e7d5      	b.n	8132 <__aeabi_d2f+0x5e>
    8186:	2480      	movs	r4, #128	; 0x80
    8188:	4816      	ldr	r0, [pc, #88]	; (81e4 <__aeabi_d2f+0x110>)
    818a:	0424      	lsls	r4, r4, #16
    818c:	4323      	orrs	r3, r4
    818e:	1b40      	subs	r0, r0, r5
    8190:	281f      	cmp	r0, #31
    8192:	dc0d      	bgt.n	81b0 <__aeabi_d2f+0xdc>
    8194:	4c14      	ldr	r4, [pc, #80]	; (81e8 <__aeabi_d2f+0x114>)
    8196:	46a4      	mov	ip, r4
    8198:	4465      	add	r5, ip
    819a:	40ab      	lsls	r3, r5
    819c:	1c1c      	adds	r4, r3, #0
    819e:	1c13      	adds	r3, r2, #0
    81a0:	40ab      	lsls	r3, r5
    81a2:	1e5d      	subs	r5, r3, #1
    81a4:	41ab      	sbcs	r3, r5
    81a6:	40c2      	lsrs	r2, r0
    81a8:	4323      	orrs	r3, r4
    81aa:	4313      	orrs	r3, r2
    81ac:	2400      	movs	r4, #0
    81ae:	e7ac      	b.n	810a <__aeabi_d2f+0x36>
    81b0:	1c1e      	adds	r6, r3, #0
    81b2:	4c0e      	ldr	r4, [pc, #56]	; (81ec <__aeabi_d2f+0x118>)
    81b4:	1b64      	subs	r4, r4, r5
    81b6:	40e6      	lsrs	r6, r4
    81b8:	1c34      	adds	r4, r6, #0
    81ba:	2820      	cmp	r0, #32
    81bc:	d00d      	beq.n	81da <__aeabi_d2f+0x106>
    81be:	480c      	ldr	r0, [pc, #48]	; (81f0 <__aeabi_d2f+0x11c>)
    81c0:	4684      	mov	ip, r0
    81c2:	4465      	add	r5, ip
    81c4:	40ab      	lsls	r3, r5
    81c6:	1c1d      	adds	r5, r3, #0
    81c8:	432a      	orrs	r2, r5
    81ca:	1e53      	subs	r3, r2, #1
    81cc:	419a      	sbcs	r2, r3
    81ce:	1c13      	adds	r3, r2, #0
    81d0:	4323      	orrs	r3, r4
    81d2:	2400      	movs	r4, #0
    81d4:	e799      	b.n	810a <__aeabi_d2f+0x36>
    81d6:	2300      	movs	r3, #0
    81d8:	e7ab      	b.n	8132 <__aeabi_d2f+0x5e>
    81da:	2500      	movs	r5, #0
    81dc:	e7f4      	b.n	81c8 <__aeabi_d2f+0xf4>
    81de:	46c0      	nop			; (mov r8, r8)
    81e0:	fffffc80 	.word	0xfffffc80
    81e4:	0000039e 	.word	0x0000039e
    81e8:	fffffc82 	.word	0xfffffc82
    81ec:	0000037e 	.word	0x0000037e
    81f0:	fffffca2 	.word	0xfffffca2

000081f4 <__clzsi2>:
    81f4:	211c      	movs	r1, #28
    81f6:	2301      	movs	r3, #1
    81f8:	041b      	lsls	r3, r3, #16
    81fa:	4298      	cmp	r0, r3
    81fc:	d301      	bcc.n	8202 <__clzsi2+0xe>
    81fe:	0c00      	lsrs	r0, r0, #16
    8200:	3910      	subs	r1, #16
    8202:	0a1b      	lsrs	r3, r3, #8
    8204:	4298      	cmp	r0, r3
    8206:	d301      	bcc.n	820c <__clzsi2+0x18>
    8208:	0a00      	lsrs	r0, r0, #8
    820a:	3908      	subs	r1, #8
    820c:	091b      	lsrs	r3, r3, #4
    820e:	4298      	cmp	r0, r3
    8210:	d301      	bcc.n	8216 <__clzsi2+0x22>
    8212:	0900      	lsrs	r0, r0, #4
    8214:	3904      	subs	r1, #4
    8216:	a202      	add	r2, pc, #8	; (adr r2, 8220 <__clzsi2+0x2c>)
    8218:	5c10      	ldrb	r0, [r2, r0]
    821a:	1840      	adds	r0, r0, r1
    821c:	4770      	bx	lr
    821e:	46c0      	nop			; (mov r8, r8)
    8220:	02020304 	.word	0x02020304
    8224:	01010101 	.word	0x01010101
	...

00008230 <__cxa_atexit>:
    8230:	4b05      	ldr	r3, [pc, #20]	; (8248 <__cxa_atexit+0x18>)
    8232:	b510      	push	{r4, lr}
    8234:	1c04      	adds	r4, r0, #0
    8236:	1e18      	subs	r0, r3, #0
    8238:	d005      	beq.n	8246 <__cxa_atexit+0x16>
    823a:	1c13      	adds	r3, r2, #0
    823c:	2002      	movs	r0, #2
    823e:	1c0a      	adds	r2, r1, #0
    8240:	1c21      	adds	r1, r4, #0
    8242:	e000      	b.n	8246 <__cxa_atexit+0x16>
    8244:	bf00      	nop
    8246:	bd10      	pop	{r4, pc}
    8248:	00000000 	.word	0x00000000

0000824c <__errno>:
    824c:	4b01      	ldr	r3, [pc, #4]	; (8254 <__errno+0x8>)
    824e:	6818      	ldr	r0, [r3, #0]
    8250:	4770      	bx	lr
    8252:	46c0      	nop			; (mov r8, r8)
    8254:	20000134 	.word	0x20000134

00008258 <exit>:
    8258:	4b08      	ldr	r3, [pc, #32]	; (827c <exit+0x24>)
    825a:	b510      	push	{r4, lr}
    825c:	1c04      	adds	r4, r0, #0
    825e:	2b00      	cmp	r3, #0
    8260:	d002      	beq.n	8268 <exit+0x10>
    8262:	2100      	movs	r1, #0
    8264:	e000      	b.n	8268 <exit+0x10>
    8266:	bf00      	nop
    8268:	4b05      	ldr	r3, [pc, #20]	; (8280 <exit+0x28>)
    826a:	6818      	ldr	r0, [r3, #0]
    826c:	6a83      	ldr	r3, [r0, #40]	; 0x28
    826e:	2b00      	cmp	r3, #0
    8270:	d000      	beq.n	8274 <exit+0x1c>
    8272:	4798      	blx	r3
    8274:	1c20      	adds	r0, r4, #0
    8276:	f7fa fd05 	bl	2c84 <_exit>
    827a:	46c0      	nop			; (mov r8, r8)
    827c:	00000000 	.word	0x00000000
    8280:	0000e404 	.word	0x0000e404

00008284 <_fclose_r>:
    8284:	b570      	push	{r4, r5, r6, lr}
    8286:	1c05      	adds	r5, r0, #0
    8288:	1e0c      	subs	r4, r1, #0
    828a:	d101      	bne.n	8290 <_fclose_r+0xc>
    828c:	2000      	movs	r0, #0
    828e:	e049      	b.n	8324 <_fclose_r+0xa0>
    8290:	2800      	cmp	r0, #0
    8292:	d004      	beq.n	829e <_fclose_r+0x1a>
    8294:	6983      	ldr	r3, [r0, #24]
    8296:	2b00      	cmp	r3, #0
    8298:	d101      	bne.n	829e <_fclose_r+0x1a>
    829a:	f000 f961 	bl	8560 <__sinit>
    829e:	4b22      	ldr	r3, [pc, #136]	; (8328 <_fclose_r+0xa4>)
    82a0:	429c      	cmp	r4, r3
    82a2:	d101      	bne.n	82a8 <_fclose_r+0x24>
    82a4:	686c      	ldr	r4, [r5, #4]
    82a6:	e008      	b.n	82ba <_fclose_r+0x36>
    82a8:	4b20      	ldr	r3, [pc, #128]	; (832c <_fclose_r+0xa8>)
    82aa:	429c      	cmp	r4, r3
    82ac:	d101      	bne.n	82b2 <_fclose_r+0x2e>
    82ae:	68ac      	ldr	r4, [r5, #8]
    82b0:	e003      	b.n	82ba <_fclose_r+0x36>
    82b2:	4b1f      	ldr	r3, [pc, #124]	; (8330 <_fclose_r+0xac>)
    82b4:	429c      	cmp	r4, r3
    82b6:	d100      	bne.n	82ba <_fclose_r+0x36>
    82b8:	68ec      	ldr	r4, [r5, #12]
    82ba:	220c      	movs	r2, #12
    82bc:	5ea3      	ldrsh	r3, [r4, r2]
    82be:	2b00      	cmp	r3, #0
    82c0:	d0e4      	beq.n	828c <_fclose_r+0x8>
    82c2:	1c28      	adds	r0, r5, #0
    82c4:	1c21      	adds	r1, r4, #0
    82c6:	f000 f83f 	bl	8348 <__sflush_r>
    82ca:	6b23      	ldr	r3, [r4, #48]	; 0x30
    82cc:	1c06      	adds	r6, r0, #0
    82ce:	2b00      	cmp	r3, #0
    82d0:	d006      	beq.n	82e0 <_fclose_r+0x5c>
    82d2:	1c28      	adds	r0, r5, #0
    82d4:	6a21      	ldr	r1, [r4, #32]
    82d6:	4798      	blx	r3
    82d8:	2800      	cmp	r0, #0
    82da:	da01      	bge.n	82e0 <_fclose_r+0x5c>
    82dc:	2601      	movs	r6, #1
    82de:	4276      	negs	r6, r6
    82e0:	89a3      	ldrh	r3, [r4, #12]
    82e2:	061b      	lsls	r3, r3, #24
    82e4:	d503      	bpl.n	82ee <_fclose_r+0x6a>
    82e6:	1c28      	adds	r0, r5, #0
    82e8:	6921      	ldr	r1, [r4, #16]
    82ea:	f000 fb61 	bl	89b0 <_free_r>
    82ee:	6b61      	ldr	r1, [r4, #52]	; 0x34
    82f0:	2900      	cmp	r1, #0
    82f2:	d008      	beq.n	8306 <_fclose_r+0x82>
    82f4:	1c23      	adds	r3, r4, #0
    82f6:	3344      	adds	r3, #68	; 0x44
    82f8:	4299      	cmp	r1, r3
    82fa:	d002      	beq.n	8302 <_fclose_r+0x7e>
    82fc:	1c28      	adds	r0, r5, #0
    82fe:	f000 fb57 	bl	89b0 <_free_r>
    8302:	2300      	movs	r3, #0
    8304:	6363      	str	r3, [r4, #52]	; 0x34
    8306:	6ca1      	ldr	r1, [r4, #72]	; 0x48
    8308:	2900      	cmp	r1, #0
    830a:	d004      	beq.n	8316 <_fclose_r+0x92>
    830c:	1c28      	adds	r0, r5, #0
    830e:	f000 fb4f 	bl	89b0 <_free_r>
    8312:	2300      	movs	r3, #0
    8314:	64a3      	str	r3, [r4, #72]	; 0x48
    8316:	f000 f993 	bl	8640 <__sfp_lock_acquire>
    831a:	2300      	movs	r3, #0
    831c:	81a3      	strh	r3, [r4, #12]
    831e:	f000 f990 	bl	8642 <__sfp_lock_release>
    8322:	1c30      	adds	r0, r6, #0
    8324:	bd70      	pop	{r4, r5, r6, pc}
    8326:	46c0      	nop			; (mov r8, r8)
    8328:	0000e3a0 	.word	0x0000e3a0
    832c:	0000e3c0 	.word	0x0000e3c0
    8330:	0000e3e0 	.word	0x0000e3e0

00008334 <fclose>:
    8334:	b508      	push	{r3, lr}
    8336:	4b03      	ldr	r3, [pc, #12]	; (8344 <fclose+0x10>)
    8338:	1c01      	adds	r1, r0, #0
    833a:	6818      	ldr	r0, [r3, #0]
    833c:	f7ff ffa2 	bl	8284 <_fclose_r>
    8340:	bd08      	pop	{r3, pc}
    8342:	46c0      	nop			; (mov r8, r8)
    8344:	20000134 	.word	0x20000134

00008348 <__sflush_r>:
    8348:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    834a:	898a      	ldrh	r2, [r1, #12]
    834c:	1c05      	adds	r5, r0, #0
    834e:	1c0c      	adds	r4, r1, #0
    8350:	0713      	lsls	r3, r2, #28
    8352:	d45e      	bmi.n	8412 <__sflush_r+0xca>
    8354:	684b      	ldr	r3, [r1, #4]
    8356:	2b00      	cmp	r3, #0
    8358:	dc02      	bgt.n	8360 <__sflush_r+0x18>
    835a:	6c0b      	ldr	r3, [r1, #64]	; 0x40
    835c:	2b00      	cmp	r3, #0
    835e:	dd1a      	ble.n	8396 <__sflush_r+0x4e>
    8360:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    8362:	2f00      	cmp	r7, #0
    8364:	d017      	beq.n	8396 <__sflush_r+0x4e>
    8366:	2300      	movs	r3, #0
    8368:	682e      	ldr	r6, [r5, #0]
    836a:	602b      	str	r3, [r5, #0]
    836c:	2380      	movs	r3, #128	; 0x80
    836e:	015b      	lsls	r3, r3, #5
    8370:	401a      	ands	r2, r3
    8372:	d001      	beq.n	8378 <__sflush_r+0x30>
    8374:	6d62      	ldr	r2, [r4, #84]	; 0x54
    8376:	e015      	b.n	83a4 <__sflush_r+0x5c>
    8378:	1c28      	adds	r0, r5, #0
    837a:	6a21      	ldr	r1, [r4, #32]
    837c:	2301      	movs	r3, #1
    837e:	47b8      	blx	r7
    8380:	1c02      	adds	r2, r0, #0
    8382:	1c43      	adds	r3, r0, #1
    8384:	d10e      	bne.n	83a4 <__sflush_r+0x5c>
    8386:	682b      	ldr	r3, [r5, #0]
    8388:	2b00      	cmp	r3, #0
    838a:	d00b      	beq.n	83a4 <__sflush_r+0x5c>
    838c:	2b1d      	cmp	r3, #29
    838e:	d001      	beq.n	8394 <__sflush_r+0x4c>
    8390:	2b16      	cmp	r3, #22
    8392:	d102      	bne.n	839a <__sflush_r+0x52>
    8394:	602e      	str	r6, [r5, #0]
    8396:	2000      	movs	r0, #0
    8398:	e05e      	b.n	8458 <__sflush_r+0x110>
    839a:	2140      	movs	r1, #64	; 0x40
    839c:	89a3      	ldrh	r3, [r4, #12]
    839e:	430b      	orrs	r3, r1
    83a0:	81a3      	strh	r3, [r4, #12]
    83a2:	e059      	b.n	8458 <__sflush_r+0x110>
    83a4:	89a3      	ldrh	r3, [r4, #12]
    83a6:	075b      	lsls	r3, r3, #29
    83a8:	d506      	bpl.n	83b8 <__sflush_r+0x70>
    83aa:	6863      	ldr	r3, [r4, #4]
    83ac:	1ad2      	subs	r2, r2, r3
    83ae:	6b63      	ldr	r3, [r4, #52]	; 0x34
    83b0:	2b00      	cmp	r3, #0
    83b2:	d001      	beq.n	83b8 <__sflush_r+0x70>
    83b4:	6c23      	ldr	r3, [r4, #64]	; 0x40
    83b6:	1ad2      	subs	r2, r2, r3
    83b8:	2300      	movs	r3, #0
    83ba:	1c28      	adds	r0, r5, #0
    83bc:	6a21      	ldr	r1, [r4, #32]
    83be:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    83c0:	47b8      	blx	r7
    83c2:	89a3      	ldrh	r3, [r4, #12]
    83c4:	1c42      	adds	r2, r0, #1
    83c6:	d106      	bne.n	83d6 <__sflush_r+0x8e>
    83c8:	682a      	ldr	r2, [r5, #0]
    83ca:	2a00      	cmp	r2, #0
    83cc:	d003      	beq.n	83d6 <__sflush_r+0x8e>
    83ce:	2a1d      	cmp	r2, #29
    83d0:	d001      	beq.n	83d6 <__sflush_r+0x8e>
    83d2:	2a16      	cmp	r2, #22
    83d4:	d119      	bne.n	840a <__sflush_r+0xc2>
    83d6:	2200      	movs	r2, #0
    83d8:	6062      	str	r2, [r4, #4]
    83da:	6922      	ldr	r2, [r4, #16]
    83dc:	6022      	str	r2, [r4, #0]
    83de:	04db      	lsls	r3, r3, #19
    83e0:	d505      	bpl.n	83ee <__sflush_r+0xa6>
    83e2:	1c43      	adds	r3, r0, #1
    83e4:	d102      	bne.n	83ec <__sflush_r+0xa4>
    83e6:	682b      	ldr	r3, [r5, #0]
    83e8:	2b00      	cmp	r3, #0
    83ea:	d100      	bne.n	83ee <__sflush_r+0xa6>
    83ec:	6560      	str	r0, [r4, #84]	; 0x54
    83ee:	6b61      	ldr	r1, [r4, #52]	; 0x34
    83f0:	602e      	str	r6, [r5, #0]
    83f2:	2900      	cmp	r1, #0
    83f4:	d0cf      	beq.n	8396 <__sflush_r+0x4e>
    83f6:	1c23      	adds	r3, r4, #0
    83f8:	3344      	adds	r3, #68	; 0x44
    83fa:	4299      	cmp	r1, r3
    83fc:	d002      	beq.n	8404 <__sflush_r+0xbc>
    83fe:	1c28      	adds	r0, r5, #0
    8400:	f000 fad6 	bl	89b0 <_free_r>
    8404:	2000      	movs	r0, #0
    8406:	6360      	str	r0, [r4, #52]	; 0x34
    8408:	e026      	b.n	8458 <__sflush_r+0x110>
    840a:	2240      	movs	r2, #64	; 0x40
    840c:	4313      	orrs	r3, r2
    840e:	81a3      	strh	r3, [r4, #12]
    8410:	e022      	b.n	8458 <__sflush_r+0x110>
    8412:	690f      	ldr	r7, [r1, #16]
    8414:	2f00      	cmp	r7, #0
    8416:	d0be      	beq.n	8396 <__sflush_r+0x4e>
    8418:	680b      	ldr	r3, [r1, #0]
    841a:	600f      	str	r7, [r1, #0]
    841c:	1bdb      	subs	r3, r3, r7
    841e:	9301      	str	r3, [sp, #4]
    8420:	2300      	movs	r3, #0
    8422:	0792      	lsls	r2, r2, #30
    8424:	d100      	bne.n	8428 <__sflush_r+0xe0>
    8426:	694b      	ldr	r3, [r1, #20]
    8428:	60a3      	str	r3, [r4, #8]
    842a:	9b01      	ldr	r3, [sp, #4]
    842c:	2b00      	cmp	r3, #0
    842e:	ddb2      	ble.n	8396 <__sflush_r+0x4e>
    8430:	1c28      	adds	r0, r5, #0
    8432:	6a21      	ldr	r1, [r4, #32]
    8434:	1c3a      	adds	r2, r7, #0
    8436:	9b01      	ldr	r3, [sp, #4]
    8438:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    843a:	47b0      	blx	r6
    843c:	2800      	cmp	r0, #0
    843e:	dc06      	bgt.n	844e <__sflush_r+0x106>
    8440:	2240      	movs	r2, #64	; 0x40
    8442:	2001      	movs	r0, #1
    8444:	89a3      	ldrh	r3, [r4, #12]
    8446:	4240      	negs	r0, r0
    8448:	4313      	orrs	r3, r2
    844a:	81a3      	strh	r3, [r4, #12]
    844c:	e004      	b.n	8458 <__sflush_r+0x110>
    844e:	9b01      	ldr	r3, [sp, #4]
    8450:	183f      	adds	r7, r7, r0
    8452:	1a1b      	subs	r3, r3, r0
    8454:	9301      	str	r3, [sp, #4]
    8456:	e7e8      	b.n	842a <__sflush_r+0xe2>
    8458:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

0000845c <_fflush_r>:
    845c:	b538      	push	{r3, r4, r5, lr}
    845e:	690b      	ldr	r3, [r1, #16]
    8460:	1c05      	adds	r5, r0, #0
    8462:	1c0c      	adds	r4, r1, #0
    8464:	2b00      	cmp	r3, #0
    8466:	d101      	bne.n	846c <_fflush_r+0x10>
    8468:	2000      	movs	r0, #0
    846a:	e01c      	b.n	84a6 <_fflush_r+0x4a>
    846c:	2800      	cmp	r0, #0
    846e:	d004      	beq.n	847a <_fflush_r+0x1e>
    8470:	6983      	ldr	r3, [r0, #24]
    8472:	2b00      	cmp	r3, #0
    8474:	d101      	bne.n	847a <_fflush_r+0x1e>
    8476:	f000 f873 	bl	8560 <__sinit>
    847a:	4b0b      	ldr	r3, [pc, #44]	; (84a8 <_fflush_r+0x4c>)
    847c:	429c      	cmp	r4, r3
    847e:	d101      	bne.n	8484 <_fflush_r+0x28>
    8480:	686c      	ldr	r4, [r5, #4]
    8482:	e008      	b.n	8496 <_fflush_r+0x3a>
    8484:	4b09      	ldr	r3, [pc, #36]	; (84ac <_fflush_r+0x50>)
    8486:	429c      	cmp	r4, r3
    8488:	d101      	bne.n	848e <_fflush_r+0x32>
    848a:	68ac      	ldr	r4, [r5, #8]
    848c:	e003      	b.n	8496 <_fflush_r+0x3a>
    848e:	4b08      	ldr	r3, [pc, #32]	; (84b0 <_fflush_r+0x54>)
    8490:	429c      	cmp	r4, r3
    8492:	d100      	bne.n	8496 <_fflush_r+0x3a>
    8494:	68ec      	ldr	r4, [r5, #12]
    8496:	220c      	movs	r2, #12
    8498:	5ea3      	ldrsh	r3, [r4, r2]
    849a:	2b00      	cmp	r3, #0
    849c:	d0e4      	beq.n	8468 <_fflush_r+0xc>
    849e:	1c28      	adds	r0, r5, #0
    84a0:	1c21      	adds	r1, r4, #0
    84a2:	f7ff ff51 	bl	8348 <__sflush_r>
    84a6:	bd38      	pop	{r3, r4, r5, pc}
    84a8:	0000e3a0 	.word	0x0000e3a0
    84ac:	0000e3c0 	.word	0x0000e3c0
    84b0:	0000e3e0 	.word	0x0000e3e0

000084b4 <fflush>:
    84b4:	b508      	push	{r3, lr}
    84b6:	1e01      	subs	r1, r0, #0
    84b8:	d105      	bne.n	84c6 <fflush+0x12>
    84ba:	4b05      	ldr	r3, [pc, #20]	; (84d0 <fflush+0x1c>)
    84bc:	4905      	ldr	r1, [pc, #20]	; (84d4 <fflush+0x20>)
    84be:	6818      	ldr	r0, [r3, #0]
    84c0:	f000 f9a6 	bl	8810 <_fwalk_reent>
    84c4:	e003      	b.n	84ce <fflush+0x1a>
    84c6:	4b04      	ldr	r3, [pc, #16]	; (84d8 <fflush+0x24>)
    84c8:	6818      	ldr	r0, [r3, #0]
    84ca:	f7ff ffc7 	bl	845c <_fflush_r>
    84ce:	bd08      	pop	{r3, pc}
    84d0:	0000e404 	.word	0x0000e404
    84d4:	0000845d 	.word	0x0000845d
    84d8:	20000134 	.word	0x20000134

000084dc <_cleanup_r>:
    84dc:	b508      	push	{r3, lr}
    84de:	4902      	ldr	r1, [pc, #8]	; (84e8 <_cleanup_r+0xc>)
    84e0:	f000 f996 	bl	8810 <_fwalk_reent>
    84e4:	bd08      	pop	{r3, pc}
    84e6:	46c0      	nop			; (mov r8, r8)
    84e8:	0000845d 	.word	0x0000845d

000084ec <std.isra.0>:
    84ec:	2300      	movs	r3, #0
    84ee:	b510      	push	{r4, lr}
    84f0:	1c04      	adds	r4, r0, #0
    84f2:	6003      	str	r3, [r0, #0]
    84f4:	6043      	str	r3, [r0, #4]
    84f6:	6083      	str	r3, [r0, #8]
    84f8:	8181      	strh	r1, [r0, #12]
    84fa:	6643      	str	r3, [r0, #100]	; 0x64
    84fc:	81c2      	strh	r2, [r0, #14]
    84fe:	6103      	str	r3, [r0, #16]
    8500:	6143      	str	r3, [r0, #20]
    8502:	6183      	str	r3, [r0, #24]
    8504:	1c19      	adds	r1, r3, #0
    8506:	2208      	movs	r2, #8
    8508:	305c      	adds	r0, #92	; 0x5c
    850a:	f000 fa49 	bl	89a0 <memset>
    850e:	4b05      	ldr	r3, [pc, #20]	; (8524 <std.isra.0+0x38>)
    8510:	6224      	str	r4, [r4, #32]
    8512:	6263      	str	r3, [r4, #36]	; 0x24
    8514:	4b04      	ldr	r3, [pc, #16]	; (8528 <std.isra.0+0x3c>)
    8516:	62a3      	str	r3, [r4, #40]	; 0x28
    8518:	4b04      	ldr	r3, [pc, #16]	; (852c <std.isra.0+0x40>)
    851a:	62e3      	str	r3, [r4, #44]	; 0x2c
    851c:	4b04      	ldr	r3, [pc, #16]	; (8530 <std.isra.0+0x44>)
    851e:	6323      	str	r3, [r4, #48]	; 0x30
    8520:	bd10      	pop	{r4, pc}
    8522:	46c0      	nop			; (mov r8, r8)
    8524:	0000a079 	.word	0x0000a079
    8528:	0000a0a5 	.word	0x0000a0a5
    852c:	0000a0dd 	.word	0x0000a0dd
    8530:	0000a109 	.word	0x0000a109

00008534 <__sfmoreglue>:
    8534:	b570      	push	{r4, r5, r6, lr}
    8536:	2568      	movs	r5, #104	; 0x68
    8538:	1e4b      	subs	r3, r1, #1
    853a:	435d      	muls	r5, r3
    853c:	1c0e      	adds	r6, r1, #0
    853e:	1c29      	adds	r1, r5, #0
    8540:	3174      	adds	r1, #116	; 0x74
    8542:	f000 fa7b 	bl	8a3c <_malloc_r>
    8546:	1e04      	subs	r4, r0, #0
    8548:	d008      	beq.n	855c <__sfmoreglue+0x28>
    854a:	2100      	movs	r1, #0
    854c:	1c2a      	adds	r2, r5, #0
    854e:	6001      	str	r1, [r0, #0]
    8550:	6046      	str	r6, [r0, #4]
    8552:	300c      	adds	r0, #12
    8554:	60a0      	str	r0, [r4, #8]
    8556:	3268      	adds	r2, #104	; 0x68
    8558:	f000 fa22 	bl	89a0 <memset>
    855c:	1c20      	adds	r0, r4, #0
    855e:	bd70      	pop	{r4, r5, r6, pc}

00008560 <__sinit>:
    8560:	6983      	ldr	r3, [r0, #24]
    8562:	b513      	push	{r0, r1, r4, lr}
    8564:	2b00      	cmp	r3, #0
    8566:	d128      	bne.n	85ba <__sinit+0x5a>
    8568:	6483      	str	r3, [r0, #72]	; 0x48
    856a:	64c3      	str	r3, [r0, #76]	; 0x4c
    856c:	6503      	str	r3, [r0, #80]	; 0x50
    856e:	4b13      	ldr	r3, [pc, #76]	; (85bc <__sinit+0x5c>)
    8570:	4a13      	ldr	r2, [pc, #76]	; (85c0 <__sinit+0x60>)
    8572:	681b      	ldr	r3, [r3, #0]
    8574:	6282      	str	r2, [r0, #40]	; 0x28
    8576:	9301      	str	r3, [sp, #4]
    8578:	4298      	cmp	r0, r3
    857a:	d101      	bne.n	8580 <__sinit+0x20>
    857c:	2301      	movs	r3, #1
    857e:	6183      	str	r3, [r0, #24]
    8580:	1c04      	adds	r4, r0, #0
    8582:	f000 f81f 	bl	85c4 <__sfp>
    8586:	6060      	str	r0, [r4, #4]
    8588:	1c20      	adds	r0, r4, #0
    858a:	f000 f81b 	bl	85c4 <__sfp>
    858e:	60a0      	str	r0, [r4, #8]
    8590:	1c20      	adds	r0, r4, #0
    8592:	f000 f817 	bl	85c4 <__sfp>
    8596:	2104      	movs	r1, #4
    8598:	60e0      	str	r0, [r4, #12]
    859a:	2200      	movs	r2, #0
    859c:	6860      	ldr	r0, [r4, #4]
    859e:	f7ff ffa5 	bl	84ec <std.isra.0>
    85a2:	68a0      	ldr	r0, [r4, #8]
    85a4:	2109      	movs	r1, #9
    85a6:	2201      	movs	r2, #1
    85a8:	f7ff ffa0 	bl	84ec <std.isra.0>
    85ac:	68e0      	ldr	r0, [r4, #12]
    85ae:	2112      	movs	r1, #18
    85b0:	2202      	movs	r2, #2
    85b2:	f7ff ff9b 	bl	84ec <std.isra.0>
    85b6:	2301      	movs	r3, #1
    85b8:	61a3      	str	r3, [r4, #24]
    85ba:	bd13      	pop	{r0, r1, r4, pc}
    85bc:	0000e404 	.word	0x0000e404
    85c0:	000084dd 	.word	0x000084dd

000085c4 <__sfp>:
    85c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    85c6:	4b1d      	ldr	r3, [pc, #116]	; (863c <__sfp+0x78>)
    85c8:	1c06      	adds	r6, r0, #0
    85ca:	681d      	ldr	r5, [r3, #0]
    85cc:	69ab      	ldr	r3, [r5, #24]
    85ce:	2b00      	cmp	r3, #0
    85d0:	d102      	bne.n	85d8 <__sfp+0x14>
    85d2:	1c28      	adds	r0, r5, #0
    85d4:	f7ff ffc4 	bl	8560 <__sinit>
    85d8:	3548      	adds	r5, #72	; 0x48
    85da:	68ac      	ldr	r4, [r5, #8]
    85dc:	686b      	ldr	r3, [r5, #4]
    85de:	3b01      	subs	r3, #1
    85e0:	d405      	bmi.n	85ee <__sfp+0x2a>
    85e2:	220c      	movs	r2, #12
    85e4:	5ea7      	ldrsh	r7, [r4, r2]
    85e6:	2f00      	cmp	r7, #0
    85e8:	d010      	beq.n	860c <__sfp+0x48>
    85ea:	3468      	adds	r4, #104	; 0x68
    85ec:	e7f7      	b.n	85de <__sfp+0x1a>
    85ee:	682b      	ldr	r3, [r5, #0]
    85f0:	2b00      	cmp	r3, #0
    85f2:	d106      	bne.n	8602 <__sfp+0x3e>
    85f4:	1c30      	adds	r0, r6, #0
    85f6:	2104      	movs	r1, #4
    85f8:	f7ff ff9c 	bl	8534 <__sfmoreglue>
    85fc:	6028      	str	r0, [r5, #0]
    85fe:	2800      	cmp	r0, #0
    8600:	d001      	beq.n	8606 <__sfp+0x42>
    8602:	682d      	ldr	r5, [r5, #0]
    8604:	e7e9      	b.n	85da <__sfp+0x16>
    8606:	230c      	movs	r3, #12
    8608:	6033      	str	r3, [r6, #0]
    860a:	e016      	b.n	863a <__sfp+0x76>
    860c:	2301      	movs	r3, #1
    860e:	1c20      	adds	r0, r4, #0
    8610:	425b      	negs	r3, r3
    8612:	81e3      	strh	r3, [r4, #14]
    8614:	3302      	adds	r3, #2
    8616:	81a3      	strh	r3, [r4, #12]
    8618:	6667      	str	r7, [r4, #100]	; 0x64
    861a:	6027      	str	r7, [r4, #0]
    861c:	60a7      	str	r7, [r4, #8]
    861e:	6067      	str	r7, [r4, #4]
    8620:	6127      	str	r7, [r4, #16]
    8622:	6167      	str	r7, [r4, #20]
    8624:	61a7      	str	r7, [r4, #24]
    8626:	305c      	adds	r0, #92	; 0x5c
    8628:	1c39      	adds	r1, r7, #0
    862a:	2208      	movs	r2, #8
    862c:	f000 f9b8 	bl	89a0 <memset>
    8630:	1c20      	adds	r0, r4, #0
    8632:	6367      	str	r7, [r4, #52]	; 0x34
    8634:	63a7      	str	r7, [r4, #56]	; 0x38
    8636:	64a7      	str	r7, [r4, #72]	; 0x48
    8638:	64e7      	str	r7, [r4, #76]	; 0x4c
    863a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    863c:	0000e404 	.word	0x0000e404

00008640 <__sfp_lock_acquire>:
    8640:	4770      	bx	lr

00008642 <__sfp_lock_release>:
    8642:	4770      	bx	lr

00008644 <_fopen_r>:
    8644:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    8646:	1c0f      	adds	r7, r1, #0
    8648:	1c11      	adds	r1, r2, #0
    864a:	aa01      	add	r2, sp, #4
    864c:	1c05      	adds	r5, r0, #0
    864e:	f003 fca9 	bl	bfa4 <__sflags>
    8652:	1e06      	subs	r6, r0, #0
    8654:	d101      	bne.n	865a <_fopen_r+0x16>
    8656:	2400      	movs	r4, #0
    8658:	e027      	b.n	86aa <_fopen_r+0x66>
    865a:	1c28      	adds	r0, r5, #0
    865c:	f7ff ffb2 	bl	85c4 <__sfp>
    8660:	1e04      	subs	r4, r0, #0
    8662:	d0f8      	beq.n	8656 <_fopen_r+0x12>
    8664:	23db      	movs	r3, #219	; 0xdb
    8666:	1c28      	adds	r0, r5, #0
    8668:	1c39      	adds	r1, r7, #0
    866a:	9a01      	ldr	r2, [sp, #4]
    866c:	005b      	lsls	r3, r3, #1
    866e:	f001 fb1f 	bl	9cb0 <_open_r>
    8672:	2800      	cmp	r0, #0
    8674:	da06      	bge.n	8684 <_fopen_r+0x40>
    8676:	2500      	movs	r5, #0
    8678:	f7ff ffe2 	bl	8640 <__sfp_lock_acquire>
    867c:	81a5      	strh	r5, [r4, #12]
    867e:	f7ff ffe0 	bl	8642 <__sfp_lock_release>
    8682:	e7e8      	b.n	8656 <_fopen_r+0x12>
    8684:	4b0a      	ldr	r3, [pc, #40]	; (86b0 <_fopen_r+0x6c>)
    8686:	81e0      	strh	r0, [r4, #14]
    8688:	6263      	str	r3, [r4, #36]	; 0x24
    868a:	4b0a      	ldr	r3, [pc, #40]	; (86b4 <_fopen_r+0x70>)
    868c:	81a6      	strh	r6, [r4, #12]
    868e:	62a3      	str	r3, [r4, #40]	; 0x28
    8690:	4b09      	ldr	r3, [pc, #36]	; (86b8 <_fopen_r+0x74>)
    8692:	6224      	str	r4, [r4, #32]
    8694:	62e3      	str	r3, [r4, #44]	; 0x2c
    8696:	4b09      	ldr	r3, [pc, #36]	; (86bc <_fopen_r+0x78>)
    8698:	6323      	str	r3, [r4, #48]	; 0x30
    869a:	05f3      	lsls	r3, r6, #23
    869c:	d505      	bpl.n	86aa <_fopen_r+0x66>
    869e:	1c28      	adds	r0, r5, #0
    86a0:	1c21      	adds	r1, r4, #0
    86a2:	2200      	movs	r2, #0
    86a4:	2302      	movs	r3, #2
    86a6:	f000 f817 	bl	86d8 <_fseek_r>
    86aa:	1c20      	adds	r0, r4, #0
    86ac:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    86ae:	46c0      	nop			; (mov r8, r8)
    86b0:	0000a079 	.word	0x0000a079
    86b4:	0000a0a5 	.word	0x0000a0a5
    86b8:	0000a0dd 	.word	0x0000a0dd
    86bc:	0000a109 	.word	0x0000a109

000086c0 <fopen>:
    86c0:	b508      	push	{r3, lr}
    86c2:	1c03      	adds	r3, r0, #0
    86c4:	1c0a      	adds	r2, r1, #0
    86c6:	4903      	ldr	r1, [pc, #12]	; (86d4 <fopen+0x14>)
    86c8:	6808      	ldr	r0, [r1, #0]
    86ca:	1c19      	adds	r1, r3, #0
    86cc:	f7ff ffba 	bl	8644 <_fopen_r>
    86d0:	bd08      	pop	{r3, pc}
    86d2:	46c0      	nop			; (mov r8, r8)
    86d4:	20000134 	.word	0x20000134

000086d8 <_fseek_r>:
    86d8:	b508      	push	{r3, lr}
    86da:	f000 f801 	bl	86e0 <_fseeko_r>
    86de:	bd08      	pop	{r3, pc}

000086e0 <_fseeko_r>:
    86e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    86e2:	1c05      	adds	r5, r0, #0
    86e4:	1c0c      	adds	r4, r1, #0
    86e6:	9201      	str	r2, [sp, #4]
    86e8:	1c1e      	adds	r6, r3, #0
    86ea:	2800      	cmp	r0, #0
    86ec:	d004      	beq.n	86f8 <_fseeko_r+0x18>
    86ee:	6983      	ldr	r3, [r0, #24]
    86f0:	2b00      	cmp	r3, #0
    86f2:	d101      	bne.n	86f8 <_fseeko_r+0x18>
    86f4:	f7ff ff34 	bl	8560 <__sinit>
    86f8:	4b41      	ldr	r3, [pc, #260]	; (8800 <_fseeko_r+0x120>)
    86fa:	429c      	cmp	r4, r3
    86fc:	d101      	bne.n	8702 <_fseeko_r+0x22>
    86fe:	686c      	ldr	r4, [r5, #4]
    8700:	e008      	b.n	8714 <_fseeko_r+0x34>
    8702:	4b40      	ldr	r3, [pc, #256]	; (8804 <_fseeko_r+0x124>)
    8704:	429c      	cmp	r4, r3
    8706:	d101      	bne.n	870c <_fseeko_r+0x2c>
    8708:	68ac      	ldr	r4, [r5, #8]
    870a:	e003      	b.n	8714 <_fseeko_r+0x34>
    870c:	4b3e      	ldr	r3, [pc, #248]	; (8808 <_fseeko_r+0x128>)
    870e:	429c      	cmp	r4, r3
    8710:	d100      	bne.n	8714 <_fseeko_r+0x34>
    8712:	68ec      	ldr	r4, [r5, #12]
    8714:	2284      	movs	r2, #132	; 0x84
    8716:	89a3      	ldrh	r3, [r4, #12]
    8718:	0052      	lsls	r2, r2, #1
    871a:	4013      	ands	r3, r2
    871c:	4293      	cmp	r3, r2
    871e:	d103      	bne.n	8728 <_fseeko_r+0x48>
    8720:	1c28      	adds	r0, r5, #0
    8722:	1c21      	adds	r1, r4, #0
    8724:	f7ff fe9a 	bl	845c <_fflush_r>
    8728:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    872a:	9300      	str	r3, [sp, #0]
    872c:	2b00      	cmp	r3, #0
    872e:	d101      	bne.n	8734 <_fseeko_r+0x54>
    8730:	331d      	adds	r3, #29
    8732:	e031      	b.n	8798 <_fseeko_r+0xb8>
    8734:	2e01      	cmp	r6, #1
    8736:	d005      	beq.n	8744 <_fseeko_r+0x64>
    8738:	2e02      	cmp	r6, #2
    873a:	d031      	beq.n	87a0 <_fseeko_r+0xc0>
    873c:	2316      	movs	r3, #22
    873e:	2e00      	cmp	r6, #0
    8740:	d12a      	bne.n	8798 <_fseeko_r+0xb8>
    8742:	e02d      	b.n	87a0 <_fseeko_r+0xc0>
    8744:	1c28      	adds	r0, r5, #0
    8746:	1c21      	adds	r1, r4, #0
    8748:	f7ff fe88 	bl	845c <_fflush_r>
    874c:	2380      	movs	r3, #128	; 0x80
    874e:	89a2      	ldrh	r2, [r4, #12]
    8750:	015b      	lsls	r3, r3, #5
    8752:	401a      	ands	r2, r3
    8754:	d001      	beq.n	875a <_fseeko_r+0x7a>
    8756:	6d60      	ldr	r0, [r4, #84]	; 0x54
    8758:	e006      	b.n	8768 <_fseeko_r+0x88>
    875a:	1c33      	adds	r3, r6, #0
    875c:	1c28      	adds	r0, r5, #0
    875e:	6a21      	ldr	r1, [r4, #32]
    8760:	9e00      	ldr	r6, [sp, #0]
    8762:	47b0      	blx	r6
    8764:	1c43      	adds	r3, r0, #1
    8766:	d018      	beq.n	879a <_fseeko_r+0xba>
    8768:	89a3      	ldrh	r3, [r4, #12]
    876a:	075a      	lsls	r2, r3, #29
    876c:	d507      	bpl.n	877e <_fseeko_r+0x9e>
    876e:	6863      	ldr	r3, [r4, #4]
    8770:	1ac0      	subs	r0, r0, r3
    8772:	6b63      	ldr	r3, [r4, #52]	; 0x34
    8774:	2b00      	cmp	r3, #0
    8776:	d00a      	beq.n	878e <_fseeko_r+0xae>
    8778:	6c23      	ldr	r3, [r4, #64]	; 0x40
    877a:	1ac0      	subs	r0, r0, r3
    877c:	e007      	b.n	878e <_fseeko_r+0xae>
    877e:	071b      	lsls	r3, r3, #28
    8780:	d505      	bpl.n	878e <_fseeko_r+0xae>
    8782:	6823      	ldr	r3, [r4, #0]
    8784:	2b00      	cmp	r3, #0
    8786:	d002      	beq.n	878e <_fseeko_r+0xae>
    8788:	6922      	ldr	r2, [r4, #16]
    878a:	1a9b      	subs	r3, r3, r2
    878c:	18c0      	adds	r0, r0, r3
    878e:	9b01      	ldr	r3, [sp, #4]
    8790:	2600      	movs	r6, #0
    8792:	181b      	adds	r3, r3, r0
    8794:	9301      	str	r3, [sp, #4]
    8796:	e003      	b.n	87a0 <_fseeko_r+0xc0>
    8798:	602b      	str	r3, [r5, #0]
    879a:	2701      	movs	r7, #1
    879c:	427f      	negs	r7, r7
    879e:	e02d      	b.n	87fc <_fseeko_r+0x11c>
    87a0:	6923      	ldr	r3, [r4, #16]
    87a2:	2b00      	cmp	r3, #0
    87a4:	d103      	bne.n	87ae <_fseeko_r+0xce>
    87a6:	1c28      	adds	r0, r5, #0
    87a8:	1c21      	adds	r1, r4, #0
    87aa:	f000 f879 	bl	88a0 <__smakebuf_r>
    87ae:	1c28      	adds	r0, r5, #0
    87b0:	1c21      	adds	r1, r4, #0
    87b2:	f7ff fe53 	bl	845c <_fflush_r>
    87b6:	1e07      	subs	r7, r0, #0
    87b8:	d1ef      	bne.n	879a <_fseeko_r+0xba>
    87ba:	1c33      	adds	r3, r6, #0
    87bc:	1c28      	adds	r0, r5, #0
    87be:	6a21      	ldr	r1, [r4, #32]
    87c0:	9a01      	ldr	r2, [sp, #4]
    87c2:	9e00      	ldr	r6, [sp, #0]
    87c4:	47b0      	blx	r6
    87c6:	1c43      	adds	r3, r0, #1
    87c8:	d0e7      	beq.n	879a <_fseeko_r+0xba>
    87ca:	6b61      	ldr	r1, [r4, #52]	; 0x34
    87cc:	2900      	cmp	r1, #0
    87ce:	d008      	beq.n	87e2 <_fseeko_r+0x102>
    87d0:	1c23      	adds	r3, r4, #0
    87d2:	3344      	adds	r3, #68	; 0x44
    87d4:	4299      	cmp	r1, r3
    87d6:	d002      	beq.n	87de <_fseeko_r+0xfe>
    87d8:	1c28      	adds	r0, r5, #0
    87da:	f000 f8e9 	bl	89b0 <_free_r>
    87de:	2300      	movs	r3, #0
    87e0:	6363      	str	r3, [r4, #52]	; 0x34
    87e2:	2100      	movs	r1, #0
    87e4:	1c20      	adds	r0, r4, #0
    87e6:	6923      	ldr	r3, [r4, #16]
    87e8:	89a2      	ldrh	r2, [r4, #12]
    87ea:	6023      	str	r3, [r4, #0]
    87ec:	4b07      	ldr	r3, [pc, #28]	; (880c <_fseeko_r+0x12c>)
    87ee:	6061      	str	r1, [r4, #4]
    87f0:	4013      	ands	r3, r2
    87f2:	81a3      	strh	r3, [r4, #12]
    87f4:	305c      	adds	r0, #92	; 0x5c
    87f6:	2208      	movs	r2, #8
    87f8:	f000 f8d2 	bl	89a0 <memset>
    87fc:	1c38      	adds	r0, r7, #0
    87fe:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    8800:	0000e3a0 	.word	0x0000e3a0
    8804:	0000e3c0 	.word	0x0000e3c0
    8808:	0000e3e0 	.word	0x0000e3e0
    880c:	fffff7df 	.word	0xfffff7df

00008810 <_fwalk_reent>:
    8810:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    8812:	1c04      	adds	r4, r0, #0
    8814:	1c07      	adds	r7, r0, #0
    8816:	2600      	movs	r6, #0
    8818:	9101      	str	r1, [sp, #4]
    881a:	3448      	adds	r4, #72	; 0x48
    881c:	2c00      	cmp	r4, #0
    881e:	d016      	beq.n	884e <_fwalk_reent+0x3e>
    8820:	6863      	ldr	r3, [r4, #4]
    8822:	68a5      	ldr	r5, [r4, #8]
    8824:	9300      	str	r3, [sp, #0]
    8826:	9b00      	ldr	r3, [sp, #0]
    8828:	3b01      	subs	r3, #1
    882a:	9300      	str	r3, [sp, #0]
    882c:	d40d      	bmi.n	884a <_fwalk_reent+0x3a>
    882e:	89ab      	ldrh	r3, [r5, #12]
    8830:	2b01      	cmp	r3, #1
    8832:	d908      	bls.n	8846 <_fwalk_reent+0x36>
    8834:	220e      	movs	r2, #14
    8836:	5eab      	ldrsh	r3, [r5, r2]
    8838:	3301      	adds	r3, #1
    883a:	d004      	beq.n	8846 <_fwalk_reent+0x36>
    883c:	1c38      	adds	r0, r7, #0
    883e:	1c29      	adds	r1, r5, #0
    8840:	9b01      	ldr	r3, [sp, #4]
    8842:	4798      	blx	r3
    8844:	4306      	orrs	r6, r0
    8846:	3568      	adds	r5, #104	; 0x68
    8848:	e7ed      	b.n	8826 <_fwalk_reent+0x16>
    884a:	6824      	ldr	r4, [r4, #0]
    884c:	e7e6      	b.n	881c <_fwalk_reent+0xc>
    884e:	1c30      	adds	r0, r6, #0
    8850:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

00008854 <__libc_init_array>:
    8854:	4b0e      	ldr	r3, [pc, #56]	; (8890 <__libc_init_array+0x3c>)
    8856:	b570      	push	{r4, r5, r6, lr}
    8858:	2500      	movs	r5, #0
    885a:	1c1e      	adds	r6, r3, #0
    885c:	4c0d      	ldr	r4, [pc, #52]	; (8894 <__libc_init_array+0x40>)
    885e:	1ae4      	subs	r4, r4, r3
    8860:	10a4      	asrs	r4, r4, #2
    8862:	42a5      	cmp	r5, r4
    8864:	d004      	beq.n	8870 <__libc_init_array+0x1c>
    8866:	00ab      	lsls	r3, r5, #2
    8868:	58f3      	ldr	r3, [r6, r3]
    886a:	4798      	blx	r3
    886c:	3501      	adds	r5, #1
    886e:	e7f8      	b.n	8862 <__libc_init_array+0xe>
    8870:	f005 ff38 	bl	e6e4 <_init>
    8874:	4b08      	ldr	r3, [pc, #32]	; (8898 <__libc_init_array+0x44>)
    8876:	2500      	movs	r5, #0
    8878:	1c1e      	adds	r6, r3, #0
    887a:	4c08      	ldr	r4, [pc, #32]	; (889c <__libc_init_array+0x48>)
    887c:	1ae4      	subs	r4, r4, r3
    887e:	10a4      	asrs	r4, r4, #2
    8880:	42a5      	cmp	r5, r4
    8882:	d004      	beq.n	888e <__libc_init_array+0x3a>
    8884:	00ab      	lsls	r3, r5, #2
    8886:	58f3      	ldr	r3, [r6, r3]
    8888:	4798      	blx	r3
    888a:	3501      	adds	r5, #1
    888c:	e7f8      	b.n	8880 <__libc_init_array+0x2c>
    888e:	bd70      	pop	{r4, r5, r6, pc}
    8890:	0000e6f0 	.word	0x0000e6f0
    8894:	0000e6f0 	.word	0x0000e6f0
    8898:	0000e6f0 	.word	0x0000e6f0
    889c:	0000e6fc 	.word	0x0000e6fc

000088a0 <__smakebuf_r>:
    88a0:	b5f0      	push	{r4, r5, r6, r7, lr}
    88a2:	898b      	ldrh	r3, [r1, #12]
    88a4:	b091      	sub	sp, #68	; 0x44
    88a6:	079b      	lsls	r3, r3, #30
    88a8:	d506      	bpl.n	88b8 <__smakebuf_r+0x18>
    88aa:	1c0b      	adds	r3, r1, #0
    88ac:	3347      	adds	r3, #71	; 0x47
    88ae:	600b      	str	r3, [r1, #0]
    88b0:	610b      	str	r3, [r1, #16]
    88b2:	2301      	movs	r3, #1
    88b4:	614b      	str	r3, [r1, #20]
    88b6:	e045      	b.n	8944 <__smakebuf_r+0xa4>
    88b8:	1c0c      	adds	r4, r1, #0
    88ba:	230e      	movs	r3, #14
    88bc:	5ec9      	ldrsh	r1, [r1, r3]
    88be:	1c06      	adds	r6, r0, #0
    88c0:	2900      	cmp	r1, #0
    88c2:	da04      	bge.n	88ce <__smakebuf_r+0x2e>
    88c4:	2380      	movs	r3, #128	; 0x80
    88c6:	89a5      	ldrh	r5, [r4, #12]
    88c8:	401d      	ands	r5, r3
    88ca:	d110      	bne.n	88ee <__smakebuf_r+0x4e>
    88cc:	e00c      	b.n	88e8 <__smakebuf_r+0x48>
    88ce:	aa01      	add	r2, sp, #4
    88d0:	f003 fba0 	bl	c014 <_fstat_r>
    88d4:	2800      	cmp	r0, #0
    88d6:	dbf5      	blt.n	88c4 <__smakebuf_r+0x24>
    88d8:	23f0      	movs	r3, #240	; 0xf0
    88da:	9d02      	ldr	r5, [sp, #8]
    88dc:	021b      	lsls	r3, r3, #8
    88de:	401d      	ands	r5, r3
    88e0:	4b19      	ldr	r3, [pc, #100]	; (8948 <__smakebuf_r+0xa8>)
    88e2:	18ed      	adds	r5, r5, r3
    88e4:	426b      	negs	r3, r5
    88e6:	415d      	adcs	r5, r3
    88e8:	2780      	movs	r7, #128	; 0x80
    88ea:	00ff      	lsls	r7, r7, #3
    88ec:	e001      	b.n	88f2 <__smakebuf_r+0x52>
    88ee:	2500      	movs	r5, #0
    88f0:	2740      	movs	r7, #64	; 0x40
    88f2:	1c30      	adds	r0, r6, #0
    88f4:	1c39      	adds	r1, r7, #0
    88f6:	f000 f8a1 	bl	8a3c <_malloc_r>
    88fa:	2800      	cmp	r0, #0
    88fc:	d10c      	bne.n	8918 <__smakebuf_r+0x78>
    88fe:	89a3      	ldrh	r3, [r4, #12]
    8900:	059a      	lsls	r2, r3, #22
    8902:	d41f      	bmi.n	8944 <__smakebuf_r+0xa4>
    8904:	2202      	movs	r2, #2
    8906:	4313      	orrs	r3, r2
    8908:	81a3      	strh	r3, [r4, #12]
    890a:	1c23      	adds	r3, r4, #0
    890c:	3347      	adds	r3, #71	; 0x47
    890e:	6023      	str	r3, [r4, #0]
    8910:	6123      	str	r3, [r4, #16]
    8912:	2301      	movs	r3, #1
    8914:	6163      	str	r3, [r4, #20]
    8916:	e015      	b.n	8944 <__smakebuf_r+0xa4>
    8918:	2280      	movs	r2, #128	; 0x80
    891a:	4b0c      	ldr	r3, [pc, #48]	; (894c <__smakebuf_r+0xac>)
    891c:	62b3      	str	r3, [r6, #40]	; 0x28
    891e:	89a3      	ldrh	r3, [r4, #12]
    8920:	6020      	str	r0, [r4, #0]
    8922:	4313      	orrs	r3, r2
    8924:	81a3      	strh	r3, [r4, #12]
    8926:	6120      	str	r0, [r4, #16]
    8928:	6167      	str	r7, [r4, #20]
    892a:	2d00      	cmp	r5, #0
    892c:	d00a      	beq.n	8944 <__smakebuf_r+0xa4>
    892e:	230e      	movs	r3, #14
    8930:	5ee1      	ldrsh	r1, [r4, r3]
    8932:	1c30      	adds	r0, r6, #0
    8934:	f003 fe98 	bl	c668 <_isatty_r>
    8938:	2800      	cmp	r0, #0
    893a:	d003      	beq.n	8944 <__smakebuf_r+0xa4>
    893c:	2201      	movs	r2, #1
    893e:	89a3      	ldrh	r3, [r4, #12]
    8940:	4313      	orrs	r3, r2
    8942:	81a3      	strh	r3, [r4, #12]
    8944:	b011      	add	sp, #68	; 0x44
    8946:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8948:	ffffe000 	.word	0xffffe000
    894c:	000084dd 	.word	0x000084dd

00008950 <malloc>:
    8950:	b508      	push	{r3, lr}
    8952:	4b03      	ldr	r3, [pc, #12]	; (8960 <malloc+0x10>)
    8954:	1c01      	adds	r1, r0, #0
    8956:	6818      	ldr	r0, [r3, #0]
    8958:	f000 f870 	bl	8a3c <_malloc_r>
    895c:	bd08      	pop	{r3, pc}
    895e:	46c0      	nop			; (mov r8, r8)
    8960:	20000134 	.word	0x20000134

00008964 <free>:
    8964:	b508      	push	{r3, lr}
    8966:	4b03      	ldr	r3, [pc, #12]	; (8974 <free+0x10>)
    8968:	1c01      	adds	r1, r0, #0
    896a:	6818      	ldr	r0, [r3, #0]
    896c:	f000 f820 	bl	89b0 <_free_r>
    8970:	bd08      	pop	{r3, pc}
    8972:	46c0      	nop			; (mov r8, r8)
    8974:	20000134 	.word	0x20000134

00008978 <memchr>:
    8978:	b2c9      	uxtb	r1, r1
    897a:	1882      	adds	r2, r0, r2
    897c:	4290      	cmp	r0, r2
    897e:	d004      	beq.n	898a <memchr+0x12>
    8980:	7803      	ldrb	r3, [r0, #0]
    8982:	428b      	cmp	r3, r1
    8984:	d002      	beq.n	898c <memchr+0x14>
    8986:	3001      	adds	r0, #1
    8988:	e7f8      	b.n	897c <memchr+0x4>
    898a:	2000      	movs	r0, #0
    898c:	4770      	bx	lr

0000898e <memcpy>:
    898e:	2300      	movs	r3, #0
    8990:	b510      	push	{r4, lr}
    8992:	4293      	cmp	r3, r2
    8994:	d003      	beq.n	899e <memcpy+0x10>
    8996:	5ccc      	ldrb	r4, [r1, r3]
    8998:	54c4      	strb	r4, [r0, r3]
    899a:	3301      	adds	r3, #1
    899c:	e7f9      	b.n	8992 <memcpy+0x4>
    899e:	bd10      	pop	{r4, pc}

000089a0 <memset>:
    89a0:	1c03      	adds	r3, r0, #0
    89a2:	1882      	adds	r2, r0, r2
    89a4:	4293      	cmp	r3, r2
    89a6:	d002      	beq.n	89ae <memset+0xe>
    89a8:	7019      	strb	r1, [r3, #0]
    89aa:	3301      	adds	r3, #1
    89ac:	e7fa      	b.n	89a4 <memset+0x4>
    89ae:	4770      	bx	lr

000089b0 <_free_r>:
    89b0:	b530      	push	{r4, r5, lr}
    89b2:	2900      	cmp	r1, #0
    89b4:	d03e      	beq.n	8a34 <_free_r+0x84>
    89b6:	3904      	subs	r1, #4
    89b8:	680b      	ldr	r3, [r1, #0]
    89ba:	2b00      	cmp	r3, #0
    89bc:	da00      	bge.n	89c0 <_free_r+0x10>
    89be:	18c9      	adds	r1, r1, r3
    89c0:	4a1d      	ldr	r2, [pc, #116]	; (8a38 <_free_r+0x88>)
    89c2:	6813      	ldr	r3, [r2, #0]
    89c4:	1c14      	adds	r4, r2, #0
    89c6:	2b00      	cmp	r3, #0
    89c8:	d102      	bne.n	89d0 <_free_r+0x20>
    89ca:	604b      	str	r3, [r1, #4]
    89cc:	6011      	str	r1, [r2, #0]
    89ce:	e031      	b.n	8a34 <_free_r+0x84>
    89d0:	4299      	cmp	r1, r3
    89d2:	d20d      	bcs.n	89f0 <_free_r+0x40>
    89d4:	6808      	ldr	r0, [r1, #0]
    89d6:	180a      	adds	r2, r1, r0
    89d8:	429a      	cmp	r2, r3
    89da:	d103      	bne.n	89e4 <_free_r+0x34>
    89dc:	6813      	ldr	r3, [r2, #0]
    89de:	18c3      	adds	r3, r0, r3
    89e0:	600b      	str	r3, [r1, #0]
    89e2:	6853      	ldr	r3, [r2, #4]
    89e4:	604b      	str	r3, [r1, #4]
    89e6:	6021      	str	r1, [r4, #0]
    89e8:	e024      	b.n	8a34 <_free_r+0x84>
    89ea:	428a      	cmp	r2, r1
    89ec:	d803      	bhi.n	89f6 <_free_r+0x46>
    89ee:	1c13      	adds	r3, r2, #0
    89f0:	685a      	ldr	r2, [r3, #4]
    89f2:	2a00      	cmp	r2, #0
    89f4:	d1f9      	bne.n	89ea <_free_r+0x3a>
    89f6:	681d      	ldr	r5, [r3, #0]
    89f8:	195c      	adds	r4, r3, r5
    89fa:	428c      	cmp	r4, r1
    89fc:	d10b      	bne.n	8a16 <_free_r+0x66>
    89fe:	6809      	ldr	r1, [r1, #0]
    8a00:	1869      	adds	r1, r5, r1
    8a02:	1858      	adds	r0, r3, r1
    8a04:	6019      	str	r1, [r3, #0]
    8a06:	4290      	cmp	r0, r2
    8a08:	d114      	bne.n	8a34 <_free_r+0x84>
    8a0a:	6810      	ldr	r0, [r2, #0]
    8a0c:	6852      	ldr	r2, [r2, #4]
    8a0e:	1809      	adds	r1, r1, r0
    8a10:	6019      	str	r1, [r3, #0]
    8a12:	605a      	str	r2, [r3, #4]
    8a14:	e00e      	b.n	8a34 <_free_r+0x84>
    8a16:	428c      	cmp	r4, r1
    8a18:	d902      	bls.n	8a20 <_free_r+0x70>
    8a1a:	230c      	movs	r3, #12
    8a1c:	6003      	str	r3, [r0, #0]
    8a1e:	e009      	b.n	8a34 <_free_r+0x84>
    8a20:	6808      	ldr	r0, [r1, #0]
    8a22:	180c      	adds	r4, r1, r0
    8a24:	4294      	cmp	r4, r2
    8a26:	d103      	bne.n	8a30 <_free_r+0x80>
    8a28:	6814      	ldr	r4, [r2, #0]
    8a2a:	6852      	ldr	r2, [r2, #4]
    8a2c:	1900      	adds	r0, r0, r4
    8a2e:	6008      	str	r0, [r1, #0]
    8a30:	604a      	str	r2, [r1, #4]
    8a32:	6059      	str	r1, [r3, #4]
    8a34:	bd30      	pop	{r4, r5, pc}
    8a36:	46c0      	nop			; (mov r8, r8)
    8a38:	200043b8 	.word	0x200043b8

00008a3c <_malloc_r>:
    8a3c:	2303      	movs	r3, #3
    8a3e:	b570      	push	{r4, r5, r6, lr}
    8a40:	1ccc      	adds	r4, r1, #3
    8a42:	439c      	bics	r4, r3
    8a44:	3408      	adds	r4, #8
    8a46:	1c05      	adds	r5, r0, #0
    8a48:	2c0c      	cmp	r4, #12
    8a4a:	d201      	bcs.n	8a50 <_malloc_r+0x14>
    8a4c:	240c      	movs	r4, #12
    8a4e:	e005      	b.n	8a5c <_malloc_r+0x20>
    8a50:	2c00      	cmp	r4, #0
    8a52:	da03      	bge.n	8a5c <_malloc_r+0x20>
    8a54:	230c      	movs	r3, #12
    8a56:	2000      	movs	r0, #0
    8a58:	602b      	str	r3, [r5, #0]
    8a5a:	e042      	b.n	8ae2 <_malloc_r+0xa6>
    8a5c:	428c      	cmp	r4, r1
    8a5e:	d3f9      	bcc.n	8a54 <_malloc_r+0x18>
    8a60:	4a20      	ldr	r2, [pc, #128]	; (8ae4 <_malloc_r+0xa8>)
    8a62:	6813      	ldr	r3, [r2, #0]
    8a64:	1c10      	adds	r0, r2, #0
    8a66:	1c19      	adds	r1, r3, #0
    8a68:	2900      	cmp	r1, #0
    8a6a:	d013      	beq.n	8a94 <_malloc_r+0x58>
    8a6c:	680a      	ldr	r2, [r1, #0]
    8a6e:	1b12      	subs	r2, r2, r4
    8a70:	d40d      	bmi.n	8a8e <_malloc_r+0x52>
    8a72:	2a0b      	cmp	r2, #11
    8a74:	d902      	bls.n	8a7c <_malloc_r+0x40>
    8a76:	600a      	str	r2, [r1, #0]
    8a78:	188b      	adds	r3, r1, r2
    8a7a:	e01f      	b.n	8abc <_malloc_r+0x80>
    8a7c:	428b      	cmp	r3, r1
    8a7e:	d102      	bne.n	8a86 <_malloc_r+0x4a>
    8a80:	685a      	ldr	r2, [r3, #4]
    8a82:	6002      	str	r2, [r0, #0]
    8a84:	e01b      	b.n	8abe <_malloc_r+0x82>
    8a86:	684a      	ldr	r2, [r1, #4]
    8a88:	605a      	str	r2, [r3, #4]
    8a8a:	1c0b      	adds	r3, r1, #0
    8a8c:	e017      	b.n	8abe <_malloc_r+0x82>
    8a8e:	1c0b      	adds	r3, r1, #0
    8a90:	6849      	ldr	r1, [r1, #4]
    8a92:	e7e9      	b.n	8a68 <_malloc_r+0x2c>
    8a94:	4e14      	ldr	r6, [pc, #80]	; (8ae8 <_malloc_r+0xac>)
    8a96:	6833      	ldr	r3, [r6, #0]
    8a98:	2b00      	cmp	r3, #0
    8a9a:	d103      	bne.n	8aa4 <_malloc_r+0x68>
    8a9c:	1c28      	adds	r0, r5, #0
    8a9e:	f001 f9c9 	bl	9e34 <_sbrk_r>
    8aa2:	6030      	str	r0, [r6, #0]
    8aa4:	1c28      	adds	r0, r5, #0
    8aa6:	1c21      	adds	r1, r4, #0
    8aa8:	f001 f9c4 	bl	9e34 <_sbrk_r>
    8aac:	1c03      	adds	r3, r0, #0
    8aae:	1c42      	adds	r2, r0, #1
    8ab0:	d0d0      	beq.n	8a54 <_malloc_r+0x18>
    8ab2:	2203      	movs	r2, #3
    8ab4:	1cc6      	adds	r6, r0, #3
    8ab6:	4396      	bics	r6, r2
    8ab8:	4286      	cmp	r6, r0
    8aba:	d10a      	bne.n	8ad2 <_malloc_r+0x96>
    8abc:	601c      	str	r4, [r3, #0]
    8abe:	1c18      	adds	r0, r3, #0
    8ac0:	2107      	movs	r1, #7
    8ac2:	300b      	adds	r0, #11
    8ac4:	1d1a      	adds	r2, r3, #4
    8ac6:	4388      	bics	r0, r1
    8ac8:	1a82      	subs	r2, r0, r2
    8aca:	d00a      	beq.n	8ae2 <_malloc_r+0xa6>
    8acc:	4251      	negs	r1, r2
    8ace:	5099      	str	r1, [r3, r2]
    8ad0:	e007      	b.n	8ae2 <_malloc_r+0xa6>
    8ad2:	1a31      	subs	r1, r6, r0
    8ad4:	1c28      	adds	r0, r5, #0
    8ad6:	f001 f9ad 	bl	9e34 <_sbrk_r>
    8ada:	1c43      	adds	r3, r0, #1
    8adc:	d0ba      	beq.n	8a54 <_malloc_r+0x18>
    8ade:	1c33      	adds	r3, r6, #0
    8ae0:	e7ec      	b.n	8abc <_malloc_r+0x80>
    8ae2:	bd70      	pop	{r4, r5, r6, pc}
    8ae4:	200043b8 	.word	0x200043b8
    8ae8:	200043b4 	.word	0x200043b4

00008aec <__sfputc_r>:
    8aec:	6893      	ldr	r3, [r2, #8]
    8aee:	b510      	push	{r4, lr}
    8af0:	3b01      	subs	r3, #1
    8af2:	6093      	str	r3, [r2, #8]
    8af4:	2b00      	cmp	r3, #0
    8af6:	da05      	bge.n	8b04 <__sfputc_r+0x18>
    8af8:	6994      	ldr	r4, [r2, #24]
    8afa:	42a3      	cmp	r3, r4
    8afc:	db08      	blt.n	8b10 <__sfputc_r+0x24>
    8afe:	b2cb      	uxtb	r3, r1
    8b00:	2b0a      	cmp	r3, #10
    8b02:	d005      	beq.n	8b10 <__sfputc_r+0x24>
    8b04:	6813      	ldr	r3, [r2, #0]
    8b06:	1c58      	adds	r0, r3, #1
    8b08:	6010      	str	r0, [r2, #0]
    8b0a:	7019      	strb	r1, [r3, #0]
    8b0c:	b2c8      	uxtb	r0, r1
    8b0e:	e001      	b.n	8b14 <__sfputc_r+0x28>
    8b10:	f002 face 	bl	b0b0 <__swbuf_r>
    8b14:	bd10      	pop	{r4, pc}

00008b16 <__sfputs_r>:
    8b16:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8b18:	1c06      	adds	r6, r0, #0
    8b1a:	1c0f      	adds	r7, r1, #0
    8b1c:	1c14      	adds	r4, r2, #0
    8b1e:	18d5      	adds	r5, r2, r3
    8b20:	42ac      	cmp	r4, r5
    8b22:	d008      	beq.n	8b36 <__sfputs_r+0x20>
    8b24:	7821      	ldrb	r1, [r4, #0]
    8b26:	1c30      	adds	r0, r6, #0
    8b28:	1c3a      	adds	r2, r7, #0
    8b2a:	f7ff ffdf 	bl	8aec <__sfputc_r>
    8b2e:	3401      	adds	r4, #1
    8b30:	1c43      	adds	r3, r0, #1
    8b32:	d1f5      	bne.n	8b20 <__sfputs_r+0xa>
    8b34:	e000      	b.n	8b38 <__sfputs_r+0x22>
    8b36:	2000      	movs	r0, #0
    8b38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

00008b3c <_vfiprintf_r>:
    8b3c:	b5f0      	push	{r4, r5, r6, r7, lr}
    8b3e:	b09f      	sub	sp, #124	; 0x7c
    8b40:	1c06      	adds	r6, r0, #0
    8b42:	1c0f      	adds	r7, r1, #0
    8b44:	9202      	str	r2, [sp, #8]
    8b46:	9305      	str	r3, [sp, #20]
    8b48:	2800      	cmp	r0, #0
    8b4a:	d004      	beq.n	8b56 <_vfiprintf_r+0x1a>
    8b4c:	6983      	ldr	r3, [r0, #24]
    8b4e:	2b00      	cmp	r3, #0
    8b50:	d101      	bne.n	8b56 <_vfiprintf_r+0x1a>
    8b52:	f7ff fd05 	bl	8560 <__sinit>
    8b56:	4b79      	ldr	r3, [pc, #484]	; (8d3c <_vfiprintf_r+0x200>)
    8b58:	429f      	cmp	r7, r3
    8b5a:	d101      	bne.n	8b60 <_vfiprintf_r+0x24>
    8b5c:	6877      	ldr	r7, [r6, #4]
    8b5e:	e008      	b.n	8b72 <_vfiprintf_r+0x36>
    8b60:	4b77      	ldr	r3, [pc, #476]	; (8d40 <_vfiprintf_r+0x204>)
    8b62:	429f      	cmp	r7, r3
    8b64:	d101      	bne.n	8b6a <_vfiprintf_r+0x2e>
    8b66:	68b7      	ldr	r7, [r6, #8]
    8b68:	e003      	b.n	8b72 <_vfiprintf_r+0x36>
    8b6a:	4b76      	ldr	r3, [pc, #472]	; (8d44 <_vfiprintf_r+0x208>)
    8b6c:	429f      	cmp	r7, r3
    8b6e:	d100      	bne.n	8b72 <_vfiprintf_r+0x36>
    8b70:	68f7      	ldr	r7, [r6, #12]
    8b72:	89bb      	ldrh	r3, [r7, #12]
    8b74:	071b      	lsls	r3, r3, #28
    8b76:	d50a      	bpl.n	8b8e <_vfiprintf_r+0x52>
    8b78:	693b      	ldr	r3, [r7, #16]
    8b7a:	2b00      	cmp	r3, #0
    8b7c:	d007      	beq.n	8b8e <_vfiprintf_r+0x52>
    8b7e:	2300      	movs	r3, #0
    8b80:	ad06      	add	r5, sp, #24
    8b82:	616b      	str	r3, [r5, #20]
    8b84:	3320      	adds	r3, #32
    8b86:	766b      	strb	r3, [r5, #25]
    8b88:	3310      	adds	r3, #16
    8b8a:	76ab      	strb	r3, [r5, #26]
    8b8c:	e03d      	b.n	8c0a <_vfiprintf_r+0xce>
    8b8e:	1c30      	adds	r0, r6, #0
    8b90:	1c39      	adds	r1, r7, #0
    8b92:	f002 faf9 	bl	b188 <__swsetup_r>
    8b96:	2800      	cmp	r0, #0
    8b98:	d0f1      	beq.n	8b7e <_vfiprintf_r+0x42>
    8b9a:	2001      	movs	r0, #1
    8b9c:	4240      	negs	r0, r0
    8b9e:	e0ca      	b.n	8d36 <_vfiprintf_r+0x1fa>
    8ba0:	9a05      	ldr	r2, [sp, #20]
    8ba2:	1d11      	adds	r1, r2, #4
    8ba4:	6812      	ldr	r2, [r2, #0]
    8ba6:	9105      	str	r1, [sp, #20]
    8ba8:	2a00      	cmp	r2, #0
    8baa:	db7e      	blt.n	8caa <_vfiprintf_r+0x16e>
    8bac:	9209      	str	r2, [sp, #36]	; 0x24
    8bae:	3401      	adds	r4, #1
    8bb0:	7823      	ldrb	r3, [r4, #0]
    8bb2:	2b2e      	cmp	r3, #46	; 0x2e
    8bb4:	d100      	bne.n	8bb8 <_vfiprintf_r+0x7c>
    8bb6:	e089      	b.n	8ccc <_vfiprintf_r+0x190>
    8bb8:	7821      	ldrb	r1, [r4, #0]
    8bba:	4863      	ldr	r0, [pc, #396]	; (8d48 <_vfiprintf_r+0x20c>)
    8bbc:	2203      	movs	r2, #3
    8bbe:	f7ff fedb 	bl	8978 <memchr>
    8bc2:	2800      	cmp	r0, #0
    8bc4:	d008      	beq.n	8bd8 <_vfiprintf_r+0x9c>
    8bc6:	4b60      	ldr	r3, [pc, #384]	; (8d48 <_vfiprintf_r+0x20c>)
    8bc8:	3401      	adds	r4, #1
    8bca:	1ac0      	subs	r0, r0, r3
    8bcc:	2340      	movs	r3, #64	; 0x40
    8bce:	4083      	lsls	r3, r0
    8bd0:	1c18      	adds	r0, r3, #0
    8bd2:	682b      	ldr	r3, [r5, #0]
    8bd4:	4318      	orrs	r0, r3
    8bd6:	6028      	str	r0, [r5, #0]
    8bd8:	7821      	ldrb	r1, [r4, #0]
    8bda:	1c63      	adds	r3, r4, #1
    8bdc:	485b      	ldr	r0, [pc, #364]	; (8d4c <_vfiprintf_r+0x210>)
    8bde:	2206      	movs	r2, #6
    8be0:	9302      	str	r3, [sp, #8]
    8be2:	7629      	strb	r1, [r5, #24]
    8be4:	f7ff fec8 	bl	8978 <memchr>
    8be8:	2800      	cmp	r0, #0
    8bea:	d100      	bne.n	8bee <_vfiprintf_r+0xb2>
    8bec:	e091      	b.n	8d12 <_vfiprintf_r+0x1d6>
    8bee:	4b58      	ldr	r3, [pc, #352]	; (8d50 <_vfiprintf_r+0x214>)
    8bf0:	2b00      	cmp	r3, #0
    8bf2:	d000      	beq.n	8bf6 <_vfiprintf_r+0xba>
    8bf4:	e084      	b.n	8d00 <_vfiprintf_r+0x1c4>
    8bf6:	2207      	movs	r2, #7
    8bf8:	9b05      	ldr	r3, [sp, #20]
    8bfa:	3307      	adds	r3, #7
    8bfc:	4393      	bics	r3, r2
    8bfe:	3308      	adds	r3, #8
    8c00:	9305      	str	r3, [sp, #20]
    8c02:	696b      	ldr	r3, [r5, #20]
    8c04:	9a03      	ldr	r2, [sp, #12]
    8c06:	189b      	adds	r3, r3, r2
    8c08:	616b      	str	r3, [r5, #20]
    8c0a:	9c02      	ldr	r4, [sp, #8]
    8c0c:	7823      	ldrb	r3, [r4, #0]
    8c0e:	2b00      	cmp	r3, #0
    8c10:	d104      	bne.n	8c1c <_vfiprintf_r+0xe0>
    8c12:	9b02      	ldr	r3, [sp, #8]
    8c14:	1ae3      	subs	r3, r4, r3
    8c16:	9304      	str	r3, [sp, #16]
    8c18:	d011      	beq.n	8c3e <_vfiprintf_r+0x102>
    8c1a:	e003      	b.n	8c24 <_vfiprintf_r+0xe8>
    8c1c:	2b25      	cmp	r3, #37	; 0x25
    8c1e:	d0f8      	beq.n	8c12 <_vfiprintf_r+0xd6>
    8c20:	3401      	adds	r4, #1
    8c22:	e7f3      	b.n	8c0c <_vfiprintf_r+0xd0>
    8c24:	9b04      	ldr	r3, [sp, #16]
    8c26:	1c30      	adds	r0, r6, #0
    8c28:	1c39      	adds	r1, r7, #0
    8c2a:	9a02      	ldr	r2, [sp, #8]
    8c2c:	f7ff ff73 	bl	8b16 <__sfputs_r>
    8c30:	1c43      	adds	r3, r0, #1
    8c32:	d07b      	beq.n	8d2c <_vfiprintf_r+0x1f0>
    8c34:	696a      	ldr	r2, [r5, #20]
    8c36:	9b04      	ldr	r3, [sp, #16]
    8c38:	4694      	mov	ip, r2
    8c3a:	4463      	add	r3, ip
    8c3c:	616b      	str	r3, [r5, #20]
    8c3e:	7823      	ldrb	r3, [r4, #0]
    8c40:	2b00      	cmp	r3, #0
    8c42:	d073      	beq.n	8d2c <_vfiprintf_r+0x1f0>
    8c44:	2201      	movs	r2, #1
    8c46:	2300      	movs	r3, #0
    8c48:	4252      	negs	r2, r2
    8c4a:	606a      	str	r2, [r5, #4]
    8c4c:	a902      	add	r1, sp, #8
    8c4e:	3254      	adds	r2, #84	; 0x54
    8c50:	1852      	adds	r2, r2, r1
    8c52:	3401      	adds	r4, #1
    8c54:	602b      	str	r3, [r5, #0]
    8c56:	60eb      	str	r3, [r5, #12]
    8c58:	60ab      	str	r3, [r5, #8]
    8c5a:	7013      	strb	r3, [r2, #0]
    8c5c:	65ab      	str	r3, [r5, #88]	; 0x58
    8c5e:	7821      	ldrb	r1, [r4, #0]
    8c60:	483c      	ldr	r0, [pc, #240]	; (8d54 <_vfiprintf_r+0x218>)
    8c62:	2205      	movs	r2, #5
    8c64:	f7ff fe88 	bl	8978 <memchr>
    8c68:	2800      	cmp	r0, #0
    8c6a:	d009      	beq.n	8c80 <_vfiprintf_r+0x144>
    8c6c:	4b39      	ldr	r3, [pc, #228]	; (8d54 <_vfiprintf_r+0x218>)
    8c6e:	3401      	adds	r4, #1
    8c70:	1ac0      	subs	r0, r0, r3
    8c72:	2301      	movs	r3, #1
    8c74:	4083      	lsls	r3, r0
    8c76:	1c18      	adds	r0, r3, #0
    8c78:	682b      	ldr	r3, [r5, #0]
    8c7a:	4318      	orrs	r0, r3
    8c7c:	6028      	str	r0, [r5, #0]
    8c7e:	e7ee      	b.n	8c5e <_vfiprintf_r+0x122>
    8c80:	682b      	ldr	r3, [r5, #0]
    8c82:	06da      	lsls	r2, r3, #27
    8c84:	d504      	bpl.n	8c90 <_vfiprintf_r+0x154>
    8c86:	2253      	movs	r2, #83	; 0x53
    8c88:	2120      	movs	r1, #32
    8c8a:	a802      	add	r0, sp, #8
    8c8c:	1812      	adds	r2, r2, r0
    8c8e:	7011      	strb	r1, [r2, #0]
    8c90:	071a      	lsls	r2, r3, #28
    8c92:	d504      	bpl.n	8c9e <_vfiprintf_r+0x162>
    8c94:	2253      	movs	r2, #83	; 0x53
    8c96:	212b      	movs	r1, #43	; 0x2b
    8c98:	a802      	add	r0, sp, #8
    8c9a:	1812      	adds	r2, r2, r0
    8c9c:	7011      	strb	r1, [r2, #0]
    8c9e:	7822      	ldrb	r2, [r4, #0]
    8ca0:	2a2a      	cmp	r2, #42	; 0x2a
    8ca2:	d100      	bne.n	8ca6 <_vfiprintf_r+0x16a>
    8ca4:	e77c      	b.n	8ba0 <_vfiprintf_r+0x64>
    8ca6:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8ca8:	e005      	b.n	8cb6 <_vfiprintf_r+0x17a>
    8caa:	4252      	negs	r2, r2
    8cac:	60ea      	str	r2, [r5, #12]
    8cae:	2202      	movs	r2, #2
    8cb0:	4313      	orrs	r3, r2
    8cb2:	602b      	str	r3, [r5, #0]
    8cb4:	e77b      	b.n	8bae <_vfiprintf_r+0x72>
    8cb6:	7822      	ldrb	r2, [r4, #0]
    8cb8:	3a30      	subs	r2, #48	; 0x30
    8cba:	2a09      	cmp	r2, #9
    8cbc:	d804      	bhi.n	8cc8 <_vfiprintf_r+0x18c>
    8cbe:	210a      	movs	r1, #10
    8cc0:	434b      	muls	r3, r1
    8cc2:	3401      	adds	r4, #1
    8cc4:	189b      	adds	r3, r3, r2
    8cc6:	e7f6      	b.n	8cb6 <_vfiprintf_r+0x17a>
    8cc8:	9309      	str	r3, [sp, #36]	; 0x24
    8cca:	e771      	b.n	8bb0 <_vfiprintf_r+0x74>
    8ccc:	7863      	ldrb	r3, [r4, #1]
    8cce:	2b2a      	cmp	r3, #42	; 0x2a
    8cd0:	d109      	bne.n	8ce6 <_vfiprintf_r+0x1aa>
    8cd2:	9b05      	ldr	r3, [sp, #20]
    8cd4:	3402      	adds	r4, #2
    8cd6:	1d1a      	adds	r2, r3, #4
    8cd8:	681b      	ldr	r3, [r3, #0]
    8cda:	9205      	str	r2, [sp, #20]
    8cdc:	2b00      	cmp	r3, #0
    8cde:	da0d      	bge.n	8cfc <_vfiprintf_r+0x1c0>
    8ce0:	2301      	movs	r3, #1
    8ce2:	425b      	negs	r3, r3
    8ce4:	e00a      	b.n	8cfc <_vfiprintf_r+0x1c0>
    8ce6:	2300      	movs	r3, #0
    8ce8:	3401      	adds	r4, #1
    8cea:	7822      	ldrb	r2, [r4, #0]
    8cec:	3a30      	subs	r2, #48	; 0x30
    8cee:	2a09      	cmp	r2, #9
    8cf0:	d804      	bhi.n	8cfc <_vfiprintf_r+0x1c0>
    8cf2:	210a      	movs	r1, #10
    8cf4:	434b      	muls	r3, r1
    8cf6:	3401      	adds	r4, #1
    8cf8:	189b      	adds	r3, r3, r2
    8cfa:	e7f6      	b.n	8cea <_vfiprintf_r+0x1ae>
    8cfc:	9307      	str	r3, [sp, #28]
    8cfe:	e75b      	b.n	8bb8 <_vfiprintf_r+0x7c>
    8d00:	ab05      	add	r3, sp, #20
    8d02:	9300      	str	r3, [sp, #0]
    8d04:	1c30      	adds	r0, r6, #0
    8d06:	1c29      	adds	r1, r5, #0
    8d08:	1c3a      	adds	r2, r7, #0
    8d0a:	4b13      	ldr	r3, [pc, #76]	; (8d58 <_vfiprintf_r+0x21c>)
    8d0c:	f000 f8ca 	bl	8ea4 <_printf_float>
    8d10:	e007      	b.n	8d22 <_vfiprintf_r+0x1e6>
    8d12:	ab05      	add	r3, sp, #20
    8d14:	9300      	str	r3, [sp, #0]
    8d16:	1c30      	adds	r0, r6, #0
    8d18:	1c29      	adds	r1, r5, #0
    8d1a:	1c3a      	adds	r2, r7, #0
    8d1c:	4b0e      	ldr	r3, [pc, #56]	; (8d58 <_vfiprintf_r+0x21c>)
    8d1e:	f000 fb6d 	bl	93fc <_printf_i>
    8d22:	9003      	str	r0, [sp, #12]
    8d24:	9b03      	ldr	r3, [sp, #12]
    8d26:	3301      	adds	r3, #1
    8d28:	d000      	beq.n	8d2c <_vfiprintf_r+0x1f0>
    8d2a:	e76a      	b.n	8c02 <_vfiprintf_r+0xc6>
    8d2c:	89bb      	ldrh	r3, [r7, #12]
    8d2e:	065b      	lsls	r3, r3, #25
    8d30:	d500      	bpl.n	8d34 <_vfiprintf_r+0x1f8>
    8d32:	e732      	b.n	8b9a <_vfiprintf_r+0x5e>
    8d34:	980b      	ldr	r0, [sp, #44]	; 0x2c
    8d36:	b01f      	add	sp, #124	; 0x7c
    8d38:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8d3a:	46c0      	nop			; (mov r8, r8)
    8d3c:	0000e3a0 	.word	0x0000e3a0
    8d40:	0000e3c0 	.word	0x0000e3c0
    8d44:	0000e3e0 	.word	0x0000e3e0
    8d48:	0000e40e 	.word	0x0000e40e
    8d4c:	0000e412 	.word	0x0000e412
    8d50:	00008ea5 	.word	0x00008ea5
    8d54:	0000e408 	.word	0x0000e408
    8d58:	00008b17 	.word	0x00008b17

00008d5c <vfiprintf>:
    8d5c:	b538      	push	{r3, r4, r5, lr}
    8d5e:	1c05      	adds	r5, r0, #0
    8d60:	1c0c      	adds	r4, r1, #0
    8d62:	1c13      	adds	r3, r2, #0
    8d64:	4a03      	ldr	r2, [pc, #12]	; (8d74 <vfiprintf+0x18>)
    8d66:	1c29      	adds	r1, r5, #0
    8d68:	6810      	ldr	r0, [r2, #0]
    8d6a:	1c22      	adds	r2, r4, #0
    8d6c:	f7ff fee6 	bl	8b3c <_vfiprintf_r>
    8d70:	bd38      	pop	{r3, r4, r5, pc}
    8d72:	46c0      	nop			; (mov r8, r8)
    8d74:	20000134 	.word	0x20000134

00008d78 <__cvt>:
    8d78:	b5f0      	push	{r4, r5, r6, r7, lr}
    8d7a:	b08b      	sub	sp, #44	; 0x2c
    8d7c:	1c14      	adds	r4, r2, #0
    8d7e:	1e1d      	subs	r5, r3, #0
    8d80:	9912      	ldr	r1, [sp, #72]	; 0x48
    8d82:	da06      	bge.n	8d92 <__cvt+0x1a>
    8d84:	2480      	movs	r4, #128	; 0x80
    8d86:	0624      	lsls	r4, r4, #24
    8d88:	192b      	adds	r3, r5, r4
    8d8a:	1c1d      	adds	r5, r3, #0
    8d8c:	1c14      	adds	r4, r2, #0
    8d8e:	232d      	movs	r3, #45	; 0x2d
    8d90:	e000      	b.n	8d94 <__cvt+0x1c>
    8d92:	2300      	movs	r3, #0
    8d94:	700b      	strb	r3, [r1, #0]
    8d96:	2320      	movs	r3, #32
    8d98:	9e14      	ldr	r6, [sp, #80]	; 0x50
    8d9a:	2203      	movs	r2, #3
    8d9c:	439e      	bics	r6, r3
    8d9e:	2e46      	cmp	r6, #70	; 0x46
    8da0:	d007      	beq.n	8db2 <__cvt+0x3a>
    8da2:	1c33      	adds	r3, r6, #0
    8da4:	3b45      	subs	r3, #69	; 0x45
    8da6:	4259      	negs	r1, r3
    8da8:	414b      	adcs	r3, r1
    8daa:	9910      	ldr	r1, [sp, #64]	; 0x40
    8dac:	3a01      	subs	r2, #1
    8dae:	18cb      	adds	r3, r1, r3
    8db0:	9310      	str	r3, [sp, #64]	; 0x40
    8db2:	9b10      	ldr	r3, [sp, #64]	; 0x40
    8db4:	9200      	str	r2, [sp, #0]
    8db6:	9301      	str	r3, [sp, #4]
    8db8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    8dba:	1c22      	adds	r2, r4, #0
    8dbc:	9302      	str	r3, [sp, #8]
    8dbe:	ab08      	add	r3, sp, #32
    8dc0:	9303      	str	r3, [sp, #12]
    8dc2:	ab09      	add	r3, sp, #36	; 0x24
    8dc4:	9304      	str	r3, [sp, #16]
    8dc6:	1c2b      	adds	r3, r5, #0
    8dc8:	f002 faec 	bl	b3a4 <_dtoa_r>
    8dcc:	1c07      	adds	r7, r0, #0
    8dce:	2e47      	cmp	r6, #71	; 0x47
    8dd0:	d102      	bne.n	8dd8 <__cvt+0x60>
    8dd2:	9b11      	ldr	r3, [sp, #68]	; 0x44
    8dd4:	07db      	lsls	r3, r3, #31
    8dd6:	d52c      	bpl.n	8e32 <__cvt+0xba>
    8dd8:	9b10      	ldr	r3, [sp, #64]	; 0x40
    8dda:	18fb      	adds	r3, r7, r3
    8ddc:	9307      	str	r3, [sp, #28]
    8dde:	2e46      	cmp	r6, #70	; 0x46
    8de0:	d114      	bne.n	8e0c <__cvt+0x94>
    8de2:	783b      	ldrb	r3, [r7, #0]
    8de4:	2b30      	cmp	r3, #48	; 0x30
    8de6:	d10c      	bne.n	8e02 <__cvt+0x8a>
    8de8:	1c20      	adds	r0, r4, #0
    8dea:	1c29      	adds	r1, r5, #0
    8dec:	2200      	movs	r2, #0
    8dee:	2300      	movs	r3, #0
    8df0:	f7fc fb80 	bl	54f4 <__aeabi_dcmpeq>
    8df4:	2800      	cmp	r0, #0
    8df6:	d104      	bne.n	8e02 <__cvt+0x8a>
    8df8:	2301      	movs	r3, #1
    8dfa:	9a10      	ldr	r2, [sp, #64]	; 0x40
    8dfc:	1a9b      	subs	r3, r3, r2
    8dfe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    8e00:	6013      	str	r3, [r2, #0]
    8e02:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    8e04:	9a07      	ldr	r2, [sp, #28]
    8e06:	681b      	ldr	r3, [r3, #0]
    8e08:	18d3      	adds	r3, r2, r3
    8e0a:	9307      	str	r3, [sp, #28]
    8e0c:	1c20      	adds	r0, r4, #0
    8e0e:	1c29      	adds	r1, r5, #0
    8e10:	2200      	movs	r2, #0
    8e12:	2300      	movs	r3, #0
    8e14:	f7fc fb6e 	bl	54f4 <__aeabi_dcmpeq>
    8e18:	2800      	cmp	r0, #0
    8e1a:	d001      	beq.n	8e20 <__cvt+0xa8>
    8e1c:	9b07      	ldr	r3, [sp, #28]
    8e1e:	9309      	str	r3, [sp, #36]	; 0x24
    8e20:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8e22:	9a07      	ldr	r2, [sp, #28]
    8e24:	4293      	cmp	r3, r2
    8e26:	d204      	bcs.n	8e32 <__cvt+0xba>
    8e28:	1c5a      	adds	r2, r3, #1
    8e2a:	9209      	str	r2, [sp, #36]	; 0x24
    8e2c:	2230      	movs	r2, #48	; 0x30
    8e2e:	701a      	strb	r2, [r3, #0]
    8e30:	e7f6      	b.n	8e20 <__cvt+0xa8>
    8e32:	1c38      	adds	r0, r7, #0
    8e34:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8e36:	9a15      	ldr	r2, [sp, #84]	; 0x54
    8e38:	1bdb      	subs	r3, r3, r7
    8e3a:	6013      	str	r3, [r2, #0]
    8e3c:	b00b      	add	sp, #44	; 0x2c
    8e3e:	bdf0      	pop	{r4, r5, r6, r7, pc}

00008e40 <__exponent>:
    8e40:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    8e42:	232b      	movs	r3, #43	; 0x2b
    8e44:	1c07      	adds	r7, r0, #0
    8e46:	1c0c      	adds	r4, r1, #0
    8e48:	7002      	strb	r2, [r0, #0]
    8e4a:	1c86      	adds	r6, r0, #2
    8e4c:	2900      	cmp	r1, #0
    8e4e:	da01      	bge.n	8e54 <__exponent+0x14>
    8e50:	232d      	movs	r3, #45	; 0x2d
    8e52:	424c      	negs	r4, r1
    8e54:	707b      	strb	r3, [r7, #1]
    8e56:	2c09      	cmp	r4, #9
    8e58:	dd1c      	ble.n	8e94 <__exponent+0x54>
    8e5a:	466b      	mov	r3, sp
    8e5c:	1ddd      	adds	r5, r3, #7
    8e5e:	1c20      	adds	r0, r4, #0
    8e60:	210a      	movs	r1, #10
    8e62:	f7fc fb2b 	bl	54bc <__aeabi_idivmod>
    8e66:	3d01      	subs	r5, #1
    8e68:	3130      	adds	r1, #48	; 0x30
    8e6a:	7029      	strb	r1, [r5, #0]
    8e6c:	1c20      	adds	r0, r4, #0
    8e6e:	210a      	movs	r1, #10
    8e70:	f7fc fa3e 	bl	52f0 <__aeabi_idiv>
    8e74:	1e04      	subs	r4, r0, #0
    8e76:	2c09      	cmp	r4, #9
    8e78:	dcf1      	bgt.n	8e5e <__exponent+0x1e>
    8e7a:	3d01      	subs	r5, #1
    8e7c:	3430      	adds	r4, #48	; 0x30
    8e7e:	702c      	strb	r4, [r5, #0]
    8e80:	466b      	mov	r3, sp
    8e82:	3307      	adds	r3, #7
    8e84:	1c30      	adds	r0, r6, #0
    8e86:	42ab      	cmp	r3, r5
    8e88:	d909      	bls.n	8e9e <__exponent+0x5e>
    8e8a:	782b      	ldrb	r3, [r5, #0]
    8e8c:	3501      	adds	r5, #1
    8e8e:	7033      	strb	r3, [r6, #0]
    8e90:	3601      	adds	r6, #1
    8e92:	e7f5      	b.n	8e80 <__exponent+0x40>
    8e94:	2330      	movs	r3, #48	; 0x30
    8e96:	18e4      	adds	r4, r4, r3
    8e98:	7033      	strb	r3, [r6, #0]
    8e9a:	1cb0      	adds	r0, r6, #2
    8e9c:	7074      	strb	r4, [r6, #1]
    8e9e:	1bc0      	subs	r0, r0, r7
    8ea0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

00008ea4 <_printf_float>:
    8ea4:	b5f0      	push	{r4, r5, r6, r7, lr}
    8ea6:	b093      	sub	sp, #76	; 0x4c
    8ea8:	1c0c      	adds	r4, r1, #0
    8eaa:	9208      	str	r2, [sp, #32]
    8eac:	9309      	str	r3, [sp, #36]	; 0x24
    8eae:	9e18      	ldr	r6, [sp, #96]	; 0x60
    8eb0:	1c05      	adds	r5, r0, #0
    8eb2:	f003 fbeb 	bl	c68c <_localeconv_r>
    8eb6:	6803      	ldr	r3, [r0, #0]
    8eb8:	1c18      	adds	r0, r3, #0
    8eba:	930b      	str	r3, [sp, #44]	; 0x2c
    8ebc:	f001 f934 	bl	a128 <strlen>
    8ec0:	2300      	movs	r3, #0
    8ec2:	6821      	ldr	r1, [r4, #0]
    8ec4:	9310      	str	r3, [sp, #64]	; 0x40
    8ec6:	900c      	str	r0, [sp, #48]	; 0x30
    8ec8:	7e27      	ldrb	r7, [r4, #24]
    8eca:	6833      	ldr	r3, [r6, #0]
    8ecc:	2207      	movs	r2, #7
    8ece:	05c9      	lsls	r1, r1, #23
    8ed0:	d501      	bpl.n	8ed6 <_printf_float+0x32>
    8ed2:	189b      	adds	r3, r3, r2
    8ed4:	e000      	b.n	8ed8 <_printf_float+0x34>
    8ed6:	3307      	adds	r3, #7
    8ed8:	4393      	bics	r3, r2
    8eda:	1c1a      	adds	r2, r3, #0
    8edc:	3208      	adds	r2, #8
    8ede:	6032      	str	r2, [r6, #0]
    8ee0:	681a      	ldr	r2, [r3, #0]
    8ee2:	685b      	ldr	r3, [r3, #4]
    8ee4:	64a2      	str	r2, [r4, #72]	; 0x48
    8ee6:	64e3      	str	r3, [r4, #76]	; 0x4c
    8ee8:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    8eea:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    8eec:	f000 ff7a 	bl	9de4 <__fpclassifyd>
    8ef0:	2801      	cmp	r0, #1
    8ef2:	d118      	bne.n	8f26 <_printf_float+0x82>
    8ef4:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    8ef6:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    8ef8:	2200      	movs	r2, #0
    8efa:	2300      	movs	r3, #0
    8efc:	f7fc fb00 	bl	5500 <__aeabi_dcmplt>
    8f00:	2800      	cmp	r0, #0
    8f02:	d003      	beq.n	8f0c <_printf_float+0x68>
    8f04:	1c23      	adds	r3, r4, #0
    8f06:	222d      	movs	r2, #45	; 0x2d
    8f08:	3343      	adds	r3, #67	; 0x43
    8f0a:	701a      	strb	r2, [r3, #0]
    8f0c:	4bb6      	ldr	r3, [pc, #728]	; (91e8 <_printf_float+0x344>)
    8f0e:	930a      	str	r3, [sp, #40]	; 0x28
    8f10:	2f47      	cmp	r7, #71	; 0x47
    8f12:	d901      	bls.n	8f18 <_printf_float+0x74>
    8f14:	4bb5      	ldr	r3, [pc, #724]	; (91ec <_printf_float+0x348>)
    8f16:	930a      	str	r3, [sp, #40]	; 0x28
    8f18:	2303      	movs	r3, #3
    8f1a:	6822      	ldr	r2, [r4, #0]
    8f1c:	6123      	str	r3, [r4, #16]
    8f1e:	3301      	adds	r3, #1
    8f20:	439a      	bics	r2, r3
    8f22:	6022      	str	r2, [r4, #0]
    8f24:	e012      	b.n	8f4c <_printf_float+0xa8>
    8f26:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    8f28:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    8f2a:	f000 ff5b 	bl	9de4 <__fpclassifyd>
    8f2e:	6826      	ldr	r6, [r4, #0]
    8f30:	2800      	cmp	r0, #0
    8f32:	d10d      	bne.n	8f50 <_printf_float+0xac>
    8f34:	4bae      	ldr	r3, [pc, #696]	; (91f0 <_printf_float+0x34c>)
    8f36:	930a      	str	r3, [sp, #40]	; 0x28
    8f38:	2f47      	cmp	r7, #71	; 0x47
    8f3a:	d901      	bls.n	8f40 <_printf_float+0x9c>
    8f3c:	4bad      	ldr	r3, [pc, #692]	; (91f4 <_printf_float+0x350>)
    8f3e:	930a      	str	r3, [sp, #40]	; 0x28
    8f40:	2303      	movs	r3, #3
    8f42:	1c31      	adds	r1, r6, #0
    8f44:	6123      	str	r3, [r4, #16]
    8f46:	3301      	adds	r3, #1
    8f48:	4399      	bics	r1, r3
    8f4a:	6021      	str	r1, [r4, #0]
    8f4c:	2600      	movs	r6, #0
    8f4e:	e080      	b.n	9052 <_printf_float+0x1ae>
    8f50:	2180      	movs	r1, #128	; 0x80
    8f52:	6860      	ldr	r0, [r4, #4]
    8f54:	00c9      	lsls	r1, r1, #3
    8f56:	1c43      	adds	r3, r0, #1
    8f58:	d101      	bne.n	8f5e <_printf_float+0xba>
    8f5a:	2306      	movs	r3, #6
    8f5c:	e009      	b.n	8f72 <_printf_float+0xce>
    8f5e:	6ca2      	ldr	r2, [r4, #72]	; 0x48
    8f60:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
    8f62:	2f67      	cmp	r7, #103	; 0x67
    8f64:	d001      	beq.n	8f6a <_printf_float+0xc6>
    8f66:	2f47      	cmp	r7, #71	; 0x47
    8f68:	d104      	bne.n	8f74 <_printf_float+0xd0>
    8f6a:	2800      	cmp	r0, #0
    8f6c:	d000      	beq.n	8f70 <_printf_float+0xcc>
    8f6e:	e1c0      	b.n	92f2 <_printf_float+0x44e>
    8f70:	2301      	movs	r3, #1
    8f72:	6063      	str	r3, [r4, #4]
    8f74:	6863      	ldr	r3, [r4, #4]
    8f76:	4331      	orrs	r1, r6
    8f78:	9300      	str	r3, [sp, #0]
    8f7a:	2323      	movs	r3, #35	; 0x23
    8f7c:	6021      	str	r1, [r4, #0]
    8f7e:	9101      	str	r1, [sp, #4]
    8f80:	2100      	movs	r1, #0
    8f82:	aa06      	add	r2, sp, #24
    8f84:	189b      	adds	r3, r3, r2
    8f86:	9302      	str	r3, [sp, #8]
    8f88:	ab0f      	add	r3, sp, #60	; 0x3c
    8f8a:	9303      	str	r3, [sp, #12]
    8f8c:	ab10      	add	r3, sp, #64	; 0x40
    8f8e:	9305      	str	r3, [sp, #20]
    8f90:	9704      	str	r7, [sp, #16]
    8f92:	6ca2      	ldr	r2, [r4, #72]	; 0x48
    8f94:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
    8f96:	9106      	str	r1, [sp, #24]
    8f98:	1c28      	adds	r0, r5, #0
    8f9a:	f7ff feed 	bl	8d78 <__cvt>
    8f9e:	2320      	movs	r3, #32
    8fa0:	1c3a      	adds	r2, r7, #0
    8fa2:	900a      	str	r0, [sp, #40]	; 0x28
    8fa4:	439a      	bics	r2, r3
    8fa6:	2a47      	cmp	r2, #71	; 0x47
    8fa8:	d107      	bne.n	8fba <_printf_float+0x116>
    8faa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    8fac:	1cda      	adds	r2, r3, #3
    8fae:	db02      	blt.n	8fb6 <_printf_float+0x112>
    8fb0:	6862      	ldr	r2, [r4, #4]
    8fb2:	4293      	cmp	r3, r2
    8fb4:	dd2d      	ble.n	9012 <_printf_float+0x16e>
    8fb6:	3f02      	subs	r7, #2
    8fb8:	b2ff      	uxtb	r7, r7
    8fba:	990f      	ldr	r1, [sp, #60]	; 0x3c
    8fbc:	2f65      	cmp	r7, #101	; 0x65
    8fbe:	d812      	bhi.n	8fe6 <_printf_float+0x142>
    8fc0:	1c20      	adds	r0, r4, #0
    8fc2:	3901      	subs	r1, #1
    8fc4:	1c3a      	adds	r2, r7, #0
    8fc6:	3050      	adds	r0, #80	; 0x50
    8fc8:	910f      	str	r1, [sp, #60]	; 0x3c
    8fca:	f7ff ff39 	bl	8e40 <__exponent>
    8fce:	9a10      	ldr	r2, [sp, #64]	; 0x40
    8fd0:	1c06      	adds	r6, r0, #0
    8fd2:	1883      	adds	r3, r0, r2
    8fd4:	6123      	str	r3, [r4, #16]
    8fd6:	2a01      	cmp	r2, #1
    8fd8:	dc02      	bgt.n	8fe0 <_printf_float+0x13c>
    8fda:	6822      	ldr	r2, [r4, #0]
    8fdc:	07d2      	lsls	r2, r2, #31
    8fde:	d52e      	bpl.n	903e <_printf_float+0x19a>
    8fe0:	3301      	adds	r3, #1
    8fe2:	6123      	str	r3, [r4, #16]
    8fe4:	e02b      	b.n	903e <_printf_float+0x19a>
    8fe6:	2f66      	cmp	r7, #102	; 0x66
    8fe8:	d114      	bne.n	9014 <_printf_float+0x170>
    8fea:	6863      	ldr	r3, [r4, #4]
    8fec:	2900      	cmp	r1, #0
    8fee:	dd08      	ble.n	9002 <_printf_float+0x15e>
    8ff0:	6121      	str	r1, [r4, #16]
    8ff2:	2b00      	cmp	r3, #0
    8ff4:	d102      	bne.n	8ffc <_printf_float+0x158>
    8ff6:	6822      	ldr	r2, [r4, #0]
    8ff8:	07d2      	lsls	r2, r2, #31
    8ffa:	d51d      	bpl.n	9038 <_printf_float+0x194>
    8ffc:	3301      	adds	r3, #1
    8ffe:	18cb      	adds	r3, r1, r3
    9000:	e011      	b.n	9026 <_printf_float+0x182>
    9002:	2b00      	cmp	r3, #0
    9004:	d103      	bne.n	900e <_printf_float+0x16a>
    9006:	2201      	movs	r2, #1
    9008:	6821      	ldr	r1, [r4, #0]
    900a:	4211      	tst	r1, r2
    900c:	d013      	beq.n	9036 <_printf_float+0x192>
    900e:	1c9a      	adds	r2, r3, #2
    9010:	e011      	b.n	9036 <_printf_float+0x192>
    9012:	2767      	movs	r7, #103	; 0x67
    9014:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    9016:	9810      	ldr	r0, [sp, #64]	; 0x40
    9018:	4283      	cmp	r3, r0
    901a:	db06      	blt.n	902a <_printf_float+0x186>
    901c:	6822      	ldr	r2, [r4, #0]
    901e:	6123      	str	r3, [r4, #16]
    9020:	07d2      	lsls	r2, r2, #31
    9022:	d509      	bpl.n	9038 <_printf_float+0x194>
    9024:	3301      	adds	r3, #1
    9026:	6123      	str	r3, [r4, #16]
    9028:	e006      	b.n	9038 <_printf_float+0x194>
    902a:	2201      	movs	r2, #1
    902c:	2b00      	cmp	r3, #0
    902e:	dc01      	bgt.n	9034 <_printf_float+0x190>
    9030:	2102      	movs	r1, #2
    9032:	1aca      	subs	r2, r1, r3
    9034:	1882      	adds	r2, r0, r2
    9036:	6122      	str	r2, [r4, #16]
    9038:	2600      	movs	r6, #0
    903a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    903c:	65a3      	str	r3, [r4, #88]	; 0x58
    903e:	2323      	movs	r3, #35	; 0x23
    9040:	aa06      	add	r2, sp, #24
    9042:	189b      	adds	r3, r3, r2
    9044:	781b      	ldrb	r3, [r3, #0]
    9046:	2b00      	cmp	r3, #0
    9048:	d003      	beq.n	9052 <_printf_float+0x1ae>
    904a:	1c23      	adds	r3, r4, #0
    904c:	222d      	movs	r2, #45	; 0x2d
    904e:	3343      	adds	r3, #67	; 0x43
    9050:	701a      	strb	r2, [r3, #0]
    9052:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9054:	1c28      	adds	r0, r5, #0
    9056:	9300      	str	r3, [sp, #0]
    9058:	1c21      	adds	r1, r4, #0
    905a:	9b08      	ldr	r3, [sp, #32]
    905c:	aa11      	add	r2, sp, #68	; 0x44
    905e:	f000 f95f 	bl	9320 <_printf_common>
    9062:	1c43      	adds	r3, r0, #1
    9064:	d102      	bne.n	906c <_printf_float+0x1c8>
    9066:	2001      	movs	r0, #1
    9068:	4240      	negs	r0, r0
    906a:	e156      	b.n	931a <_printf_float+0x476>
    906c:	6822      	ldr	r2, [r4, #0]
    906e:	0553      	lsls	r3, r2, #21
    9070:	d404      	bmi.n	907c <_printf_float+0x1d8>
    9072:	1c28      	adds	r0, r5, #0
    9074:	9908      	ldr	r1, [sp, #32]
    9076:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    9078:	6923      	ldr	r3, [r4, #16]
    907a:	e116      	b.n	92aa <_printf_float+0x406>
    907c:	2f65      	cmp	r7, #101	; 0x65
    907e:	d800      	bhi.n	9082 <_printf_float+0x1de>
    9080:	e0d4      	b.n	922c <_printf_float+0x388>
    9082:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    9084:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    9086:	2200      	movs	r2, #0
    9088:	2300      	movs	r3, #0
    908a:	f7fc fa33 	bl	54f4 <__aeabi_dcmpeq>
    908e:	2800      	cmp	r0, #0
    9090:	d02b      	beq.n	90ea <_printf_float+0x246>
    9092:	2301      	movs	r3, #1
    9094:	1c28      	adds	r0, r5, #0
    9096:	9908      	ldr	r1, [sp, #32]
    9098:	4a57      	ldr	r2, [pc, #348]	; (91f8 <_printf_float+0x354>)
    909a:	9e09      	ldr	r6, [sp, #36]	; 0x24
    909c:	47b0      	blx	r6
    909e:	1c43      	adds	r3, r0, #1
    90a0:	d0e1      	beq.n	9066 <_printf_float+0x1c2>
    90a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    90a4:	9a10      	ldr	r2, [sp, #64]	; 0x40
    90a6:	4293      	cmp	r3, r2
    90a8:	db07      	blt.n	90ba <_printf_float+0x216>
    90aa:	6823      	ldr	r3, [r4, #0]
    90ac:	07db      	lsls	r3, r3, #31
    90ae:	d404      	bmi.n	90ba <_printf_float+0x216>
    90b0:	6823      	ldr	r3, [r4, #0]
    90b2:	079b      	lsls	r3, r3, #30
    90b4:	d500      	bpl.n	90b8 <_printf_float+0x214>
    90b6:	e11a      	b.n	92ee <_printf_float+0x44a>
    90b8:	e113      	b.n	92e2 <_printf_float+0x43e>
    90ba:	9e09      	ldr	r6, [sp, #36]	; 0x24
    90bc:	1c28      	adds	r0, r5, #0
    90be:	9908      	ldr	r1, [sp, #32]
    90c0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    90c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    90c4:	47b0      	blx	r6
    90c6:	2600      	movs	r6, #0
    90c8:	1c43      	adds	r3, r0, #1
    90ca:	d0cc      	beq.n	9066 <_printf_float+0x1c2>
    90cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
    90ce:	3b01      	subs	r3, #1
    90d0:	429e      	cmp	r6, r3
    90d2:	daed      	bge.n	90b0 <_printf_float+0x20c>
    90d4:	1c22      	adds	r2, r4, #0
    90d6:	2301      	movs	r3, #1
    90d8:	1c28      	adds	r0, r5, #0
    90da:	9908      	ldr	r1, [sp, #32]
    90dc:	321a      	adds	r2, #26
    90de:	9f09      	ldr	r7, [sp, #36]	; 0x24
    90e0:	47b8      	blx	r7
    90e2:	1c43      	adds	r3, r0, #1
    90e4:	d0bf      	beq.n	9066 <_printf_float+0x1c2>
    90e6:	3601      	adds	r6, #1
    90e8:	e7f0      	b.n	90cc <_printf_float+0x228>
    90ea:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    90ec:	2b00      	cmp	r3, #0
    90ee:	dc2b      	bgt.n	9148 <_printf_float+0x2a4>
    90f0:	2301      	movs	r3, #1
    90f2:	1c28      	adds	r0, r5, #0
    90f4:	9908      	ldr	r1, [sp, #32]
    90f6:	4a40      	ldr	r2, [pc, #256]	; (91f8 <_printf_float+0x354>)
    90f8:	9e09      	ldr	r6, [sp, #36]	; 0x24
    90fa:	47b0      	blx	r6
    90fc:	1c43      	adds	r3, r0, #1
    90fe:	d0b2      	beq.n	9066 <_printf_float+0x1c2>
    9100:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    9102:	2b00      	cmp	r3, #0
    9104:	d105      	bne.n	9112 <_printf_float+0x26e>
    9106:	9b10      	ldr	r3, [sp, #64]	; 0x40
    9108:	2b00      	cmp	r3, #0
    910a:	d102      	bne.n	9112 <_printf_float+0x26e>
    910c:	6823      	ldr	r3, [r4, #0]
    910e:	07db      	lsls	r3, r3, #31
    9110:	d5ce      	bpl.n	90b0 <_printf_float+0x20c>
    9112:	9e09      	ldr	r6, [sp, #36]	; 0x24
    9114:	1c28      	adds	r0, r5, #0
    9116:	9908      	ldr	r1, [sp, #32]
    9118:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    911a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    911c:	47b0      	blx	r6
    911e:	2600      	movs	r6, #0
    9120:	1c43      	adds	r3, r0, #1
    9122:	d0a0      	beq.n	9066 <_printf_float+0x1c2>
    9124:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    9126:	1c28      	adds	r0, r5, #0
    9128:	425b      	negs	r3, r3
    912a:	9908      	ldr	r1, [sp, #32]
    912c:	429e      	cmp	r6, r3
    912e:	da08      	bge.n	9142 <_printf_float+0x29e>
    9130:	1c22      	adds	r2, r4, #0
    9132:	2301      	movs	r3, #1
    9134:	321a      	adds	r2, #26
    9136:	9f09      	ldr	r7, [sp, #36]	; 0x24
    9138:	47b8      	blx	r7
    913a:	1c43      	adds	r3, r0, #1
    913c:	d093      	beq.n	9066 <_printf_float+0x1c2>
    913e:	3601      	adds	r6, #1
    9140:	e7f0      	b.n	9124 <_printf_float+0x280>
    9142:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    9144:	9b10      	ldr	r3, [sp, #64]	; 0x40
    9146:	e0b0      	b.n	92aa <_printf_float+0x406>
    9148:	9b10      	ldr	r3, [sp, #64]	; 0x40
    914a:	6da6      	ldr	r6, [r4, #88]	; 0x58
    914c:	429e      	cmp	r6, r3
    914e:	dd00      	ble.n	9152 <_printf_float+0x2ae>
    9150:	1c1e      	adds	r6, r3, #0
    9152:	2e00      	cmp	r6, #0
    9154:	dc01      	bgt.n	915a <_printf_float+0x2b6>
    9156:	2300      	movs	r3, #0
    9158:	e014      	b.n	9184 <_printf_float+0x2e0>
    915a:	1c33      	adds	r3, r6, #0
    915c:	1c28      	adds	r0, r5, #0
    915e:	9908      	ldr	r1, [sp, #32]
    9160:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    9162:	9f09      	ldr	r7, [sp, #36]	; 0x24
    9164:	47b8      	blx	r7
    9166:	1c43      	adds	r3, r0, #1
    9168:	d1f5      	bne.n	9156 <_printf_float+0x2b2>
    916a:	e77c      	b.n	9066 <_printf_float+0x1c2>
    916c:	1c22      	adds	r2, r4, #0
    916e:	2301      	movs	r3, #1
    9170:	1c28      	adds	r0, r5, #0
    9172:	9908      	ldr	r1, [sp, #32]
    9174:	321a      	adds	r2, #26
    9176:	9f09      	ldr	r7, [sp, #36]	; 0x24
    9178:	47b8      	blx	r7
    917a:	1c43      	adds	r3, r0, #1
    917c:	d100      	bne.n	9180 <_printf_float+0x2dc>
    917e:	e772      	b.n	9066 <_printf_float+0x1c2>
    9180:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    9182:	3301      	adds	r3, #1
    9184:	930d      	str	r3, [sp, #52]	; 0x34
    9186:	43f3      	mvns	r3, r6
    9188:	6da2      	ldr	r2, [r4, #88]	; 0x58
    918a:	17db      	asrs	r3, r3, #31
    918c:	990d      	ldr	r1, [sp, #52]	; 0x34
    918e:	4033      	ands	r3, r6
    9190:	1ad3      	subs	r3, r2, r3
    9192:	4299      	cmp	r1, r3
    9194:	dbea      	blt.n	916c <_printf_float+0x2c8>
    9196:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9198:	189e      	adds	r6, r3, r2
    919a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    919c:	9a10      	ldr	r2, [sp, #64]	; 0x40
    919e:	4293      	cmp	r3, r2
    91a0:	db0e      	blt.n	91c0 <_printf_float+0x31c>
    91a2:	6823      	ldr	r3, [r4, #0]
    91a4:	07db      	lsls	r3, r3, #31
    91a6:	d40b      	bmi.n	91c0 <_printf_float+0x31c>
    91a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
    91aa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    91ac:	18d7      	adds	r7, r2, r3
    91ae:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    91b0:	1bbf      	subs	r7, r7, r6
    91b2:	1a9b      	subs	r3, r3, r2
    91b4:	429f      	cmp	r7, r3
    91b6:	dd00      	ble.n	91ba <_printf_float+0x316>
    91b8:	1c1f      	adds	r7, r3, #0
    91ba:	2f00      	cmp	r7, #0
    91bc:	dc09      	bgt.n	91d2 <_printf_float+0x32e>
    91be:	e011      	b.n	91e4 <_printf_float+0x340>
    91c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    91c2:	1c28      	adds	r0, r5, #0
    91c4:	9908      	ldr	r1, [sp, #32]
    91c6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    91c8:	9f09      	ldr	r7, [sp, #36]	; 0x24
    91ca:	47b8      	blx	r7
    91cc:	1c43      	adds	r3, r0, #1
    91ce:	d1eb      	bne.n	91a8 <_printf_float+0x304>
    91d0:	e749      	b.n	9066 <_printf_float+0x1c2>
    91d2:	1c32      	adds	r2, r6, #0
    91d4:	1c3b      	adds	r3, r7, #0
    91d6:	1c28      	adds	r0, r5, #0
    91d8:	9908      	ldr	r1, [sp, #32]
    91da:	9e09      	ldr	r6, [sp, #36]	; 0x24
    91dc:	47b0      	blx	r6
    91de:	1c43      	adds	r3, r0, #1
    91e0:	d100      	bne.n	91e4 <_printf_float+0x340>
    91e2:	e740      	b.n	9066 <_printf_float+0x1c2>
    91e4:	2300      	movs	r3, #0
    91e6:	e015      	b.n	9214 <_printf_float+0x370>
    91e8:	0000e419 	.word	0x0000e419
    91ec:	0000e41d 	.word	0x0000e41d
    91f0:	0000e421 	.word	0x0000e421
    91f4:	0000e425 	.word	0x0000e425
    91f8:	0000e472 	.word	0x0000e472
    91fc:	1c22      	adds	r2, r4, #0
    91fe:	2301      	movs	r3, #1
    9200:	1c28      	adds	r0, r5, #0
    9202:	9908      	ldr	r1, [sp, #32]
    9204:	321a      	adds	r2, #26
    9206:	9e09      	ldr	r6, [sp, #36]	; 0x24
    9208:	47b0      	blx	r6
    920a:	1c43      	adds	r3, r0, #1
    920c:	d100      	bne.n	9210 <_printf_float+0x36c>
    920e:	e72a      	b.n	9066 <_printf_float+0x1c2>
    9210:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9212:	3301      	adds	r3, #1
    9214:	930a      	str	r3, [sp, #40]	; 0x28
    9216:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    9218:	9b10      	ldr	r3, [sp, #64]	; 0x40
    921a:	1a9a      	subs	r2, r3, r2
    921c:	43fb      	mvns	r3, r7
    921e:	17db      	asrs	r3, r3, #31
    9220:	403b      	ands	r3, r7
    9222:	1ad3      	subs	r3, r2, r3
    9224:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    9226:	429a      	cmp	r2, r3
    9228:	dbe8      	blt.n	91fc <_printf_float+0x358>
    922a:	e741      	b.n	90b0 <_printf_float+0x20c>
    922c:	9b10      	ldr	r3, [sp, #64]	; 0x40
    922e:	1c28      	adds	r0, r5, #0
    9230:	9908      	ldr	r1, [sp, #32]
    9232:	2b01      	cmp	r3, #1
    9234:	dc02      	bgt.n	923c <_printf_float+0x398>
    9236:	2301      	movs	r3, #1
    9238:	421a      	tst	r2, r3
    923a:	d03c      	beq.n	92b6 <_printf_float+0x412>
    923c:	2301      	movs	r3, #1
    923e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    9240:	9f09      	ldr	r7, [sp, #36]	; 0x24
    9242:	47b8      	blx	r7
    9244:	1c43      	adds	r3, r0, #1
    9246:	d100      	bne.n	924a <_printf_float+0x3a6>
    9248:	e70d      	b.n	9066 <_printf_float+0x1c2>
    924a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    924c:	1c28      	adds	r0, r5, #0
    924e:	9908      	ldr	r1, [sp, #32]
    9250:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    9252:	9f09      	ldr	r7, [sp, #36]	; 0x24
    9254:	47b8      	blx	r7
    9256:	1c43      	adds	r3, r0, #1
    9258:	d100      	bne.n	925c <_printf_float+0x3b8>
    925a:	e704      	b.n	9066 <_printf_float+0x1c2>
    925c:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    925e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    9260:	2300      	movs	r3, #0
    9262:	2200      	movs	r2, #0
    9264:	f7fc f946 	bl	54f4 <__aeabi_dcmpeq>
    9268:	2300      	movs	r3, #0
    926a:	2800      	cmp	r0, #0
    926c:	d112      	bne.n	9294 <_printf_float+0x3f0>
    926e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    9270:	9b10      	ldr	r3, [sp, #64]	; 0x40
    9272:	3201      	adds	r2, #1
    9274:	3b01      	subs	r3, #1
    9276:	1c28      	adds	r0, r5, #0
    9278:	9908      	ldr	r1, [sp, #32]
    927a:	e01d      	b.n	92b8 <_printf_float+0x414>
    927c:	1c22      	adds	r2, r4, #0
    927e:	2301      	movs	r3, #1
    9280:	1c28      	adds	r0, r5, #0
    9282:	9908      	ldr	r1, [sp, #32]
    9284:	321a      	adds	r2, #26
    9286:	9f09      	ldr	r7, [sp, #36]	; 0x24
    9288:	47b8      	blx	r7
    928a:	1c43      	adds	r3, r0, #1
    928c:	d100      	bne.n	9290 <_printf_float+0x3ec>
    928e:	e6ea      	b.n	9066 <_printf_float+0x1c2>
    9290:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9292:	3301      	adds	r3, #1
    9294:	930a      	str	r3, [sp, #40]	; 0x28
    9296:	9b10      	ldr	r3, [sp, #64]	; 0x40
    9298:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    929a:	3b01      	subs	r3, #1
    929c:	429a      	cmp	r2, r3
    929e:	dbed      	blt.n	927c <_printf_float+0x3d8>
    92a0:	1c22      	adds	r2, r4, #0
    92a2:	1c28      	adds	r0, r5, #0
    92a4:	1c33      	adds	r3, r6, #0
    92a6:	9908      	ldr	r1, [sp, #32]
    92a8:	3250      	adds	r2, #80	; 0x50
    92aa:	9e09      	ldr	r6, [sp, #36]	; 0x24
    92ac:	47b0      	blx	r6
    92ae:	1c43      	adds	r3, r0, #1
    92b0:	d000      	beq.n	92b4 <_printf_float+0x410>
    92b2:	e6fd      	b.n	90b0 <_printf_float+0x20c>
    92b4:	e6d7      	b.n	9066 <_printf_float+0x1c2>
    92b6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    92b8:	9f09      	ldr	r7, [sp, #36]	; 0x24
    92ba:	47b8      	blx	r7
    92bc:	1c43      	adds	r3, r0, #1
    92be:	d1ef      	bne.n	92a0 <_printf_float+0x3fc>
    92c0:	e6d1      	b.n	9066 <_printf_float+0x1c2>
    92c2:	1c22      	adds	r2, r4, #0
    92c4:	2301      	movs	r3, #1
    92c6:	1c28      	adds	r0, r5, #0
    92c8:	9908      	ldr	r1, [sp, #32]
    92ca:	3219      	adds	r2, #25
    92cc:	9f09      	ldr	r7, [sp, #36]	; 0x24
    92ce:	47b8      	blx	r7
    92d0:	1c43      	adds	r3, r0, #1
    92d2:	d100      	bne.n	92d6 <_printf_float+0x432>
    92d4:	e6c7      	b.n	9066 <_printf_float+0x1c2>
    92d6:	3601      	adds	r6, #1
    92d8:	68e3      	ldr	r3, [r4, #12]
    92da:	9a11      	ldr	r2, [sp, #68]	; 0x44
    92dc:	1a9b      	subs	r3, r3, r2
    92de:	429e      	cmp	r6, r3
    92e0:	dbef      	blt.n	92c2 <_printf_float+0x41e>
    92e2:	9b11      	ldr	r3, [sp, #68]	; 0x44
    92e4:	68e0      	ldr	r0, [r4, #12]
    92e6:	4298      	cmp	r0, r3
    92e8:	da17      	bge.n	931a <_printf_float+0x476>
    92ea:	1c18      	adds	r0, r3, #0
    92ec:	e015      	b.n	931a <_printf_float+0x476>
    92ee:	2600      	movs	r6, #0
    92f0:	e7f2      	b.n	92d8 <_printf_float+0x434>
    92f2:	4331      	orrs	r1, r6
    92f4:	6021      	str	r1, [r4, #0]
    92f6:	9101      	str	r1, [sp, #4]
    92f8:	2123      	movs	r1, #35	; 0x23
    92fa:	9000      	str	r0, [sp, #0]
    92fc:	a806      	add	r0, sp, #24
    92fe:	1809      	adds	r1, r1, r0
    9300:	9102      	str	r1, [sp, #8]
    9302:	a90f      	add	r1, sp, #60	; 0x3c
    9304:	9103      	str	r1, [sp, #12]
    9306:	a910      	add	r1, sp, #64	; 0x40
    9308:	9105      	str	r1, [sp, #20]
    930a:	2100      	movs	r1, #0
    930c:	9704      	str	r7, [sp, #16]
    930e:	9106      	str	r1, [sp, #24]
    9310:	1c28      	adds	r0, r5, #0
    9312:	f7ff fd31 	bl	8d78 <__cvt>
    9316:	900a      	str	r0, [sp, #40]	; 0x28
    9318:	e647      	b.n	8faa <_printf_float+0x106>
    931a:	b013      	add	sp, #76	; 0x4c
    931c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    931e:	46c0      	nop			; (mov r8, r8)

00009320 <_printf_common>:
    9320:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    9322:	1c17      	adds	r7, r2, #0
    9324:	9301      	str	r3, [sp, #4]
    9326:	690a      	ldr	r2, [r1, #16]
    9328:	688b      	ldr	r3, [r1, #8]
    932a:	9000      	str	r0, [sp, #0]
    932c:	1c0c      	adds	r4, r1, #0
    932e:	4293      	cmp	r3, r2
    9330:	da00      	bge.n	9334 <_printf_common+0x14>
    9332:	1c13      	adds	r3, r2, #0
    9334:	1c22      	adds	r2, r4, #0
    9336:	603b      	str	r3, [r7, #0]
    9338:	3243      	adds	r2, #67	; 0x43
    933a:	7812      	ldrb	r2, [r2, #0]
    933c:	2a00      	cmp	r2, #0
    933e:	d001      	beq.n	9344 <_printf_common+0x24>
    9340:	3301      	adds	r3, #1
    9342:	603b      	str	r3, [r7, #0]
    9344:	6823      	ldr	r3, [r4, #0]
    9346:	069b      	lsls	r3, r3, #26
    9348:	d502      	bpl.n	9350 <_printf_common+0x30>
    934a:	683b      	ldr	r3, [r7, #0]
    934c:	3302      	adds	r3, #2
    934e:	603b      	str	r3, [r7, #0]
    9350:	2506      	movs	r5, #6
    9352:	6823      	ldr	r3, [r4, #0]
    9354:	401d      	ands	r5, r3
    9356:	d01e      	beq.n	9396 <_printf_common+0x76>
    9358:	1c23      	adds	r3, r4, #0
    935a:	3343      	adds	r3, #67	; 0x43
    935c:	781b      	ldrb	r3, [r3, #0]
    935e:	1e5a      	subs	r2, r3, #1
    9360:	4193      	sbcs	r3, r2
    9362:	6822      	ldr	r2, [r4, #0]
    9364:	0692      	lsls	r2, r2, #26
    9366:	d51c      	bpl.n	93a2 <_printf_common+0x82>
    9368:	2030      	movs	r0, #48	; 0x30
    936a:	18e1      	adds	r1, r4, r3
    936c:	3140      	adds	r1, #64	; 0x40
    936e:	70c8      	strb	r0, [r1, #3]
    9370:	1c21      	adds	r1, r4, #0
    9372:	1c5a      	adds	r2, r3, #1
    9374:	3145      	adds	r1, #69	; 0x45
    9376:	7809      	ldrb	r1, [r1, #0]
    9378:	18a2      	adds	r2, r4, r2
    937a:	3240      	adds	r2, #64	; 0x40
    937c:	3302      	adds	r3, #2
    937e:	70d1      	strb	r1, [r2, #3]
    9380:	e00f      	b.n	93a2 <_printf_common+0x82>
    9382:	1c22      	adds	r2, r4, #0
    9384:	2301      	movs	r3, #1
    9386:	9800      	ldr	r0, [sp, #0]
    9388:	9901      	ldr	r1, [sp, #4]
    938a:	3219      	adds	r2, #25
    938c:	9e08      	ldr	r6, [sp, #32]
    938e:	47b0      	blx	r6
    9390:	1c43      	adds	r3, r0, #1
    9392:	d00e      	beq.n	93b2 <_printf_common+0x92>
    9394:	3501      	adds	r5, #1
    9396:	68e3      	ldr	r3, [r4, #12]
    9398:	683a      	ldr	r2, [r7, #0]
    939a:	1a9b      	subs	r3, r3, r2
    939c:	429d      	cmp	r5, r3
    939e:	dbf0      	blt.n	9382 <_printf_common+0x62>
    93a0:	e7da      	b.n	9358 <_printf_common+0x38>
    93a2:	1c22      	adds	r2, r4, #0
    93a4:	9800      	ldr	r0, [sp, #0]
    93a6:	9901      	ldr	r1, [sp, #4]
    93a8:	3243      	adds	r2, #67	; 0x43
    93aa:	9d08      	ldr	r5, [sp, #32]
    93ac:	47a8      	blx	r5
    93ae:	1c43      	adds	r3, r0, #1
    93b0:	d102      	bne.n	93b8 <_printf_common+0x98>
    93b2:	2001      	movs	r0, #1
    93b4:	4240      	negs	r0, r0
    93b6:	e020      	b.n	93fa <_printf_common+0xda>
    93b8:	2306      	movs	r3, #6
    93ba:	6820      	ldr	r0, [r4, #0]
    93bc:	68e1      	ldr	r1, [r4, #12]
    93be:	683a      	ldr	r2, [r7, #0]
    93c0:	4003      	ands	r3, r0
    93c2:	2500      	movs	r5, #0
    93c4:	2b04      	cmp	r3, #4
    93c6:	d103      	bne.n	93d0 <_printf_common+0xb0>
    93c8:	1a8d      	subs	r5, r1, r2
    93ca:	43eb      	mvns	r3, r5
    93cc:	17db      	asrs	r3, r3, #31
    93ce:	401d      	ands	r5, r3
    93d0:	68a3      	ldr	r3, [r4, #8]
    93d2:	6922      	ldr	r2, [r4, #16]
    93d4:	4293      	cmp	r3, r2
    93d6:	dd01      	ble.n	93dc <_printf_common+0xbc>
    93d8:	1a9b      	subs	r3, r3, r2
    93da:	18ed      	adds	r5, r5, r3
    93dc:	2700      	movs	r7, #0
    93de:	42af      	cmp	r7, r5
    93e0:	da0a      	bge.n	93f8 <_printf_common+0xd8>
    93e2:	1c22      	adds	r2, r4, #0
    93e4:	2301      	movs	r3, #1
    93e6:	9800      	ldr	r0, [sp, #0]
    93e8:	9901      	ldr	r1, [sp, #4]
    93ea:	321a      	adds	r2, #26
    93ec:	9e08      	ldr	r6, [sp, #32]
    93ee:	47b0      	blx	r6
    93f0:	1c43      	adds	r3, r0, #1
    93f2:	d0de      	beq.n	93b2 <_printf_common+0x92>
    93f4:	3701      	adds	r7, #1
    93f6:	e7f2      	b.n	93de <_printf_common+0xbe>
    93f8:	2000      	movs	r0, #0
    93fa:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

000093fc <_printf_i>:
    93fc:	b5f0      	push	{r4, r5, r6, r7, lr}
    93fe:	b08b      	sub	sp, #44	; 0x2c
    9400:	9206      	str	r2, [sp, #24]
    9402:	1c0a      	adds	r2, r1, #0
    9404:	3243      	adds	r2, #67	; 0x43
    9406:	9307      	str	r3, [sp, #28]
    9408:	9005      	str	r0, [sp, #20]
    940a:	9204      	str	r2, [sp, #16]
    940c:	7e0a      	ldrb	r2, [r1, #24]
    940e:	1c0c      	adds	r4, r1, #0
    9410:	9b10      	ldr	r3, [sp, #64]	; 0x40
    9412:	2a6e      	cmp	r2, #110	; 0x6e
    9414:	d100      	bne.n	9418 <_printf_i+0x1c>
    9416:	e0a8      	b.n	956a <_printf_i+0x16e>
    9418:	d811      	bhi.n	943e <_printf_i+0x42>
    941a:	2a63      	cmp	r2, #99	; 0x63
    941c:	d022      	beq.n	9464 <_printf_i+0x68>
    941e:	d809      	bhi.n	9434 <_printf_i+0x38>
    9420:	2a00      	cmp	r2, #0
    9422:	d100      	bne.n	9426 <_printf_i+0x2a>
    9424:	e0b2      	b.n	958c <_printf_i+0x190>
    9426:	2a58      	cmp	r2, #88	; 0x58
    9428:	d000      	beq.n	942c <_printf_i+0x30>
    942a:	e0c2      	b.n	95b2 <_printf_i+0x1b6>
    942c:	3145      	adds	r1, #69	; 0x45
    942e:	700a      	strb	r2, [r1, #0]
    9430:	4a7c      	ldr	r2, [pc, #496]	; (9624 <_printf_i+0x228>)
    9432:	e04f      	b.n	94d4 <_printf_i+0xd8>
    9434:	2a64      	cmp	r2, #100	; 0x64
    9436:	d01d      	beq.n	9474 <_printf_i+0x78>
    9438:	2a69      	cmp	r2, #105	; 0x69
    943a:	d01b      	beq.n	9474 <_printf_i+0x78>
    943c:	e0b9      	b.n	95b2 <_printf_i+0x1b6>
    943e:	2a73      	cmp	r2, #115	; 0x73
    9440:	d100      	bne.n	9444 <_printf_i+0x48>
    9442:	e0a7      	b.n	9594 <_printf_i+0x198>
    9444:	d809      	bhi.n	945a <_printf_i+0x5e>
    9446:	2a6f      	cmp	r2, #111	; 0x6f
    9448:	d029      	beq.n	949e <_printf_i+0xa2>
    944a:	2a70      	cmp	r2, #112	; 0x70
    944c:	d000      	beq.n	9450 <_printf_i+0x54>
    944e:	e0b0      	b.n	95b2 <_printf_i+0x1b6>
    9450:	2220      	movs	r2, #32
    9452:	6809      	ldr	r1, [r1, #0]
    9454:	430a      	orrs	r2, r1
    9456:	6022      	str	r2, [r4, #0]
    9458:	e037      	b.n	94ca <_printf_i+0xce>
    945a:	2a75      	cmp	r2, #117	; 0x75
    945c:	d01f      	beq.n	949e <_printf_i+0xa2>
    945e:	2a78      	cmp	r2, #120	; 0x78
    9460:	d033      	beq.n	94ca <_printf_i+0xce>
    9462:	e0a6      	b.n	95b2 <_printf_i+0x1b6>
    9464:	1c0e      	adds	r6, r1, #0
    9466:	681a      	ldr	r2, [r3, #0]
    9468:	3642      	adds	r6, #66	; 0x42
    946a:	1d11      	adds	r1, r2, #4
    946c:	6019      	str	r1, [r3, #0]
    946e:	6813      	ldr	r3, [r2, #0]
    9470:	7033      	strb	r3, [r6, #0]
    9472:	e0a1      	b.n	95b8 <_printf_i+0x1bc>
    9474:	6821      	ldr	r1, [r4, #0]
    9476:	681a      	ldr	r2, [r3, #0]
    9478:	0608      	lsls	r0, r1, #24
    947a:	d406      	bmi.n	948a <_printf_i+0x8e>
    947c:	0649      	lsls	r1, r1, #25
    947e:	d504      	bpl.n	948a <_printf_i+0x8e>
    9480:	1d11      	adds	r1, r2, #4
    9482:	6019      	str	r1, [r3, #0]
    9484:	2300      	movs	r3, #0
    9486:	5ed5      	ldrsh	r5, [r2, r3]
    9488:	e002      	b.n	9490 <_printf_i+0x94>
    948a:	1d11      	adds	r1, r2, #4
    948c:	6019      	str	r1, [r3, #0]
    948e:	6815      	ldr	r5, [r2, #0]
    9490:	2d00      	cmp	r5, #0
    9492:	da3b      	bge.n	950c <_printf_i+0x110>
    9494:	232d      	movs	r3, #45	; 0x2d
    9496:	9a04      	ldr	r2, [sp, #16]
    9498:	426d      	negs	r5, r5
    949a:	7013      	strb	r3, [r2, #0]
    949c:	e036      	b.n	950c <_printf_i+0x110>
    949e:	6821      	ldr	r1, [r4, #0]
    94a0:	681a      	ldr	r2, [r3, #0]
    94a2:	0608      	lsls	r0, r1, #24
    94a4:	d406      	bmi.n	94b4 <_printf_i+0xb8>
    94a6:	0649      	lsls	r1, r1, #25
    94a8:	d504      	bpl.n	94b4 <_printf_i+0xb8>
    94aa:	6815      	ldr	r5, [r2, #0]
    94ac:	1d11      	adds	r1, r2, #4
    94ae:	6019      	str	r1, [r3, #0]
    94b0:	b2ad      	uxth	r5, r5
    94b2:	e002      	b.n	94ba <_printf_i+0xbe>
    94b4:	1d11      	adds	r1, r2, #4
    94b6:	6019      	str	r1, [r3, #0]
    94b8:	6815      	ldr	r5, [r2, #0]
    94ba:	4b5a      	ldr	r3, [pc, #360]	; (9624 <_printf_i+0x228>)
    94bc:	7e22      	ldrb	r2, [r4, #24]
    94be:	9303      	str	r3, [sp, #12]
    94c0:	270a      	movs	r7, #10
    94c2:	2a6f      	cmp	r2, #111	; 0x6f
    94c4:	d11d      	bne.n	9502 <_printf_i+0x106>
    94c6:	2708      	movs	r7, #8
    94c8:	e01b      	b.n	9502 <_printf_i+0x106>
    94ca:	1c22      	adds	r2, r4, #0
    94cc:	2178      	movs	r1, #120	; 0x78
    94ce:	3245      	adds	r2, #69	; 0x45
    94d0:	7011      	strb	r1, [r2, #0]
    94d2:	4a55      	ldr	r2, [pc, #340]	; (9628 <_printf_i+0x22c>)
    94d4:	6819      	ldr	r1, [r3, #0]
    94d6:	9203      	str	r2, [sp, #12]
    94d8:	1d08      	adds	r0, r1, #4
    94da:	6822      	ldr	r2, [r4, #0]
    94dc:	6018      	str	r0, [r3, #0]
    94de:	680d      	ldr	r5, [r1, #0]
    94e0:	0610      	lsls	r0, r2, #24
    94e2:	d402      	bmi.n	94ea <_printf_i+0xee>
    94e4:	0650      	lsls	r0, r2, #25
    94e6:	d500      	bpl.n	94ea <_printf_i+0xee>
    94e8:	b2ad      	uxth	r5, r5
    94ea:	07d3      	lsls	r3, r2, #31
    94ec:	d502      	bpl.n	94f4 <_printf_i+0xf8>
    94ee:	2320      	movs	r3, #32
    94f0:	431a      	orrs	r2, r3
    94f2:	6022      	str	r2, [r4, #0]
    94f4:	2710      	movs	r7, #16
    94f6:	2d00      	cmp	r5, #0
    94f8:	d103      	bne.n	9502 <_printf_i+0x106>
    94fa:	2320      	movs	r3, #32
    94fc:	6822      	ldr	r2, [r4, #0]
    94fe:	439a      	bics	r2, r3
    9500:	6022      	str	r2, [r4, #0]
    9502:	1c23      	adds	r3, r4, #0
    9504:	2200      	movs	r2, #0
    9506:	3343      	adds	r3, #67	; 0x43
    9508:	701a      	strb	r2, [r3, #0]
    950a:	e002      	b.n	9512 <_printf_i+0x116>
    950c:	270a      	movs	r7, #10
    950e:	4b45      	ldr	r3, [pc, #276]	; (9624 <_printf_i+0x228>)
    9510:	9303      	str	r3, [sp, #12]
    9512:	6863      	ldr	r3, [r4, #4]
    9514:	60a3      	str	r3, [r4, #8]
    9516:	2b00      	cmp	r3, #0
    9518:	db03      	blt.n	9522 <_printf_i+0x126>
    951a:	2204      	movs	r2, #4
    951c:	6821      	ldr	r1, [r4, #0]
    951e:	4391      	bics	r1, r2
    9520:	6021      	str	r1, [r4, #0]
    9522:	2d00      	cmp	r5, #0
    9524:	d102      	bne.n	952c <_printf_i+0x130>
    9526:	9e04      	ldr	r6, [sp, #16]
    9528:	2b00      	cmp	r3, #0
    952a:	d00e      	beq.n	954a <_printf_i+0x14e>
    952c:	9e04      	ldr	r6, [sp, #16]
    952e:	1c28      	adds	r0, r5, #0
    9530:	1c39      	adds	r1, r7, #0
    9532:	f7fb fed3 	bl	52dc <__aeabi_uidivmod>
    9536:	9b03      	ldr	r3, [sp, #12]
    9538:	3e01      	subs	r6, #1
    953a:	5c5b      	ldrb	r3, [r3, r1]
    953c:	1c28      	adds	r0, r5, #0
    953e:	7033      	strb	r3, [r6, #0]
    9540:	1c39      	adds	r1, r7, #0
    9542:	f7fb fe45 	bl	51d0 <__aeabi_uidiv>
    9546:	1e05      	subs	r5, r0, #0
    9548:	d1f1      	bne.n	952e <_printf_i+0x132>
    954a:	2f08      	cmp	r7, #8
    954c:	d109      	bne.n	9562 <_printf_i+0x166>
    954e:	6823      	ldr	r3, [r4, #0]
    9550:	07db      	lsls	r3, r3, #31
    9552:	d506      	bpl.n	9562 <_printf_i+0x166>
    9554:	6863      	ldr	r3, [r4, #4]
    9556:	6922      	ldr	r2, [r4, #16]
    9558:	4293      	cmp	r3, r2
    955a:	dc02      	bgt.n	9562 <_printf_i+0x166>
    955c:	2330      	movs	r3, #48	; 0x30
    955e:	3e01      	subs	r6, #1
    9560:	7033      	strb	r3, [r6, #0]
    9562:	9b04      	ldr	r3, [sp, #16]
    9564:	1b9b      	subs	r3, r3, r6
    9566:	6123      	str	r3, [r4, #16]
    9568:	e02b      	b.n	95c2 <_printf_i+0x1c6>
    956a:	6809      	ldr	r1, [r1, #0]
    956c:	681a      	ldr	r2, [r3, #0]
    956e:	0608      	lsls	r0, r1, #24
    9570:	d407      	bmi.n	9582 <_printf_i+0x186>
    9572:	0649      	lsls	r1, r1, #25
    9574:	d505      	bpl.n	9582 <_printf_i+0x186>
    9576:	1d11      	adds	r1, r2, #4
    9578:	6019      	str	r1, [r3, #0]
    957a:	6813      	ldr	r3, [r2, #0]
    957c:	8aa2      	ldrh	r2, [r4, #20]
    957e:	801a      	strh	r2, [r3, #0]
    9580:	e004      	b.n	958c <_printf_i+0x190>
    9582:	1d11      	adds	r1, r2, #4
    9584:	6019      	str	r1, [r3, #0]
    9586:	6813      	ldr	r3, [r2, #0]
    9588:	6962      	ldr	r2, [r4, #20]
    958a:	601a      	str	r2, [r3, #0]
    958c:	2300      	movs	r3, #0
    958e:	9e04      	ldr	r6, [sp, #16]
    9590:	6123      	str	r3, [r4, #16]
    9592:	e016      	b.n	95c2 <_printf_i+0x1c6>
    9594:	681a      	ldr	r2, [r3, #0]
    9596:	1d11      	adds	r1, r2, #4
    9598:	6019      	str	r1, [r3, #0]
    959a:	6816      	ldr	r6, [r2, #0]
    959c:	2100      	movs	r1, #0
    959e:	1c30      	adds	r0, r6, #0
    95a0:	6862      	ldr	r2, [r4, #4]
    95a2:	f7ff f9e9 	bl	8978 <memchr>
    95a6:	2800      	cmp	r0, #0
    95a8:	d001      	beq.n	95ae <_printf_i+0x1b2>
    95aa:	1b80      	subs	r0, r0, r6
    95ac:	6060      	str	r0, [r4, #4]
    95ae:	6863      	ldr	r3, [r4, #4]
    95b0:	e003      	b.n	95ba <_printf_i+0x1be>
    95b2:	1c26      	adds	r6, r4, #0
    95b4:	3642      	adds	r6, #66	; 0x42
    95b6:	7032      	strb	r2, [r6, #0]
    95b8:	2301      	movs	r3, #1
    95ba:	6123      	str	r3, [r4, #16]
    95bc:	2300      	movs	r3, #0
    95be:	9a04      	ldr	r2, [sp, #16]
    95c0:	7013      	strb	r3, [r2, #0]
    95c2:	9b07      	ldr	r3, [sp, #28]
    95c4:	9805      	ldr	r0, [sp, #20]
    95c6:	9300      	str	r3, [sp, #0]
    95c8:	1c21      	adds	r1, r4, #0
    95ca:	9b06      	ldr	r3, [sp, #24]
    95cc:	aa09      	add	r2, sp, #36	; 0x24
    95ce:	f7ff fea7 	bl	9320 <_printf_common>
    95d2:	1c43      	adds	r3, r0, #1
    95d4:	d102      	bne.n	95dc <_printf_i+0x1e0>
    95d6:	2001      	movs	r0, #1
    95d8:	4240      	negs	r0, r0
    95da:	e021      	b.n	9620 <_printf_i+0x224>
    95dc:	6923      	ldr	r3, [r4, #16]
    95de:	9805      	ldr	r0, [sp, #20]
    95e0:	9906      	ldr	r1, [sp, #24]
    95e2:	1c32      	adds	r2, r6, #0
    95e4:	9d07      	ldr	r5, [sp, #28]
    95e6:	47a8      	blx	r5
    95e8:	1c43      	adds	r3, r0, #1
    95ea:	d0f4      	beq.n	95d6 <_printf_i+0x1da>
    95ec:	6823      	ldr	r3, [r4, #0]
    95ee:	079b      	lsls	r3, r3, #30
    95f0:	d405      	bmi.n	95fe <_printf_i+0x202>
    95f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    95f4:	68e0      	ldr	r0, [r4, #12]
    95f6:	4298      	cmp	r0, r3
    95f8:	da12      	bge.n	9620 <_printf_i+0x224>
    95fa:	1c18      	adds	r0, r3, #0
    95fc:	e010      	b.n	9620 <_printf_i+0x224>
    95fe:	2500      	movs	r5, #0
    9600:	68e3      	ldr	r3, [r4, #12]
    9602:	9a09      	ldr	r2, [sp, #36]	; 0x24
    9604:	1a9b      	subs	r3, r3, r2
    9606:	429d      	cmp	r5, r3
    9608:	daf3      	bge.n	95f2 <_printf_i+0x1f6>
    960a:	1c22      	adds	r2, r4, #0
    960c:	2301      	movs	r3, #1
    960e:	9805      	ldr	r0, [sp, #20]
    9610:	9906      	ldr	r1, [sp, #24]
    9612:	3219      	adds	r2, #25
    9614:	9e07      	ldr	r6, [sp, #28]
    9616:	47b0      	blx	r6
    9618:	1c43      	adds	r3, r0, #1
    961a:	d0dc      	beq.n	95d6 <_printf_i+0x1da>
    961c:	3501      	adds	r5, #1
    961e:	e7ef      	b.n	9600 <_printf_i+0x204>
    9620:	b00b      	add	sp, #44	; 0x2c
    9622:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9624:	0000e429 	.word	0x0000e429
    9628:	0000e43a 	.word	0x0000e43a

0000962c <_scanf_float>:
    962c:	b5f0      	push	{r4, r5, r6, r7, lr}
    962e:	1c15      	adds	r5, r2, #0
    9630:	2200      	movs	r2, #0
    9632:	b08b      	sub	sp, #44	; 0x2c
    9634:	9306      	str	r3, [sp, #24]
    9636:	688b      	ldr	r3, [r1, #8]
    9638:	9205      	str	r2, [sp, #20]
    963a:	325d      	adds	r2, #93	; 0x5d
    963c:	1c0e      	adds	r6, r1, #0
    963e:	32ff      	adds	r2, #255	; 0xff
    9640:	1e59      	subs	r1, r3, #1
    9642:	9002      	str	r0, [sp, #8]
    9644:	4291      	cmp	r1, r2
    9646:	d905      	bls.n	9654 <_scanf_float+0x28>
    9648:	3b5e      	subs	r3, #94	; 0x5e
    964a:	3bff      	subs	r3, #255	; 0xff
    964c:	9305      	str	r3, [sp, #20]
    964e:	235e      	movs	r3, #94	; 0x5e
    9650:	33ff      	adds	r3, #255	; 0xff
    9652:	60b3      	str	r3, [r6, #8]
    9654:	23f0      	movs	r3, #240	; 0xf0
    9656:	6832      	ldr	r2, [r6, #0]
    9658:	00db      	lsls	r3, r3, #3
    965a:	4313      	orrs	r3, r2
    965c:	6033      	str	r3, [r6, #0]
    965e:	1c33      	adds	r3, r6, #0
    9660:	2400      	movs	r4, #0
    9662:	331c      	adds	r3, #28
    9664:	1c1f      	adds	r7, r3, #0
    9666:	9304      	str	r3, [sp, #16]
    9668:	9403      	str	r4, [sp, #12]
    966a:	9409      	str	r4, [sp, #36]	; 0x24
    966c:	9408      	str	r4, [sp, #32]
    966e:	9400      	str	r4, [sp, #0]
    9670:	9407      	str	r4, [sp, #28]
    9672:	68b2      	ldr	r2, [r6, #8]
    9674:	2a00      	cmp	r2, #0
    9676:	d100      	bne.n	967a <_scanf_float+0x4e>
    9678:	e0e1      	b.n	983e <_scanf_float+0x212>
    967a:	682b      	ldr	r3, [r5, #0]
    967c:	781b      	ldrb	r3, [r3, #0]
    967e:	2b49      	cmp	r3, #73	; 0x49
    9680:	d077      	beq.n	9772 <_scanf_float+0x146>
    9682:	d818      	bhi.n	96b6 <_scanf_float+0x8a>
    9684:	2b39      	cmp	r3, #57	; 0x39
    9686:	d80d      	bhi.n	96a4 <_scanf_float+0x78>
    9688:	2b31      	cmp	r3, #49	; 0x31
    968a:	d242      	bcs.n	9712 <_scanf_float+0xe6>
    968c:	2b2d      	cmp	r3, #45	; 0x2d
    968e:	d049      	beq.n	9724 <_scanf_float+0xf8>
    9690:	d802      	bhi.n	9698 <_scanf_float+0x6c>
    9692:	2b2b      	cmp	r3, #43	; 0x2b
    9694:	d046      	beq.n	9724 <_scanf_float+0xf8>
    9696:	e0d2      	b.n	983e <_scanf_float+0x212>
    9698:	2b2e      	cmp	r3, #46	; 0x2e
    969a:	d100      	bne.n	969e <_scanf_float+0x72>
    969c:	e08d      	b.n	97ba <_scanf_float+0x18e>
    969e:	2b30      	cmp	r3, #48	; 0x30
    96a0:	d025      	beq.n	96ee <_scanf_float+0xc2>
    96a2:	e0cc      	b.n	983e <_scanf_float+0x212>
    96a4:	2b45      	cmp	r3, #69	; 0x45
    96a6:	d100      	bne.n	96aa <_scanf_float+0x7e>
    96a8:	e090      	b.n	97cc <_scanf_float+0x1a0>
    96aa:	2b46      	cmp	r3, #70	; 0x46
    96ac:	d079      	beq.n	97a2 <_scanf_float+0x176>
    96ae:	2b41      	cmp	r3, #65	; 0x41
    96b0:	d000      	beq.n	96b4 <_scanf_float+0x88>
    96b2:	e0c4      	b.n	983e <_scanf_float+0x212>
    96b4:	e058      	b.n	9768 <_scanf_float+0x13c>
    96b6:	2b65      	cmp	r3, #101	; 0x65
    96b8:	d100      	bne.n	96bc <_scanf_float+0x90>
    96ba:	e087      	b.n	97cc <_scanf_float+0x1a0>
    96bc:	d80a      	bhi.n	96d4 <_scanf_float+0xa8>
    96be:	2b54      	cmp	r3, #84	; 0x54
    96c0:	d073      	beq.n	97aa <_scanf_float+0x17e>
    96c2:	d802      	bhi.n	96ca <_scanf_float+0x9e>
    96c4:	2b4e      	cmp	r3, #78	; 0x4e
    96c6:	d035      	beq.n	9734 <_scanf_float+0x108>
    96c8:	e0b9      	b.n	983e <_scanf_float+0x212>
    96ca:	2b59      	cmp	r3, #89	; 0x59
    96cc:	d071      	beq.n	97b2 <_scanf_float+0x186>
    96ce:	2b61      	cmp	r3, #97	; 0x61
    96d0:	d04a      	beq.n	9768 <_scanf_float+0x13c>
    96d2:	e0b4      	b.n	983e <_scanf_float+0x212>
    96d4:	2b6e      	cmp	r3, #110	; 0x6e
    96d6:	d02d      	beq.n	9734 <_scanf_float+0x108>
    96d8:	d804      	bhi.n	96e4 <_scanf_float+0xb8>
    96da:	2b66      	cmp	r3, #102	; 0x66
    96dc:	d061      	beq.n	97a2 <_scanf_float+0x176>
    96de:	2b69      	cmp	r3, #105	; 0x69
    96e0:	d047      	beq.n	9772 <_scanf_float+0x146>
    96e2:	e0ac      	b.n	983e <_scanf_float+0x212>
    96e4:	2b74      	cmp	r3, #116	; 0x74
    96e6:	d060      	beq.n	97aa <_scanf_float+0x17e>
    96e8:	2b79      	cmp	r3, #121	; 0x79
    96ea:	d062      	beq.n	97b2 <_scanf_float+0x186>
    96ec:	e0a7      	b.n	983e <_scanf_float+0x212>
    96ee:	6831      	ldr	r1, [r6, #0]
    96f0:	05c8      	lsls	r0, r1, #23
    96f2:	d50e      	bpl.n	9712 <_scanf_float+0xe6>
    96f4:	2380      	movs	r3, #128	; 0x80
    96f6:	4399      	bics	r1, r3
    96f8:	9b00      	ldr	r3, [sp, #0]
    96fa:	6031      	str	r1, [r6, #0]
    96fc:	3301      	adds	r3, #1
    96fe:	9300      	str	r3, [sp, #0]
    9700:	9b05      	ldr	r3, [sp, #20]
    9702:	2b00      	cmp	r3, #0
    9704:	d100      	bne.n	9708 <_scanf_float+0xdc>
    9706:	e082      	b.n	980e <_scanf_float+0x1e2>
    9708:	3b01      	subs	r3, #1
    970a:	3201      	adds	r2, #1
    970c:	9305      	str	r3, [sp, #20]
    970e:	60b2      	str	r2, [r6, #8]
    9710:	e07d      	b.n	980e <_scanf_float+0x1e2>
    9712:	9a03      	ldr	r2, [sp, #12]
    9714:	1912      	adds	r2, r2, r4
    9716:	2a00      	cmp	r2, #0
    9718:	d000      	beq.n	971c <_scanf_float+0xf0>
    971a:	e090      	b.n	983e <_scanf_float+0x212>
    971c:	4ab3      	ldr	r2, [pc, #716]	; (99ec <_scanf_float+0x3c0>)
    971e:	6831      	ldr	r1, [r6, #0]
    9720:	400a      	ands	r2, r1
    9722:	e005      	b.n	9730 <_scanf_float+0x104>
    9724:	2180      	movs	r1, #128	; 0x80
    9726:	6832      	ldr	r2, [r6, #0]
    9728:	420a      	tst	r2, r1
    972a:	d100      	bne.n	972e <_scanf_float+0x102>
    972c:	e087      	b.n	983e <_scanf_float+0x212>
    972e:	438a      	bics	r2, r1
    9730:	6032      	str	r2, [r6, #0]
    9732:	e06a      	b.n	980a <_scanf_float+0x1de>
    9734:	9a03      	ldr	r2, [sp, #12]
    9736:	2a00      	cmp	r2, #0
    9738:	d10e      	bne.n	9758 <_scanf_float+0x12c>
    973a:	9a00      	ldr	r2, [sp, #0]
    973c:	2a00      	cmp	r2, #0
    973e:	d10e      	bne.n	975e <_scanf_float+0x132>
    9740:	6831      	ldr	r1, [r6, #0]
    9742:	22e0      	movs	r2, #224	; 0xe0
    9744:	1c08      	adds	r0, r1, #0
    9746:	00d2      	lsls	r2, r2, #3
    9748:	4010      	ands	r0, r2
    974a:	4290      	cmp	r0, r2
    974c:	d107      	bne.n	975e <_scanf_float+0x132>
    974e:	4aa8      	ldr	r2, [pc, #672]	; (99f0 <_scanf_float+0x3c4>)
    9750:	400a      	ands	r2, r1
    9752:	6032      	str	r2, [r6, #0]
    9754:	2201      	movs	r2, #1
    9756:	e057      	b.n	9808 <_scanf_float+0x1dc>
    9758:	9a03      	ldr	r2, [sp, #12]
    975a:	2a02      	cmp	r2, #2
    975c:	d053      	beq.n	9806 <_scanf_float+0x1da>
    975e:	2c01      	cmp	r4, #1
    9760:	d01c      	beq.n	979c <_scanf_float+0x170>
    9762:	2c04      	cmp	r4, #4
    9764:	d01a      	beq.n	979c <_scanf_float+0x170>
    9766:	e06a      	b.n	983e <_scanf_float+0x212>
    9768:	9a03      	ldr	r2, [sp, #12]
    976a:	2a01      	cmp	r2, #1
    976c:	d167      	bne.n	983e <_scanf_float+0x212>
    976e:	2202      	movs	r2, #2
    9770:	e04a      	b.n	9808 <_scanf_float+0x1dc>
    9772:	2c00      	cmp	r4, #0
    9774:	d10e      	bne.n	9794 <_scanf_float+0x168>
    9776:	9a00      	ldr	r2, [sp, #0]
    9778:	2a00      	cmp	r2, #0
    977a:	d163      	bne.n	9844 <_scanf_float+0x218>
    977c:	6831      	ldr	r1, [r6, #0]
    977e:	22e0      	movs	r2, #224	; 0xe0
    9780:	1c08      	adds	r0, r1, #0
    9782:	00d2      	lsls	r2, r2, #3
    9784:	4010      	ands	r0, r2
    9786:	4290      	cmp	r0, r2
    9788:	d160      	bne.n	984c <_scanf_float+0x220>
    978a:	4a99      	ldr	r2, [pc, #612]	; (99f0 <_scanf_float+0x3c4>)
    978c:	3401      	adds	r4, #1
    978e:	400a      	ands	r2, r1
    9790:	6032      	str	r2, [r6, #0]
    9792:	e03a      	b.n	980a <_scanf_float+0x1de>
    9794:	21fd      	movs	r1, #253	; 0xfd
    9796:	1ee2      	subs	r2, r4, #3
    9798:	420a      	tst	r2, r1
    979a:	d150      	bne.n	983e <_scanf_float+0x212>
    979c:	3401      	adds	r4, #1
    979e:	b2e4      	uxtb	r4, r4
    97a0:	e033      	b.n	980a <_scanf_float+0x1de>
    97a2:	2c02      	cmp	r4, #2
    97a4:	d14b      	bne.n	983e <_scanf_float+0x212>
    97a6:	2403      	movs	r4, #3
    97a8:	e02f      	b.n	980a <_scanf_float+0x1de>
    97aa:	2c06      	cmp	r4, #6
    97ac:	d147      	bne.n	983e <_scanf_float+0x212>
    97ae:	2407      	movs	r4, #7
    97b0:	e02b      	b.n	980a <_scanf_float+0x1de>
    97b2:	2c07      	cmp	r4, #7
    97b4:	d143      	bne.n	983e <_scanf_float+0x212>
    97b6:	2408      	movs	r4, #8
    97b8:	e027      	b.n	980a <_scanf_float+0x1de>
    97ba:	6831      	ldr	r1, [r6, #0]
    97bc:	058a      	lsls	r2, r1, #22
    97be:	d53e      	bpl.n	983e <_scanf_float+0x212>
    97c0:	4a8c      	ldr	r2, [pc, #560]	; (99f4 <_scanf_float+0x3c8>)
    97c2:	400a      	ands	r2, r1
    97c4:	6032      	str	r2, [r6, #0]
    97c6:	9a00      	ldr	r2, [sp, #0]
    97c8:	9207      	str	r2, [sp, #28]
    97ca:	e01e      	b.n	980a <_scanf_float+0x1de>
    97cc:	22a0      	movs	r2, #160	; 0xa0
    97ce:	2080      	movs	r0, #128	; 0x80
    97d0:	6831      	ldr	r1, [r6, #0]
    97d2:	00d2      	lsls	r2, r2, #3
    97d4:	400a      	ands	r2, r1
    97d6:	00c0      	lsls	r0, r0, #3
    97d8:	4282      	cmp	r2, r0
    97da:	d004      	beq.n	97e6 <_scanf_float+0x1ba>
    97dc:	4201      	tst	r1, r0
    97de:	d02e      	beq.n	983e <_scanf_float+0x212>
    97e0:	9a00      	ldr	r2, [sp, #0]
    97e2:	2a00      	cmp	r2, #0
    97e4:	d032      	beq.n	984c <_scanf_float+0x220>
    97e6:	058a      	lsls	r2, r1, #22
    97e8:	d404      	bmi.n	97f4 <_scanf_float+0x1c8>
    97ea:	9a00      	ldr	r2, [sp, #0]
    97ec:	9807      	ldr	r0, [sp, #28]
    97ee:	9709      	str	r7, [sp, #36]	; 0x24
    97f0:	1a12      	subs	r2, r2, r0
    97f2:	9208      	str	r2, [sp, #32]
    97f4:	4a7e      	ldr	r2, [pc, #504]	; (99f0 <_scanf_float+0x3c4>)
    97f6:	400a      	ands	r2, r1
    97f8:	21c0      	movs	r1, #192	; 0xc0
    97fa:	0049      	lsls	r1, r1, #1
    97fc:	430a      	orrs	r2, r1
    97fe:	6032      	str	r2, [r6, #0]
    9800:	2200      	movs	r2, #0
    9802:	9200      	str	r2, [sp, #0]
    9804:	e001      	b.n	980a <_scanf_float+0x1de>
    9806:	2203      	movs	r2, #3
    9808:	9203      	str	r2, [sp, #12]
    980a:	703b      	strb	r3, [r7, #0]
    980c:	3701      	adds	r7, #1
    980e:	68b3      	ldr	r3, [r6, #8]
    9810:	3b01      	subs	r3, #1
    9812:	60b3      	str	r3, [r6, #8]
    9814:	6933      	ldr	r3, [r6, #16]
    9816:	3301      	adds	r3, #1
    9818:	6133      	str	r3, [r6, #16]
    981a:	686b      	ldr	r3, [r5, #4]
    981c:	3b01      	subs	r3, #1
    981e:	606b      	str	r3, [r5, #4]
    9820:	2b00      	cmp	r3, #0
    9822:	dd03      	ble.n	982c <_scanf_float+0x200>
    9824:	682b      	ldr	r3, [r5, #0]
    9826:	3301      	adds	r3, #1
    9828:	602b      	str	r3, [r5, #0]
    982a:	e722      	b.n	9672 <_scanf_float+0x46>
    982c:	23c0      	movs	r3, #192	; 0xc0
    982e:	005b      	lsls	r3, r3, #1
    9830:	58f3      	ldr	r3, [r6, r3]
    9832:	9802      	ldr	r0, [sp, #8]
    9834:	1c29      	adds	r1, r5, #0
    9836:	4798      	blx	r3
    9838:	2800      	cmp	r0, #0
    983a:	d100      	bne.n	983e <_scanf_float+0x212>
    983c:	e719      	b.n	9672 <_scanf_float+0x46>
    983e:	9b00      	ldr	r3, [sp, #0]
    9840:	2b00      	cmp	r3, #0
    9842:	d003      	beq.n	984c <_scanf_float+0x220>
    9844:	6832      	ldr	r2, [r6, #0]
    9846:	4b6c      	ldr	r3, [pc, #432]	; (99f8 <_scanf_float+0x3cc>)
    9848:	4013      	ands	r3, r2
    984a:	6033      	str	r3, [r6, #0]
    984c:	9b03      	ldr	r3, [sp, #12]
    984e:	3b01      	subs	r3, #1
    9850:	2b01      	cmp	r3, #1
    9852:	d810      	bhi.n	9876 <_scanf_float+0x24a>
    9854:	9b04      	ldr	r3, [sp, #16]
    9856:	429f      	cmp	r7, r3
    9858:	d90b      	bls.n	9872 <_scanf_float+0x246>
    985a:	23be      	movs	r3, #190	; 0xbe
    985c:	3f01      	subs	r7, #1
    985e:	005b      	lsls	r3, r3, #1
    9860:	58f3      	ldr	r3, [r6, r3]
    9862:	7839      	ldrb	r1, [r7, #0]
    9864:	9802      	ldr	r0, [sp, #8]
    9866:	1c2a      	adds	r2, r5, #0
    9868:	4798      	blx	r3
    986a:	6933      	ldr	r3, [r6, #16]
    986c:	3b01      	subs	r3, #1
    986e:	6133      	str	r3, [r6, #16]
    9870:	e7f0      	b.n	9854 <_scanf_float+0x228>
    9872:	2401      	movs	r4, #1
    9874:	e0b7      	b.n	99e6 <_scanf_float+0x3ba>
    9876:	1e63      	subs	r3, r4, #1
    9878:	2b06      	cmp	r3, #6
    987a:	d82a      	bhi.n	98d2 <_scanf_float+0x2a6>
    987c:	2c02      	cmp	r4, #2
    987e:	d919      	bls.n	98b4 <_scanf_float+0x288>
    9880:	9405      	str	r4, [sp, #20]
    9882:	9703      	str	r7, [sp, #12]
    9884:	9b05      	ldr	r3, [sp, #20]
    9886:	3b01      	subs	r3, #1
    9888:	b2db      	uxtb	r3, r3
    988a:	9305      	str	r3, [sp, #20]
    988c:	2b02      	cmp	r3, #2
    988e:	d00d      	beq.n	98ac <_scanf_float+0x280>
    9890:	9b03      	ldr	r3, [sp, #12]
    9892:	9802      	ldr	r0, [sp, #8]
    9894:	3b01      	subs	r3, #1
    9896:	9303      	str	r3, [sp, #12]
    9898:	7819      	ldrb	r1, [r3, #0]
    989a:	23be      	movs	r3, #190	; 0xbe
    989c:	005b      	lsls	r3, r3, #1
    989e:	58f3      	ldr	r3, [r6, r3]
    98a0:	1c2a      	adds	r2, r5, #0
    98a2:	4798      	blx	r3
    98a4:	6933      	ldr	r3, [r6, #16]
    98a6:	3b01      	subs	r3, #1
    98a8:	6133      	str	r3, [r6, #16]
    98aa:	e7eb      	b.n	9884 <_scanf_float+0x258>
    98ac:	3c03      	subs	r4, #3
    98ae:	b2e4      	uxtb	r4, r4
    98b0:	1b3f      	subs	r7, r7, r4
    98b2:	e00e      	b.n	98d2 <_scanf_float+0x2a6>
    98b4:	9b04      	ldr	r3, [sp, #16]
    98b6:	429f      	cmp	r7, r3
    98b8:	d9db      	bls.n	9872 <_scanf_float+0x246>
    98ba:	23be      	movs	r3, #190	; 0xbe
    98bc:	3f01      	subs	r7, #1
    98be:	005b      	lsls	r3, r3, #1
    98c0:	58f3      	ldr	r3, [r6, r3]
    98c2:	7839      	ldrb	r1, [r7, #0]
    98c4:	9802      	ldr	r0, [sp, #8]
    98c6:	1c2a      	adds	r2, r5, #0
    98c8:	4798      	blx	r3
    98ca:	6933      	ldr	r3, [r6, #16]
    98cc:	3b01      	subs	r3, #1
    98ce:	6133      	str	r3, [r6, #16]
    98d0:	e7f0      	b.n	98b4 <_scanf_float+0x288>
    98d2:	6833      	ldr	r3, [r6, #0]
    98d4:	05da      	lsls	r2, r3, #23
    98d6:	d52b      	bpl.n	9930 <_scanf_float+0x304>
    98d8:	055b      	lsls	r3, r3, #21
    98da:	d50e      	bpl.n	98fa <_scanf_float+0x2ce>
    98dc:	9b04      	ldr	r3, [sp, #16]
    98de:	429f      	cmp	r7, r3
    98e0:	d9c7      	bls.n	9872 <_scanf_float+0x246>
    98e2:	23be      	movs	r3, #190	; 0xbe
    98e4:	3f01      	subs	r7, #1
    98e6:	005b      	lsls	r3, r3, #1
    98e8:	58f3      	ldr	r3, [r6, r3]
    98ea:	7839      	ldrb	r1, [r7, #0]
    98ec:	9802      	ldr	r0, [sp, #8]
    98ee:	1c2a      	adds	r2, r5, #0
    98f0:	4798      	blx	r3
    98f2:	6933      	ldr	r3, [r6, #16]
    98f4:	3b01      	subs	r3, #1
    98f6:	6133      	str	r3, [r6, #16]
    98f8:	e7f0      	b.n	98dc <_scanf_float+0x2b0>
    98fa:	6933      	ldr	r3, [r6, #16]
    98fc:	1e7c      	subs	r4, r7, #1
    98fe:	7821      	ldrb	r1, [r4, #0]
    9900:	3b01      	subs	r3, #1
    9902:	6133      	str	r3, [r6, #16]
    9904:	2965      	cmp	r1, #101	; 0x65
    9906:	d00c      	beq.n	9922 <_scanf_float+0x2f6>
    9908:	2945      	cmp	r1, #69	; 0x45
    990a:	d00a      	beq.n	9922 <_scanf_float+0x2f6>
    990c:	23be      	movs	r3, #190	; 0xbe
    990e:	005b      	lsls	r3, r3, #1
    9910:	58f3      	ldr	r3, [r6, r3]
    9912:	9802      	ldr	r0, [sp, #8]
    9914:	1c2a      	adds	r2, r5, #0
    9916:	4798      	blx	r3
    9918:	6933      	ldr	r3, [r6, #16]
    991a:	1ebc      	subs	r4, r7, #2
    991c:	3b01      	subs	r3, #1
    991e:	7821      	ldrb	r1, [r4, #0]
    9920:	6133      	str	r3, [r6, #16]
    9922:	23be      	movs	r3, #190	; 0xbe
    9924:	005b      	lsls	r3, r3, #1
    9926:	58f3      	ldr	r3, [r6, r3]
    9928:	9802      	ldr	r0, [sp, #8]
    992a:	1c2a      	adds	r2, r5, #0
    992c:	4798      	blx	r3
    992e:	1c27      	adds	r7, r4, #0
    9930:	2410      	movs	r4, #16
    9932:	6833      	ldr	r3, [r6, #0]
    9934:	401c      	ands	r4, r3
    9936:	d155      	bne.n	99e4 <_scanf_float+0x3b8>
    9938:	23c0      	movs	r3, #192	; 0xc0
    993a:	703c      	strb	r4, [r7, #0]
    993c:	6832      	ldr	r2, [r6, #0]
    993e:	00db      	lsls	r3, r3, #3
    9940:	4013      	ands	r3, r2
    9942:	2280      	movs	r2, #128	; 0x80
    9944:	00d2      	lsls	r2, r2, #3
    9946:	4293      	cmp	r3, r2
    9948:	d106      	bne.n	9958 <_scanf_float+0x32c>
    994a:	9a07      	ldr	r2, [sp, #28]
    994c:	9b00      	ldr	r3, [sp, #0]
    994e:	1a9b      	subs	r3, r3, r2
    9950:	425a      	negs	r2, r3
    9952:	2b00      	cmp	r3, #0
    9954:	d10d      	bne.n	9972 <_scanf_float+0x346>
    9956:	e018      	b.n	998a <_scanf_float+0x35e>
    9958:	9b08      	ldr	r3, [sp, #32]
    995a:	2b00      	cmp	r3, #0
    995c:	d015      	beq.n	998a <_scanf_float+0x35e>
    995e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9960:	1c22      	adds	r2, r4, #0
    9962:	1c59      	adds	r1, r3, #1
    9964:	9802      	ldr	r0, [sp, #8]
    9966:	230a      	movs	r3, #10
    9968:	f001 fa52 	bl	ae10 <_strtol_r>
    996c:	9b08      	ldr	r3, [sp, #32]
    996e:	9f09      	ldr	r7, [sp, #36]	; 0x24
    9970:	1ac2      	subs	r2, r0, r3
    9972:	1c33      	adds	r3, r6, #0
    9974:	3370      	adds	r3, #112	; 0x70
    9976:	33ff      	adds	r3, #255	; 0xff
    9978:	429f      	cmp	r7, r3
    997a:	d302      	bcc.n	9982 <_scanf_float+0x356>
    997c:	1c37      	adds	r7, r6, #0
    997e:	376f      	adds	r7, #111	; 0x6f
    9980:	37ff      	adds	r7, #255	; 0xff
    9982:	1c38      	adds	r0, r7, #0
    9984:	491d      	ldr	r1, [pc, #116]	; (99fc <_scanf_float+0x3d0>)
    9986:	f000 fb2d 	bl	9fe4 <siprintf>
    998a:	2200      	movs	r2, #0
    998c:	9802      	ldr	r0, [sp, #8]
    998e:	9904      	ldr	r1, [sp, #16]
    9990:	f000 fc24 	bl	a1dc <_strtod_r>
    9994:	9b06      	ldr	r3, [sp, #24]
    9996:	6832      	ldr	r2, [r6, #0]
    9998:	9000      	str	r0, [sp, #0]
    999a:	9101      	str	r1, [sp, #4]
    999c:	681b      	ldr	r3, [r3, #0]
    999e:	0791      	lsls	r1, r2, #30
    99a0:	d401      	bmi.n	99a6 <_scanf_float+0x37a>
    99a2:	0752      	lsls	r2, r2, #29
    99a4:	d508      	bpl.n	99b8 <_scanf_float+0x38c>
    99a6:	9906      	ldr	r1, [sp, #24]
    99a8:	1d1a      	adds	r2, r3, #4
    99aa:	600a      	str	r2, [r1, #0]
    99ac:	681b      	ldr	r3, [r3, #0]
    99ae:	9900      	ldr	r1, [sp, #0]
    99b0:	9a01      	ldr	r2, [sp, #4]
    99b2:	6019      	str	r1, [r3, #0]
    99b4:	605a      	str	r2, [r3, #4]
    99b6:	e011      	b.n	99dc <_scanf_float+0x3b0>
    99b8:	9906      	ldr	r1, [sp, #24]
    99ba:	1d1a      	adds	r2, r3, #4
    99bc:	600a      	str	r2, [r1, #0]
    99be:	9800      	ldr	r0, [sp, #0]
    99c0:	9901      	ldr	r1, [sp, #4]
    99c2:	681d      	ldr	r5, [r3, #0]
    99c4:	f000 fa0e 	bl	9de4 <__fpclassifyd>
    99c8:	2800      	cmp	r0, #0
    99ca:	d102      	bne.n	99d2 <_scanf_float+0x3a6>
    99cc:	f000 fb06 	bl	9fdc <nanf>
    99d0:	e003      	b.n	99da <_scanf_float+0x3ae>
    99d2:	9800      	ldr	r0, [sp, #0]
    99d4:	9901      	ldr	r1, [sp, #4]
    99d6:	f7fe fb7d 	bl	80d4 <__aeabi_d2f>
    99da:	6028      	str	r0, [r5, #0]
    99dc:	68f3      	ldr	r3, [r6, #12]
    99de:	3301      	adds	r3, #1
    99e0:	60f3      	str	r3, [r6, #12]
    99e2:	e000      	b.n	99e6 <_scanf_float+0x3ba>
    99e4:	2400      	movs	r4, #0
    99e6:	1c20      	adds	r0, r4, #0
    99e8:	b00b      	add	sp, #44	; 0x2c
    99ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
    99ec:	fffffe7f 	.word	0xfffffe7f
    99f0:	fffff87f 	.word	0xfffff87f
    99f4:	fffffd7f 	.word	0xfffffd7f
    99f8:	fffffeff 	.word	0xfffffeff
    99fc:	0000e44b 	.word	0x0000e44b

00009a00 <_scanf_chars>:
    9a00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    9a02:	1c15      	adds	r5, r2, #0
    9a04:	688a      	ldr	r2, [r1, #8]
    9a06:	9001      	str	r0, [sp, #4]
    9a08:	1c0c      	adds	r4, r1, #0
    9a0a:	2a00      	cmp	r2, #0
    9a0c:	d106      	bne.n	9a1c <_scanf_chars+0x1c>
    9a0e:	698a      	ldr	r2, [r1, #24]
    9a10:	1e51      	subs	r1, r2, #1
    9a12:	418a      	sbcs	r2, r1
    9a14:	2101      	movs	r1, #1
    9a16:	4252      	negs	r2, r2
    9a18:	430a      	orrs	r2, r1
    9a1a:	60a2      	str	r2, [r4, #8]
    9a1c:	6822      	ldr	r2, [r4, #0]
    9a1e:	06d2      	lsls	r2, r2, #27
    9a20:	d403      	bmi.n	9a2a <_scanf_chars+0x2a>
    9a22:	681a      	ldr	r2, [r3, #0]
    9a24:	1d11      	adds	r1, r2, #4
    9a26:	6019      	str	r1, [r3, #0]
    9a28:	6817      	ldr	r7, [r2, #0]
    9a2a:	2600      	movs	r6, #0
    9a2c:	69a0      	ldr	r0, [r4, #24]
    9a2e:	2800      	cmp	r0, #0
    9a30:	d11d      	bne.n	9a6e <_scanf_chars+0x6e>
    9a32:	6823      	ldr	r3, [r4, #0]
    9a34:	3601      	adds	r6, #1
    9a36:	06db      	lsls	r3, r3, #27
    9a38:	d403      	bmi.n	9a42 <_scanf_chars+0x42>
    9a3a:	682b      	ldr	r3, [r5, #0]
    9a3c:	781b      	ldrb	r3, [r3, #0]
    9a3e:	703b      	strb	r3, [r7, #0]
    9a40:	3701      	adds	r7, #1
    9a42:	682a      	ldr	r2, [r5, #0]
    9a44:	686b      	ldr	r3, [r5, #4]
    9a46:	3201      	adds	r2, #1
    9a48:	602a      	str	r2, [r5, #0]
    9a4a:	68a2      	ldr	r2, [r4, #8]
    9a4c:	3b01      	subs	r3, #1
    9a4e:	3a01      	subs	r2, #1
    9a50:	606b      	str	r3, [r5, #4]
    9a52:	60a2      	str	r2, [r4, #8]
    9a54:	2a00      	cmp	r2, #0
    9a56:	d01f      	beq.n	9a98 <_scanf_chars+0x98>
    9a58:	2b00      	cmp	r3, #0
    9a5a:	dce7      	bgt.n	9a2c <_scanf_chars+0x2c>
    9a5c:	23c0      	movs	r3, #192	; 0xc0
    9a5e:	005b      	lsls	r3, r3, #1
    9a60:	58e3      	ldr	r3, [r4, r3]
    9a62:	9801      	ldr	r0, [sp, #4]
    9a64:	1c29      	adds	r1, r5, #0
    9a66:	4798      	blx	r3
    9a68:	2800      	cmp	r0, #0
    9a6a:	d0df      	beq.n	9a2c <_scanf_chars+0x2c>
    9a6c:	e014      	b.n	9a98 <_scanf_chars+0x98>
    9a6e:	2801      	cmp	r0, #1
    9a70:	d108      	bne.n	9a84 <_scanf_chars+0x84>
    9a72:	682b      	ldr	r3, [r5, #0]
    9a74:	6962      	ldr	r2, [r4, #20]
    9a76:	781b      	ldrb	r3, [r3, #0]
    9a78:	5cd3      	ldrb	r3, [r2, r3]
    9a7a:	2b00      	cmp	r3, #0
    9a7c:	d1d9      	bne.n	9a32 <_scanf_chars+0x32>
    9a7e:	2e00      	cmp	r6, #0
    9a80:	d019      	beq.n	9ab6 <_scanf_chars+0xb6>
    9a82:	e009      	b.n	9a98 <_scanf_chars+0x98>
    9a84:	2802      	cmp	r0, #2
    9a86:	d107      	bne.n	9a98 <_scanf_chars+0x98>
    9a88:	682b      	ldr	r3, [r5, #0]
    9a8a:	4a0b      	ldr	r2, [pc, #44]	; (9ab8 <_scanf_chars+0xb8>)
    9a8c:	781b      	ldrb	r3, [r3, #0]
    9a8e:	6812      	ldr	r2, [r2, #0]
    9a90:	18d3      	adds	r3, r2, r3
    9a92:	785b      	ldrb	r3, [r3, #1]
    9a94:	071b      	lsls	r3, r3, #28
    9a96:	d5cc      	bpl.n	9a32 <_scanf_chars+0x32>
    9a98:	2310      	movs	r3, #16
    9a9a:	6822      	ldr	r2, [r4, #0]
    9a9c:	4013      	ands	r3, r2
    9a9e:	d106      	bne.n	9aae <_scanf_chars+0xae>
    9aa0:	68e2      	ldr	r2, [r4, #12]
    9aa2:	3201      	adds	r2, #1
    9aa4:	60e2      	str	r2, [r4, #12]
    9aa6:	69a2      	ldr	r2, [r4, #24]
    9aa8:	2a00      	cmp	r2, #0
    9aaa:	d000      	beq.n	9aae <_scanf_chars+0xae>
    9aac:	703b      	strb	r3, [r7, #0]
    9aae:	2000      	movs	r0, #0
    9ab0:	6923      	ldr	r3, [r4, #16]
    9ab2:	199e      	adds	r6, r3, r6
    9ab4:	6126      	str	r6, [r4, #16]
    9ab6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    9ab8:	20000138 	.word	0x20000138

00009abc <_scanf_i>:
    9abc:	b5f0      	push	{r4, r5, r6, r7, lr}
    9abe:	1c0c      	adds	r4, r1, #0
    9ac0:	b08b      	sub	sp, #44	; 0x2c
    9ac2:	9301      	str	r3, [sp, #4]
    9ac4:	4b74      	ldr	r3, [pc, #464]	; (9c98 <_scanf_i+0x1dc>)
    9ac6:	9004      	str	r0, [sp, #16]
    9ac8:	1c16      	adds	r6, r2, #0
    9aca:	aa07      	add	r2, sp, #28
    9acc:	cb23      	ldmia	r3!, {r0, r1, r5}
    9ace:	c223      	stmia	r2!, {r0, r1, r5}
    9ad0:	4b72      	ldr	r3, [pc, #456]	; (9c9c <_scanf_i+0x1e0>)
    9ad2:	9305      	str	r3, [sp, #20]
    9ad4:	69a3      	ldr	r3, [r4, #24]
    9ad6:	2b03      	cmp	r3, #3
    9ad8:	d001      	beq.n	9ade <_scanf_i+0x22>
    9ada:	4b71      	ldr	r3, [pc, #452]	; (9ca0 <_scanf_i+0x1e4>)
    9adc:	9305      	str	r3, [sp, #20]
    9ade:	2200      	movs	r2, #0
    9ae0:	68a3      	ldr	r3, [r4, #8]
    9ae2:	9203      	str	r2, [sp, #12]
    9ae4:	325d      	adds	r2, #93	; 0x5d
    9ae6:	1e59      	subs	r1, r3, #1
    9ae8:	32ff      	adds	r2, #255	; 0xff
    9aea:	4291      	cmp	r1, r2
    9aec:	d905      	bls.n	9afa <_scanf_i+0x3e>
    9aee:	3b5e      	subs	r3, #94	; 0x5e
    9af0:	3bff      	subs	r3, #255	; 0xff
    9af2:	9303      	str	r3, [sp, #12]
    9af4:	235e      	movs	r3, #94	; 0x5e
    9af6:	33ff      	adds	r3, #255	; 0xff
    9af8:	60a3      	str	r3, [r4, #8]
    9afa:	1c23      	adds	r3, r4, #0
    9afc:	331c      	adds	r3, #28
    9afe:	9300      	str	r3, [sp, #0]
    9b00:	23d0      	movs	r3, #208	; 0xd0
    9b02:	2700      	movs	r7, #0
    9b04:	6822      	ldr	r2, [r4, #0]
    9b06:	011b      	lsls	r3, r3, #4
    9b08:	4313      	orrs	r3, r2
    9b0a:	6023      	str	r3, [r4, #0]
    9b0c:	9b00      	ldr	r3, [sp, #0]
    9b0e:	9302      	str	r3, [sp, #8]
    9b10:	6832      	ldr	r2, [r6, #0]
    9b12:	00bb      	lsls	r3, r7, #2
    9b14:	7811      	ldrb	r1, [r2, #0]
    9b16:	aa07      	add	r2, sp, #28
    9b18:	5898      	ldr	r0, [r3, r2]
    9b1a:	2202      	movs	r2, #2
    9b1c:	f7fe ff2c 	bl	8978 <memchr>
    9b20:	2800      	cmp	r0, #0
    9b22:	d039      	beq.n	9b98 <_scanf_i+0xdc>
    9b24:	2f01      	cmp	r7, #1
    9b26:	d10d      	bne.n	9b44 <_scanf_i+0x88>
    9b28:	6863      	ldr	r3, [r4, #4]
    9b2a:	2b00      	cmp	r3, #0
    9b2c:	d106      	bne.n	9b3c <_scanf_i+0x80>
    9b2e:	3308      	adds	r3, #8
    9b30:	6822      	ldr	r2, [r4, #0]
    9b32:	6063      	str	r3, [r4, #4]
    9b34:	33f9      	adds	r3, #249	; 0xf9
    9b36:	33ff      	adds	r3, #255	; 0xff
    9b38:	4313      	orrs	r3, r2
    9b3a:	6023      	str	r3, [r4, #0]
    9b3c:	4b59      	ldr	r3, [pc, #356]	; (9ca4 <_scanf_i+0x1e8>)
    9b3e:	6822      	ldr	r2, [r4, #0]
    9b40:	4013      	ands	r3, r2
    9b42:	e00d      	b.n	9b60 <_scanf_i+0xa4>
    9b44:	2f02      	cmp	r7, #2
    9b46:	d10c      	bne.n	9b62 <_scanf_i+0xa6>
    9b48:	22c0      	movs	r2, #192	; 0xc0
    9b4a:	2180      	movs	r1, #128	; 0x80
    9b4c:	6823      	ldr	r3, [r4, #0]
    9b4e:	00d2      	lsls	r2, r2, #3
    9b50:	401a      	ands	r2, r3
    9b52:	0089      	lsls	r1, r1, #2
    9b54:	428a      	cmp	r2, r1
    9b56:	d122      	bne.n	9b9e <_scanf_i+0xe2>
    9b58:	2210      	movs	r2, #16
    9b5a:	6062      	str	r2, [r4, #4]
    9b5c:	32f0      	adds	r2, #240	; 0xf0
    9b5e:	4313      	orrs	r3, r2
    9b60:	6023      	str	r3, [r4, #0]
    9b62:	68a3      	ldr	r3, [r4, #8]
    9b64:	1e5a      	subs	r2, r3, #1
    9b66:	60a2      	str	r2, [r4, #8]
    9b68:	2b00      	cmp	r3, #0
    9b6a:	d015      	beq.n	9b98 <_scanf_i+0xdc>
    9b6c:	9b02      	ldr	r3, [sp, #8]
    9b6e:	1c5d      	adds	r5, r3, #1
    9b70:	6833      	ldr	r3, [r6, #0]
    9b72:	1c5a      	adds	r2, r3, #1
    9b74:	6032      	str	r2, [r6, #0]
    9b76:	781b      	ldrb	r3, [r3, #0]
    9b78:	9a02      	ldr	r2, [sp, #8]
    9b7a:	9502      	str	r5, [sp, #8]
    9b7c:	7013      	strb	r3, [r2, #0]
    9b7e:	6873      	ldr	r3, [r6, #4]
    9b80:	3b01      	subs	r3, #1
    9b82:	6073      	str	r3, [r6, #4]
    9b84:	2b00      	cmp	r3, #0
    9b86:	dc07      	bgt.n	9b98 <_scanf_i+0xdc>
    9b88:	23c0      	movs	r3, #192	; 0xc0
    9b8a:	005b      	lsls	r3, r3, #1
    9b8c:	58e3      	ldr	r3, [r4, r3]
    9b8e:	9804      	ldr	r0, [sp, #16]
    9b90:	1c31      	adds	r1, r6, #0
    9b92:	4798      	blx	r3
    9b94:	2800      	cmp	r0, #0
    9b96:	d144      	bne.n	9c22 <_scanf_i+0x166>
    9b98:	3701      	adds	r7, #1
    9b9a:	2f03      	cmp	r7, #3
    9b9c:	d1b8      	bne.n	9b10 <_scanf_i+0x54>
    9b9e:	6863      	ldr	r3, [r4, #4]
    9ba0:	2b00      	cmp	r3, #0
    9ba2:	d101      	bne.n	9ba8 <_scanf_i+0xec>
    9ba4:	330a      	adds	r3, #10
    9ba6:	6063      	str	r3, [r4, #4]
    9ba8:	2110      	movs	r1, #16
    9baa:	2700      	movs	r7, #0
    9bac:	6863      	ldr	r3, [r4, #4]
    9bae:	6960      	ldr	r0, [r4, #20]
    9bb0:	1ac9      	subs	r1, r1, r3
    9bb2:	4b3d      	ldr	r3, [pc, #244]	; (9ca8 <_scanf_i+0x1ec>)
    9bb4:	18c9      	adds	r1, r1, r3
    9bb6:	f000 f94f 	bl	9e58 <__sccl>
    9bba:	9d02      	ldr	r5, [sp, #8]
    9bbc:	68a3      	ldr	r3, [r4, #8]
    9bbe:	2b00      	cmp	r3, #0
    9bc0:	d030      	beq.n	9c24 <_scanf_i+0x168>
    9bc2:	6832      	ldr	r2, [r6, #0]
    9bc4:	6960      	ldr	r0, [r4, #20]
    9bc6:	7811      	ldrb	r1, [r2, #0]
    9bc8:	5c40      	ldrb	r0, [r0, r1]
    9bca:	2800      	cmp	r0, #0
    9bcc:	d02a      	beq.n	9c24 <_scanf_i+0x168>
    9bce:	2930      	cmp	r1, #48	; 0x30
    9bd0:	d10b      	bne.n	9bea <_scanf_i+0x12e>
    9bd2:	6821      	ldr	r1, [r4, #0]
    9bd4:	0509      	lsls	r1, r1, #20
    9bd6:	d508      	bpl.n	9bea <_scanf_i+0x12e>
    9bd8:	9a03      	ldr	r2, [sp, #12]
    9bda:	3701      	adds	r7, #1
    9bdc:	2a00      	cmp	r2, #0
    9bde:	d00b      	beq.n	9bf8 <_scanf_i+0x13c>
    9be0:	3a01      	subs	r2, #1
    9be2:	3301      	adds	r3, #1
    9be4:	9203      	str	r2, [sp, #12]
    9be6:	60a3      	str	r3, [r4, #8]
    9be8:	e006      	b.n	9bf8 <_scanf_i+0x13c>
    9bea:	6821      	ldr	r1, [r4, #0]
    9bec:	4b2f      	ldr	r3, [pc, #188]	; (9cac <_scanf_i+0x1f0>)
    9bee:	400b      	ands	r3, r1
    9bf0:	6023      	str	r3, [r4, #0]
    9bf2:	7813      	ldrb	r3, [r2, #0]
    9bf4:	702b      	strb	r3, [r5, #0]
    9bf6:	3501      	adds	r5, #1
    9bf8:	6873      	ldr	r3, [r6, #4]
    9bfa:	3b01      	subs	r3, #1
    9bfc:	6073      	str	r3, [r6, #4]
    9bfe:	2b00      	cmp	r3, #0
    9c00:	dd03      	ble.n	9c0a <_scanf_i+0x14e>
    9c02:	6833      	ldr	r3, [r6, #0]
    9c04:	3301      	adds	r3, #1
    9c06:	6033      	str	r3, [r6, #0]
    9c08:	e007      	b.n	9c1a <_scanf_i+0x15e>
    9c0a:	23c0      	movs	r3, #192	; 0xc0
    9c0c:	005b      	lsls	r3, r3, #1
    9c0e:	58e3      	ldr	r3, [r4, r3]
    9c10:	9804      	ldr	r0, [sp, #16]
    9c12:	1c31      	adds	r1, r6, #0
    9c14:	4798      	blx	r3
    9c16:	2800      	cmp	r0, #0
    9c18:	d104      	bne.n	9c24 <_scanf_i+0x168>
    9c1a:	68a3      	ldr	r3, [r4, #8]
    9c1c:	3b01      	subs	r3, #1
    9c1e:	60a3      	str	r3, [r4, #8]
    9c20:	e7cc      	b.n	9bbc <_scanf_i+0x100>
    9c22:	2700      	movs	r7, #0
    9c24:	6823      	ldr	r3, [r4, #0]
    9c26:	05db      	lsls	r3, r3, #23
    9c28:	d50e      	bpl.n	9c48 <_scanf_i+0x18c>
    9c2a:	9b00      	ldr	r3, [sp, #0]
    9c2c:	429d      	cmp	r5, r3
    9c2e:	d907      	bls.n	9c40 <_scanf_i+0x184>
    9c30:	23be      	movs	r3, #190	; 0xbe
    9c32:	3d01      	subs	r5, #1
    9c34:	005b      	lsls	r3, r3, #1
    9c36:	7829      	ldrb	r1, [r5, #0]
    9c38:	58e3      	ldr	r3, [r4, r3]
    9c3a:	9804      	ldr	r0, [sp, #16]
    9c3c:	1c32      	adds	r2, r6, #0
    9c3e:	4798      	blx	r3
    9c40:	9b00      	ldr	r3, [sp, #0]
    9c42:	2001      	movs	r0, #1
    9c44:	429d      	cmp	r5, r3
    9c46:	d025      	beq.n	9c94 <_scanf_i+0x1d8>
    9c48:	2210      	movs	r2, #16
    9c4a:	6823      	ldr	r3, [r4, #0]
    9c4c:	401a      	ands	r2, r3
    9c4e:	d11a      	bne.n	9c86 <_scanf_i+0x1ca>
    9c50:	702a      	strb	r2, [r5, #0]
    9c52:	6863      	ldr	r3, [r4, #4]
    9c54:	9804      	ldr	r0, [sp, #16]
    9c56:	9900      	ldr	r1, [sp, #0]
    9c58:	9e05      	ldr	r6, [sp, #20]
    9c5a:	47b0      	blx	r6
    9c5c:	9b01      	ldr	r3, [sp, #4]
    9c5e:	6822      	ldr	r2, [r4, #0]
    9c60:	681b      	ldr	r3, [r3, #0]
    9c62:	0691      	lsls	r1, r2, #26
    9c64:	d407      	bmi.n	9c76 <_scanf_i+0x1ba>
    9c66:	07d1      	lsls	r1, r2, #31
    9c68:	d505      	bpl.n	9c76 <_scanf_i+0x1ba>
    9c6a:	9901      	ldr	r1, [sp, #4]
    9c6c:	1d1a      	adds	r2, r3, #4
    9c6e:	600a      	str	r2, [r1, #0]
    9c70:	681b      	ldr	r3, [r3, #0]
    9c72:	8018      	strh	r0, [r3, #0]
    9c74:	e004      	b.n	9c80 <_scanf_i+0x1c4>
    9c76:	9901      	ldr	r1, [sp, #4]
    9c78:	1d1a      	adds	r2, r3, #4
    9c7a:	600a      	str	r2, [r1, #0]
    9c7c:	681b      	ldr	r3, [r3, #0]
    9c7e:	6018      	str	r0, [r3, #0]
    9c80:	68e3      	ldr	r3, [r4, #12]
    9c82:	3301      	adds	r3, #1
    9c84:	60e3      	str	r3, [r4, #12]
    9c86:	2000      	movs	r0, #0
    9c88:	9b00      	ldr	r3, [sp, #0]
    9c8a:	1aed      	subs	r5, r5, r3
    9c8c:	6923      	ldr	r3, [r4, #16]
    9c8e:	19ed      	adds	r5, r5, r7
    9c90:	195d      	adds	r5, r3, r5
    9c92:	6125      	str	r5, [r4, #16]
    9c94:	b00b      	add	sp, #44	; 0x2c
    9c96:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9c98:	0000e450 	.word	0x0000e450
    9c9c:	0000ae11 	.word	0x0000ae11
    9ca0:	0000af31 	.word	0x0000af31
    9ca4:	fffffaff 	.word	0xfffffaff
    9ca8:	0000e45c 	.word	0x0000e45c
    9cac:	fffff6ff 	.word	0xfffff6ff

00009cb0 <_open_r>:
    9cb0:	b538      	push	{r3, r4, r5, lr}
    9cb2:	1c05      	adds	r5, r0, #0
    9cb4:	2000      	movs	r0, #0
    9cb6:	4c07      	ldr	r4, [pc, #28]	; (9cd4 <_open_r+0x24>)
    9cb8:	6020      	str	r0, [r4, #0]
    9cba:	1c08      	adds	r0, r1, #0
    9cbc:	1c11      	adds	r1, r2, #0
    9cbe:	1c1a      	adds	r2, r3, #0
    9cc0:	f7f8 fea4 	bl	2a0c <_open>
    9cc4:	1c43      	adds	r3, r0, #1
    9cc6:	d103      	bne.n	9cd0 <_open_r+0x20>
    9cc8:	6823      	ldr	r3, [r4, #0]
    9cca:	2b00      	cmp	r3, #0
    9ccc:	d000      	beq.n	9cd0 <_open_r+0x20>
    9cce:	602b      	str	r3, [r5, #0]
    9cd0:	bd38      	pop	{r3, r4, r5, pc}
    9cd2:	46c0      	nop			; (mov r8, r8)
    9cd4:	20004488 	.word	0x20004488

00009cd8 <iprintf>:
    9cd8:	b40f      	push	{r0, r1, r2, r3}
    9cda:	4b0b      	ldr	r3, [pc, #44]	; (9d08 <iprintf+0x30>)
    9cdc:	b513      	push	{r0, r1, r4, lr}
    9cde:	681c      	ldr	r4, [r3, #0]
    9ce0:	2c00      	cmp	r4, #0
    9ce2:	d005      	beq.n	9cf0 <iprintf+0x18>
    9ce4:	69a3      	ldr	r3, [r4, #24]
    9ce6:	2b00      	cmp	r3, #0
    9ce8:	d102      	bne.n	9cf0 <iprintf+0x18>
    9cea:	1c20      	adds	r0, r4, #0
    9cec:	f7fe fc38 	bl	8560 <__sinit>
    9cf0:	ab05      	add	r3, sp, #20
    9cf2:	1c20      	adds	r0, r4, #0
    9cf4:	68a1      	ldr	r1, [r4, #8]
    9cf6:	9a04      	ldr	r2, [sp, #16]
    9cf8:	9301      	str	r3, [sp, #4]
    9cfa:	f7fe ff1f 	bl	8b3c <_vfiprintf_r>
    9cfe:	bc16      	pop	{r1, r2, r4}
    9d00:	bc08      	pop	{r3}
    9d02:	b004      	add	sp, #16
    9d04:	4718      	bx	r3
    9d06:	46c0      	nop			; (mov r8, r8)
    9d08:	20000134 	.word	0x20000134

00009d0c <_puts_r>:
    9d0c:	b570      	push	{r4, r5, r6, lr}
    9d0e:	1c05      	adds	r5, r0, #0
    9d10:	1c0e      	adds	r6, r1, #0
    9d12:	2800      	cmp	r0, #0
    9d14:	d004      	beq.n	9d20 <_puts_r+0x14>
    9d16:	6983      	ldr	r3, [r0, #24]
    9d18:	2b00      	cmp	r3, #0
    9d1a:	d101      	bne.n	9d20 <_puts_r+0x14>
    9d1c:	f7fe fc20 	bl	8560 <__sinit>
    9d20:	68ac      	ldr	r4, [r5, #8]
    9d22:	89a3      	ldrh	r3, [r4, #12]
    9d24:	071b      	lsls	r3, r3, #28
    9d26:	d502      	bpl.n	9d2e <_puts_r+0x22>
    9d28:	6923      	ldr	r3, [r4, #16]
    9d2a:	2b00      	cmp	r3, #0
    9d2c:	d119      	bne.n	9d62 <_puts_r+0x56>
    9d2e:	1c28      	adds	r0, r5, #0
    9d30:	1c21      	adds	r1, r4, #0
    9d32:	f001 fa29 	bl	b188 <__swsetup_r>
    9d36:	2800      	cmp	r0, #0
    9d38:	d013      	beq.n	9d62 <_puts_r+0x56>
    9d3a:	2001      	movs	r0, #1
    9d3c:	4240      	negs	r0, r0
    9d3e:	e045      	b.n	9dcc <_puts_r+0xc0>
    9d40:	7831      	ldrb	r1, [r6, #0]
    9d42:	2b00      	cmp	r3, #0
    9d44:	da1b      	bge.n	9d7e <_puts_r+0x72>
    9d46:	69a2      	ldr	r2, [r4, #24]
    9d48:	4293      	cmp	r3, r2
    9d4a:	da11      	bge.n	9d70 <_puts_r+0x64>
    9d4c:	1c22      	adds	r2, r4, #0
    9d4e:	1c28      	adds	r0, r5, #0
    9d50:	f001 f9ae 	bl	b0b0 <__swbuf_r>
    9d54:	3001      	adds	r0, #1
    9d56:	4242      	negs	r2, r0
    9d58:	4142      	adcs	r2, r0
    9d5a:	b2d0      	uxtb	r0, r2
    9d5c:	2800      	cmp	r0, #0
    9d5e:	d1ec      	bne.n	9d3a <_puts_r+0x2e>
    9d60:	3601      	adds	r6, #1
    9d62:	68a3      	ldr	r3, [r4, #8]
    9d64:	7832      	ldrb	r2, [r6, #0]
    9d66:	3b01      	subs	r3, #1
    9d68:	60a3      	str	r3, [r4, #8]
    9d6a:	2a00      	cmp	r2, #0
    9d6c:	d1e8      	bne.n	9d40 <_puts_r+0x34>
    9d6e:	e00c      	b.n	9d8a <_puts_r+0x7e>
    9d70:	6823      	ldr	r3, [r4, #0]
    9d72:	7019      	strb	r1, [r3, #0]
    9d74:	6823      	ldr	r3, [r4, #0]
    9d76:	7819      	ldrb	r1, [r3, #0]
    9d78:	290a      	cmp	r1, #10
    9d7a:	d103      	bne.n	9d84 <_puts_r+0x78>
    9d7c:	e7e6      	b.n	9d4c <_puts_r+0x40>
    9d7e:	6823      	ldr	r3, [r4, #0]
    9d80:	7019      	strb	r1, [r3, #0]
    9d82:	6823      	ldr	r3, [r4, #0]
    9d84:	3301      	adds	r3, #1
    9d86:	6023      	str	r3, [r4, #0]
    9d88:	e7ea      	b.n	9d60 <_puts_r+0x54>
    9d8a:	2b00      	cmp	r3, #0
    9d8c:	da17      	bge.n	9dbe <_puts_r+0xb2>
    9d8e:	69a2      	ldr	r2, [r4, #24]
    9d90:	4293      	cmp	r3, r2
    9d92:	db08      	blt.n	9da6 <_puts_r+0x9a>
    9d94:	230a      	movs	r3, #10
    9d96:	6822      	ldr	r2, [r4, #0]
    9d98:	7013      	strb	r3, [r2, #0]
    9d9a:	6823      	ldr	r3, [r4, #0]
    9d9c:	7819      	ldrb	r1, [r3, #0]
    9d9e:	290a      	cmp	r1, #10
    9da0:	d111      	bne.n	9dc6 <_puts_r+0xba>
    9da2:	1c28      	adds	r0, r5, #0
    9da4:	e001      	b.n	9daa <_puts_r+0x9e>
    9da6:	1c28      	adds	r0, r5, #0
    9da8:	210a      	movs	r1, #10
    9daa:	1c22      	adds	r2, r4, #0
    9dac:	f001 f980 	bl	b0b0 <__swbuf_r>
    9db0:	3001      	adds	r0, #1
    9db2:	4242      	negs	r2, r0
    9db4:	4142      	adcs	r2, r0
    9db6:	b2d0      	uxtb	r0, r2
    9db8:	2800      	cmp	r0, #0
    9dba:	d006      	beq.n	9dca <_puts_r+0xbe>
    9dbc:	e7bd      	b.n	9d3a <_puts_r+0x2e>
    9dbe:	230a      	movs	r3, #10
    9dc0:	6822      	ldr	r2, [r4, #0]
    9dc2:	7013      	strb	r3, [r2, #0]
    9dc4:	6823      	ldr	r3, [r4, #0]
    9dc6:	3301      	adds	r3, #1
    9dc8:	6023      	str	r3, [r4, #0]
    9dca:	200a      	movs	r0, #10
    9dcc:	bd70      	pop	{r4, r5, r6, pc}
	...

00009dd0 <puts>:
    9dd0:	b508      	push	{r3, lr}
    9dd2:	4b03      	ldr	r3, [pc, #12]	; (9de0 <puts+0x10>)
    9dd4:	1c01      	adds	r1, r0, #0
    9dd6:	6818      	ldr	r0, [r3, #0]
    9dd8:	f7ff ff98 	bl	9d0c <_puts_r>
    9ddc:	bd08      	pop	{r3, pc}
    9dde:	46c0      	nop			; (mov r8, r8)
    9de0:	20000134 	.word	0x20000134

00009de4 <__fpclassifyd>:
    9de4:	b530      	push	{r4, r5, lr}
    9de6:	1c0c      	adds	r4, r1, #0
    9de8:	2302      	movs	r3, #2
    9dea:	4304      	orrs	r4, r0
    9dec:	d017      	beq.n	9e1e <__fpclassifyd+0x3a>
    9dee:	2480      	movs	r4, #128	; 0x80
    9df0:	0624      	lsls	r4, r4, #24
    9df2:	42a1      	cmp	r1, r4
    9df4:	d101      	bne.n	9dfa <__fpclassifyd+0x16>
    9df6:	2800      	cmp	r0, #0
    9df8:	d011      	beq.n	9e1e <__fpclassifyd+0x3a>
    9dfa:	4b0a      	ldr	r3, [pc, #40]	; (9e24 <__fpclassifyd+0x40>)
    9dfc:	0049      	lsls	r1, r1, #1
    9dfe:	0849      	lsrs	r1, r1, #1
    9e00:	4a09      	ldr	r2, [pc, #36]	; (9e28 <__fpclassifyd+0x44>)
    9e02:	18cc      	adds	r4, r1, r3
    9e04:	2304      	movs	r3, #4
    9e06:	4294      	cmp	r4, r2
    9e08:	d909      	bls.n	9e1e <__fpclassifyd+0x3a>
    9e0a:	4a08      	ldr	r2, [pc, #32]	; (9e2c <__fpclassifyd+0x48>)
    9e0c:	3b01      	subs	r3, #1
    9e0e:	4291      	cmp	r1, r2
    9e10:	d905      	bls.n	9e1e <__fpclassifyd+0x3a>
    9e12:	4a07      	ldr	r2, [pc, #28]	; (9e30 <__fpclassifyd+0x4c>)
    9e14:	2300      	movs	r3, #0
    9e16:	4291      	cmp	r1, r2
    9e18:	d101      	bne.n	9e1e <__fpclassifyd+0x3a>
    9e1a:	4243      	negs	r3, r0
    9e1c:	4143      	adcs	r3, r0
    9e1e:	1c18      	adds	r0, r3, #0
    9e20:	bd30      	pop	{r4, r5, pc}
    9e22:	46c0      	nop			; (mov r8, r8)
    9e24:	fff00000 	.word	0xfff00000
    9e28:	7fdfffff 	.word	0x7fdfffff
    9e2c:	000fffff 	.word	0x000fffff
    9e30:	7ff00000 	.word	0x7ff00000

00009e34 <_sbrk_r>:
    9e34:	b538      	push	{r3, r4, r5, lr}
    9e36:	2300      	movs	r3, #0
    9e38:	4c06      	ldr	r4, [pc, #24]	; (9e54 <_sbrk_r+0x20>)
    9e3a:	1c05      	adds	r5, r0, #0
    9e3c:	1c08      	adds	r0, r1, #0
    9e3e:	6023      	str	r3, [r4, #0]
    9e40:	f7f8 ff0c 	bl	2c5c <_sbrk>
    9e44:	1c43      	adds	r3, r0, #1
    9e46:	d103      	bne.n	9e50 <_sbrk_r+0x1c>
    9e48:	6823      	ldr	r3, [r4, #0]
    9e4a:	2b00      	cmp	r3, #0
    9e4c:	d000      	beq.n	9e50 <_sbrk_r+0x1c>
    9e4e:	602b      	str	r3, [r5, #0]
    9e50:	bd38      	pop	{r3, r4, r5, pc}
    9e52:	46c0      	nop			; (mov r8, r8)
    9e54:	20004488 	.word	0x20004488

00009e58 <__sccl>:
    9e58:	b5f0      	push	{r4, r5, r6, r7, lr}
    9e5a:	780a      	ldrb	r2, [r1, #0]
    9e5c:	2a5e      	cmp	r2, #94	; 0x5e
    9e5e:	d002      	beq.n	9e66 <__sccl+0xe>
    9e60:	1c4b      	adds	r3, r1, #1
    9e62:	2400      	movs	r4, #0
    9e64:	e002      	b.n	9e6c <__sccl+0x14>
    9e66:	2401      	movs	r4, #1
    9e68:	784a      	ldrb	r2, [r1, #1]
    9e6a:	1c8b      	adds	r3, r1, #2
    9e6c:	1c01      	adds	r1, r0, #0
    9e6e:	1c45      	adds	r5, r0, #1
    9e70:	35ff      	adds	r5, #255	; 0xff
    9e72:	700c      	strb	r4, [r1, #0]
    9e74:	3101      	adds	r1, #1
    9e76:	42a9      	cmp	r1, r5
    9e78:	d1fb      	bne.n	9e72 <__sccl+0x1a>
    9e7a:	2a00      	cmp	r2, #0
    9e7c:	d101      	bne.n	9e82 <__sccl+0x2a>
    9e7e:	1e58      	subs	r0, r3, #1
    9e80:	e01c      	b.n	9ebc <__sccl+0x64>
    9e82:	2101      	movs	r1, #1
    9e84:	1b0c      	subs	r4, r1, r4
    9e86:	b2e7      	uxtb	r7, r4
    9e88:	5487      	strb	r7, [r0, r2]
    9e8a:	7819      	ldrb	r1, [r3, #0]
    9e8c:	1c5e      	adds	r6, r3, #1
    9e8e:	292d      	cmp	r1, #45	; 0x2d
    9e90:	d006      	beq.n	9ea0 <__sccl+0x48>
    9e92:	295d      	cmp	r1, #93	; 0x5d
    9e94:	d00f      	beq.n	9eb6 <__sccl+0x5e>
    9e96:	2900      	cmp	r1, #0
    9e98:	d00f      	beq.n	9eba <__sccl+0x62>
    9e9a:	1c0a      	adds	r2, r1, #0
    9e9c:	1c33      	adds	r3, r6, #0
    9e9e:	e7f2      	b.n	9e86 <__sccl+0x2e>
    9ea0:	785d      	ldrb	r5, [r3, #1]
    9ea2:	2d5d      	cmp	r5, #93	; 0x5d
    9ea4:	d0f9      	beq.n	9e9a <__sccl+0x42>
    9ea6:	4295      	cmp	r5, r2
    9ea8:	dbf7      	blt.n	9e9a <__sccl+0x42>
    9eaa:	3302      	adds	r3, #2
    9eac:	3201      	adds	r2, #1
    9eae:	5487      	strb	r7, [r0, r2]
    9eb0:	42aa      	cmp	r2, r5
    9eb2:	dbfb      	blt.n	9eac <__sccl+0x54>
    9eb4:	e7e9      	b.n	9e8a <__sccl+0x32>
    9eb6:	1c30      	adds	r0, r6, #0
    9eb8:	e000      	b.n	9ebc <__sccl+0x64>
    9eba:	1c18      	adds	r0, r3, #0
    9ebc:	bdf0      	pop	{r4, r5, r6, r7, pc}

00009ebe <setbuf>:
    9ebe:	b508      	push	{r3, lr}
    9ec0:	424a      	negs	r2, r1
    9ec2:	414a      	adcs	r2, r1
    9ec4:	2380      	movs	r3, #128	; 0x80
    9ec6:	0052      	lsls	r2, r2, #1
    9ec8:	00db      	lsls	r3, r3, #3
    9eca:	f000 f801 	bl	9ed0 <setvbuf>
    9ece:	bd08      	pop	{r3, pc}

00009ed0 <setvbuf>:
    9ed0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    9ed2:	1c1e      	adds	r6, r3, #0
    9ed4:	4b3c      	ldr	r3, [pc, #240]	; (9fc8 <setvbuf+0xf8>)
    9ed6:	1c04      	adds	r4, r0, #0
    9ed8:	681d      	ldr	r5, [r3, #0]
    9eda:	1c0f      	adds	r7, r1, #0
    9edc:	9201      	str	r2, [sp, #4]
    9ede:	2d00      	cmp	r5, #0
    9ee0:	d005      	beq.n	9eee <setvbuf+0x1e>
    9ee2:	69ab      	ldr	r3, [r5, #24]
    9ee4:	2b00      	cmp	r3, #0
    9ee6:	d102      	bne.n	9eee <setvbuf+0x1e>
    9ee8:	1c28      	adds	r0, r5, #0
    9eea:	f7fe fb39 	bl	8560 <__sinit>
    9eee:	4b37      	ldr	r3, [pc, #220]	; (9fcc <setvbuf+0xfc>)
    9ef0:	429c      	cmp	r4, r3
    9ef2:	d101      	bne.n	9ef8 <setvbuf+0x28>
    9ef4:	686c      	ldr	r4, [r5, #4]
    9ef6:	e008      	b.n	9f0a <setvbuf+0x3a>
    9ef8:	4b35      	ldr	r3, [pc, #212]	; (9fd0 <setvbuf+0x100>)
    9efa:	429c      	cmp	r4, r3
    9efc:	d101      	bne.n	9f02 <setvbuf+0x32>
    9efe:	68ac      	ldr	r4, [r5, #8]
    9f00:	e003      	b.n	9f0a <setvbuf+0x3a>
    9f02:	4b34      	ldr	r3, [pc, #208]	; (9fd4 <setvbuf+0x104>)
    9f04:	429c      	cmp	r4, r3
    9f06:	d100      	bne.n	9f0a <setvbuf+0x3a>
    9f08:	68ec      	ldr	r4, [r5, #12]
    9f0a:	9b01      	ldr	r3, [sp, #4]
    9f0c:	2b02      	cmp	r3, #2
    9f0e:	d858      	bhi.n	9fc2 <setvbuf+0xf2>
    9f10:	2e00      	cmp	r6, #0
    9f12:	db56      	blt.n	9fc2 <setvbuf+0xf2>
    9f14:	1c28      	adds	r0, r5, #0
    9f16:	1c21      	adds	r1, r4, #0
    9f18:	f7fe faa0 	bl	845c <_fflush_r>
    9f1c:	2300      	movs	r3, #0
    9f1e:	6063      	str	r3, [r4, #4]
    9f20:	61a3      	str	r3, [r4, #24]
    9f22:	89a3      	ldrh	r3, [r4, #12]
    9f24:	061b      	lsls	r3, r3, #24
    9f26:	d503      	bpl.n	9f30 <setvbuf+0x60>
    9f28:	1c28      	adds	r0, r5, #0
    9f2a:	6921      	ldr	r1, [r4, #16]
    9f2c:	f7fe fd40 	bl	89b0 <_free_r>
    9f30:	2283      	movs	r2, #131	; 0x83
    9f32:	89a3      	ldrh	r3, [r4, #12]
    9f34:	4393      	bics	r3, r2
    9f36:	81a3      	strh	r3, [r4, #12]
    9f38:	9b01      	ldr	r3, [sp, #4]
    9f3a:	2b02      	cmp	r3, #2
    9f3c:	d013      	beq.n	9f66 <setvbuf+0x96>
    9f3e:	2f00      	cmp	r7, #0
    9f40:	d125      	bne.n	9f8e <setvbuf+0xbe>
    9f42:	2e00      	cmp	r6, #0
    9f44:	d101      	bne.n	9f4a <setvbuf+0x7a>
    9f46:	2680      	movs	r6, #128	; 0x80
    9f48:	00f6      	lsls	r6, r6, #3
    9f4a:	1c30      	adds	r0, r6, #0
    9f4c:	f7fe fd00 	bl	8950 <malloc>
    9f50:	1e07      	subs	r7, r0, #0
    9f52:	d118      	bne.n	9f86 <setvbuf+0xb6>
    9f54:	2080      	movs	r0, #128	; 0x80
    9f56:	00c0      	lsls	r0, r0, #3
    9f58:	f7fe fcfa 	bl	8950 <malloc>
    9f5c:	1e07      	subs	r7, r0, #0
    9f5e:	d110      	bne.n	9f82 <setvbuf+0xb2>
    9f60:	2001      	movs	r0, #1
    9f62:	4240      	negs	r0, r0
    9f64:	e000      	b.n	9f68 <setvbuf+0x98>
    9f66:	2000      	movs	r0, #0
    9f68:	2202      	movs	r2, #2
    9f6a:	89a3      	ldrh	r3, [r4, #12]
    9f6c:	4313      	orrs	r3, r2
    9f6e:	81a3      	strh	r3, [r4, #12]
    9f70:	2300      	movs	r3, #0
    9f72:	60a3      	str	r3, [r4, #8]
    9f74:	1c23      	adds	r3, r4, #0
    9f76:	3347      	adds	r3, #71	; 0x47
    9f78:	6023      	str	r3, [r4, #0]
    9f7a:	6123      	str	r3, [r4, #16]
    9f7c:	2301      	movs	r3, #1
    9f7e:	6163      	str	r3, [r4, #20]
    9f80:	e021      	b.n	9fc6 <setvbuf+0xf6>
    9f82:	2680      	movs	r6, #128	; 0x80
    9f84:	00f6      	lsls	r6, r6, #3
    9f86:	2280      	movs	r2, #128	; 0x80
    9f88:	89a3      	ldrh	r3, [r4, #12]
    9f8a:	4313      	orrs	r3, r2
    9f8c:	81a3      	strh	r3, [r4, #12]
    9f8e:	9b01      	ldr	r3, [sp, #4]
    9f90:	2b01      	cmp	r3, #1
    9f92:	d105      	bne.n	9fa0 <setvbuf+0xd0>
    9f94:	89a3      	ldrh	r3, [r4, #12]
    9f96:	9a01      	ldr	r2, [sp, #4]
    9f98:	431a      	orrs	r2, r3
    9f9a:	4273      	negs	r3, r6
    9f9c:	81a2      	strh	r2, [r4, #12]
    9f9e:	61a3      	str	r3, [r4, #24]
    9fa0:	4b0d      	ldr	r3, [pc, #52]	; (9fd8 <setvbuf+0x108>)
    9fa2:	2000      	movs	r0, #0
    9fa4:	62ab      	str	r3, [r5, #40]	; 0x28
    9fa6:	89a2      	ldrh	r2, [r4, #12]
    9fa8:	6027      	str	r7, [r4, #0]
    9faa:	6127      	str	r7, [r4, #16]
    9fac:	6166      	str	r6, [r4, #20]
    9fae:	0713      	lsls	r3, r2, #28
    9fb0:	d509      	bpl.n	9fc6 <setvbuf+0xf6>
    9fb2:	2303      	movs	r3, #3
    9fb4:	401a      	ands	r2, r3
    9fb6:	4253      	negs	r3, r2
    9fb8:	4153      	adcs	r3, r2
    9fba:	425b      	negs	r3, r3
    9fbc:	401e      	ands	r6, r3
    9fbe:	60a6      	str	r6, [r4, #8]
    9fc0:	e001      	b.n	9fc6 <setvbuf+0xf6>
    9fc2:	2001      	movs	r0, #1
    9fc4:	4240      	negs	r0, r0
    9fc6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    9fc8:	20000134 	.word	0x20000134
    9fcc:	0000e3a0 	.word	0x0000e3a0
    9fd0:	0000e3c0 	.word	0x0000e3c0
    9fd4:	0000e3e0 	.word	0x0000e3e0
    9fd8:	000084dd 	.word	0x000084dd

00009fdc <nanf>:
    9fdc:	4800      	ldr	r0, [pc, #0]	; (9fe0 <nanf+0x4>)
    9fde:	4770      	bx	lr
    9fe0:	7fc00000 	.word	0x7fc00000

00009fe4 <siprintf>:
    9fe4:	b40e      	push	{r1, r2, r3}
    9fe6:	b510      	push	{r4, lr}
    9fe8:	b09d      	sub	sp, #116	; 0x74
    9fea:	a902      	add	r1, sp, #8
    9fec:	9002      	str	r0, [sp, #8]
    9fee:	6108      	str	r0, [r1, #16]
    9ff0:	480b      	ldr	r0, [pc, #44]	; (a020 <siprintf+0x3c>)
    9ff2:	2482      	movs	r4, #130	; 0x82
    9ff4:	6088      	str	r0, [r1, #8]
    9ff6:	6148      	str	r0, [r1, #20]
    9ff8:	2001      	movs	r0, #1
    9ffa:	4240      	negs	r0, r0
    9ffc:	ab1f      	add	r3, sp, #124	; 0x7c
    9ffe:	81c8      	strh	r0, [r1, #14]
    a000:	4808      	ldr	r0, [pc, #32]	; (a024 <siprintf+0x40>)
    a002:	cb04      	ldmia	r3!, {r2}
    a004:	00a4      	lsls	r4, r4, #2
    a006:	6800      	ldr	r0, [r0, #0]
    a008:	9301      	str	r3, [sp, #4]
    a00a:	818c      	strh	r4, [r1, #12]
    a00c:	f003 f802 	bl	d014 <_svfiprintf_r>
    a010:	2300      	movs	r3, #0
    a012:	9a02      	ldr	r2, [sp, #8]
    a014:	7013      	strb	r3, [r2, #0]
    a016:	b01d      	add	sp, #116	; 0x74
    a018:	bc10      	pop	{r4}
    a01a:	bc08      	pop	{r3}
    a01c:	b003      	add	sp, #12
    a01e:	4718      	bx	r3
    a020:	7fffffff 	.word	0x7fffffff
    a024:	20000134 	.word	0x20000134

0000a028 <siscanf>:
    a028:	b40e      	push	{r1, r2, r3}
    a02a:	2381      	movs	r3, #129	; 0x81
    a02c:	b570      	push	{r4, r5, r6, lr}
    a02e:	b09d      	sub	sp, #116	; 0x74
    a030:	ac02      	add	r4, sp, #8
    a032:	ad21      	add	r5, sp, #132	; 0x84
    a034:	009b      	lsls	r3, r3, #2
    a036:	cd40      	ldmia	r5!, {r6}
    a038:	81a3      	strh	r3, [r4, #12]
    a03a:	9002      	str	r0, [sp, #8]
    a03c:	9006      	str	r0, [sp, #24]
    a03e:	f000 f873 	bl	a128 <strlen>
    a042:	4b0b      	ldr	r3, [pc, #44]	; (a070 <siscanf+0x48>)
    a044:	6060      	str	r0, [r4, #4]
    a046:	6263      	str	r3, [r4, #36]	; 0x24
    a048:	2300      	movs	r3, #0
    a04a:	6363      	str	r3, [r4, #52]	; 0x34
    a04c:	64a3      	str	r3, [r4, #72]	; 0x48
    a04e:	3b01      	subs	r3, #1
    a050:	81e3      	strh	r3, [r4, #14]
    a052:	4b08      	ldr	r3, [pc, #32]	; (a074 <siscanf+0x4c>)
    a054:	6160      	str	r0, [r4, #20]
    a056:	1c21      	adds	r1, r4, #0
    a058:	6818      	ldr	r0, [r3, #0]
    a05a:	1c32      	adds	r2, r6, #0
    a05c:	1c2b      	adds	r3, r5, #0
    a05e:	9501      	str	r5, [sp, #4]
    a060:	f003 f92a 	bl	d2b8 <__ssvfiscanf_r>
    a064:	b01d      	add	sp, #116	; 0x74
    a066:	bc70      	pop	{r4, r5, r6}
    a068:	bc08      	pop	{r3}
    a06a:	b003      	add	sp, #12
    a06c:	4718      	bx	r3
    a06e:	46c0      	nop			; (mov r8, r8)
    a070:	0000a0a1 	.word	0x0000a0a1
    a074:	20000134 	.word	0x20000134

0000a078 <__sread>:
    a078:	b538      	push	{r3, r4, r5, lr}
    a07a:	1c0c      	adds	r4, r1, #0
    a07c:	250e      	movs	r5, #14
    a07e:	5f49      	ldrsh	r1, [r1, r5]
    a080:	f003 fa92 	bl	d5a8 <_read_r>
    a084:	2800      	cmp	r0, #0
    a086:	db03      	blt.n	a090 <__sread+0x18>
    a088:	6d63      	ldr	r3, [r4, #84]	; 0x54
    a08a:	181b      	adds	r3, r3, r0
    a08c:	6563      	str	r3, [r4, #84]	; 0x54
    a08e:	e003      	b.n	a098 <__sread+0x20>
    a090:	89a2      	ldrh	r2, [r4, #12]
    a092:	4b02      	ldr	r3, [pc, #8]	; (a09c <__sread+0x24>)
    a094:	4013      	ands	r3, r2
    a096:	81a3      	strh	r3, [r4, #12]
    a098:	bd38      	pop	{r3, r4, r5, pc}
    a09a:	46c0      	nop			; (mov r8, r8)
    a09c:	ffffefff 	.word	0xffffefff

0000a0a0 <__seofread>:
    a0a0:	2000      	movs	r0, #0
    a0a2:	4770      	bx	lr

0000a0a4 <__swrite>:
    a0a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a0a6:	1c1e      	adds	r6, r3, #0
    a0a8:	898b      	ldrh	r3, [r1, #12]
    a0aa:	1c05      	adds	r5, r0, #0
    a0ac:	1c0c      	adds	r4, r1, #0
    a0ae:	1c17      	adds	r7, r2, #0
    a0b0:	05db      	lsls	r3, r3, #23
    a0b2:	d505      	bpl.n	a0c0 <__swrite+0x1c>
    a0b4:	230e      	movs	r3, #14
    a0b6:	5ec9      	ldrsh	r1, [r1, r3]
    a0b8:	2200      	movs	r2, #0
    a0ba:	2302      	movs	r3, #2
    a0bc:	f002 faea 	bl	c694 <_lseek_r>
    a0c0:	89a2      	ldrh	r2, [r4, #12]
    a0c2:	4b05      	ldr	r3, [pc, #20]	; (a0d8 <__swrite+0x34>)
    a0c4:	1c28      	adds	r0, r5, #0
    a0c6:	4013      	ands	r3, r2
    a0c8:	81a3      	strh	r3, [r4, #12]
    a0ca:	1c3a      	adds	r2, r7, #0
    a0cc:	230e      	movs	r3, #14
    a0ce:	5ee1      	ldrsh	r1, [r4, r3]
    a0d0:	1c33      	adds	r3, r6, #0
    a0d2:	f001 f845 	bl	b160 <_write_r>
    a0d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a0d8:	ffffefff 	.word	0xffffefff

0000a0dc <__sseek>:
    a0dc:	b538      	push	{r3, r4, r5, lr}
    a0de:	1c0c      	adds	r4, r1, #0
    a0e0:	250e      	movs	r5, #14
    a0e2:	5f49      	ldrsh	r1, [r1, r5]
    a0e4:	f002 fad6 	bl	c694 <_lseek_r>
    a0e8:	89a3      	ldrh	r3, [r4, #12]
    a0ea:	1c42      	adds	r2, r0, #1
    a0ec:	d103      	bne.n	a0f6 <__sseek+0x1a>
    a0ee:	4a05      	ldr	r2, [pc, #20]	; (a104 <__sseek+0x28>)
    a0f0:	4013      	ands	r3, r2
    a0f2:	81a3      	strh	r3, [r4, #12]
    a0f4:	e004      	b.n	a100 <__sseek+0x24>
    a0f6:	2280      	movs	r2, #128	; 0x80
    a0f8:	0152      	lsls	r2, r2, #5
    a0fa:	4313      	orrs	r3, r2
    a0fc:	81a3      	strh	r3, [r4, #12]
    a0fe:	6560      	str	r0, [r4, #84]	; 0x54
    a100:	bd38      	pop	{r3, r4, r5, pc}
    a102:	46c0      	nop			; (mov r8, r8)
    a104:	ffffefff 	.word	0xffffefff

0000a108 <__sclose>:
    a108:	b508      	push	{r3, lr}
    a10a:	230e      	movs	r3, #14
    a10c:	5ec9      	ldrsh	r1, [r1, r3]
    a10e:	f001 f8af 	bl	b270 <_close_r>
    a112:	bd08      	pop	{r3, pc}

0000a114 <strcmp>:
    a114:	7802      	ldrb	r2, [r0, #0]
    a116:	780b      	ldrb	r3, [r1, #0]
    a118:	2a00      	cmp	r2, #0
    a11a:	d003      	beq.n	a124 <strcmp+0x10>
    a11c:	3001      	adds	r0, #1
    a11e:	3101      	adds	r1, #1
    a120:	429a      	cmp	r2, r3
    a122:	d0f7      	beq.n	a114 <strcmp>
    a124:	1ad0      	subs	r0, r2, r3
    a126:	4770      	bx	lr

0000a128 <strlen>:
    a128:	2300      	movs	r3, #0
    a12a:	5cc2      	ldrb	r2, [r0, r3]
    a12c:	3301      	adds	r3, #1
    a12e:	2a00      	cmp	r2, #0
    a130:	d1fb      	bne.n	a12a <strlen+0x2>
    a132:	1e58      	subs	r0, r3, #1
    a134:	4770      	bx	lr

0000a136 <strncmp>:
    a136:	2300      	movs	r3, #0
    a138:	b530      	push	{r4, r5, lr}
    a13a:	429a      	cmp	r2, r3
    a13c:	d00d      	beq.n	a15a <strncmp+0x24>
    a13e:	3a01      	subs	r2, #1
    a140:	5cc4      	ldrb	r4, [r0, r3]
    a142:	5ccd      	ldrb	r5, [r1, r3]
    a144:	42ac      	cmp	r4, r5
    a146:	d102      	bne.n	a14e <strncmp+0x18>
    a148:	4293      	cmp	r3, r2
    a14a:	d102      	bne.n	a152 <strncmp+0x1c>
    a14c:	1c25      	adds	r5, r4, #0
    a14e:	1b63      	subs	r3, r4, r5
    a150:	e003      	b.n	a15a <strncmp+0x24>
    a152:	3301      	adds	r3, #1
    a154:	2c00      	cmp	r4, #0
    a156:	d1f3      	bne.n	a140 <strncmp+0xa>
    a158:	e7f8      	b.n	a14c <strncmp+0x16>
    a15a:	1c18      	adds	r0, r3, #0
    a15c:	bd30      	pop	{r4, r5, pc}

0000a15e <strncpy>:
    a15e:	1c03      	adds	r3, r0, #0
    a160:	b530      	push	{r4, r5, lr}
    a162:	2a00      	cmp	r2, #0
    a164:	d007      	beq.n	a176 <strncpy+0x18>
    a166:	780c      	ldrb	r4, [r1, #0]
    a168:	3301      	adds	r3, #1
    a16a:	1e5d      	subs	r5, r3, #1
    a16c:	3a01      	subs	r2, #1
    a16e:	702c      	strb	r4, [r5, #0]
    a170:	3101      	adds	r1, #1
    a172:	2c00      	cmp	r4, #0
    a174:	d1f5      	bne.n	a162 <strncpy+0x4>
    a176:	189a      	adds	r2, r3, r2
    a178:	4293      	cmp	r3, r2
    a17a:	d003      	beq.n	a184 <strncpy+0x26>
    a17c:	2100      	movs	r1, #0
    a17e:	7019      	strb	r1, [r3, #0]
    a180:	3301      	adds	r3, #1
    a182:	e7f9      	b.n	a178 <strncpy+0x1a>
    a184:	bd30      	pop	{r4, r5, pc}

0000a186 <match>:
    a186:	b530      	push	{r4, r5, lr}
    a188:	6803      	ldr	r3, [r0, #0]
    a18a:	780c      	ldrb	r4, [r1, #0]
    a18c:	3301      	adds	r3, #1
    a18e:	2c00      	cmp	r4, #0
    a190:	d00a      	beq.n	a1a8 <match+0x22>
    a192:	781a      	ldrb	r2, [r3, #0]
    a194:	1c15      	adds	r5, r2, #0
    a196:	3d41      	subs	r5, #65	; 0x41
    a198:	2d19      	cmp	r5, #25
    a19a:	d800      	bhi.n	a19e <match+0x18>
    a19c:	3220      	adds	r2, #32
    a19e:	3101      	adds	r1, #1
    a1a0:	42a2      	cmp	r2, r4
    a1a2:	d0f2      	beq.n	a18a <match+0x4>
    a1a4:	2000      	movs	r0, #0
    a1a6:	e001      	b.n	a1ac <match+0x26>
    a1a8:	6003      	str	r3, [r0, #0]
    a1aa:	2001      	movs	r0, #1
    a1ac:	bd30      	pop	{r4, r5, pc}
	...

0000a1b0 <sulp>:
    a1b0:	b570      	push	{r4, r5, r6, lr}
    a1b2:	1c16      	adds	r6, r2, #0
    a1b4:	1c0d      	adds	r5, r1, #0
    a1b6:	f002 fd6d 	bl	cc94 <__ulp>
    a1ba:	2e00      	cmp	r6, #0
    a1bc:	d00b      	beq.n	a1d6 <sulp+0x26>
    a1be:	226b      	movs	r2, #107	; 0x6b
    a1c0:	006b      	lsls	r3, r5, #1
    a1c2:	0d5b      	lsrs	r3, r3, #21
    a1c4:	1ad3      	subs	r3, r2, r3
    a1c6:	2b00      	cmp	r3, #0
    a1c8:	dd05      	ble.n	a1d6 <sulp+0x26>
    a1ca:	4d03      	ldr	r5, [pc, #12]	; (a1d8 <sulp+0x28>)
    a1cc:	051c      	lsls	r4, r3, #20
    a1ce:	2200      	movs	r2, #0
    a1d0:	1963      	adds	r3, r4, r5
    a1d2:	f7fd f873 	bl	72bc <__aeabi_dmul>
    a1d6:	bd70      	pop	{r4, r5, r6, pc}
    a1d8:	3ff00000 	.word	0x3ff00000

0000a1dc <_strtod_r>:
    a1dc:	2300      	movs	r3, #0
    a1de:	b5f0      	push	{r4, r5, r6, r7, lr}
    a1e0:	b0a3      	sub	sp, #140	; 0x8c
    a1e2:	931e      	str	r3, [sp, #120]	; 0x78
    a1e4:	2600      	movs	r6, #0
    a1e6:	2700      	movs	r7, #0
    a1e8:	1c0b      	adds	r3, r1, #0
    a1ea:	9003      	str	r0, [sp, #12]
    a1ec:	9106      	str	r1, [sp, #24]
    a1ee:	9219      	str	r2, [sp, #100]	; 0x64
    a1f0:	931d      	str	r3, [sp, #116]	; 0x74
    a1f2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a1f4:	781a      	ldrb	r2, [r3, #0]
    a1f6:	2a0d      	cmp	r2, #13
    a1f8:	d805      	bhi.n	a206 <_strtod_r+0x2a>
    a1fa:	2a09      	cmp	r2, #9
    a1fc:	d214      	bcs.n	a228 <_strtod_r+0x4c>
    a1fe:	2a00      	cmp	r2, #0
    a200:	d100      	bne.n	a204 <_strtod_r+0x28>
    a202:	e1c3      	b.n	a58c <_strtod_r+0x3b0>
    a204:	e012      	b.n	a22c <_strtod_r+0x50>
    a206:	2a2b      	cmp	r2, #43	; 0x2b
    a208:	d006      	beq.n	a218 <_strtod_r+0x3c>
    a20a:	2a2d      	cmp	r2, #45	; 0x2d
    a20c:	d002      	beq.n	a214 <_strtod_r+0x38>
    a20e:	2a20      	cmp	r2, #32
    a210:	d10c      	bne.n	a22c <_strtod_r+0x50>
    a212:	e009      	b.n	a228 <_strtod_r+0x4c>
    a214:	2201      	movs	r2, #1
    a216:	e000      	b.n	a21a <_strtod_r+0x3e>
    a218:	2200      	movs	r2, #0
    a21a:	920d      	str	r2, [sp, #52]	; 0x34
    a21c:	1c5a      	adds	r2, r3, #1
    a21e:	921d      	str	r2, [sp, #116]	; 0x74
    a220:	785b      	ldrb	r3, [r3, #1]
    a222:	2b00      	cmp	r3, #0
    a224:	d104      	bne.n	a230 <_strtod_r+0x54>
    a226:	e1b1      	b.n	a58c <_strtod_r+0x3b0>
    a228:	3301      	adds	r3, #1
    a22a:	e7e1      	b.n	a1f0 <_strtod_r+0x14>
    a22c:	2300      	movs	r3, #0
    a22e:	930d      	str	r3, [sp, #52]	; 0x34
    a230:	2200      	movs	r2, #0
    a232:	9d1d      	ldr	r5, [sp, #116]	; 0x74
    a234:	920a      	str	r2, [sp, #40]	; 0x28
    a236:	782b      	ldrb	r3, [r5, #0]
    a238:	2b30      	cmp	r3, #48	; 0x30
    a23a:	d15d      	bne.n	a2f8 <_strtod_r+0x11c>
    a23c:	786b      	ldrb	r3, [r5, #1]
    a23e:	2b58      	cmp	r3, #88	; 0x58
    a240:	d001      	beq.n	a246 <_strtod_r+0x6a>
    a242:	2b78      	cmp	r3, #120	; 0x78
    a244:	d14c      	bne.n	a2e0 <_strtod_r+0x104>
    a246:	ab1e      	add	r3, sp, #120	; 0x78
    a248:	9300      	str	r3, [sp, #0]
    a24a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    a24c:	9803      	ldr	r0, [sp, #12]
    a24e:	9301      	str	r3, [sp, #4]
    a250:	a91d      	add	r1, sp, #116	; 0x74
    a252:	4ac2      	ldr	r2, [pc, #776]	; (a55c <_strtod_r+0x380>)
    a254:	ab1f      	add	r3, sp, #124	; 0x7c
    a256:	f001 ff38 	bl	c0ca <__gethex>
    a25a:	2407      	movs	r4, #7
    a25c:	9004      	str	r0, [sp, #16]
    a25e:	4004      	ands	r4, r0
    a260:	d101      	bne.n	a266 <_strtod_r+0x8a>
    a262:	f000 fda7 	bl	adb4 <_strtod_r+0xbd8>
    a266:	2c06      	cmp	r4, #6
    a268:	d105      	bne.n	a276 <_strtod_r+0x9a>
    a26a:	2300      	movs	r3, #0
    a26c:	3501      	adds	r5, #1
    a26e:	951d      	str	r5, [sp, #116]	; 0x74
    a270:	930d      	str	r3, [sp, #52]	; 0x34
    a272:	f000 fd9f 	bl	adb4 <_strtod_r+0xbd8>
    a276:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    a278:	2a00      	cmp	r2, #0
    a27a:	d007      	beq.n	a28c <_strtod_r+0xb0>
    a27c:	a820      	add	r0, sp, #128	; 0x80
    a27e:	2135      	movs	r1, #53	; 0x35
    a280:	f002 fdfc 	bl	ce7c <__copybits>
    a284:	9803      	ldr	r0, [sp, #12]
    a286:	991e      	ldr	r1, [sp, #120]	; 0x78
    a288:	f002 fa64 	bl	c754 <_Bfree>
    a28c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    a28e:	2c06      	cmp	r4, #6
    a290:	d81c      	bhi.n	a2cc <_strtod_r+0xf0>
    a292:	1c20      	adds	r0, r4, #0
    a294:	f003 f9a8 	bl	d5e8 <__gnu_thumb1_case_uqi>
    a298:	14070a04 	.word	0x14070a04
    a29c:	0a17      	.short	0x0a17
    a29e:	04          	.byte	0x04
    a29f:	00          	.byte	0x00
    a2a0:	2700      	movs	r7, #0
    a2a2:	1c3e      	adds	r6, r7, #0
    a2a4:	e012      	b.n	a2cc <_strtod_r+0xf0>
    a2a6:	9e20      	ldr	r6, [sp, #128]	; 0x80
    a2a8:	9f21      	ldr	r7, [sp, #132]	; 0x84
    a2aa:	e00f      	b.n	a2cc <_strtod_r+0xf0>
    a2ac:	4aac      	ldr	r2, [pc, #688]	; (a560 <_strtod_r+0x384>)
    a2ae:	9921      	ldr	r1, [sp, #132]	; 0x84
    a2b0:	189b      	adds	r3, r3, r2
    a2b2:	4aac      	ldr	r2, [pc, #688]	; (a564 <_strtod_r+0x388>)
    a2b4:	051b      	lsls	r3, r3, #20
    a2b6:	400a      	ands	r2, r1
    a2b8:	4313      	orrs	r3, r2
    a2ba:	9e20      	ldr	r6, [sp, #128]	; 0x80
    a2bc:	1c1f      	adds	r7, r3, #0
    a2be:	e005      	b.n	a2cc <_strtod_r+0xf0>
    a2c0:	4fa9      	ldr	r7, [pc, #676]	; (a568 <_strtod_r+0x38c>)
    a2c2:	2600      	movs	r6, #0
    a2c4:	e002      	b.n	a2cc <_strtod_r+0xf0>
    a2c6:	2601      	movs	r6, #1
    a2c8:	4fa8      	ldr	r7, [pc, #672]	; (a56c <_strtod_r+0x390>)
    a2ca:	4276      	negs	r6, r6
    a2cc:	9b04      	ldr	r3, [sp, #16]
    a2ce:	071b      	lsls	r3, r3, #28
    a2d0:	d401      	bmi.n	a2d6 <_strtod_r+0xfa>
    a2d2:	f000 fd6f 	bl	adb4 <_strtod_r+0xbd8>
    a2d6:	2380      	movs	r3, #128	; 0x80
    a2d8:	061b      	lsls	r3, r3, #24
    a2da:	431f      	orrs	r7, r3
    a2dc:	f000 fd6a 	bl	adb4 <_strtod_r+0xbd8>
    a2e0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a2e2:	1c5a      	adds	r2, r3, #1
    a2e4:	921d      	str	r2, [sp, #116]	; 0x74
    a2e6:	785b      	ldrb	r3, [r3, #1]
    a2e8:	2b30      	cmp	r3, #48	; 0x30
    a2ea:	d0f9      	beq.n	a2e0 <_strtod_r+0x104>
    a2ec:	2b00      	cmp	r3, #0
    a2ee:	d101      	bne.n	a2f4 <_strtod_r+0x118>
    a2f0:	f000 fd60 	bl	adb4 <_strtod_r+0xbd8>
    a2f4:	2301      	movs	r3, #1
    a2f6:	930a      	str	r3, [sp, #40]	; 0x28
    a2f8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a2fa:	930c      	str	r3, [sp, #48]	; 0x30
    a2fc:	2300      	movs	r3, #0
    a2fe:	9305      	str	r3, [sp, #20]
    a300:	9307      	str	r3, [sp, #28]
    a302:	9304      	str	r3, [sp, #16]
    a304:	9c1d      	ldr	r4, [sp, #116]	; 0x74
    a306:	7823      	ldrb	r3, [r4, #0]
    a308:	1c1a      	adds	r2, r3, #0
    a30a:	3a30      	subs	r2, #48	; 0x30
    a30c:	9308      	str	r3, [sp, #32]
    a30e:	b2d3      	uxtb	r3, r2
    a310:	2b09      	cmp	r3, #9
    a312:	d812      	bhi.n	a33a <_strtod_r+0x15e>
    a314:	9904      	ldr	r1, [sp, #16]
    a316:	230a      	movs	r3, #10
    a318:	2908      	cmp	r1, #8
    a31a:	dc04      	bgt.n	a326 <_strtod_r+0x14a>
    a31c:	9907      	ldr	r1, [sp, #28]
    a31e:	434b      	muls	r3, r1
    a320:	18d3      	adds	r3, r2, r3
    a322:	9307      	str	r3, [sp, #28]
    a324:	e003      	b.n	a32e <_strtod_r+0x152>
    a326:	9905      	ldr	r1, [sp, #20]
    a328:	434b      	muls	r3, r1
    a32a:	18d3      	adds	r3, r2, r3
    a32c:	9305      	str	r3, [sp, #20]
    a32e:	9b04      	ldr	r3, [sp, #16]
    a330:	3401      	adds	r4, #1
    a332:	3301      	adds	r3, #1
    a334:	9304      	str	r3, [sp, #16]
    a336:	941d      	str	r4, [sp, #116]	; 0x74
    a338:	e7e4      	b.n	a304 <_strtod_r+0x128>
    a33a:	9803      	ldr	r0, [sp, #12]
    a33c:	f002 f9a6 	bl	c68c <_localeconv_r>
    a340:	6805      	ldr	r5, [r0, #0]
    a342:	9803      	ldr	r0, [sp, #12]
    a344:	f002 f9a2 	bl	c68c <_localeconv_r>
    a348:	6800      	ldr	r0, [r0, #0]
    a34a:	f7ff feed 	bl	a128 <strlen>
    a34e:	1c29      	adds	r1, r5, #0
    a350:	1c02      	adds	r2, r0, #0
    a352:	1c20      	adds	r0, r4, #0
    a354:	f7ff feef 	bl	a136 <strncmp>
    a358:	1e05      	subs	r5, r0, #0
    a35a:	d005      	beq.n	a368 <_strtod_r+0x18c>
    a35c:	2000      	movs	r0, #0
    a35e:	9b08      	ldr	r3, [sp, #32]
    a360:	9c04      	ldr	r4, [sp, #16]
    a362:	1c01      	adds	r1, r0, #0
    a364:	9008      	str	r0, [sp, #32]
    a366:	e05a      	b.n	a41e <_strtod_r+0x242>
    a368:	9803      	ldr	r0, [sp, #12]
    a36a:	f002 f98f 	bl	c68c <_localeconv_r>
    a36e:	6800      	ldr	r0, [r0, #0]
    a370:	f7ff feda 	bl	a128 <strlen>
    a374:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a376:	9a04      	ldr	r2, [sp, #16]
    a378:	1818      	adds	r0, r3, r0
    a37a:	901d      	str	r0, [sp, #116]	; 0x74
    a37c:	7803      	ldrb	r3, [r0, #0]
    a37e:	1e10      	subs	r0, r2, #0
    a380:	d141      	bne.n	a406 <_strtod_r+0x22a>
    a382:	2b30      	cmp	r3, #48	; 0x30
    a384:	d105      	bne.n	a392 <_strtod_r+0x1b6>
    a386:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a388:	3001      	adds	r0, #1
    a38a:	1c5a      	adds	r2, r3, #1
    a38c:	921d      	str	r2, [sp, #116]	; 0x74
    a38e:	785b      	ldrb	r3, [r3, #1]
    a390:	e7f7      	b.n	a382 <_strtod_r+0x1a6>
    a392:	1c1a      	adds	r2, r3, #0
    a394:	3a31      	subs	r2, #49	; 0x31
    a396:	2a08      	cmp	r2, #8
    a398:	d83d      	bhi.n	a416 <_strtod_r+0x23a>
    a39a:	1c01      	adds	r1, r0, #0
    a39c:	2000      	movs	r0, #0
    a39e:	1c04      	adds	r4, r0, #0
    a3a0:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    a3a2:	920c      	str	r2, [sp, #48]	; 0x30
    a3a4:	3b30      	subs	r3, #48	; 0x30
    a3a6:	1c42      	adds	r2, r0, #1
    a3a8:	2b00      	cmp	r3, #0
    a3aa:	d026      	beq.n	a3fa <_strtod_r+0x21e>
    a3ac:	1889      	adds	r1, r1, r2
    a3ae:	1c22      	adds	r2, r4, #0
    a3b0:	1900      	adds	r0, r0, r4
    a3b2:	4282      	cmp	r2, r0
    a3b4:	d00f      	beq.n	a3d6 <_strtod_r+0x1fa>
    a3b6:	3201      	adds	r2, #1
    a3b8:	1e54      	subs	r4, r2, #1
    a3ba:	2c08      	cmp	r4, #8
    a3bc:	dc04      	bgt.n	a3c8 <_strtod_r+0x1ec>
    a3be:	240a      	movs	r4, #10
    a3c0:	9d07      	ldr	r5, [sp, #28]
    a3c2:	4365      	muls	r5, r4
    a3c4:	9507      	str	r5, [sp, #28]
    a3c6:	e7f4      	b.n	a3b2 <_strtod_r+0x1d6>
    a3c8:	2a10      	cmp	r2, #16
    a3ca:	dcf2      	bgt.n	a3b2 <_strtod_r+0x1d6>
    a3cc:	240a      	movs	r4, #10
    a3ce:	9d05      	ldr	r5, [sp, #20]
    a3d0:	4365      	muls	r5, r4
    a3d2:	9505      	str	r5, [sp, #20]
    a3d4:	e7ed      	b.n	a3b2 <_strtod_r+0x1d6>
    a3d6:	1c54      	adds	r4, r2, #1
    a3d8:	2a08      	cmp	r2, #8
    a3da:	dc06      	bgt.n	a3ea <_strtod_r+0x20e>
    a3dc:	220a      	movs	r2, #10
    a3de:	9807      	ldr	r0, [sp, #28]
    a3e0:	4342      	muls	r2, r0
    a3e2:	18d3      	adds	r3, r2, r3
    a3e4:	9307      	str	r3, [sp, #28]
    a3e6:	2200      	movs	r2, #0
    a3e8:	e007      	b.n	a3fa <_strtod_r+0x21e>
    a3ea:	2200      	movs	r2, #0
    a3ec:	2c10      	cmp	r4, #16
    a3ee:	dc04      	bgt.n	a3fa <_strtod_r+0x21e>
    a3f0:	200a      	movs	r0, #10
    a3f2:	9d05      	ldr	r5, [sp, #20]
    a3f4:	4368      	muls	r0, r5
    a3f6:	18c3      	adds	r3, r0, r3
    a3f8:	9305      	str	r3, [sp, #20]
    a3fa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a3fc:	1c58      	adds	r0, r3, #1
    a3fe:	901d      	str	r0, [sp, #116]	; 0x74
    a400:	785b      	ldrb	r3, [r3, #1]
    a402:	1c10      	adds	r0, r2, #0
    a404:	e002      	b.n	a40c <_strtod_r+0x230>
    a406:	1c28      	adds	r0, r5, #0
    a408:	1c29      	adds	r1, r5, #0
    a40a:	9c04      	ldr	r4, [sp, #16]
    a40c:	1c1a      	adds	r2, r3, #0
    a40e:	3a30      	subs	r2, #48	; 0x30
    a410:	2a09      	cmp	r2, #9
    a412:	d9c7      	bls.n	a3a4 <_strtod_r+0x1c8>
    a414:	e001      	b.n	a41a <_strtod_r+0x23e>
    a416:	2400      	movs	r4, #0
    a418:	1c21      	adds	r1, r4, #0
    a41a:	2201      	movs	r2, #1
    a41c:	9208      	str	r2, [sp, #32]
    a41e:	2220      	movs	r2, #32
    a420:	1c1d      	adds	r5, r3, #0
    a422:	4395      	bics	r5, r2
    a424:	2200      	movs	r2, #0
    a426:	2d45      	cmp	r5, #69	; 0x45
    a428:	d157      	bne.n	a4da <_strtod_r+0x2fe>
    a42a:	1c23      	adds	r3, r4, #0
    a42c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    a42e:	4303      	orrs	r3, r0
    a430:	432b      	orrs	r3, r5
    a432:	4293      	cmp	r3, r2
    a434:	d100      	bne.n	a438 <_strtod_r+0x25c>
    a436:	e0a9      	b.n	a58c <_strtod_r+0x3b0>
    a438:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a43a:	9306      	str	r3, [sp, #24]
    a43c:	3301      	adds	r3, #1
    a43e:	931d      	str	r3, [sp, #116]	; 0x74
    a440:	9b06      	ldr	r3, [sp, #24]
    a442:	785b      	ldrb	r3, [r3, #1]
    a444:	2b2b      	cmp	r3, #43	; 0x2b
    a446:	d006      	beq.n	a456 <_strtod_r+0x27a>
    a448:	2b2d      	cmp	r3, #45	; 0x2d
    a44a:	d001      	beq.n	a450 <_strtod_r+0x274>
    a44c:	9209      	str	r2, [sp, #36]	; 0x24
    a44e:	e008      	b.n	a462 <_strtod_r+0x286>
    a450:	2301      	movs	r3, #1
    a452:	9309      	str	r3, [sp, #36]	; 0x24
    a454:	e000      	b.n	a458 <_strtod_r+0x27c>
    a456:	9209      	str	r2, [sp, #36]	; 0x24
    a458:	9b06      	ldr	r3, [sp, #24]
    a45a:	3302      	adds	r3, #2
    a45c:	931d      	str	r3, [sp, #116]	; 0x74
    a45e:	9b06      	ldr	r3, [sp, #24]
    a460:	789b      	ldrb	r3, [r3, #2]
    a462:	1c1a      	adds	r2, r3, #0
    a464:	3a30      	subs	r2, #48	; 0x30
    a466:	2a09      	cmp	r2, #9
    a468:	d834      	bhi.n	a4d4 <_strtod_r+0x2f8>
    a46a:	2b30      	cmp	r3, #48	; 0x30
    a46c:	d104      	bne.n	a478 <_strtod_r+0x29c>
    a46e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a470:	1c5a      	adds	r2, r3, #1
    a472:	921d      	str	r2, [sp, #116]	; 0x74
    a474:	785b      	ldrb	r3, [r3, #1]
    a476:	e7f8      	b.n	a46a <_strtod_r+0x28e>
    a478:	2531      	movs	r5, #49	; 0x31
    a47a:	426d      	negs	r5, r5
    a47c:	46ac      	mov	ip, r5
    a47e:	449c      	add	ip, r3
    a480:	4665      	mov	r5, ip
    a482:	2200      	movs	r2, #0
    a484:	2d08      	cmp	r5, #8
    a486:	d828      	bhi.n	a4da <_strtod_r+0x2fe>
    a488:	3b30      	subs	r3, #48	; 0x30
    a48a:	930b      	str	r3, [sp, #44]	; 0x2c
    a48c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a48e:	930e      	str	r3, [sp, #56]	; 0x38
    a490:	2530      	movs	r5, #48	; 0x30
    a492:	426d      	negs	r5, r5
    a494:	46ac      	mov	ip, r5
    a496:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a498:	1c5a      	adds	r2, r3, #1
    a49a:	921d      	str	r2, [sp, #116]	; 0x74
    a49c:	785b      	ldrb	r3, [r3, #1]
    a49e:	449c      	add	ip, r3
    a4a0:	4665      	mov	r5, ip
    a4a2:	2d09      	cmp	r5, #9
    a4a4:	d806      	bhi.n	a4b4 <_strtod_r+0x2d8>
    a4a6:	220a      	movs	r2, #10
    a4a8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    a4aa:	436a      	muls	r2, r5
    a4ac:	18d3      	adds	r3, r2, r3
    a4ae:	3b30      	subs	r3, #48	; 0x30
    a4b0:	930b      	str	r3, [sp, #44]	; 0x2c
    a4b2:	e7ed      	b.n	a490 <_strtod_r+0x2b4>
    a4b4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
    a4b6:	1b52      	subs	r2, r2, r5
    a4b8:	1e15      	subs	r5, r2, #0
    a4ba:	4a2d      	ldr	r2, [pc, #180]	; (a570 <_strtod_r+0x394>)
    a4bc:	4694      	mov	ip, r2
    a4be:	2d08      	cmp	r5, #8
    a4c0:	dc03      	bgt.n	a4ca <_strtod_r+0x2ee>
    a4c2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    a4c4:	4562      	cmp	r2, ip
    a4c6:	dd00      	ble.n	a4ca <_strtod_r+0x2ee>
    a4c8:	4662      	mov	r2, ip
    a4ca:	9d09      	ldr	r5, [sp, #36]	; 0x24
    a4cc:	2d00      	cmp	r5, #0
    a4ce:	d004      	beq.n	a4da <_strtod_r+0x2fe>
    a4d0:	4252      	negs	r2, r2
    a4d2:	e002      	b.n	a4da <_strtod_r+0x2fe>
    a4d4:	9a06      	ldr	r2, [sp, #24]
    a4d6:	921d      	str	r2, [sp, #116]	; 0x74
    a4d8:	2200      	movs	r2, #0
    a4da:	2c00      	cmp	r4, #0
    a4dc:	d161      	bne.n	a5a2 <_strtod_r+0x3c6>
    a4de:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a4e0:	4310      	orrs	r0, r2
    a4e2:	d001      	beq.n	a4e8 <_strtod_r+0x30c>
    a4e4:	f000 fc66 	bl	adb4 <_strtod_r+0xbd8>
    a4e8:	9a08      	ldr	r2, [sp, #32]
    a4ea:	2a00      	cmp	r2, #0
    a4ec:	d14e      	bne.n	a58c <_strtod_r+0x3b0>
    a4ee:	2b4e      	cmp	r3, #78	; 0x4e
    a4f0:	d01c      	beq.n	a52c <_strtod_r+0x350>
    a4f2:	dc02      	bgt.n	a4fa <_strtod_r+0x31e>
    a4f4:	2b49      	cmp	r3, #73	; 0x49
    a4f6:	d005      	beq.n	a504 <_strtod_r+0x328>
    a4f8:	e048      	b.n	a58c <_strtod_r+0x3b0>
    a4fa:	2b69      	cmp	r3, #105	; 0x69
    a4fc:	d002      	beq.n	a504 <_strtod_r+0x328>
    a4fe:	2b6e      	cmp	r3, #110	; 0x6e
    a500:	d014      	beq.n	a52c <_strtod_r+0x350>
    a502:	e043      	b.n	a58c <_strtod_r+0x3b0>
    a504:	a81d      	add	r0, sp, #116	; 0x74
    a506:	491b      	ldr	r1, [pc, #108]	; (a574 <_strtod_r+0x398>)
    a508:	f7ff fe3d 	bl	a186 <match>
    a50c:	2800      	cmp	r0, #0
    a50e:	d03d      	beq.n	a58c <_strtod_r+0x3b0>
    a510:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a512:	a81d      	add	r0, sp, #116	; 0x74
    a514:	3b01      	subs	r3, #1
    a516:	4918      	ldr	r1, [pc, #96]	; (a578 <_strtod_r+0x39c>)
    a518:	931d      	str	r3, [sp, #116]	; 0x74
    a51a:	f7ff fe34 	bl	a186 <match>
    a51e:	2800      	cmp	r0, #0
    a520:	d102      	bne.n	a528 <_strtod_r+0x34c>
    a522:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a524:	3301      	adds	r3, #1
    a526:	931d      	str	r3, [sp, #116]	; 0x74
    a528:	4f0f      	ldr	r7, [pc, #60]	; (a568 <_strtod_r+0x38c>)
    a52a:	e02c      	b.n	a586 <_strtod_r+0x3aa>
    a52c:	a81d      	add	r0, sp, #116	; 0x74
    a52e:	4913      	ldr	r1, [pc, #76]	; (a57c <_strtod_r+0x3a0>)
    a530:	f7ff fe29 	bl	a186 <match>
    a534:	2800      	cmp	r0, #0
    a536:	d029      	beq.n	a58c <_strtod_r+0x3b0>
    a538:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a53a:	781b      	ldrb	r3, [r3, #0]
    a53c:	2b28      	cmp	r3, #40	; 0x28
    a53e:	d121      	bne.n	a584 <_strtod_r+0x3a8>
    a540:	a81d      	add	r0, sp, #116	; 0x74
    a542:	490f      	ldr	r1, [pc, #60]	; (a580 <_strtod_r+0x3a4>)
    a544:	aa20      	add	r2, sp, #128	; 0x80
    a546:	f001 fff6 	bl	c536 <__hexnan>
    a54a:	2805      	cmp	r0, #5
    a54c:	d11a      	bne.n	a584 <_strtod_r+0x3a8>
    a54e:	9b21      	ldr	r3, [sp, #132]	; 0x84
    a550:	4a05      	ldr	r2, [pc, #20]	; (a568 <_strtod_r+0x38c>)
    a552:	9e20      	ldr	r6, [sp, #128]	; 0x80
    a554:	431a      	orrs	r2, r3
    a556:	1c17      	adds	r7, r2, #0
    a558:	f000 fc2c 	bl	adb4 <_strtod_r+0xbd8>
    a55c:	0000e4b8 	.word	0x0000e4b8
    a560:	00000433 	.word	0x00000433
    a564:	ffefffff 	.word	0xffefffff
    a568:	7ff00000 	.word	0x7ff00000
    a56c:	7fffffff 	.word	0x7fffffff
    a570:	00004e1f 	.word	0x00004e1f
    a574:	0000e41e 	.word	0x0000e41e
    a578:	0000e5d0 	.word	0x0000e5d0
    a57c:	0000e426 	.word	0x0000e426
    a580:	0000e478 	.word	0x0000e478
    a584:	4f92      	ldr	r7, [pc, #584]	; (a7d0 <_strtod_r+0x5f4>)
    a586:	2600      	movs	r6, #0
    a588:	f000 fc14 	bl	adb4 <_strtod_r+0xbd8>
    a58c:	9b06      	ldr	r3, [sp, #24]
    a58e:	931d      	str	r3, [sp, #116]	; 0x74
    a590:	2300      	movs	r3, #0
    a592:	930d      	str	r3, [sp, #52]	; 0x34
    a594:	9b19      	ldr	r3, [sp, #100]	; 0x64
    a596:	2b00      	cmp	r3, #0
    a598:	d001      	beq.n	a59e <_strtod_r+0x3c2>
    a59a:	f000 fc0e 	bl	adba <_strtod_r+0xbde>
    a59e:	f000 fc17 	bl	add0 <_strtod_r+0xbf4>
    a5a2:	1a53      	subs	r3, r2, r1
    a5a4:	9309      	str	r3, [sp, #36]	; 0x24
    a5a6:	9b04      	ldr	r3, [sp, #16]
    a5a8:	2b00      	cmp	r3, #0
    a5aa:	d100      	bne.n	a5ae <_strtod_r+0x3d2>
    a5ac:	9404      	str	r4, [sp, #16]
    a5ae:	1e25      	subs	r5, r4, #0
    a5b0:	2d10      	cmp	r5, #16
    a5b2:	dd00      	ble.n	a5b6 <_strtod_r+0x3da>
    a5b4:	2510      	movs	r5, #16
    a5b6:	9807      	ldr	r0, [sp, #28]
    a5b8:	f7fd fd06 	bl	7fc8 <__aeabi_ui2d>
    a5bc:	1c06      	adds	r6, r0, #0
    a5be:	1c0f      	adds	r7, r1, #0
    a5c0:	2d09      	cmp	r5, #9
    a5c2:	dd15      	ble.n	a5f0 <_strtod_r+0x414>
    a5c4:	1c2b      	adds	r3, r5, #0
    a5c6:	4a83      	ldr	r2, [pc, #524]	; (a7d4 <_strtod_r+0x5f8>)
    a5c8:	3b09      	subs	r3, #9
    a5ca:	00db      	lsls	r3, r3, #3
    a5cc:	18d3      	adds	r3, r2, r3
    a5ce:	681a      	ldr	r2, [r3, #0]
    a5d0:	685b      	ldr	r3, [r3, #4]
    a5d2:	f7fc fe73 	bl	72bc <__aeabi_dmul>
    a5d6:	1c06      	adds	r6, r0, #0
    a5d8:	9805      	ldr	r0, [sp, #20]
    a5da:	1c0f      	adds	r7, r1, #0
    a5dc:	f7fd fcf4 	bl	7fc8 <__aeabi_ui2d>
    a5e0:	1c02      	adds	r2, r0, #0
    a5e2:	1c0b      	adds	r3, r1, #0
    a5e4:	1c30      	adds	r0, r6, #0
    a5e6:	1c39      	adds	r1, r7, #0
    a5e8:	f7fb ff02 	bl	63f0 <__aeabi_dadd>
    a5ec:	1c06      	adds	r6, r0, #0
    a5ee:	1c0f      	adds	r7, r1, #0
    a5f0:	2c0f      	cmp	r4, #15
    a5f2:	dc37      	bgt.n	a664 <_strtod_r+0x488>
    a5f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a5f6:	2b00      	cmp	r3, #0
    a5f8:	d100      	bne.n	a5fc <_strtod_r+0x420>
    a5fa:	e3db      	b.n	adb4 <_strtod_r+0xbd8>
    a5fc:	dd24      	ble.n	a648 <_strtod_r+0x46c>
    a5fe:	2b16      	cmp	r3, #22
    a600:	dc07      	bgt.n	a612 <_strtod_r+0x436>
    a602:	4974      	ldr	r1, [pc, #464]	; (a7d4 <_strtod_r+0x5f8>)
    a604:	00da      	lsls	r2, r3, #3
    a606:	188a      	adds	r2, r1, r2
    a608:	6810      	ldr	r0, [r2, #0]
    a60a:	6851      	ldr	r1, [r2, #4]
    a60c:	1c3b      	adds	r3, r7, #0
    a60e:	1c32      	adds	r2, r6, #0
    a610:	e015      	b.n	a63e <_strtod_r+0x462>
    a612:	2325      	movs	r3, #37	; 0x25
    a614:	9a09      	ldr	r2, [sp, #36]	; 0x24
    a616:	1b1b      	subs	r3, r3, r4
    a618:	429a      	cmp	r2, r3
    a61a:	dc23      	bgt.n	a664 <_strtod_r+0x488>
    a61c:	220f      	movs	r2, #15
    a61e:	4d6d      	ldr	r5, [pc, #436]	; (a7d4 <_strtod_r+0x5f8>)
    a620:	1b14      	subs	r4, r2, r4
    a622:	00e3      	lsls	r3, r4, #3
    a624:	18eb      	adds	r3, r5, r3
    a626:	6818      	ldr	r0, [r3, #0]
    a628:	6859      	ldr	r1, [r3, #4]
    a62a:	1c32      	adds	r2, r6, #0
    a62c:	1c3b      	adds	r3, r7, #0
    a62e:	f7fc fe45 	bl	72bc <__aeabi_dmul>
    a632:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a634:	1b1c      	subs	r4, r3, r4
    a636:	00e4      	lsls	r4, r4, #3
    a638:	192d      	adds	r5, r5, r4
    a63a:	682a      	ldr	r2, [r5, #0]
    a63c:	686b      	ldr	r3, [r5, #4]
    a63e:	f7fc fe3d 	bl	72bc <__aeabi_dmul>
    a642:	1c06      	adds	r6, r0, #0
    a644:	1c0f      	adds	r7, r1, #0
    a646:	e3b5      	b.n	adb4 <_strtod_r+0xbd8>
    a648:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a64a:	3316      	adds	r3, #22
    a64c:	db0a      	blt.n	a664 <_strtod_r+0x488>
    a64e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a650:	1c30      	adds	r0, r6, #0
    a652:	00da      	lsls	r2, r3, #3
    a654:	4b5f      	ldr	r3, [pc, #380]	; (a7d4 <_strtod_r+0x5f8>)
    a656:	1c39      	adds	r1, r7, #0
    a658:	1a9a      	subs	r2, r3, r2
    a65a:	6853      	ldr	r3, [r2, #4]
    a65c:	6812      	ldr	r2, [r2, #0]
    a65e:	f7fc f9ef 	bl	6a40 <__aeabi_ddiv>
    a662:	e7ee      	b.n	a642 <_strtod_r+0x466>
    a664:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a666:	1b65      	subs	r5, r4, r5
    a668:	195d      	adds	r5, r3, r5
    a66a:	2d00      	cmp	r5, #0
    a66c:	dd59      	ble.n	a722 <_strtod_r+0x546>
    a66e:	230f      	movs	r3, #15
    a670:	402b      	ands	r3, r5
    a672:	d00a      	beq.n	a68a <_strtod_r+0x4ae>
    a674:	4a57      	ldr	r2, [pc, #348]	; (a7d4 <_strtod_r+0x5f8>)
    a676:	00db      	lsls	r3, r3, #3
    a678:	18d3      	adds	r3, r2, r3
    a67a:	6818      	ldr	r0, [r3, #0]
    a67c:	6859      	ldr	r1, [r3, #4]
    a67e:	1c32      	adds	r2, r6, #0
    a680:	1c3b      	adds	r3, r7, #0
    a682:	f7fc fe1b 	bl	72bc <__aeabi_dmul>
    a686:	1c06      	adds	r6, r0, #0
    a688:	1c0f      	adds	r7, r1, #0
    a68a:	230f      	movs	r3, #15
    a68c:	439d      	bics	r5, r3
    a68e:	d100      	bne.n	a692 <_strtod_r+0x4b6>
    a690:	e0b0      	b.n	a7f4 <_strtod_r+0x618>
    a692:	3326      	adds	r3, #38	; 0x26
    a694:	33ff      	adds	r3, #255	; 0xff
    a696:	429d      	cmp	r5, r3
    a698:	dd0e      	ble.n	a6b8 <_strtod_r+0x4dc>
    a69a:	2300      	movs	r3, #0
    a69c:	9304      	str	r3, [sp, #16]
    a69e:	9305      	str	r3, [sp, #20]
    a6a0:	930b      	str	r3, [sp, #44]	; 0x2c
    a6a2:	9308      	str	r3, [sp, #32]
    a6a4:	2322      	movs	r3, #34	; 0x22
    a6a6:	2600      	movs	r6, #0
    a6a8:	9a03      	ldr	r2, [sp, #12]
    a6aa:	4f4b      	ldr	r7, [pc, #300]	; (a7d8 <_strtod_r+0x5fc>)
    a6ac:	6013      	str	r3, [r2, #0]
    a6ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a6b0:	42b3      	cmp	r3, r6
    a6b2:	d000      	beq.n	a6b6 <_strtod_r+0x4da>
    a6b4:	e36a      	b.n	ad8c <_strtod_r+0xbb0>
    a6b6:	e37d      	b.n	adb4 <_strtod_r+0xbd8>
    a6b8:	2300      	movs	r3, #0
    a6ba:	1c30      	adds	r0, r6, #0
    a6bc:	1c39      	adds	r1, r7, #0
    a6be:	112d      	asrs	r5, r5, #4
    a6c0:	9305      	str	r3, [sp, #20]
    a6c2:	2d01      	cmp	r5, #1
    a6c4:	dd0e      	ble.n	a6e4 <_strtod_r+0x508>
    a6c6:	07eb      	lsls	r3, r5, #31
    a6c8:	d507      	bpl.n	a6da <_strtod_r+0x4fe>
    a6ca:	9b05      	ldr	r3, [sp, #20]
    a6cc:	00da      	lsls	r2, r3, #3
    a6ce:	4b43      	ldr	r3, [pc, #268]	; (a7dc <_strtod_r+0x600>)
    a6d0:	18d3      	adds	r3, r2, r3
    a6d2:	681a      	ldr	r2, [r3, #0]
    a6d4:	685b      	ldr	r3, [r3, #4]
    a6d6:	f7fc fdf1 	bl	72bc <__aeabi_dmul>
    a6da:	9b05      	ldr	r3, [sp, #20]
    a6dc:	106d      	asrs	r5, r5, #1
    a6de:	3301      	adds	r3, #1
    a6e0:	9305      	str	r3, [sp, #20]
    a6e2:	e7ee      	b.n	a6c2 <_strtod_r+0x4e6>
    a6e4:	1c06      	adds	r6, r0, #0
    a6e6:	4b3e      	ldr	r3, [pc, #248]	; (a7e0 <_strtod_r+0x604>)
    a6e8:	18cf      	adds	r7, r1, r3
    a6ea:	9b05      	ldr	r3, [sp, #20]
    a6ec:	00da      	lsls	r2, r3, #3
    a6ee:	4b3b      	ldr	r3, [pc, #236]	; (a7dc <_strtod_r+0x600>)
    a6f0:	189b      	adds	r3, r3, r2
    a6f2:	6818      	ldr	r0, [r3, #0]
    a6f4:	6859      	ldr	r1, [r3, #4]
    a6f6:	1c32      	adds	r2, r6, #0
    a6f8:	1c3b      	adds	r3, r7, #0
    a6fa:	f7fc fddf 	bl	72bc <__aeabi_dmul>
    a6fe:	4b36      	ldr	r3, [pc, #216]	; (a7d8 <_strtod_r+0x5fc>)
    a700:	1c0f      	adds	r7, r1, #0
    a702:	400b      	ands	r3, r1
    a704:	4937      	ldr	r1, [pc, #220]	; (a7e4 <_strtod_r+0x608>)
    a706:	1c06      	adds	r6, r0, #0
    a708:	428b      	cmp	r3, r1
    a70a:	d8c6      	bhi.n	a69a <_strtod_r+0x4be>
    a70c:	4936      	ldr	r1, [pc, #216]	; (a7e8 <_strtod_r+0x60c>)
    a70e:	428b      	cmp	r3, r1
    a710:	d903      	bls.n	a71a <_strtod_r+0x53e>
    a712:	2601      	movs	r6, #1
    a714:	4f35      	ldr	r7, [pc, #212]	; (a7ec <_strtod_r+0x610>)
    a716:	4276      	negs	r6, r6
    a718:	e06c      	b.n	a7f4 <_strtod_r+0x618>
    a71a:	23d4      	movs	r3, #212	; 0xd4
    a71c:	049b      	lsls	r3, r3, #18
    a71e:	18ff      	adds	r7, r7, r3
    a720:	e068      	b.n	a7f4 <_strtod_r+0x618>
    a722:	2d00      	cmp	r5, #0
    a724:	d066      	beq.n	a7f4 <_strtod_r+0x618>
    a726:	230f      	movs	r3, #15
    a728:	426d      	negs	r5, r5
    a72a:	402b      	ands	r3, r5
    a72c:	d00a      	beq.n	a744 <_strtod_r+0x568>
    a72e:	4a29      	ldr	r2, [pc, #164]	; (a7d4 <_strtod_r+0x5f8>)
    a730:	00db      	lsls	r3, r3, #3
    a732:	18d3      	adds	r3, r2, r3
    a734:	1c30      	adds	r0, r6, #0
    a736:	681a      	ldr	r2, [r3, #0]
    a738:	685b      	ldr	r3, [r3, #4]
    a73a:	1c39      	adds	r1, r7, #0
    a73c:	f7fc f980 	bl	6a40 <__aeabi_ddiv>
    a740:	1c06      	adds	r6, r0, #0
    a742:	1c0f      	adds	r7, r1, #0
    a744:	112d      	asrs	r5, r5, #4
    a746:	d055      	beq.n	a7f4 <_strtod_r+0x618>
    a748:	2d1f      	cmp	r5, #31
    a74a:	dd05      	ble.n	a758 <_strtod_r+0x57c>
    a74c:	2300      	movs	r3, #0
    a74e:	9304      	str	r3, [sp, #16]
    a750:	9305      	str	r3, [sp, #20]
    a752:	930b      	str	r3, [sp, #44]	; 0x2c
    a754:	9308      	str	r3, [sp, #32]
    a756:	e118      	b.n	a98a <_strtod_r+0x7ae>
    a758:	2300      	movs	r3, #0
    a75a:	9306      	str	r3, [sp, #24]
    a75c:	06eb      	lsls	r3, r5, #27
    a75e:	d501      	bpl.n	a764 <_strtod_r+0x588>
    a760:	236a      	movs	r3, #106	; 0x6a
    a762:	9306      	str	r3, [sp, #24]
    a764:	1c39      	adds	r1, r7, #0
    a766:	1c30      	adds	r0, r6, #0
    a768:	4e21      	ldr	r6, [pc, #132]	; (a7f0 <_strtod_r+0x614>)
    a76a:	2d00      	cmp	r5, #0
    a76c:	dd08      	ble.n	a780 <_strtod_r+0x5a4>
    a76e:	07eb      	lsls	r3, r5, #31
    a770:	d503      	bpl.n	a77a <_strtod_r+0x59e>
    a772:	6832      	ldr	r2, [r6, #0]
    a774:	6873      	ldr	r3, [r6, #4]
    a776:	f7fc fda1 	bl	72bc <__aeabi_dmul>
    a77a:	106d      	asrs	r5, r5, #1
    a77c:	3608      	adds	r6, #8
    a77e:	e7f4      	b.n	a76a <_strtod_r+0x58e>
    a780:	9b06      	ldr	r3, [sp, #24]
    a782:	1c06      	adds	r6, r0, #0
    a784:	1c0f      	adds	r7, r1, #0
    a786:	2b00      	cmp	r3, #0
    a788:	d019      	beq.n	a7be <_strtod_r+0x5e2>
    a78a:	226b      	movs	r2, #107	; 0x6b
    a78c:	004b      	lsls	r3, r1, #1
    a78e:	0d5b      	lsrs	r3, r3, #21
    a790:	1c08      	adds	r0, r1, #0
    a792:	1ad3      	subs	r3, r2, r3
    a794:	2b00      	cmp	r3, #0
    a796:	dd12      	ble.n	a7be <_strtod_r+0x5e2>
    a798:	2b1f      	cmp	r3, #31
    a79a:	dd0c      	ble.n	a7b6 <_strtod_r+0x5da>
    a79c:	2600      	movs	r6, #0
    a79e:	2b34      	cmp	r3, #52	; 0x34
    a7a0:	dd02      	ble.n	a7a8 <_strtod_r+0x5cc>
    a7a2:	27dc      	movs	r7, #220	; 0xdc
    a7a4:	04bf      	lsls	r7, r7, #18
    a7a6:	e00a      	b.n	a7be <_strtod_r+0x5e2>
    a7a8:	2201      	movs	r2, #1
    a7aa:	3b20      	subs	r3, #32
    a7ac:	4252      	negs	r2, r2
    a7ae:	409a      	lsls	r2, r3
    a7b0:	4010      	ands	r0, r2
    a7b2:	1c07      	adds	r7, r0, #0
    a7b4:	e003      	b.n	a7be <_strtod_r+0x5e2>
    a7b6:	2201      	movs	r2, #1
    a7b8:	4252      	negs	r2, r2
    a7ba:	409a      	lsls	r2, r3
    a7bc:	4016      	ands	r6, r2
    a7be:	1c30      	adds	r0, r6, #0
    a7c0:	1c39      	adds	r1, r7, #0
    a7c2:	2200      	movs	r2, #0
    a7c4:	2300      	movs	r3, #0
    a7c6:	f7fa fe95 	bl	54f4 <__aeabi_dcmpeq>
    a7ca:	2800      	cmp	r0, #0
    a7cc:	d1be      	bne.n	a74c <_strtod_r+0x570>
    a7ce:	e013      	b.n	a7f8 <_strtod_r+0x61c>
    a7d0:	fff80000 	.word	0xfff80000
    a7d4:	0000e5e8 	.word	0x0000e5e8
    a7d8:	7ff00000 	.word	0x7ff00000
    a7dc:	0000e6b0 	.word	0x0000e6b0
    a7e0:	fcb00000 	.word	0xfcb00000
    a7e4:	7ca00000 	.word	0x7ca00000
    a7e8:	7c900000 	.word	0x7c900000
    a7ec:	7fefffff 	.word	0x7fefffff
    a7f0:	0000e490 	.word	0x0000e490
    a7f4:	2300      	movs	r3, #0
    a7f6:	9306      	str	r3, [sp, #24]
    a7f8:	9b07      	ldr	r3, [sp, #28]
    a7fa:	9803      	ldr	r0, [sp, #12]
    a7fc:	9300      	str	r3, [sp, #0]
    a7fe:	990c      	ldr	r1, [sp, #48]	; 0x30
    a800:	9a04      	ldr	r2, [sp, #16]
    a802:	1c23      	adds	r3, r4, #0
    a804:	f001 fffb 	bl	c7fe <__s2b>
    a808:	900b      	str	r0, [sp, #44]	; 0x2c
    a80a:	2800      	cmp	r0, #0
    a80c:	d100      	bne.n	a810 <_strtod_r+0x634>
    a80e:	e744      	b.n	a69a <_strtod_r+0x4be>
    a810:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a812:	9a09      	ldr	r2, [sp, #36]	; 0x24
    a814:	425b      	negs	r3, r3
    a816:	17d2      	asrs	r2, r2, #31
    a818:	4013      	ands	r3, r2
    a81a:	9313      	str	r3, [sp, #76]	; 0x4c
    a81c:	2300      	movs	r3, #0
    a81e:	9304      	str	r3, [sp, #16]
    a820:	9305      	str	r3, [sp, #20]
    a822:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a824:	9803      	ldr	r0, [sp, #12]
    a826:	6859      	ldr	r1, [r3, #4]
    a828:	f001 ff5c 	bl	c6e4 <_Balloc>
    a82c:	9008      	str	r0, [sp, #32]
    a82e:	2800      	cmp	r0, #0
    a830:	d100      	bne.n	a834 <_strtod_r+0x658>
    a832:	e737      	b.n	a6a4 <_strtod_r+0x4c8>
    a834:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a836:	990b      	ldr	r1, [sp, #44]	; 0x2c
    a838:	691b      	ldr	r3, [r3, #16]
    a83a:	310c      	adds	r1, #12
    a83c:	1c9a      	adds	r2, r3, #2
    a83e:	0092      	lsls	r2, r2, #2
    a840:	300c      	adds	r0, #12
    a842:	9307      	str	r3, [sp, #28]
    a844:	f7fe f8a3 	bl	898e <memcpy>
    a848:	ab1f      	add	r3, sp, #124	; 0x7c
    a84a:	9300      	str	r3, [sp, #0]
    a84c:	ab20      	add	r3, sp, #128	; 0x80
    a84e:	9301      	str	r3, [sp, #4]
    a850:	9803      	ldr	r0, [sp, #12]
    a852:	1c32      	adds	r2, r6, #0
    a854:	1c3b      	adds	r3, r7, #0
    a856:	960e      	str	r6, [sp, #56]	; 0x38
    a858:	970f      	str	r7, [sp, #60]	; 0x3c
    a85a:	f002 fa91 	bl	cd80 <__d2b>
    a85e:	901e      	str	r0, [sp, #120]	; 0x78
    a860:	2800      	cmp	r0, #0
    a862:	d100      	bne.n	a866 <_strtod_r+0x68a>
    a864:	e71e      	b.n	a6a4 <_strtod_r+0x4c8>
    a866:	9803      	ldr	r0, [sp, #12]
    a868:	2101      	movs	r1, #1
    a86a:	f002 f852 	bl	c912 <__i2b>
    a86e:	9005      	str	r0, [sp, #20]
    a870:	2800      	cmp	r0, #0
    a872:	d100      	bne.n	a876 <_strtod_r+0x69a>
    a874:	e716      	b.n	a6a4 <_strtod_r+0x4c8>
    a876:	2300      	movs	r3, #0
    a878:	9a09      	ldr	r2, [sp, #36]	; 0x24
    a87a:	930a      	str	r3, [sp, #40]	; 0x28
    a87c:	4293      	cmp	r3, r2
    a87e:	da00      	bge.n	a882 <_strtod_r+0x6a6>
    a880:	920a      	str	r2, [sp, #40]	; 0x28
    a882:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    a884:	2b00      	cmp	r3, #0
    a886:	da00      	bge.n	a88a <_strtod_r+0x6ae>
    a888:	e089      	b.n	a99e <_strtod_r+0x7c2>
    a88a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    a88c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    a88e:	18d5      	adds	r5, r2, r3
    a890:	9a06      	ldr	r2, [sp, #24]
    a892:	9920      	ldr	r1, [sp, #128]	; 0x80
    a894:	1a9b      	subs	r3, r3, r2
    a896:	2236      	movs	r2, #54	; 0x36
    a898:	185b      	adds	r3, r3, r1
    a89a:	1a52      	subs	r2, r2, r1
    a89c:	49c8      	ldr	r1, [pc, #800]	; (abc0 <_strtod_r+0x9e4>)
    a89e:	2001      	movs	r0, #1
    a8a0:	428b      	cmp	r3, r1
    a8a2:	db00      	blt.n	a8a6 <_strtod_r+0x6ca>
    a8a4:	e085      	b.n	a9b2 <_strtod_r+0x7d6>
    a8a6:	1ac9      	subs	r1, r1, r3
    a8a8:	1a52      	subs	r2, r2, r1
    a8aa:	291f      	cmp	r1, #31
    a8ac:	dc7b      	bgt.n	a9a6 <_strtod_r+0x7ca>
    a8ae:	4088      	lsls	r0, r1
    a8b0:	2300      	movs	r3, #0
    a8b2:	9018      	str	r0, [sp, #96]	; 0x60
    a8b4:	9312      	str	r3, [sp, #72]	; 0x48
    a8b6:	18ab      	adds	r3, r5, r2
    a8b8:	9307      	str	r3, [sp, #28]
    a8ba:	9b06      	ldr	r3, [sp, #24]
    a8bc:	18a4      	adds	r4, r4, r2
    a8be:	18e4      	adds	r4, r4, r3
    a8c0:	9b07      	ldr	r3, [sp, #28]
    a8c2:	42ab      	cmp	r3, r5
    a8c4:	dd00      	ble.n	a8c8 <_strtod_r+0x6ec>
    a8c6:	1c2b      	adds	r3, r5, #0
    a8c8:	42a3      	cmp	r3, r4
    a8ca:	dd00      	ble.n	a8ce <_strtod_r+0x6f2>
    a8cc:	1c23      	adds	r3, r4, #0
    a8ce:	2b00      	cmp	r3, #0
    a8d0:	dd04      	ble.n	a8dc <_strtod_r+0x700>
    a8d2:	9a07      	ldr	r2, [sp, #28]
    a8d4:	1ae4      	subs	r4, r4, r3
    a8d6:	1ad2      	subs	r2, r2, r3
    a8d8:	9207      	str	r2, [sp, #28]
    a8da:	1aed      	subs	r5, r5, r3
    a8dc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    a8de:	2b00      	cmp	r3, #0
    a8e0:	d16b      	bne.n	a9ba <_strtod_r+0x7de>
    a8e2:	9b07      	ldr	r3, [sp, #28]
    a8e4:	2b00      	cmp	r3, #0
    a8e6:	dd00      	ble.n	a8ea <_strtod_r+0x70e>
    a8e8:	e080      	b.n	a9ec <_strtod_r+0x810>
    a8ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    a8ec:	2b00      	cmp	r3, #0
    a8ee:	d000      	beq.n	a8f2 <_strtod_r+0x716>
    a8f0:	e086      	b.n	aa00 <_strtod_r+0x824>
    a8f2:	2c00      	cmp	r4, #0
    a8f4:	dd00      	ble.n	a8f8 <_strtod_r+0x71c>
    a8f6:	e08d      	b.n	aa14 <_strtod_r+0x838>
    a8f8:	2d00      	cmp	r5, #0
    a8fa:	dd00      	ble.n	a8fe <_strtod_r+0x722>
    a8fc:	e094      	b.n	aa28 <_strtod_r+0x84c>
    a8fe:	9803      	ldr	r0, [sp, #12]
    a900:	991e      	ldr	r1, [sp, #120]	; 0x78
    a902:	9a08      	ldr	r2, [sp, #32]
    a904:	f002 f95b 	bl	cbbe <__mdiff>
    a908:	9004      	str	r0, [sp, #16]
    a90a:	2800      	cmp	r0, #0
    a90c:	d100      	bne.n	a910 <_strtod_r+0x734>
    a90e:	e6c9      	b.n	a6a4 <_strtod_r+0x4c8>
    a910:	2200      	movs	r2, #0
    a912:	68c3      	ldr	r3, [r0, #12]
    a914:	9905      	ldr	r1, [sp, #20]
    a916:	60c2      	str	r2, [r0, #12]
    a918:	930c      	str	r3, [sp, #48]	; 0x30
    a91a:	f002 f935 	bl	cb88 <__mcmp>
    a91e:	2800      	cmp	r0, #0
    a920:	db00      	blt.n	a924 <_strtod_r+0x748>
    a922:	e091      	b.n	aa48 <_strtod_r+0x86c>
    a924:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a926:	2b00      	cmp	r3, #0
    a928:	d000      	beq.n	a92c <_strtod_r+0x750>
    a92a:	e21a      	b.n	ad62 <_strtod_r+0xb86>
    a92c:	2e00      	cmp	r6, #0
    a92e:	d000      	beq.n	a932 <_strtod_r+0x756>
    a930:	e217      	b.n	ad62 <_strtod_r+0xb86>
    a932:	033b      	lsls	r3, r7, #12
    a934:	d000      	beq.n	a938 <_strtod_r+0x75c>
    a936:	e214      	b.n	ad62 <_strtod_r+0xb86>
    a938:	22d6      	movs	r2, #214	; 0xd6
    a93a:	4ba2      	ldr	r3, [pc, #648]	; (abc4 <_strtod_r+0x9e8>)
    a93c:	04d2      	lsls	r2, r2, #19
    a93e:	403b      	ands	r3, r7
    a940:	4293      	cmp	r3, r2
    a942:	d800      	bhi.n	a946 <_strtod_r+0x76a>
    a944:	e20d      	b.n	ad62 <_strtod_r+0xb86>
    a946:	9b04      	ldr	r3, [sp, #16]
    a948:	695b      	ldr	r3, [r3, #20]
    a94a:	9307      	str	r3, [sp, #28]
    a94c:	2b00      	cmp	r3, #0
    a94e:	d075      	beq.n	aa3c <_strtod_r+0x860>
    a950:	9904      	ldr	r1, [sp, #16]
    a952:	9803      	ldr	r0, [sp, #12]
    a954:	2201      	movs	r2, #1
    a956:	f002 f8c5 	bl	cae4 <__lshift>
    a95a:	9905      	ldr	r1, [sp, #20]
    a95c:	9004      	str	r0, [sp, #16]
    a95e:	f002 f913 	bl	cb88 <__mcmp>
    a962:	2800      	cmp	r0, #0
    a964:	dc00      	bgt.n	a968 <_strtod_r+0x78c>
    a966:	e1fc      	b.n	ad62 <_strtod_r+0xb86>
    a968:	9a06      	ldr	r2, [sp, #24]
    a96a:	4b96      	ldr	r3, [pc, #600]	; (abc4 <_strtod_r+0x9e8>)
    a96c:	2a00      	cmp	r2, #0
    a96e:	d100      	bne.n	a972 <_strtod_r+0x796>
    a970:	e09a      	b.n	aaa8 <_strtod_r+0x8cc>
    a972:	1c1a      	adds	r2, r3, #0
    a974:	21d6      	movs	r1, #214	; 0xd6
    a976:	403a      	ands	r2, r7
    a978:	04c9      	lsls	r1, r1, #19
    a97a:	428a      	cmp	r2, r1
    a97c:	dd00      	ble.n	a980 <_strtod_r+0x7a4>
    a97e:	e093      	b.n	aaa8 <_strtod_r+0x8cc>
    a980:	23dc      	movs	r3, #220	; 0xdc
    a982:	049b      	lsls	r3, r3, #18
    a984:	429a      	cmp	r2, r3
    a986:	dd00      	ble.n	a98a <_strtod_r+0x7ae>
    a988:	e1ee      	b.n	ad68 <_strtod_r+0xb8c>
    a98a:	2322      	movs	r3, #34	; 0x22
    a98c:	9a03      	ldr	r2, [sp, #12]
    a98e:	2600      	movs	r6, #0
    a990:	6013      	str	r3, [r2, #0]
    a992:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a994:	2700      	movs	r7, #0
    a996:	2b00      	cmp	r3, #0
    a998:	d000      	beq.n	a99c <_strtod_r+0x7c0>
    a99a:	e1f7      	b.n	ad8c <_strtod_r+0xbb0>
    a99c:	e20a      	b.n	adb4 <_strtod_r+0xbd8>
    a99e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a9a0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
    a9a2:	1ad4      	subs	r4, r2, r3
    a9a4:	e774      	b.n	a890 <_strtod_r+0x6b4>
    a9a6:	4988      	ldr	r1, [pc, #544]	; (abc8 <_strtod_r+0x9ec>)
    a9a8:	1acb      	subs	r3, r1, r3
    a9aa:	1c01      	adds	r1, r0, #0
    a9ac:	4099      	lsls	r1, r3
    a9ae:	9112      	str	r1, [sp, #72]	; 0x48
    a9b0:	e001      	b.n	a9b6 <_strtod_r+0x7da>
    a9b2:	2300      	movs	r3, #0
    a9b4:	9312      	str	r3, [sp, #72]	; 0x48
    a9b6:	9018      	str	r0, [sp, #96]	; 0x60
    a9b8:	e77d      	b.n	a8b6 <_strtod_r+0x6da>
    a9ba:	1c1a      	adds	r2, r3, #0
    a9bc:	9803      	ldr	r0, [sp, #12]
    a9be:	9905      	ldr	r1, [sp, #20]
    a9c0:	f002 f83e 	bl	ca40 <__pow5mult>
    a9c4:	9005      	str	r0, [sp, #20]
    a9c6:	1e03      	subs	r3, r0, #0
    a9c8:	d100      	bne.n	a9cc <_strtod_r+0x7f0>
    a9ca:	e66b      	b.n	a6a4 <_strtod_r+0x4c8>
    a9cc:	9803      	ldr	r0, [sp, #12]
    a9ce:	1c19      	adds	r1, r3, #0
    a9d0:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    a9d2:	f001 ffa7 	bl	c924 <__multiply>
    a9d6:	900c      	str	r0, [sp, #48]	; 0x30
    a9d8:	2800      	cmp	r0, #0
    a9da:	d100      	bne.n	a9de <_strtod_r+0x802>
    a9dc:	e662      	b.n	a6a4 <_strtod_r+0x4c8>
    a9de:	9803      	ldr	r0, [sp, #12]
    a9e0:	991e      	ldr	r1, [sp, #120]	; 0x78
    a9e2:	f001 feb7 	bl	c754 <_Bfree>
    a9e6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a9e8:	931e      	str	r3, [sp, #120]	; 0x78
    a9ea:	e77a      	b.n	a8e2 <_strtod_r+0x706>
    a9ec:	9803      	ldr	r0, [sp, #12]
    a9ee:	991e      	ldr	r1, [sp, #120]	; 0x78
    a9f0:	9a07      	ldr	r2, [sp, #28]
    a9f2:	f002 f877 	bl	cae4 <__lshift>
    a9f6:	901e      	str	r0, [sp, #120]	; 0x78
    a9f8:	2800      	cmp	r0, #0
    a9fa:	d000      	beq.n	a9fe <_strtod_r+0x822>
    a9fc:	e775      	b.n	a8ea <_strtod_r+0x70e>
    a9fe:	e651      	b.n	a6a4 <_strtod_r+0x4c8>
    aa00:	9803      	ldr	r0, [sp, #12]
    aa02:	9908      	ldr	r1, [sp, #32]
    aa04:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    aa06:	f002 f81b 	bl	ca40 <__pow5mult>
    aa0a:	9008      	str	r0, [sp, #32]
    aa0c:	2800      	cmp	r0, #0
    aa0e:	d000      	beq.n	aa12 <_strtod_r+0x836>
    aa10:	e76f      	b.n	a8f2 <_strtod_r+0x716>
    aa12:	e647      	b.n	a6a4 <_strtod_r+0x4c8>
    aa14:	9803      	ldr	r0, [sp, #12]
    aa16:	9908      	ldr	r1, [sp, #32]
    aa18:	1c22      	adds	r2, r4, #0
    aa1a:	f002 f863 	bl	cae4 <__lshift>
    aa1e:	9008      	str	r0, [sp, #32]
    aa20:	2800      	cmp	r0, #0
    aa22:	d000      	beq.n	aa26 <_strtod_r+0x84a>
    aa24:	e768      	b.n	a8f8 <_strtod_r+0x71c>
    aa26:	e63d      	b.n	a6a4 <_strtod_r+0x4c8>
    aa28:	9803      	ldr	r0, [sp, #12]
    aa2a:	9905      	ldr	r1, [sp, #20]
    aa2c:	1c2a      	adds	r2, r5, #0
    aa2e:	f002 f859 	bl	cae4 <__lshift>
    aa32:	9005      	str	r0, [sp, #20]
    aa34:	2800      	cmp	r0, #0
    aa36:	d000      	beq.n	aa3a <_strtod_r+0x85e>
    aa38:	e761      	b.n	a8fe <_strtod_r+0x722>
    aa3a:	e633      	b.n	a6a4 <_strtod_r+0x4c8>
    aa3c:	9b04      	ldr	r3, [sp, #16]
    aa3e:	691b      	ldr	r3, [r3, #16]
    aa40:	9307      	str	r3, [sp, #28]
    aa42:	2b01      	cmp	r3, #1
    aa44:	dc84      	bgt.n	a950 <_strtod_r+0x774>
    aa46:	e18c      	b.n	ad62 <_strtod_r+0xb86>
    aa48:	2800      	cmp	r0, #0
    aa4a:	d164      	bne.n	ab16 <_strtod_r+0x93a>
    aa4c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    aa4e:	033b      	lsls	r3, r7, #12
    aa50:	2a00      	cmp	r2, #0
    aa52:	d024      	beq.n	aa9e <_strtod_r+0x8c2>
    aa54:	4a5d      	ldr	r2, [pc, #372]	; (abcc <_strtod_r+0x9f0>)
    aa56:	1c39      	adds	r1, r7, #0
    aa58:	0b1b      	lsrs	r3, r3, #12
    aa5a:	4293      	cmp	r3, r2
    aa5c:	d12d      	bne.n	aaba <_strtod_r+0x8de>
    aa5e:	9a06      	ldr	r2, [sp, #24]
    aa60:	3801      	subs	r0, #1
    aa62:	1c34      	adds	r4, r6, #0
    aa64:	1c03      	adds	r3, r0, #0
    aa66:	2a00      	cmp	r2, #0
    aa68:	d00a      	beq.n	aa80 <_strtod_r+0x8a4>
    aa6a:	25d4      	movs	r5, #212	; 0xd4
    aa6c:	4a55      	ldr	r2, [pc, #340]	; (abc4 <_strtod_r+0x9e8>)
    aa6e:	04ed      	lsls	r5, r5, #19
    aa70:	403a      	ands	r2, r7
    aa72:	42aa      	cmp	r2, r5
    aa74:	d804      	bhi.n	aa80 <_strtod_r+0x8a4>
    aa76:	336c      	adds	r3, #108	; 0x6c
    aa78:	0d12      	lsrs	r2, r2, #20
    aa7a:	1a9a      	subs	r2, r3, r2
    aa7c:	1c03      	adds	r3, r0, #0
    aa7e:	4093      	lsls	r3, r2
    aa80:	429c      	cmp	r4, r3
    aa82:	d11a      	bne.n	aaba <_strtod_r+0x8de>
    aa84:	4b52      	ldr	r3, [pc, #328]	; (abd0 <_strtod_r+0x9f4>)
    aa86:	4299      	cmp	r1, r3
    aa88:	d102      	bne.n	aa90 <_strtod_r+0x8b4>
    aa8a:	1c63      	adds	r3, r4, #1
    aa8c:	d100      	bne.n	aa90 <_strtod_r+0x8b4>
    aa8e:	e609      	b.n	a6a4 <_strtod_r+0x4c8>
    aa90:	4b4c      	ldr	r3, [pc, #304]	; (abc4 <_strtod_r+0x9e8>)
    aa92:	2600      	movs	r6, #0
    aa94:	4019      	ands	r1, r3
    aa96:	2380      	movs	r3, #128	; 0x80
    aa98:	035b      	lsls	r3, r3, #13
    aa9a:	18cf      	adds	r7, r1, r3
    aa9c:	e161      	b.n	ad62 <_strtod_r+0xb86>
    aa9e:	2b00      	cmp	r3, #0
    aaa0:	d10b      	bne.n	aaba <_strtod_r+0x8de>
    aaa2:	2e00      	cmp	r6, #0
    aaa4:	d109      	bne.n	aaba <_strtod_r+0x8de>
    aaa6:	e75f      	b.n	a968 <_strtod_r+0x78c>
    aaa8:	2601      	movs	r6, #1
    aaaa:	4a4a      	ldr	r2, [pc, #296]	; (abd4 <_strtod_r+0x9f8>)
    aaac:	403b      	ands	r3, r7
    aaae:	189b      	adds	r3, r3, r2
    aab0:	4a46      	ldr	r2, [pc, #280]	; (abcc <_strtod_r+0x9f0>)
    aab2:	4276      	negs	r6, r6
    aab4:	431a      	orrs	r2, r3
    aab6:	1c17      	adds	r7, r2, #0
    aab8:	e153      	b.n	ad62 <_strtod_r+0xb86>
    aaba:	9b12      	ldr	r3, [sp, #72]	; 0x48
    aabc:	2b00      	cmp	r3, #0
    aabe:	d003      	beq.n	aac8 <_strtod_r+0x8ec>
    aac0:	423b      	tst	r3, r7
    aac2:	d100      	bne.n	aac6 <_strtod_r+0x8ea>
    aac4:	e14d      	b.n	ad62 <_strtod_r+0xb86>
    aac6:	e003      	b.n	aad0 <_strtod_r+0x8f4>
    aac8:	9b18      	ldr	r3, [sp, #96]	; 0x60
    aaca:	4233      	tst	r3, r6
    aacc:	d100      	bne.n	aad0 <_strtod_r+0x8f4>
    aace:	e148      	b.n	ad62 <_strtod_r+0xb86>
    aad0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    aad2:	1c30      	adds	r0, r6, #0
    aad4:	1c39      	adds	r1, r7, #0
    aad6:	9a06      	ldr	r2, [sp, #24]
    aad8:	2b00      	cmp	r3, #0
    aada:	d00a      	beq.n	aaf2 <_strtod_r+0x916>
    aadc:	f7ff fb68 	bl	a1b0 <sulp>
    aae0:	1c02      	adds	r2, r0, #0
    aae2:	1c0b      	adds	r3, r1, #0
    aae4:	980e      	ldr	r0, [sp, #56]	; 0x38
    aae6:	990f      	ldr	r1, [sp, #60]	; 0x3c
    aae8:	f7fb fc82 	bl	63f0 <__aeabi_dadd>
    aaec:	1c06      	adds	r6, r0, #0
    aaee:	1c0f      	adds	r7, r1, #0
    aaf0:	e137      	b.n	ad62 <_strtod_r+0xb86>
    aaf2:	f7ff fb5d 	bl	a1b0 <sulp>
    aaf6:	1c02      	adds	r2, r0, #0
    aaf8:	1c0b      	adds	r3, r1, #0
    aafa:	980e      	ldr	r0, [sp, #56]	; 0x38
    aafc:	990f      	ldr	r1, [sp, #60]	; 0x3c
    aafe:	f7fc fe77 	bl	77f0 <__aeabi_dsub>
    ab02:	2200      	movs	r2, #0
    ab04:	2300      	movs	r3, #0
    ab06:	1c06      	adds	r6, r0, #0
    ab08:	1c0f      	adds	r7, r1, #0
    ab0a:	f7fa fcf3 	bl	54f4 <__aeabi_dcmpeq>
    ab0e:	2800      	cmp	r0, #0
    ab10:	d000      	beq.n	ab14 <_strtod_r+0x938>
    ab12:	e73a      	b.n	a98a <_strtod_r+0x7ae>
    ab14:	e125      	b.n	ad62 <_strtod_r+0xb86>
    ab16:	9804      	ldr	r0, [sp, #16]
    ab18:	9905      	ldr	r1, [sp, #20]
    ab1a:	f002 f985 	bl	ce28 <__ratio>
    ab1e:	2380      	movs	r3, #128	; 0x80
    ab20:	2200      	movs	r2, #0
    ab22:	05db      	lsls	r3, r3, #23
    ab24:	1c04      	adds	r4, r0, #0
    ab26:	1c0d      	adds	r5, r1, #0
    ab28:	f7fa fcf4 	bl	5514 <__aeabi_dcmple>
    ab2c:	2800      	cmp	r0, #0
    ab2e:	d036      	beq.n	ab9e <_strtod_r+0x9c2>
    ab30:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    ab32:	2b00      	cmp	r3, #0
    ab34:	d002      	beq.n	ab3c <_strtod_r+0x960>
    ab36:	2400      	movs	r4, #0
    ab38:	4d27      	ldr	r5, [pc, #156]	; (abd8 <_strtod_r+0x9fc>)
    ab3a:	e00b      	b.n	ab54 <_strtod_r+0x978>
    ab3c:	2e00      	cmp	r6, #0
    ab3e:	d102      	bne.n	ab46 <_strtod_r+0x96a>
    ab40:	033b      	lsls	r3, r7, #12
    ab42:	d105      	bne.n	ab50 <_strtod_r+0x974>
    ab44:	e00b      	b.n	ab5e <_strtod_r+0x982>
    ab46:	2e01      	cmp	r6, #1
    ab48:	d102      	bne.n	ab50 <_strtod_r+0x974>
    ab4a:	2f00      	cmp	r7, #0
    ab4c:	d100      	bne.n	ab50 <_strtod_r+0x974>
    ab4e:	e71c      	b.n	a98a <_strtod_r+0x7ae>
    ab50:	2400      	movs	r4, #0
    ab52:	4d22      	ldr	r5, [pc, #136]	; (abdc <_strtod_r+0xa00>)
    ab54:	2300      	movs	r3, #0
    ab56:	9307      	str	r3, [sp, #28]
    ab58:	4b1f      	ldr	r3, [pc, #124]	; (abd8 <_strtod_r+0x9fc>)
    ab5a:	930a      	str	r3, [sp, #40]	; 0x28
    ab5c:	e048      	b.n	abf0 <_strtod_r+0xa14>
    ab5e:	1c20      	adds	r0, r4, #0
    ab60:	1c29      	adds	r1, r5, #0
    ab62:	2200      	movs	r2, #0
    ab64:	4b1c      	ldr	r3, [pc, #112]	; (abd8 <_strtod_r+0x9fc>)
    ab66:	f7fa fccb 	bl	5500 <__aeabi_dcmplt>
    ab6a:	2800      	cmp	r0, #0
    ab6c:	d108      	bne.n	ab80 <_strtod_r+0x9a4>
    ab6e:	1c20      	adds	r0, r4, #0
    ab70:	1c29      	adds	r1, r5, #0
    ab72:	2200      	movs	r2, #0
    ab74:	4b1a      	ldr	r3, [pc, #104]	; (abe0 <_strtod_r+0xa04>)
    ab76:	f7fc fba1 	bl	72bc <__aeabi_dmul>
    ab7a:	9007      	str	r0, [sp, #28]
    ab7c:	910a      	str	r1, [sp, #40]	; 0x28
    ab7e:	e003      	b.n	ab88 <_strtod_r+0x9ac>
    ab80:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    ab82:	9307      	str	r3, [sp, #28]
    ab84:	4b16      	ldr	r3, [pc, #88]	; (abe0 <_strtod_r+0xa04>)
    ab86:	930a      	str	r3, [sp, #40]	; 0x28
    ab88:	2280      	movs	r2, #128	; 0x80
    ab8a:	0612      	lsls	r2, r2, #24
    ab8c:	4694      	mov	ip, r2
    ab8e:	9b07      	ldr	r3, [sp, #28]
    ab90:	931a      	str	r3, [sp, #104]	; 0x68
    ab92:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    ab94:	4463      	add	r3, ip
    ab96:	931b      	str	r3, [sp, #108]	; 0x6c
    ab98:	9c1a      	ldr	r4, [sp, #104]	; 0x68
    ab9a:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
    ab9c:	e028      	b.n	abf0 <_strtod_r+0xa14>
    ab9e:	4b10      	ldr	r3, [pc, #64]	; (abe0 <_strtod_r+0xa04>)
    aba0:	1c20      	adds	r0, r4, #0
    aba2:	1c29      	adds	r1, r5, #0
    aba4:	2200      	movs	r2, #0
    aba6:	f7fc fb89 	bl	72bc <__aeabi_dmul>
    abaa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    abac:	9007      	str	r0, [sp, #28]
    abae:	910a      	str	r1, [sp, #40]	; 0x28
    abb0:	2b00      	cmp	r3, #0
    abb2:	d117      	bne.n	abe4 <_strtod_r+0xa08>
    abb4:	2380      	movs	r3, #128	; 0x80
    abb6:	061b      	lsls	r3, r3, #24
    abb8:	18cb      	adds	r3, r1, r3
    abba:	9014      	str	r0, [sp, #80]	; 0x50
    abbc:	9315      	str	r3, [sp, #84]	; 0x54
    abbe:	e015      	b.n	abec <_strtod_r+0xa10>
    abc0:	fffffc03 	.word	0xfffffc03
    abc4:	7ff00000 	.word	0x7ff00000
    abc8:	fffffbe3 	.word	0xfffffbe3
    abcc:	000fffff 	.word	0x000fffff
    abd0:	7fefffff 	.word	0x7fefffff
    abd4:	fff00000 	.word	0xfff00000
    abd8:	3ff00000 	.word	0x3ff00000
    abdc:	bff00000 	.word	0xbff00000
    abe0:	3fe00000 	.word	0x3fe00000
    abe4:	9a07      	ldr	r2, [sp, #28]
    abe6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    abe8:	9214      	str	r2, [sp, #80]	; 0x50
    abea:	9315      	str	r3, [sp, #84]	; 0x54
    abec:	9c14      	ldr	r4, [sp, #80]	; 0x50
    abee:	9d15      	ldr	r5, [sp, #84]	; 0x54
    abf0:	4b7a      	ldr	r3, [pc, #488]	; (addc <_strtod_r+0xc00>)
    abf2:	403b      	ands	r3, r7
    abf4:	9312      	str	r3, [sp, #72]	; 0x48
    abf6:	9a12      	ldr	r2, [sp, #72]	; 0x48
    abf8:	4b79      	ldr	r3, [pc, #484]	; (ade0 <_strtod_r+0xc04>)
    abfa:	429a      	cmp	r2, r3
    abfc:	d12b      	bne.n	ac56 <_strtod_r+0xa7a>
    abfe:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    ac00:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    ac02:	9210      	str	r2, [sp, #64]	; 0x40
    ac04:	9311      	str	r3, [sp, #68]	; 0x44
    ac06:	4b77      	ldr	r3, [pc, #476]	; (ade4 <_strtod_r+0xc08>)
    ac08:	1c30      	adds	r0, r6, #0
    ac0a:	18ff      	adds	r7, r7, r3
    ac0c:	1c39      	adds	r1, r7, #0
    ac0e:	f002 f841 	bl	cc94 <__ulp>
    ac12:	1c02      	adds	r2, r0, #0
    ac14:	1c0b      	adds	r3, r1, #0
    ac16:	1c20      	adds	r0, r4, #0
    ac18:	1c29      	adds	r1, r5, #0
    ac1a:	f7fc fb4f 	bl	72bc <__aeabi_dmul>
    ac1e:	1c02      	adds	r2, r0, #0
    ac20:	1c0b      	adds	r3, r1, #0
    ac22:	1c30      	adds	r0, r6, #0
    ac24:	1c39      	adds	r1, r7, #0
    ac26:	f7fb fbe3 	bl	63f0 <__aeabi_dadd>
    ac2a:	4b6c      	ldr	r3, [pc, #432]	; (addc <_strtod_r+0xc00>)
    ac2c:	4a6e      	ldr	r2, [pc, #440]	; (ade8 <_strtod_r+0xc0c>)
    ac2e:	1c06      	adds	r6, r0, #0
    ac30:	400b      	ands	r3, r1
    ac32:	4293      	cmp	r3, r2
    ac34:	d90b      	bls.n	ac4e <_strtod_r+0xa72>
    ac36:	4b6d      	ldr	r3, [pc, #436]	; (adec <_strtod_r+0xc10>)
    ac38:	9a11      	ldr	r2, [sp, #68]	; 0x44
    ac3a:	429a      	cmp	r2, r3
    ac3c:	d103      	bne.n	ac46 <_strtod_r+0xa6a>
    ac3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
    ac40:	3301      	adds	r3, #1
    ac42:	d100      	bne.n	ac46 <_strtod_r+0xa6a>
    ac44:	e52e      	b.n	a6a4 <_strtod_r+0x4c8>
    ac46:	2601      	movs	r6, #1
    ac48:	4f68      	ldr	r7, [pc, #416]	; (adec <_strtod_r+0xc10>)
    ac4a:	4276      	negs	r6, r6
    ac4c:	e078      	b.n	ad40 <_strtod_r+0xb64>
    ac4e:	23d4      	movs	r3, #212	; 0xd4
    ac50:	049b      	lsls	r3, r3, #18
    ac52:	18cf      	adds	r7, r1, r3
    ac54:	e040      	b.n	acd8 <_strtod_r+0xafc>
    ac56:	9b06      	ldr	r3, [sp, #24]
    ac58:	2b00      	cmp	r3, #0
    ac5a:	d02b      	beq.n	acb4 <_strtod_r+0xad8>
    ac5c:	23d4      	movs	r3, #212	; 0xd4
    ac5e:	9a12      	ldr	r2, [sp, #72]	; 0x48
    ac60:	04db      	lsls	r3, r3, #19
    ac62:	429a      	cmp	r2, r3
    ac64:	d826      	bhi.n	acb4 <_strtod_r+0xad8>
    ac66:	9807      	ldr	r0, [sp, #28]
    ac68:	990a      	ldr	r1, [sp, #40]	; 0x28
    ac6a:	4a61      	ldr	r2, [pc, #388]	; (adf0 <_strtod_r+0xc14>)
    ac6c:	4b61      	ldr	r3, [pc, #388]	; (adf4 <_strtod_r+0xc18>)
    ac6e:	f7fa fc51 	bl	5514 <__aeabi_dcmple>
    ac72:	2800      	cmp	r0, #0
    ac74:	d019      	beq.n	acaa <_strtod_r+0xace>
    ac76:	9807      	ldr	r0, [sp, #28]
    ac78:	990a      	ldr	r1, [sp, #40]	; 0x28
    ac7a:	f7fa fccd 	bl	5618 <__aeabi_d2uiz>
    ac7e:	2800      	cmp	r0, #0
    ac80:	d100      	bne.n	ac84 <_strtod_r+0xaa8>
    ac82:	3001      	adds	r0, #1
    ac84:	f7fd f9a0 	bl	7fc8 <__aeabi_ui2d>
    ac88:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    ac8a:	9007      	str	r0, [sp, #28]
    ac8c:	910a      	str	r1, [sp, #40]	; 0x28
    ac8e:	2b00      	cmp	r3, #0
    ac90:	d105      	bne.n	ac9e <_strtod_r+0xac2>
    ac92:	2380      	movs	r3, #128	; 0x80
    ac94:	061b      	lsls	r3, r3, #24
    ac96:	18cb      	adds	r3, r1, r3
    ac98:	9016      	str	r0, [sp, #88]	; 0x58
    ac9a:	9317      	str	r3, [sp, #92]	; 0x5c
    ac9c:	e003      	b.n	aca6 <_strtod_r+0xaca>
    ac9e:	9a07      	ldr	r2, [sp, #28]
    aca0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    aca2:	9216      	str	r2, [sp, #88]	; 0x58
    aca4:	9317      	str	r3, [sp, #92]	; 0x5c
    aca6:	9c16      	ldr	r4, [sp, #88]	; 0x58
    aca8:	9d17      	ldr	r5, [sp, #92]	; 0x5c
    acaa:	23d6      	movs	r3, #214	; 0xd6
    acac:	9a12      	ldr	r2, [sp, #72]	; 0x48
    acae:	04db      	lsls	r3, r3, #19
    acb0:	18eb      	adds	r3, r5, r3
    acb2:	1a9d      	subs	r5, r3, r2
    acb4:	980e      	ldr	r0, [sp, #56]	; 0x38
    acb6:	990f      	ldr	r1, [sp, #60]	; 0x3c
    acb8:	f001 ffec 	bl	cc94 <__ulp>
    acbc:	1c02      	adds	r2, r0, #0
    acbe:	1c0b      	adds	r3, r1, #0
    acc0:	1c20      	adds	r0, r4, #0
    acc2:	1c29      	adds	r1, r5, #0
    acc4:	f7fc fafa 	bl	72bc <__aeabi_dmul>
    acc8:	1c02      	adds	r2, r0, #0
    acca:	1c0b      	adds	r3, r1, #0
    accc:	980e      	ldr	r0, [sp, #56]	; 0x38
    acce:	990f      	ldr	r1, [sp, #60]	; 0x3c
    acd0:	f7fb fb8e 	bl	63f0 <__aeabi_dadd>
    acd4:	1c06      	adds	r6, r0, #0
    acd6:	1c0f      	adds	r7, r1, #0
    acd8:	9b06      	ldr	r3, [sp, #24]
    acda:	970e      	str	r7, [sp, #56]	; 0x38
    acdc:	2b00      	cmp	r3, #0
    acde:	d12f      	bne.n	ad40 <_strtod_r+0xb64>
    ace0:	4b3e      	ldr	r3, [pc, #248]	; (addc <_strtod_r+0xc00>)
    ace2:	9a12      	ldr	r2, [sp, #72]	; 0x48
    ace4:	403b      	ands	r3, r7
    ace6:	429a      	cmp	r2, r3
    ace8:	d12a      	bne.n	ad40 <_strtod_r+0xb64>
    acea:	990a      	ldr	r1, [sp, #40]	; 0x28
    acec:	9807      	ldr	r0, [sp, #28]
    acee:	f7fd f8f9 	bl	7ee4 <__aeabi_d2iz>
    acf2:	f7fd f92d 	bl	7f50 <__aeabi_i2d>
    acf6:	1c0b      	adds	r3, r1, #0
    acf8:	1c02      	adds	r2, r0, #0
    acfa:	990a      	ldr	r1, [sp, #40]	; 0x28
    acfc:	9807      	ldr	r0, [sp, #28]
    acfe:	f7fc fd77 	bl	77f0 <__aeabi_dsub>
    ad02:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    ad04:	1c04      	adds	r4, r0, #0
    ad06:	1c0d      	adds	r5, r1, #0
    ad08:	2b00      	cmp	r3, #0
    ad0a:	d104      	bne.n	ad16 <_strtod_r+0xb3a>
    ad0c:	2e00      	cmp	r6, #0
    ad0e:	d102      	bne.n	ad16 <_strtod_r+0xb3a>
    ad10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    ad12:	031b      	lsls	r3, r3, #12
    ad14:	d00e      	beq.n	ad34 <_strtod_r+0xb58>
    ad16:	1c20      	adds	r0, r4, #0
    ad18:	1c29      	adds	r1, r5, #0
    ad1a:	4a37      	ldr	r2, [pc, #220]	; (adf8 <_strtod_r+0xc1c>)
    ad1c:	4b37      	ldr	r3, [pc, #220]	; (adfc <_strtod_r+0xc20>)
    ad1e:	f7fa fbef 	bl	5500 <__aeabi_dcmplt>
    ad22:	2800      	cmp	r0, #0
    ad24:	d132      	bne.n	ad8c <_strtod_r+0xbb0>
    ad26:	1c20      	adds	r0, r4, #0
    ad28:	1c29      	adds	r1, r5, #0
    ad2a:	4a35      	ldr	r2, [pc, #212]	; (ae00 <_strtod_r+0xc24>)
    ad2c:	4b35      	ldr	r3, [pc, #212]	; (ae04 <_strtod_r+0xc28>)
    ad2e:	f7fa fbfb 	bl	5528 <__aeabi_dcmpgt>
    ad32:	e003      	b.n	ad3c <_strtod_r+0xb60>
    ad34:	4a30      	ldr	r2, [pc, #192]	; (adf8 <_strtod_r+0xc1c>)
    ad36:	4b34      	ldr	r3, [pc, #208]	; (ae08 <_strtod_r+0xc2c>)
    ad38:	f7fa fbe2 	bl	5500 <__aeabi_dcmplt>
    ad3c:	2800      	cmp	r0, #0
    ad3e:	d125      	bne.n	ad8c <_strtod_r+0xbb0>
    ad40:	9803      	ldr	r0, [sp, #12]
    ad42:	991e      	ldr	r1, [sp, #120]	; 0x78
    ad44:	f001 fd06 	bl	c754 <_Bfree>
    ad48:	9803      	ldr	r0, [sp, #12]
    ad4a:	9908      	ldr	r1, [sp, #32]
    ad4c:	f001 fd02 	bl	c754 <_Bfree>
    ad50:	9803      	ldr	r0, [sp, #12]
    ad52:	9905      	ldr	r1, [sp, #20]
    ad54:	f001 fcfe 	bl	c754 <_Bfree>
    ad58:	9803      	ldr	r0, [sp, #12]
    ad5a:	9904      	ldr	r1, [sp, #16]
    ad5c:	f001 fcfa 	bl	c754 <_Bfree>
    ad60:	e55f      	b.n	a822 <_strtod_r+0x646>
    ad62:	9b06      	ldr	r3, [sp, #24]
    ad64:	2b00      	cmp	r3, #0
    ad66:	d011      	beq.n	ad8c <_strtod_r+0xbb0>
    ad68:	4b28      	ldr	r3, [pc, #160]	; (ae0c <_strtod_r+0xc30>)
    ad6a:	1c30      	adds	r0, r6, #0
    ad6c:	9311      	str	r3, [sp, #68]	; 0x44
    ad6e:	2300      	movs	r3, #0
    ad70:	9310      	str	r3, [sp, #64]	; 0x40
    ad72:	1c39      	adds	r1, r7, #0
    ad74:	9a10      	ldr	r2, [sp, #64]	; 0x40
    ad76:	9b11      	ldr	r3, [sp, #68]	; 0x44
    ad78:	f7fc faa0 	bl	72bc <__aeabi_dmul>
    ad7c:	1c06      	adds	r6, r0, #0
    ad7e:	1e0f      	subs	r7, r1, #0
    ad80:	d104      	bne.n	ad8c <_strtod_r+0xbb0>
    ad82:	2800      	cmp	r0, #0
    ad84:	d102      	bne.n	ad8c <_strtod_r+0xbb0>
    ad86:	2322      	movs	r3, #34	; 0x22
    ad88:	9a03      	ldr	r2, [sp, #12]
    ad8a:	6013      	str	r3, [r2, #0]
    ad8c:	9803      	ldr	r0, [sp, #12]
    ad8e:	991e      	ldr	r1, [sp, #120]	; 0x78
    ad90:	f001 fce0 	bl	c754 <_Bfree>
    ad94:	9803      	ldr	r0, [sp, #12]
    ad96:	9908      	ldr	r1, [sp, #32]
    ad98:	f001 fcdc 	bl	c754 <_Bfree>
    ad9c:	9803      	ldr	r0, [sp, #12]
    ad9e:	9905      	ldr	r1, [sp, #20]
    ada0:	f001 fcd8 	bl	c754 <_Bfree>
    ada4:	9803      	ldr	r0, [sp, #12]
    ada6:	990b      	ldr	r1, [sp, #44]	; 0x2c
    ada8:	f001 fcd4 	bl	c754 <_Bfree>
    adac:	9803      	ldr	r0, [sp, #12]
    adae:	9904      	ldr	r1, [sp, #16]
    adb0:	f001 fcd0 	bl	c754 <_Bfree>
    adb4:	9b19      	ldr	r3, [sp, #100]	; 0x64
    adb6:	2b00      	cmp	r3, #0
    adb8:	d002      	beq.n	adc0 <_strtod_r+0xbe4>
    adba:	9b19      	ldr	r3, [sp, #100]	; 0x64
    adbc:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    adbe:	601a      	str	r2, [r3, #0]
    adc0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    adc2:	2b00      	cmp	r3, #0
    adc4:	d004      	beq.n	add0 <_strtod_r+0xbf4>
    adc6:	2380      	movs	r3, #128	; 0x80
    adc8:	061b      	lsls	r3, r3, #24
    adca:	1c32      	adds	r2, r6, #0
    adcc:	18fb      	adds	r3, r7, r3
    adce:	e001      	b.n	add4 <_strtod_r+0xbf8>
    add0:	1c32      	adds	r2, r6, #0
    add2:	1c3b      	adds	r3, r7, #0
    add4:	1c10      	adds	r0, r2, #0
    add6:	1c19      	adds	r1, r3, #0
    add8:	b023      	add	sp, #140	; 0x8c
    adda:	bdf0      	pop	{r4, r5, r6, r7, pc}
    addc:	7ff00000 	.word	0x7ff00000
    ade0:	7fe00000 	.word	0x7fe00000
    ade4:	fcb00000 	.word	0xfcb00000
    ade8:	7c9fffff 	.word	0x7c9fffff
    adec:	7fefffff 	.word	0x7fefffff
    adf0:	ffc00000 	.word	0xffc00000
    adf4:	41dfffff 	.word	0x41dfffff
    adf8:	94a03595 	.word	0x94a03595
    adfc:	3fdfffff 	.word	0x3fdfffff
    ae00:	35afe535 	.word	0x35afe535
    ae04:	3fe00000 	.word	0x3fe00000
    ae08:	3fcfffff 	.word	0x3fcfffff
    ae0c:	39500000 	.word	0x39500000

0000ae10 <_strtol_r>:
    ae10:	b5f0      	push	{r4, r5, r6, r7, lr}
    ae12:	1c1e      	adds	r6, r3, #0
    ae14:	4b44      	ldr	r3, [pc, #272]	; (af28 <_strtol_r+0x118>)
    ae16:	b087      	sub	sp, #28
    ae18:	681b      	ldr	r3, [r3, #0]
    ae1a:	9005      	str	r0, [sp, #20]
    ae1c:	9302      	str	r3, [sp, #8]
    ae1e:	1c0b      	adds	r3, r1, #0
    ae20:	9103      	str	r1, [sp, #12]
    ae22:	9201      	str	r2, [sp, #4]
    ae24:	781c      	ldrb	r4, [r3, #0]
    ae26:	9a02      	ldr	r2, [sp, #8]
    ae28:	1c5d      	adds	r5, r3, #1
    ae2a:	1912      	adds	r2, r2, r4
    ae2c:	7850      	ldrb	r0, [r2, #1]
    ae2e:	2208      	movs	r2, #8
    ae30:	4010      	ands	r0, r2
    ae32:	d001      	beq.n	ae38 <_strtol_r+0x28>
    ae34:	1c2b      	adds	r3, r5, #0
    ae36:	e7f5      	b.n	ae24 <_strtol_r+0x14>
    ae38:	2c2d      	cmp	r4, #45	; 0x2d
    ae3a:	d104      	bne.n	ae46 <_strtol_r+0x36>
    ae3c:	1c9d      	adds	r5, r3, #2
    ae3e:	785c      	ldrb	r4, [r3, #1]
    ae40:	2301      	movs	r3, #1
    ae42:	9300      	str	r3, [sp, #0]
    ae44:	e004      	b.n	ae50 <_strtol_r+0x40>
    ae46:	9000      	str	r0, [sp, #0]
    ae48:	2c2b      	cmp	r4, #43	; 0x2b
    ae4a:	d101      	bne.n	ae50 <_strtol_r+0x40>
    ae4c:	785c      	ldrb	r4, [r3, #1]
    ae4e:	1c9d      	adds	r5, r3, #2
    ae50:	2e00      	cmp	r6, #0
    ae52:	d002      	beq.n	ae5a <_strtol_r+0x4a>
    ae54:	2e10      	cmp	r6, #16
    ae56:	d10a      	bne.n	ae6e <_strtol_r+0x5e>
    ae58:	e060      	b.n	af1c <_strtol_r+0x10c>
    ae5a:	2c30      	cmp	r4, #48	; 0x30
    ae5c:	d15c      	bne.n	af18 <_strtol_r+0x108>
    ae5e:	2220      	movs	r2, #32
    ae60:	782b      	ldrb	r3, [r5, #0]
    ae62:	4393      	bics	r3, r2
    ae64:	2b58      	cmp	r3, #88	; 0x58
    ae66:	d152      	bne.n	af0e <_strtol_r+0xfe>
    ae68:	2610      	movs	r6, #16
    ae6a:	786c      	ldrb	r4, [r5, #1]
    ae6c:	3502      	adds	r5, #2
    ae6e:	9f00      	ldr	r7, [sp, #0]
    ae70:	1c31      	adds	r1, r6, #0
    ae72:	1e7b      	subs	r3, r7, #1
    ae74:	419f      	sbcs	r7, r3
    ae76:	4b2d      	ldr	r3, [pc, #180]	; (af2c <_strtol_r+0x11c>)
    ae78:	18ff      	adds	r7, r7, r3
    ae7a:	1c38      	adds	r0, r7, #0
    ae7c:	f7fa fa2e 	bl	52dc <__aeabi_uidivmod>
    ae80:	1c38      	adds	r0, r7, #0
    ae82:	9104      	str	r1, [sp, #16]
    ae84:	1c31      	adds	r1, r6, #0
    ae86:	f7fa f9a3 	bl	51d0 <__aeabi_uidiv>
    ae8a:	2200      	movs	r2, #0
    ae8c:	1c07      	adds	r7, r0, #0
    ae8e:	1c13      	adds	r3, r2, #0
    ae90:	9902      	ldr	r1, [sp, #8]
    ae92:	1909      	adds	r1, r1, r4
    ae94:	7849      	ldrb	r1, [r1, #1]
    ae96:	0748      	lsls	r0, r1, #29
    ae98:	d501      	bpl.n	ae9e <_strtol_r+0x8e>
    ae9a:	3c30      	subs	r4, #48	; 0x30
    ae9c:	e007      	b.n	aeae <_strtol_r+0x9e>
    ae9e:	2003      	movs	r0, #3
    aea0:	4008      	ands	r0, r1
    aea2:	d017      	beq.n	aed4 <_strtol_r+0xc4>
    aea4:	2137      	movs	r1, #55	; 0x37
    aea6:	2801      	cmp	r0, #1
    aea8:	d000      	beq.n	aeac <_strtol_r+0x9c>
    aeaa:	3120      	adds	r1, #32
    aeac:	1a64      	subs	r4, r4, r1
    aeae:	42b4      	cmp	r4, r6
    aeb0:	da10      	bge.n	aed4 <_strtol_r+0xc4>
    aeb2:	1c51      	adds	r1, r2, #1
    aeb4:	d00b      	beq.n	aece <_strtol_r+0xbe>
    aeb6:	42bb      	cmp	r3, r7
    aeb8:	d807      	bhi.n	aeca <_strtol_r+0xba>
    aeba:	d102      	bne.n	aec2 <_strtol_r+0xb2>
    aebc:	9a04      	ldr	r2, [sp, #16]
    aebe:	4294      	cmp	r4, r2
    aec0:	dc03      	bgt.n	aeca <_strtol_r+0xba>
    aec2:	4373      	muls	r3, r6
    aec4:	2201      	movs	r2, #1
    aec6:	18e3      	adds	r3, r4, r3
    aec8:	e001      	b.n	aece <_strtol_r+0xbe>
    aeca:	2201      	movs	r2, #1
    aecc:	4252      	negs	r2, r2
    aece:	782c      	ldrb	r4, [r5, #0]
    aed0:	3501      	adds	r5, #1
    aed2:	e7dd      	b.n	ae90 <_strtol_r+0x80>
    aed4:	1c18      	adds	r0, r3, #0
    aed6:	1c51      	adds	r1, r2, #1
    aed8:	d10b      	bne.n	aef2 <_strtol_r+0xe2>
    aeda:	9800      	ldr	r0, [sp, #0]
    aedc:	9a05      	ldr	r2, [sp, #20]
    aede:	1e43      	subs	r3, r0, #1
    aee0:	4198      	sbcs	r0, r3
    aee2:	4b12      	ldr	r3, [pc, #72]	; (af2c <_strtol_r+0x11c>)
    aee4:	18c0      	adds	r0, r0, r3
    aee6:	2322      	movs	r3, #34	; 0x22
    aee8:	6013      	str	r3, [r2, #0]
    aeea:	9b01      	ldr	r3, [sp, #4]
    aeec:	2b00      	cmp	r3, #0
    aeee:	d10a      	bne.n	af06 <_strtol_r+0xf6>
    aef0:	e017      	b.n	af22 <_strtol_r+0x112>
    aef2:	9900      	ldr	r1, [sp, #0]
    aef4:	2900      	cmp	r1, #0
    aef6:	d000      	beq.n	aefa <_strtol_r+0xea>
    aef8:	4258      	negs	r0, r3
    aefa:	9b01      	ldr	r3, [sp, #4]
    aefc:	2b00      	cmp	r3, #0
    aefe:	d010      	beq.n	af22 <_strtol_r+0x112>
    af00:	9b03      	ldr	r3, [sp, #12]
    af02:	2a00      	cmp	r2, #0
    af04:	d000      	beq.n	af08 <_strtol_r+0xf8>
    af06:	1e6b      	subs	r3, r5, #1
    af08:	9a01      	ldr	r2, [sp, #4]
    af0a:	6013      	str	r3, [r2, #0]
    af0c:	e009      	b.n	af22 <_strtol_r+0x112>
    af0e:	2430      	movs	r4, #48	; 0x30
    af10:	2e00      	cmp	r6, #0
    af12:	d1ac      	bne.n	ae6e <_strtol_r+0x5e>
    af14:	2608      	movs	r6, #8
    af16:	e7aa      	b.n	ae6e <_strtol_r+0x5e>
    af18:	260a      	movs	r6, #10
    af1a:	e7a8      	b.n	ae6e <_strtol_r+0x5e>
    af1c:	2c30      	cmp	r4, #48	; 0x30
    af1e:	d1a6      	bne.n	ae6e <_strtol_r+0x5e>
    af20:	e79d      	b.n	ae5e <_strtol_r+0x4e>
    af22:	b007      	add	sp, #28
    af24:	bdf0      	pop	{r4, r5, r6, r7, pc}
    af26:	46c0      	nop			; (mov r8, r8)
    af28:	20000138 	.word	0x20000138
    af2c:	7fffffff 	.word	0x7fffffff

0000af30 <_strtoul_r>:
    af30:	b5f0      	push	{r4, r5, r6, r7, lr}
    af32:	1c1e      	adds	r6, r3, #0
    af34:	4b3e      	ldr	r3, [pc, #248]	; (b030 <_strtoul_r+0x100>)
    af36:	b087      	sub	sp, #28
    af38:	681b      	ldr	r3, [r3, #0]
    af3a:	1c17      	adds	r7, r2, #0
    af3c:	9302      	str	r3, [sp, #8]
    af3e:	1c0b      	adds	r3, r1, #0
    af40:	9005      	str	r0, [sp, #20]
    af42:	9104      	str	r1, [sp, #16]
    af44:	781c      	ldrb	r4, [r3, #0]
    af46:	9a02      	ldr	r2, [sp, #8]
    af48:	1c5d      	adds	r5, r3, #1
    af4a:	1912      	adds	r2, r2, r4
    af4c:	7851      	ldrb	r1, [r2, #1]
    af4e:	2208      	movs	r2, #8
    af50:	400a      	ands	r2, r1
    af52:	d001      	beq.n	af58 <_strtoul_r+0x28>
    af54:	1c2b      	adds	r3, r5, #0
    af56:	e7f5      	b.n	af44 <_strtoul_r+0x14>
    af58:	2c2d      	cmp	r4, #45	; 0x2d
    af5a:	d104      	bne.n	af66 <_strtoul_r+0x36>
    af5c:	1c9d      	adds	r5, r3, #2
    af5e:	785c      	ldrb	r4, [r3, #1]
    af60:	2301      	movs	r3, #1
    af62:	9301      	str	r3, [sp, #4]
    af64:	e004      	b.n	af70 <_strtoul_r+0x40>
    af66:	9201      	str	r2, [sp, #4]
    af68:	2c2b      	cmp	r4, #43	; 0x2b
    af6a:	d101      	bne.n	af70 <_strtoul_r+0x40>
    af6c:	785c      	ldrb	r4, [r3, #1]
    af6e:	1c9d      	adds	r5, r3, #2
    af70:	2e00      	cmp	r6, #0
    af72:	d002      	beq.n	af7a <_strtoul_r+0x4a>
    af74:	2e10      	cmp	r6, #16
    af76:	d10a      	bne.n	af8e <_strtoul_r+0x5e>
    af78:	e054      	b.n	b024 <_strtoul_r+0xf4>
    af7a:	2c30      	cmp	r4, #48	; 0x30
    af7c:	d150      	bne.n	b020 <_strtoul_r+0xf0>
    af7e:	2220      	movs	r2, #32
    af80:	782b      	ldrb	r3, [r5, #0]
    af82:	4393      	bics	r3, r2
    af84:	2b58      	cmp	r3, #88	; 0x58
    af86:	d146      	bne.n	b016 <_strtoul_r+0xe6>
    af88:	2610      	movs	r6, #16
    af8a:	786c      	ldrb	r4, [r5, #1]
    af8c:	3502      	adds	r5, #2
    af8e:	2001      	movs	r0, #1
    af90:	1c31      	adds	r1, r6, #0
    af92:	4240      	negs	r0, r0
    af94:	f7fa f91c 	bl	51d0 <__aeabi_uidiv>
    af98:	9003      	str	r0, [sp, #12]
    af9a:	2001      	movs	r0, #1
    af9c:	1c31      	adds	r1, r6, #0
    af9e:	4240      	negs	r0, r0
    afa0:	f7fa f99c 	bl	52dc <__aeabi_uidivmod>
    afa4:	2200      	movs	r2, #0
    afa6:	468c      	mov	ip, r1
    afa8:	1c13      	adds	r3, r2, #0
    afaa:	9902      	ldr	r1, [sp, #8]
    afac:	1909      	adds	r1, r1, r4
    afae:	7849      	ldrb	r1, [r1, #1]
    afb0:	0748      	lsls	r0, r1, #29
    afb2:	d501      	bpl.n	afb8 <_strtoul_r+0x88>
    afb4:	3c30      	subs	r4, #48	; 0x30
    afb6:	e007      	b.n	afc8 <_strtoul_r+0x98>
    afb8:	2003      	movs	r0, #3
    afba:	4008      	ands	r0, r1
    afbc:	d017      	beq.n	afee <_strtoul_r+0xbe>
    afbe:	2137      	movs	r1, #55	; 0x37
    afc0:	2801      	cmp	r0, #1
    afc2:	d000      	beq.n	afc6 <_strtoul_r+0x96>
    afc4:	3120      	adds	r1, #32
    afc6:	1a64      	subs	r4, r4, r1
    afc8:	42b4      	cmp	r4, r6
    afca:	da10      	bge.n	afee <_strtoul_r+0xbe>
    afcc:	1c51      	adds	r1, r2, #1
    afce:	d00b      	beq.n	afe8 <_strtoul_r+0xb8>
    afd0:	9a03      	ldr	r2, [sp, #12]
    afd2:	4293      	cmp	r3, r2
    afd4:	d806      	bhi.n	afe4 <_strtoul_r+0xb4>
    afd6:	d101      	bne.n	afdc <_strtoul_r+0xac>
    afd8:	4564      	cmp	r4, ip
    afda:	dc03      	bgt.n	afe4 <_strtoul_r+0xb4>
    afdc:	4373      	muls	r3, r6
    afde:	2201      	movs	r2, #1
    afe0:	18e3      	adds	r3, r4, r3
    afe2:	e001      	b.n	afe8 <_strtoul_r+0xb8>
    afe4:	2201      	movs	r2, #1
    afe6:	4252      	negs	r2, r2
    afe8:	782c      	ldrb	r4, [r5, #0]
    afea:	3501      	adds	r5, #1
    afec:	e7dd      	b.n	afaa <_strtoul_r+0x7a>
    afee:	1c18      	adds	r0, r3, #0
    aff0:	1c51      	adds	r1, r2, #1
    aff2:	d104      	bne.n	affe <_strtoul_r+0xce>
    aff4:	2322      	movs	r3, #34	; 0x22
    aff6:	9905      	ldr	r1, [sp, #20]
    aff8:	1c10      	adds	r0, r2, #0
    affa:	600b      	str	r3, [r1, #0]
    affc:	e003      	b.n	b006 <_strtoul_r+0xd6>
    affe:	9901      	ldr	r1, [sp, #4]
    b000:	2900      	cmp	r1, #0
    b002:	d000      	beq.n	b006 <_strtoul_r+0xd6>
    b004:	4258      	negs	r0, r3
    b006:	2f00      	cmp	r7, #0
    b008:	d00f      	beq.n	b02a <_strtoul_r+0xfa>
    b00a:	9b04      	ldr	r3, [sp, #16]
    b00c:	2a00      	cmp	r2, #0
    b00e:	d000      	beq.n	b012 <_strtoul_r+0xe2>
    b010:	1e6b      	subs	r3, r5, #1
    b012:	603b      	str	r3, [r7, #0]
    b014:	e009      	b.n	b02a <_strtoul_r+0xfa>
    b016:	2430      	movs	r4, #48	; 0x30
    b018:	2e00      	cmp	r6, #0
    b01a:	d1b8      	bne.n	af8e <_strtoul_r+0x5e>
    b01c:	2608      	movs	r6, #8
    b01e:	e7b6      	b.n	af8e <_strtoul_r+0x5e>
    b020:	260a      	movs	r6, #10
    b022:	e7b4      	b.n	af8e <_strtoul_r+0x5e>
    b024:	2c30      	cmp	r4, #48	; 0x30
    b026:	d1b2      	bne.n	af8e <_strtoul_r+0x5e>
    b028:	e7a9      	b.n	af7e <_strtoul_r+0x4e>
    b02a:	b007      	add	sp, #28
    b02c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b02e:	46c0      	nop			; (mov r8, r8)
    b030:	20000138 	.word	0x20000138

0000b034 <__submore>:
    b034:	1c0b      	adds	r3, r1, #0
    b036:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    b038:	6b4d      	ldr	r5, [r1, #52]	; 0x34
    b03a:	3344      	adds	r3, #68	; 0x44
    b03c:	1c0c      	adds	r4, r1, #0
    b03e:	429d      	cmp	r5, r3
    b040:	d11b      	bne.n	b07a <__submore+0x46>
    b042:	2680      	movs	r6, #128	; 0x80
    b044:	00f6      	lsls	r6, r6, #3
    b046:	1c31      	adds	r1, r6, #0
    b048:	f7fd fcf8 	bl	8a3c <_malloc_r>
    b04c:	2800      	cmp	r0, #0
    b04e:	d102      	bne.n	b056 <__submore+0x22>
    b050:	2001      	movs	r0, #1
    b052:	4240      	negs	r0, r0
    b054:	e025      	b.n	b0a2 <__submore+0x6e>
    b056:	1c23      	adds	r3, r4, #0
    b058:	6360      	str	r0, [r4, #52]	; 0x34
    b05a:	63a6      	str	r6, [r4, #56]	; 0x38
    b05c:	3346      	adds	r3, #70	; 0x46
    b05e:	781a      	ldrb	r2, [r3, #0]
    b060:	4b10      	ldr	r3, [pc, #64]	; (b0a4 <__submore+0x70>)
    b062:	54c2      	strb	r2, [r0, r3]
    b064:	1c23      	adds	r3, r4, #0
    b066:	3345      	adds	r3, #69	; 0x45
    b068:	781a      	ldrb	r2, [r3, #0]
    b06a:	4b0f      	ldr	r3, [pc, #60]	; (b0a8 <__submore+0x74>)
    b06c:	54c2      	strb	r2, [r0, r3]
    b06e:	782a      	ldrb	r2, [r5, #0]
    b070:	4b0e      	ldr	r3, [pc, #56]	; (b0ac <__submore+0x78>)
    b072:	54c2      	strb	r2, [r0, r3]
    b074:	18c0      	adds	r0, r0, r3
    b076:	6020      	str	r0, [r4, #0]
    b078:	e012      	b.n	b0a0 <__submore+0x6c>
    b07a:	6b8e      	ldr	r6, [r1, #56]	; 0x38
    b07c:	1c29      	adds	r1, r5, #0
    b07e:	0073      	lsls	r3, r6, #1
    b080:	1c1a      	adds	r2, r3, #0
    b082:	9301      	str	r3, [sp, #4]
    b084:	f001 ff3f 	bl	cf06 <_realloc_r>
    b088:	1e05      	subs	r5, r0, #0
    b08a:	d0e1      	beq.n	b050 <__submore+0x1c>
    b08c:	1987      	adds	r7, r0, r6
    b08e:	1c38      	adds	r0, r7, #0
    b090:	1c29      	adds	r1, r5, #0
    b092:	1c32      	adds	r2, r6, #0
    b094:	f7fd fc7b 	bl	898e <memcpy>
    b098:	9b01      	ldr	r3, [sp, #4]
    b09a:	6027      	str	r7, [r4, #0]
    b09c:	6365      	str	r5, [r4, #52]	; 0x34
    b09e:	63a3      	str	r3, [r4, #56]	; 0x38
    b0a0:	2000      	movs	r0, #0
    b0a2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    b0a4:	000003ff 	.word	0x000003ff
    b0a8:	000003fe 	.word	0x000003fe
    b0ac:	000003fd 	.word	0x000003fd

0000b0b0 <__swbuf_r>:
    b0b0:	b570      	push	{r4, r5, r6, lr}
    b0b2:	1c05      	adds	r5, r0, #0
    b0b4:	1c0e      	adds	r6, r1, #0
    b0b6:	1c14      	adds	r4, r2, #0
    b0b8:	2800      	cmp	r0, #0
    b0ba:	d004      	beq.n	b0c6 <__swbuf_r+0x16>
    b0bc:	6983      	ldr	r3, [r0, #24]
    b0be:	2b00      	cmp	r3, #0
    b0c0:	d101      	bne.n	b0c6 <__swbuf_r+0x16>
    b0c2:	f7fd fa4d 	bl	8560 <__sinit>
    b0c6:	4b23      	ldr	r3, [pc, #140]	; (b154 <__swbuf_r+0xa4>)
    b0c8:	429c      	cmp	r4, r3
    b0ca:	d101      	bne.n	b0d0 <__swbuf_r+0x20>
    b0cc:	686c      	ldr	r4, [r5, #4]
    b0ce:	e008      	b.n	b0e2 <__swbuf_r+0x32>
    b0d0:	4b21      	ldr	r3, [pc, #132]	; (b158 <__swbuf_r+0xa8>)
    b0d2:	429c      	cmp	r4, r3
    b0d4:	d101      	bne.n	b0da <__swbuf_r+0x2a>
    b0d6:	68ac      	ldr	r4, [r5, #8]
    b0d8:	e003      	b.n	b0e2 <__swbuf_r+0x32>
    b0da:	4b20      	ldr	r3, [pc, #128]	; (b15c <__swbuf_r+0xac>)
    b0dc:	429c      	cmp	r4, r3
    b0de:	d100      	bne.n	b0e2 <__swbuf_r+0x32>
    b0e0:	68ec      	ldr	r4, [r5, #12]
    b0e2:	69a3      	ldr	r3, [r4, #24]
    b0e4:	60a3      	str	r3, [r4, #8]
    b0e6:	89a3      	ldrh	r3, [r4, #12]
    b0e8:	071b      	lsls	r3, r3, #28
    b0ea:	d50a      	bpl.n	b102 <__swbuf_r+0x52>
    b0ec:	6923      	ldr	r3, [r4, #16]
    b0ee:	2b00      	cmp	r3, #0
    b0f0:	d007      	beq.n	b102 <__swbuf_r+0x52>
    b0f2:	6823      	ldr	r3, [r4, #0]
    b0f4:	6922      	ldr	r2, [r4, #16]
    b0f6:	b2f6      	uxtb	r6, r6
    b0f8:	1a98      	subs	r0, r3, r2
    b0fa:	6963      	ldr	r3, [r4, #20]
    b0fc:	4298      	cmp	r0, r3
    b0fe:	db0f      	blt.n	b120 <__swbuf_r+0x70>
    b100:	e008      	b.n	b114 <__swbuf_r+0x64>
    b102:	1c28      	adds	r0, r5, #0
    b104:	1c21      	adds	r1, r4, #0
    b106:	f000 f83f 	bl	b188 <__swsetup_r>
    b10a:	2800      	cmp	r0, #0
    b10c:	d0f1      	beq.n	b0f2 <__swbuf_r+0x42>
    b10e:	2001      	movs	r0, #1
    b110:	4240      	negs	r0, r0
    b112:	e01d      	b.n	b150 <__swbuf_r+0xa0>
    b114:	1c28      	adds	r0, r5, #0
    b116:	1c21      	adds	r1, r4, #0
    b118:	f7fd f9a0 	bl	845c <_fflush_r>
    b11c:	2800      	cmp	r0, #0
    b11e:	d1f6      	bne.n	b10e <__swbuf_r+0x5e>
    b120:	68a3      	ldr	r3, [r4, #8]
    b122:	3001      	adds	r0, #1
    b124:	3b01      	subs	r3, #1
    b126:	60a3      	str	r3, [r4, #8]
    b128:	6823      	ldr	r3, [r4, #0]
    b12a:	1c5a      	adds	r2, r3, #1
    b12c:	6022      	str	r2, [r4, #0]
    b12e:	701e      	strb	r6, [r3, #0]
    b130:	6963      	ldr	r3, [r4, #20]
    b132:	4298      	cmp	r0, r3
    b134:	d005      	beq.n	b142 <__swbuf_r+0x92>
    b136:	89a3      	ldrh	r3, [r4, #12]
    b138:	1c30      	adds	r0, r6, #0
    b13a:	07db      	lsls	r3, r3, #31
    b13c:	d508      	bpl.n	b150 <__swbuf_r+0xa0>
    b13e:	2e0a      	cmp	r6, #10
    b140:	d106      	bne.n	b150 <__swbuf_r+0xa0>
    b142:	1c28      	adds	r0, r5, #0
    b144:	1c21      	adds	r1, r4, #0
    b146:	f7fd f989 	bl	845c <_fflush_r>
    b14a:	2800      	cmp	r0, #0
    b14c:	d1df      	bne.n	b10e <__swbuf_r+0x5e>
    b14e:	1c30      	adds	r0, r6, #0
    b150:	bd70      	pop	{r4, r5, r6, pc}
    b152:	46c0      	nop			; (mov r8, r8)
    b154:	0000e3a0 	.word	0x0000e3a0
    b158:	0000e3c0 	.word	0x0000e3c0
    b15c:	0000e3e0 	.word	0x0000e3e0

0000b160 <_write_r>:
    b160:	b538      	push	{r3, r4, r5, lr}
    b162:	1c05      	adds	r5, r0, #0
    b164:	2000      	movs	r0, #0
    b166:	4c07      	ldr	r4, [pc, #28]	; (b184 <_write_r+0x24>)
    b168:	6020      	str	r0, [r4, #0]
    b16a:	1c08      	adds	r0, r1, #0
    b16c:	1c11      	adds	r1, r2, #0
    b16e:	1c1a      	adds	r2, r3, #0
    b170:	f7f7 fcde 	bl	2b30 <_write>
    b174:	1c43      	adds	r3, r0, #1
    b176:	d103      	bne.n	b180 <_write_r+0x20>
    b178:	6823      	ldr	r3, [r4, #0]
    b17a:	2b00      	cmp	r3, #0
    b17c:	d000      	beq.n	b180 <_write_r+0x20>
    b17e:	602b      	str	r3, [r5, #0]
    b180:	bd38      	pop	{r3, r4, r5, pc}
    b182:	46c0      	nop			; (mov r8, r8)
    b184:	20004488 	.word	0x20004488

0000b188 <__swsetup_r>:
    b188:	4b35      	ldr	r3, [pc, #212]	; (b260 <__swsetup_r+0xd8>)
    b18a:	b570      	push	{r4, r5, r6, lr}
    b18c:	681d      	ldr	r5, [r3, #0]
    b18e:	1c06      	adds	r6, r0, #0
    b190:	1c0c      	adds	r4, r1, #0
    b192:	2d00      	cmp	r5, #0
    b194:	d005      	beq.n	b1a2 <__swsetup_r+0x1a>
    b196:	69ab      	ldr	r3, [r5, #24]
    b198:	2b00      	cmp	r3, #0
    b19a:	d102      	bne.n	b1a2 <__swsetup_r+0x1a>
    b19c:	1c28      	adds	r0, r5, #0
    b19e:	f7fd f9df 	bl	8560 <__sinit>
    b1a2:	4b30      	ldr	r3, [pc, #192]	; (b264 <__swsetup_r+0xdc>)
    b1a4:	429c      	cmp	r4, r3
    b1a6:	d101      	bne.n	b1ac <__swsetup_r+0x24>
    b1a8:	686c      	ldr	r4, [r5, #4]
    b1aa:	e008      	b.n	b1be <__swsetup_r+0x36>
    b1ac:	4b2e      	ldr	r3, [pc, #184]	; (b268 <__swsetup_r+0xe0>)
    b1ae:	429c      	cmp	r4, r3
    b1b0:	d101      	bne.n	b1b6 <__swsetup_r+0x2e>
    b1b2:	68ac      	ldr	r4, [r5, #8]
    b1b4:	e003      	b.n	b1be <__swsetup_r+0x36>
    b1b6:	4b2d      	ldr	r3, [pc, #180]	; (b26c <__swsetup_r+0xe4>)
    b1b8:	429c      	cmp	r4, r3
    b1ba:	d100      	bne.n	b1be <__swsetup_r+0x36>
    b1bc:	68ec      	ldr	r4, [r5, #12]
    b1be:	89a3      	ldrh	r3, [r4, #12]
    b1c0:	b29a      	uxth	r2, r3
    b1c2:	0711      	lsls	r1, r2, #28
    b1c4:	d423      	bmi.n	b20e <__swsetup_r+0x86>
    b1c6:	06d1      	lsls	r1, r2, #27
    b1c8:	d407      	bmi.n	b1da <__swsetup_r+0x52>
    b1ca:	2209      	movs	r2, #9
    b1cc:	2001      	movs	r0, #1
    b1ce:	6032      	str	r2, [r6, #0]
    b1d0:	3237      	adds	r2, #55	; 0x37
    b1d2:	4313      	orrs	r3, r2
    b1d4:	81a3      	strh	r3, [r4, #12]
    b1d6:	4240      	negs	r0, r0
    b1d8:	e040      	b.n	b25c <__swsetup_r+0xd4>
    b1da:	0753      	lsls	r3, r2, #29
    b1dc:	d513      	bpl.n	b206 <__swsetup_r+0x7e>
    b1de:	6b61      	ldr	r1, [r4, #52]	; 0x34
    b1e0:	2900      	cmp	r1, #0
    b1e2:	d008      	beq.n	b1f6 <__swsetup_r+0x6e>
    b1e4:	1c23      	adds	r3, r4, #0
    b1e6:	3344      	adds	r3, #68	; 0x44
    b1e8:	4299      	cmp	r1, r3
    b1ea:	d002      	beq.n	b1f2 <__swsetup_r+0x6a>
    b1ec:	1c30      	adds	r0, r6, #0
    b1ee:	f7fd fbdf 	bl	89b0 <_free_r>
    b1f2:	2300      	movs	r3, #0
    b1f4:	6363      	str	r3, [r4, #52]	; 0x34
    b1f6:	2224      	movs	r2, #36	; 0x24
    b1f8:	89a3      	ldrh	r3, [r4, #12]
    b1fa:	4393      	bics	r3, r2
    b1fc:	81a3      	strh	r3, [r4, #12]
    b1fe:	2300      	movs	r3, #0
    b200:	6063      	str	r3, [r4, #4]
    b202:	6923      	ldr	r3, [r4, #16]
    b204:	6023      	str	r3, [r4, #0]
    b206:	2208      	movs	r2, #8
    b208:	89a3      	ldrh	r3, [r4, #12]
    b20a:	4313      	orrs	r3, r2
    b20c:	81a3      	strh	r3, [r4, #12]
    b20e:	6923      	ldr	r3, [r4, #16]
    b210:	2b00      	cmp	r3, #0
    b212:	d10b      	bne.n	b22c <__swsetup_r+0xa4>
    b214:	23a0      	movs	r3, #160	; 0xa0
    b216:	89a2      	ldrh	r2, [r4, #12]
    b218:	009b      	lsls	r3, r3, #2
    b21a:	4013      	ands	r3, r2
    b21c:	2280      	movs	r2, #128	; 0x80
    b21e:	0092      	lsls	r2, r2, #2
    b220:	4293      	cmp	r3, r2
    b222:	d003      	beq.n	b22c <__swsetup_r+0xa4>
    b224:	1c30      	adds	r0, r6, #0
    b226:	1c21      	adds	r1, r4, #0
    b228:	f7fd fb3a 	bl	88a0 <__smakebuf_r>
    b22c:	2301      	movs	r3, #1
    b22e:	89a2      	ldrh	r2, [r4, #12]
    b230:	4013      	ands	r3, r2
    b232:	d005      	beq.n	b240 <__swsetup_r+0xb8>
    b234:	2300      	movs	r3, #0
    b236:	60a3      	str	r3, [r4, #8]
    b238:	6963      	ldr	r3, [r4, #20]
    b23a:	425b      	negs	r3, r3
    b23c:	61a3      	str	r3, [r4, #24]
    b23e:	e003      	b.n	b248 <__swsetup_r+0xc0>
    b240:	0791      	lsls	r1, r2, #30
    b242:	d400      	bmi.n	b246 <__swsetup_r+0xbe>
    b244:	6963      	ldr	r3, [r4, #20]
    b246:	60a3      	str	r3, [r4, #8]
    b248:	2000      	movs	r0, #0
    b24a:	6923      	ldr	r3, [r4, #16]
    b24c:	4283      	cmp	r3, r0
    b24e:	d105      	bne.n	b25c <__swsetup_r+0xd4>
    b250:	0613      	lsls	r3, r2, #24
    b252:	d503      	bpl.n	b25c <__swsetup_r+0xd4>
    b254:	2340      	movs	r3, #64	; 0x40
    b256:	431a      	orrs	r2, r3
    b258:	81a2      	strh	r2, [r4, #12]
    b25a:	3801      	subs	r0, #1
    b25c:	bd70      	pop	{r4, r5, r6, pc}
    b25e:	46c0      	nop			; (mov r8, r8)
    b260:	20000134 	.word	0x20000134
    b264:	0000e3a0 	.word	0x0000e3a0
    b268:	0000e3c0 	.word	0x0000e3c0
    b26c:	0000e3e0 	.word	0x0000e3e0

0000b270 <_close_r>:
    b270:	b538      	push	{r3, r4, r5, lr}
    b272:	2300      	movs	r3, #0
    b274:	4c06      	ldr	r4, [pc, #24]	; (b290 <_close_r+0x20>)
    b276:	1c05      	adds	r5, r0, #0
    b278:	1c08      	adds	r0, r1, #0
    b27a:	6023      	str	r3, [r4, #0]
    b27c:	f7f7 fc42 	bl	2b04 <_close>
    b280:	1c43      	adds	r3, r0, #1
    b282:	d103      	bne.n	b28c <_close_r+0x1c>
    b284:	6823      	ldr	r3, [r4, #0]
    b286:	2b00      	cmp	r3, #0
    b288:	d000      	beq.n	b28c <_close_r+0x1c>
    b28a:	602b      	str	r3, [r5, #0]
    b28c:	bd38      	pop	{r3, r4, r5, pc}
    b28e:	46c0      	nop			; (mov r8, r8)
    b290:	20004488 	.word	0x20004488

0000b294 <quorem>:
    b294:	b5f0      	push	{r4, r5, r6, r7, lr}
    b296:	6903      	ldr	r3, [r0, #16]
    b298:	690c      	ldr	r4, [r1, #16]
    b29a:	b089      	sub	sp, #36	; 0x24
    b29c:	2600      	movs	r6, #0
    b29e:	42a3      	cmp	r3, r4
    b2a0:	db7c      	blt.n	b39c <quorem+0x108>
    b2a2:	1c0b      	adds	r3, r1, #0
    b2a4:	3c01      	subs	r4, #1
    b2a6:	3314      	adds	r3, #20
    b2a8:	00a5      	lsls	r5, r4, #2
    b2aa:	9303      	str	r3, [sp, #12]
    b2ac:	195b      	adds	r3, r3, r5
    b2ae:	9304      	str	r3, [sp, #16]
    b2b0:	1c03      	adds	r3, r0, #0
    b2b2:	3314      	adds	r3, #20
    b2b4:	9301      	str	r3, [sp, #4]
    b2b6:	195d      	adds	r5, r3, r5
    b2b8:	9b04      	ldr	r3, [sp, #16]
    b2ba:	9107      	str	r1, [sp, #28]
    b2bc:	681b      	ldr	r3, [r3, #0]
    b2be:	9002      	str	r0, [sp, #8]
    b2c0:	1c59      	adds	r1, r3, #1
    b2c2:	6828      	ldr	r0, [r5, #0]
    b2c4:	9305      	str	r3, [sp, #20]
    b2c6:	f7f9 ff83 	bl	51d0 <__aeabi_uidiv>
    b2ca:	1e07      	subs	r7, r0, #0
    b2cc:	42b7      	cmp	r7, r6
    b2ce:	d035      	beq.n	b33c <quorem+0xa8>
    b2d0:	9b03      	ldr	r3, [sp, #12]
    b2d2:	9801      	ldr	r0, [sp, #4]
    b2d4:	469c      	mov	ip, r3
    b2d6:	9605      	str	r6, [sp, #20]
    b2d8:	4663      	mov	r3, ip
    b2da:	cb04      	ldmia	r3!, {r2}
    b2dc:	b291      	uxth	r1, r2
    b2de:	4379      	muls	r1, r7
    b2e0:	0c12      	lsrs	r2, r2, #16
    b2e2:	437a      	muls	r2, r7
    b2e4:	1871      	adds	r1, r6, r1
    b2e6:	0c0e      	lsrs	r6, r1, #16
    b2e8:	469c      	mov	ip, r3
    b2ea:	18b3      	adds	r3, r6, r2
    b2ec:	9306      	str	r3, [sp, #24]
    b2ee:	8802      	ldrh	r2, [r0, #0]
    b2f0:	0c1e      	lsrs	r6, r3, #16
    b2f2:	9b05      	ldr	r3, [sp, #20]
    b2f4:	b289      	uxth	r1, r1
    b2f6:	18d2      	adds	r2, r2, r3
    b2f8:	6803      	ldr	r3, [r0, #0]
    b2fa:	1a52      	subs	r2, r2, r1
    b2fc:	0c19      	lsrs	r1, r3, #16
    b2fe:	466b      	mov	r3, sp
    b300:	8b1b      	ldrh	r3, [r3, #24]
    b302:	1acb      	subs	r3, r1, r3
    b304:	1411      	asrs	r1, r2, #16
    b306:	185b      	adds	r3, r3, r1
    b308:	1419      	asrs	r1, r3, #16
    b30a:	b292      	uxth	r2, r2
    b30c:	041b      	lsls	r3, r3, #16
    b30e:	431a      	orrs	r2, r3
    b310:	9b04      	ldr	r3, [sp, #16]
    b312:	9105      	str	r1, [sp, #20]
    b314:	c004      	stmia	r0!, {r2}
    b316:	4563      	cmp	r3, ip
    b318:	d2de      	bcs.n	b2d8 <quorem+0x44>
    b31a:	682b      	ldr	r3, [r5, #0]
    b31c:	2b00      	cmp	r3, #0
    b31e:	d10d      	bne.n	b33c <quorem+0xa8>
    b320:	1c23      	adds	r3, r4, #0
    b322:	9a01      	ldr	r2, [sp, #4]
    b324:	3d04      	subs	r5, #4
    b326:	4295      	cmp	r5, r2
    b328:	d803      	bhi.n	b332 <quorem+0x9e>
    b32a:	9a02      	ldr	r2, [sp, #8]
    b32c:	1c1c      	adds	r4, r3, #0
    b32e:	6113      	str	r3, [r2, #16]
    b330:	e004      	b.n	b33c <quorem+0xa8>
    b332:	682a      	ldr	r2, [r5, #0]
    b334:	2a00      	cmp	r2, #0
    b336:	d1f8      	bne.n	b32a <quorem+0x96>
    b338:	3b01      	subs	r3, #1
    b33a:	e7f2      	b.n	b322 <quorem+0x8e>
    b33c:	9802      	ldr	r0, [sp, #8]
    b33e:	9907      	ldr	r1, [sp, #28]
    b340:	f001 fc22 	bl	cb88 <__mcmp>
    b344:	2800      	cmp	r0, #0
    b346:	db28      	blt.n	b39a <quorem+0x106>
    b348:	2000      	movs	r0, #0
    b34a:	9901      	ldr	r1, [sp, #4]
    b34c:	9a03      	ldr	r2, [sp, #12]
    b34e:	3701      	adds	r7, #1
    b350:	ca20      	ldmia	r2!, {r5}
    b352:	880b      	ldrh	r3, [r1, #0]
    b354:	1818      	adds	r0, r3, r0
    b356:	b2ab      	uxth	r3, r5
    b358:	1ac3      	subs	r3, r0, r3
    b35a:	6808      	ldr	r0, [r1, #0]
    b35c:	0c2d      	lsrs	r5, r5, #16
    b35e:	0c00      	lsrs	r0, r0, #16
    b360:	1b45      	subs	r5, r0, r5
    b362:	141e      	asrs	r6, r3, #16
    b364:	19ad      	adds	r5, r5, r6
    b366:	1428      	asrs	r0, r5, #16
    b368:	b29b      	uxth	r3, r3
    b36a:	042d      	lsls	r5, r5, #16
    b36c:	432b      	orrs	r3, r5
    b36e:	c108      	stmia	r1!, {r3}
    b370:	9b04      	ldr	r3, [sp, #16]
    b372:	4293      	cmp	r3, r2
    b374:	d2ec      	bcs.n	b350 <quorem+0xbc>
    b376:	9a01      	ldr	r2, [sp, #4]
    b378:	00a3      	lsls	r3, r4, #2
    b37a:	18d3      	adds	r3, r2, r3
    b37c:	681a      	ldr	r2, [r3, #0]
    b37e:	2a00      	cmp	r2, #0
    b380:	d10b      	bne.n	b39a <quorem+0x106>
    b382:	9a01      	ldr	r2, [sp, #4]
    b384:	3b04      	subs	r3, #4
    b386:	4293      	cmp	r3, r2
    b388:	d802      	bhi.n	b390 <quorem+0xfc>
    b38a:	9b02      	ldr	r3, [sp, #8]
    b38c:	611c      	str	r4, [r3, #16]
    b38e:	e004      	b.n	b39a <quorem+0x106>
    b390:	681a      	ldr	r2, [r3, #0]
    b392:	2a00      	cmp	r2, #0
    b394:	d1f9      	bne.n	b38a <quorem+0xf6>
    b396:	3c01      	subs	r4, #1
    b398:	e7f3      	b.n	b382 <quorem+0xee>
    b39a:	1c3e      	adds	r6, r7, #0
    b39c:	1c30      	adds	r0, r6, #0
    b39e:	b009      	add	sp, #36	; 0x24
    b3a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0000b3a4 <_dtoa_r>:
    b3a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    b3a6:	1c16      	adds	r6, r2, #0
    b3a8:	1c1f      	adds	r7, r3, #0
    b3aa:	6a44      	ldr	r4, [r0, #36]	; 0x24
    b3ac:	b09b      	sub	sp, #108	; 0x6c
    b3ae:	9008      	str	r0, [sp, #32]
    b3b0:	9d23      	ldr	r5, [sp, #140]	; 0x8c
    b3b2:	9606      	str	r6, [sp, #24]
    b3b4:	9707      	str	r7, [sp, #28]
    b3b6:	2c00      	cmp	r4, #0
    b3b8:	d108      	bne.n	b3cc <_dtoa_r+0x28>
    b3ba:	2010      	movs	r0, #16
    b3bc:	f7fd fac8 	bl	8950 <malloc>
    b3c0:	9b08      	ldr	r3, [sp, #32]
    b3c2:	6258      	str	r0, [r3, #36]	; 0x24
    b3c4:	6044      	str	r4, [r0, #4]
    b3c6:	6084      	str	r4, [r0, #8]
    b3c8:	6004      	str	r4, [r0, #0]
    b3ca:	60c4      	str	r4, [r0, #12]
    b3cc:	9b08      	ldr	r3, [sp, #32]
    b3ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    b3d0:	6819      	ldr	r1, [r3, #0]
    b3d2:	2900      	cmp	r1, #0
    b3d4:	d00b      	beq.n	b3ee <_dtoa_r+0x4a>
    b3d6:	685a      	ldr	r2, [r3, #4]
    b3d8:	2301      	movs	r3, #1
    b3da:	4093      	lsls	r3, r2
    b3dc:	604a      	str	r2, [r1, #4]
    b3de:	608b      	str	r3, [r1, #8]
    b3e0:	9808      	ldr	r0, [sp, #32]
    b3e2:	f001 f9b7 	bl	c754 <_Bfree>
    b3e6:	2200      	movs	r2, #0
    b3e8:	9b08      	ldr	r3, [sp, #32]
    b3ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    b3ec:	601a      	str	r2, [r3, #0]
    b3ee:	9b07      	ldr	r3, [sp, #28]
    b3f0:	2b00      	cmp	r3, #0
    b3f2:	da05      	bge.n	b400 <_dtoa_r+0x5c>
    b3f4:	2301      	movs	r3, #1
    b3f6:	602b      	str	r3, [r5, #0]
    b3f8:	007b      	lsls	r3, r7, #1
    b3fa:	085b      	lsrs	r3, r3, #1
    b3fc:	9307      	str	r3, [sp, #28]
    b3fe:	e001      	b.n	b404 <_dtoa_r+0x60>
    b400:	2300      	movs	r3, #0
    b402:	602b      	str	r3, [r5, #0]
    b404:	9c07      	ldr	r4, [sp, #28]
    b406:	4bc6      	ldr	r3, [pc, #792]	; (b720 <_dtoa_r+0x37c>)
    b408:	1c22      	adds	r2, r4, #0
    b40a:	9317      	str	r3, [sp, #92]	; 0x5c
    b40c:	401a      	ands	r2, r3
    b40e:	429a      	cmp	r2, r3
    b410:	d119      	bne.n	b446 <_dtoa_r+0xa2>
    b412:	4bc4      	ldr	r3, [pc, #784]	; (b724 <_dtoa_r+0x380>)
    b414:	9a22      	ldr	r2, [sp, #136]	; 0x88
    b416:	6013      	str	r3, [r2, #0]
    b418:	9a06      	ldr	r2, [sp, #24]
    b41a:	4bc3      	ldr	r3, [pc, #780]	; (b728 <_dtoa_r+0x384>)
    b41c:	2a00      	cmp	r2, #0
    b41e:	d102      	bne.n	b426 <_dtoa_r+0x82>
    b420:	0324      	lsls	r4, r4, #12
    b422:	d100      	bne.n	b426 <_dtoa_r+0x82>
    b424:	4bc1      	ldr	r3, [pc, #772]	; (b72c <_dtoa_r+0x388>)
    b426:	9a24      	ldr	r2, [sp, #144]	; 0x90
    b428:	1c18      	adds	r0, r3, #0
    b42a:	2a00      	cmp	r2, #0
    b42c:	d101      	bne.n	b432 <_dtoa_r+0x8e>
    b42e:	f000 fdb6 	bl	bf9e <_dtoa_r+0xbfa>
    b432:	78d9      	ldrb	r1, [r3, #3]
    b434:	1cda      	adds	r2, r3, #3
    b436:	2900      	cmp	r1, #0
    b438:	d000      	beq.n	b43c <_dtoa_r+0x98>
    b43a:	3205      	adds	r2, #5
    b43c:	9924      	ldr	r1, [sp, #144]	; 0x90
    b43e:	1c18      	adds	r0, r3, #0
    b440:	600a      	str	r2, [r1, #0]
    b442:	f000 fdac 	bl	bf9e <_dtoa_r+0xbfa>
    b446:	9e06      	ldr	r6, [sp, #24]
    b448:	9f07      	ldr	r7, [sp, #28]
    b44a:	2200      	movs	r2, #0
    b44c:	1c30      	adds	r0, r6, #0
    b44e:	1c39      	adds	r1, r7, #0
    b450:	2300      	movs	r3, #0
    b452:	f7fa f84f 	bl	54f4 <__aeabi_dcmpeq>
    b456:	1e05      	subs	r5, r0, #0
    b458:	d00e      	beq.n	b478 <_dtoa_r+0xd4>
    b45a:	2301      	movs	r3, #1
    b45c:	9a22      	ldr	r2, [sp, #136]	; 0x88
    b45e:	6013      	str	r3, [r2, #0]
    b460:	4bb3      	ldr	r3, [pc, #716]	; (b730 <_dtoa_r+0x38c>)
    b462:	9a24      	ldr	r2, [sp, #144]	; 0x90
    b464:	1c18      	adds	r0, r3, #0
    b466:	2a00      	cmp	r2, #0
    b468:	d101      	bne.n	b46e <_dtoa_r+0xca>
    b46a:	f000 fd98 	bl	bf9e <_dtoa_r+0xbfa>
    b46e:	4ab1      	ldr	r2, [pc, #708]	; (b734 <_dtoa_r+0x390>)
    b470:	9924      	ldr	r1, [sp, #144]	; 0x90
    b472:	600a      	str	r2, [r1, #0]
    b474:	f000 fd93 	bl	bf9e <_dtoa_r+0xbfa>
    b478:	ab19      	add	r3, sp, #100	; 0x64
    b47a:	9300      	str	r3, [sp, #0]
    b47c:	ab18      	add	r3, sp, #96	; 0x60
    b47e:	9301      	str	r3, [sp, #4]
    b480:	9808      	ldr	r0, [sp, #32]
    b482:	1c32      	adds	r2, r6, #0
    b484:	1c3b      	adds	r3, r7, #0
    b486:	f001 fc7b 	bl	cd80 <__d2b>
    b48a:	0061      	lsls	r1, r4, #1
    b48c:	900a      	str	r0, [sp, #40]	; 0x28
    b48e:	0d49      	lsrs	r1, r1, #21
    b490:	d009      	beq.n	b4a6 <_dtoa_r+0x102>
    b492:	0338      	lsls	r0, r7, #12
    b494:	4ca8      	ldr	r4, [pc, #672]	; (b738 <_dtoa_r+0x394>)
    b496:	0b00      	lsrs	r0, r0, #12
    b498:	4304      	orrs	r4, r0
    b49a:	48a8      	ldr	r0, [pc, #672]	; (b73c <_dtoa_r+0x398>)
    b49c:	1c32      	adds	r2, r6, #0
    b49e:	1c23      	adds	r3, r4, #0
    b4a0:	180e      	adds	r6, r1, r0
    b4a2:	9516      	str	r5, [sp, #88]	; 0x58
    b4a4:	e01c      	b.n	b4e0 <_dtoa_r+0x13c>
    b4a6:	9b18      	ldr	r3, [sp, #96]	; 0x60
    b4a8:	9a19      	ldr	r2, [sp, #100]	; 0x64
    b4aa:	189e      	adds	r6, r3, r2
    b4ac:	4ba4      	ldr	r3, [pc, #656]	; (b740 <_dtoa_r+0x39c>)
    b4ae:	429e      	cmp	r6, r3
    b4b0:	db09      	blt.n	b4c6 <_dtoa_r+0x122>
    b4b2:	4ba4      	ldr	r3, [pc, #656]	; (b744 <_dtoa_r+0x3a0>)
    b4b4:	18f0      	adds	r0, r6, r3
    b4b6:	9b06      	ldr	r3, [sp, #24]
    b4b8:	40c3      	lsrs	r3, r0
    b4ba:	1c18      	adds	r0, r3, #0
    b4bc:	4ba2      	ldr	r3, [pc, #648]	; (b748 <_dtoa_r+0x3a4>)
    b4be:	1b9b      	subs	r3, r3, r6
    b4c0:	409c      	lsls	r4, r3
    b4c2:	4320      	orrs	r0, r4
    b4c4:	e004      	b.n	b4d0 <_dtoa_r+0x12c>
    b4c6:	48a1      	ldr	r0, [pc, #644]	; (b74c <_dtoa_r+0x3a8>)
    b4c8:	9b06      	ldr	r3, [sp, #24]
    b4ca:	1b80      	subs	r0, r0, r6
    b4cc:	4083      	lsls	r3, r0
    b4ce:	1c18      	adds	r0, r3, #0
    b4d0:	f7fc fd7a 	bl	7fc8 <__aeabi_ui2d>
    b4d4:	4c9e      	ldr	r4, [pc, #632]	; (b750 <_dtoa_r+0x3ac>)
    b4d6:	1c02      	adds	r2, r0, #0
    b4d8:	190b      	adds	r3, r1, r4
    b4da:	2101      	movs	r1, #1
    b4dc:	3e01      	subs	r6, #1
    b4de:	9116      	str	r1, [sp, #88]	; 0x58
    b4e0:	1c10      	adds	r0, r2, #0
    b4e2:	1c19      	adds	r1, r3, #0
    b4e4:	2200      	movs	r2, #0
    b4e6:	4b9b      	ldr	r3, [pc, #620]	; (b754 <_dtoa_r+0x3b0>)
    b4e8:	f7fc f982 	bl	77f0 <__aeabi_dsub>
    b4ec:	4a9a      	ldr	r2, [pc, #616]	; (b758 <_dtoa_r+0x3b4>)
    b4ee:	4b9b      	ldr	r3, [pc, #620]	; (b75c <_dtoa_r+0x3b8>)
    b4f0:	f7fb fee4 	bl	72bc <__aeabi_dmul>
    b4f4:	4a9a      	ldr	r2, [pc, #616]	; (b760 <_dtoa_r+0x3bc>)
    b4f6:	4b9b      	ldr	r3, [pc, #620]	; (b764 <_dtoa_r+0x3c0>)
    b4f8:	f7fa ff7a 	bl	63f0 <__aeabi_dadd>
    b4fc:	1c04      	adds	r4, r0, #0
    b4fe:	1c30      	adds	r0, r6, #0
    b500:	1c0d      	adds	r5, r1, #0
    b502:	f7fc fd25 	bl	7f50 <__aeabi_i2d>
    b506:	4a98      	ldr	r2, [pc, #608]	; (b768 <_dtoa_r+0x3c4>)
    b508:	4b98      	ldr	r3, [pc, #608]	; (b76c <_dtoa_r+0x3c8>)
    b50a:	f7fb fed7 	bl	72bc <__aeabi_dmul>
    b50e:	1c02      	adds	r2, r0, #0
    b510:	1c0b      	adds	r3, r1, #0
    b512:	1c20      	adds	r0, r4, #0
    b514:	1c29      	adds	r1, r5, #0
    b516:	f7fa ff6b 	bl	63f0 <__aeabi_dadd>
    b51a:	1c04      	adds	r4, r0, #0
    b51c:	1c0d      	adds	r5, r1, #0
    b51e:	f7fc fce1 	bl	7ee4 <__aeabi_d2iz>
    b522:	1c29      	adds	r1, r5, #0
    b524:	9003      	str	r0, [sp, #12]
    b526:	2200      	movs	r2, #0
    b528:	1c20      	adds	r0, r4, #0
    b52a:	2300      	movs	r3, #0
    b52c:	f7f9 ffe8 	bl	5500 <__aeabi_dcmplt>
    b530:	2800      	cmp	r0, #0
    b532:	d00d      	beq.n	b550 <_dtoa_r+0x1ac>
    b534:	9803      	ldr	r0, [sp, #12]
    b536:	f7fc fd0b 	bl	7f50 <__aeabi_i2d>
    b53a:	1c02      	adds	r2, r0, #0
    b53c:	1c0b      	adds	r3, r1, #0
    b53e:	1c20      	adds	r0, r4, #0
    b540:	1c29      	adds	r1, r5, #0
    b542:	f7f9 ffd7 	bl	54f4 <__aeabi_dcmpeq>
    b546:	4243      	negs	r3, r0
    b548:	4143      	adcs	r3, r0
    b54a:	9a03      	ldr	r2, [sp, #12]
    b54c:	1ad3      	subs	r3, r2, r3
    b54e:	9303      	str	r3, [sp, #12]
    b550:	2301      	movs	r3, #1
    b552:	9313      	str	r3, [sp, #76]	; 0x4c
    b554:	9b03      	ldr	r3, [sp, #12]
    b556:	2b16      	cmp	r3, #22
    b558:	d811      	bhi.n	b57e <_dtoa_r+0x1da>
    b55a:	4a85      	ldr	r2, [pc, #532]	; (b770 <_dtoa_r+0x3cc>)
    b55c:	00db      	lsls	r3, r3, #3
    b55e:	18d3      	adds	r3, r2, r3
    b560:	6818      	ldr	r0, [r3, #0]
    b562:	6859      	ldr	r1, [r3, #4]
    b564:	9a06      	ldr	r2, [sp, #24]
    b566:	9b07      	ldr	r3, [sp, #28]
    b568:	f7f9 ffde 	bl	5528 <__aeabi_dcmpgt>
    b56c:	2800      	cmp	r0, #0
    b56e:	d005      	beq.n	b57c <_dtoa_r+0x1d8>
    b570:	9b03      	ldr	r3, [sp, #12]
    b572:	3b01      	subs	r3, #1
    b574:	9303      	str	r3, [sp, #12]
    b576:	2300      	movs	r3, #0
    b578:	9313      	str	r3, [sp, #76]	; 0x4c
    b57a:	e000      	b.n	b57e <_dtoa_r+0x1da>
    b57c:	9013      	str	r0, [sp, #76]	; 0x4c
    b57e:	9b18      	ldr	r3, [sp, #96]	; 0x60
    b580:	1b9e      	subs	r6, r3, r6
    b582:	2300      	movs	r3, #0
    b584:	930d      	str	r3, [sp, #52]	; 0x34
    b586:	3e01      	subs	r6, #1
    b588:	960e      	str	r6, [sp, #56]	; 0x38
    b58a:	d504      	bpl.n	b596 <_dtoa_r+0x1f2>
    b58c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b58e:	425b      	negs	r3, r3
    b590:	930d      	str	r3, [sp, #52]	; 0x34
    b592:	2300      	movs	r3, #0
    b594:	930e      	str	r3, [sp, #56]	; 0x38
    b596:	9b03      	ldr	r3, [sp, #12]
    b598:	2b00      	cmp	r3, #0
    b59a:	db08      	blt.n	b5ae <_dtoa_r+0x20a>
    b59c:	9a03      	ldr	r2, [sp, #12]
    b59e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b5a0:	4694      	mov	ip, r2
    b5a2:	4463      	add	r3, ip
    b5a4:	930e      	str	r3, [sp, #56]	; 0x38
    b5a6:	2300      	movs	r3, #0
    b5a8:	9212      	str	r2, [sp, #72]	; 0x48
    b5aa:	930f      	str	r3, [sp, #60]	; 0x3c
    b5ac:	e007      	b.n	b5be <_dtoa_r+0x21a>
    b5ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    b5b0:	9a03      	ldr	r2, [sp, #12]
    b5b2:	1a9b      	subs	r3, r3, r2
    b5b4:	930d      	str	r3, [sp, #52]	; 0x34
    b5b6:	4253      	negs	r3, r2
    b5b8:	930f      	str	r3, [sp, #60]	; 0x3c
    b5ba:	2300      	movs	r3, #0
    b5bc:	9312      	str	r3, [sp, #72]	; 0x48
    b5be:	9b20      	ldr	r3, [sp, #128]	; 0x80
    b5c0:	2501      	movs	r5, #1
    b5c2:	2b09      	cmp	r3, #9
    b5c4:	d827      	bhi.n	b616 <_dtoa_r+0x272>
    b5c6:	2b05      	cmp	r3, #5
    b5c8:	dd02      	ble.n	b5d0 <_dtoa_r+0x22c>
    b5ca:	2500      	movs	r5, #0
    b5cc:	3b04      	subs	r3, #4
    b5ce:	9320      	str	r3, [sp, #128]	; 0x80
    b5d0:	9b20      	ldr	r3, [sp, #128]	; 0x80
    b5d2:	1e98      	subs	r0, r3, #2
    b5d4:	2803      	cmp	r0, #3
    b5d6:	d823      	bhi.n	b620 <_dtoa_r+0x27c>
    b5d8:	f002 f806 	bl	d5e8 <__gnu_thumb1_case_uqi>
    b5dc:	10040e02 	.word	0x10040e02
    b5e0:	2300      	movs	r3, #0
    b5e2:	e000      	b.n	b5e6 <_dtoa_r+0x242>
    b5e4:	2301      	movs	r3, #1
    b5e6:	9310      	str	r3, [sp, #64]	; 0x40
    b5e8:	9b21      	ldr	r3, [sp, #132]	; 0x84
    b5ea:	2b00      	cmp	r3, #0
    b5ec:	dc21      	bgt.n	b632 <_dtoa_r+0x28e>
    b5ee:	2301      	movs	r3, #1
    b5f0:	930b      	str	r3, [sp, #44]	; 0x2c
    b5f2:	9309      	str	r3, [sp, #36]	; 0x24
    b5f4:	1c1a      	adds	r2, r3, #0
    b5f6:	e01a      	b.n	b62e <_dtoa_r+0x28a>
    b5f8:	2300      	movs	r3, #0
    b5fa:	e000      	b.n	b5fe <_dtoa_r+0x25a>
    b5fc:	2301      	movs	r3, #1
    b5fe:	9a03      	ldr	r2, [sp, #12]
    b600:	9310      	str	r3, [sp, #64]	; 0x40
    b602:	4694      	mov	ip, r2
    b604:	9b21      	ldr	r3, [sp, #132]	; 0x84
    b606:	4463      	add	r3, ip
    b608:	930b      	str	r3, [sp, #44]	; 0x2c
    b60a:	3301      	adds	r3, #1
    b60c:	9309      	str	r3, [sp, #36]	; 0x24
    b60e:	2b00      	cmp	r3, #0
    b610:	dc12      	bgt.n	b638 <_dtoa_r+0x294>
    b612:	2301      	movs	r3, #1
    b614:	e010      	b.n	b638 <_dtoa_r+0x294>
    b616:	2300      	movs	r3, #0
    b618:	9510      	str	r5, [sp, #64]	; 0x40
    b61a:	9320      	str	r3, [sp, #128]	; 0x80
    b61c:	3b01      	subs	r3, #1
    b61e:	e002      	b.n	b626 <_dtoa_r+0x282>
    b620:	2301      	movs	r3, #1
    b622:	9310      	str	r3, [sp, #64]	; 0x40
    b624:	3b02      	subs	r3, #2
    b626:	2200      	movs	r2, #0
    b628:	930b      	str	r3, [sp, #44]	; 0x2c
    b62a:	9309      	str	r3, [sp, #36]	; 0x24
    b62c:	3313      	adds	r3, #19
    b62e:	9221      	str	r2, [sp, #132]	; 0x84
    b630:	e002      	b.n	b638 <_dtoa_r+0x294>
    b632:	9b21      	ldr	r3, [sp, #132]	; 0x84
    b634:	930b      	str	r3, [sp, #44]	; 0x2c
    b636:	9309      	str	r3, [sp, #36]	; 0x24
    b638:	9a08      	ldr	r2, [sp, #32]
    b63a:	6a54      	ldr	r4, [r2, #36]	; 0x24
    b63c:	2200      	movs	r2, #0
    b63e:	6062      	str	r2, [r4, #4]
    b640:	3204      	adds	r2, #4
    b642:	1c11      	adds	r1, r2, #0
    b644:	3114      	adds	r1, #20
    b646:	4299      	cmp	r1, r3
    b648:	d804      	bhi.n	b654 <_dtoa_r+0x2b0>
    b64a:	6861      	ldr	r1, [r4, #4]
    b64c:	0052      	lsls	r2, r2, #1
    b64e:	3101      	adds	r1, #1
    b650:	6061      	str	r1, [r4, #4]
    b652:	e7f6      	b.n	b642 <_dtoa_r+0x29e>
    b654:	9808      	ldr	r0, [sp, #32]
    b656:	6861      	ldr	r1, [r4, #4]
    b658:	f001 f844 	bl	c6e4 <_Balloc>
    b65c:	9b08      	ldr	r3, [sp, #32]
    b65e:	6020      	str	r0, [r4, #0]
    b660:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    b662:	681b      	ldr	r3, [r3, #0]
    b664:	930c      	str	r3, [sp, #48]	; 0x30
    b666:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b668:	2b0e      	cmp	r3, #14
    b66a:	d900      	bls.n	b66e <_dtoa_r+0x2ca>
    b66c:	e188      	b.n	b980 <_dtoa_r+0x5dc>
    b66e:	2d00      	cmp	r5, #0
    b670:	d100      	bne.n	b674 <_dtoa_r+0x2d0>
    b672:	e185      	b.n	b980 <_dtoa_r+0x5dc>
    b674:	9b06      	ldr	r3, [sp, #24]
    b676:	9c07      	ldr	r4, [sp, #28]
    b678:	9314      	str	r3, [sp, #80]	; 0x50
    b67a:	9415      	str	r4, [sp, #84]	; 0x54
    b67c:	9b03      	ldr	r3, [sp, #12]
    b67e:	2b00      	cmp	r3, #0
    b680:	dd30      	ble.n	b6e4 <_dtoa_r+0x340>
    b682:	220f      	movs	r2, #15
    b684:	493a      	ldr	r1, [pc, #232]	; (b770 <_dtoa_r+0x3cc>)
    b686:	4013      	ands	r3, r2
    b688:	00db      	lsls	r3, r3, #3
    b68a:	18cb      	adds	r3, r1, r3
    b68c:	685c      	ldr	r4, [r3, #4]
    b68e:	681b      	ldr	r3, [r3, #0]
    b690:	9304      	str	r3, [sp, #16]
    b692:	9405      	str	r4, [sp, #20]
    b694:	9b03      	ldr	r3, [sp, #12]
    b696:	2702      	movs	r7, #2
    b698:	111d      	asrs	r5, r3, #4
    b69a:	06eb      	lsls	r3, r5, #27
    b69c:	d50a      	bpl.n	b6b4 <_dtoa_r+0x310>
    b69e:	9814      	ldr	r0, [sp, #80]	; 0x50
    b6a0:	9915      	ldr	r1, [sp, #84]	; 0x54
    b6a2:	4b34      	ldr	r3, [pc, #208]	; (b774 <_dtoa_r+0x3d0>)
    b6a4:	4015      	ands	r5, r2
    b6a6:	6a1a      	ldr	r2, [r3, #32]
    b6a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    b6aa:	f7fb f9c9 	bl	6a40 <__aeabi_ddiv>
    b6ae:	9006      	str	r0, [sp, #24]
    b6b0:	9107      	str	r1, [sp, #28]
    b6b2:	3701      	adds	r7, #1
    b6b4:	4c2f      	ldr	r4, [pc, #188]	; (b774 <_dtoa_r+0x3d0>)
    b6b6:	2d00      	cmp	r5, #0
    b6b8:	d00d      	beq.n	b6d6 <_dtoa_r+0x332>
    b6ba:	07eb      	lsls	r3, r5, #31
    b6bc:	d508      	bpl.n	b6d0 <_dtoa_r+0x32c>
    b6be:	9804      	ldr	r0, [sp, #16]
    b6c0:	9905      	ldr	r1, [sp, #20]
    b6c2:	6822      	ldr	r2, [r4, #0]
    b6c4:	6863      	ldr	r3, [r4, #4]
    b6c6:	f7fb fdf9 	bl	72bc <__aeabi_dmul>
    b6ca:	9004      	str	r0, [sp, #16]
    b6cc:	9105      	str	r1, [sp, #20]
    b6ce:	3701      	adds	r7, #1
    b6d0:	106d      	asrs	r5, r5, #1
    b6d2:	3408      	adds	r4, #8
    b6d4:	e7ef      	b.n	b6b6 <_dtoa_r+0x312>
    b6d6:	9806      	ldr	r0, [sp, #24]
    b6d8:	9907      	ldr	r1, [sp, #28]
    b6da:	9a04      	ldr	r2, [sp, #16]
    b6dc:	9b05      	ldr	r3, [sp, #20]
    b6de:	f7fb f9af 	bl	6a40 <__aeabi_ddiv>
    b6e2:	e049      	b.n	b778 <_dtoa_r+0x3d4>
    b6e4:	9b03      	ldr	r3, [sp, #12]
    b6e6:	2702      	movs	r7, #2
    b6e8:	425d      	negs	r5, r3
    b6ea:	2d00      	cmp	r5, #0
    b6ec:	d046      	beq.n	b77c <_dtoa_r+0x3d8>
    b6ee:	9814      	ldr	r0, [sp, #80]	; 0x50
    b6f0:	9915      	ldr	r1, [sp, #84]	; 0x54
    b6f2:	230f      	movs	r3, #15
    b6f4:	4a1e      	ldr	r2, [pc, #120]	; (b770 <_dtoa_r+0x3cc>)
    b6f6:	402b      	ands	r3, r5
    b6f8:	00db      	lsls	r3, r3, #3
    b6fa:	18d3      	adds	r3, r2, r3
    b6fc:	681a      	ldr	r2, [r3, #0]
    b6fe:	685b      	ldr	r3, [r3, #4]
    b700:	f7fb fddc 	bl	72bc <__aeabi_dmul>
    b704:	4c1b      	ldr	r4, [pc, #108]	; (b774 <_dtoa_r+0x3d0>)
    b706:	112d      	asrs	r5, r5, #4
    b708:	2d00      	cmp	r5, #0
    b70a:	d035      	beq.n	b778 <_dtoa_r+0x3d4>
    b70c:	07eb      	lsls	r3, r5, #31
    b70e:	d504      	bpl.n	b71a <_dtoa_r+0x376>
    b710:	6822      	ldr	r2, [r4, #0]
    b712:	6863      	ldr	r3, [r4, #4]
    b714:	3701      	adds	r7, #1
    b716:	f7fb fdd1 	bl	72bc <__aeabi_dmul>
    b71a:	106d      	asrs	r5, r5, #1
    b71c:	3408      	adds	r4, #8
    b71e:	e7f3      	b.n	b708 <_dtoa_r+0x364>
    b720:	7ff00000 	.word	0x7ff00000
    b724:	0000270f 	.word	0x0000270f
    b728:	0000e5d6 	.word	0x0000e5d6
    b72c:	0000e5cd 	.word	0x0000e5cd
    b730:	0000e472 	.word	0x0000e472
    b734:	0000e473 	.word	0x0000e473
    b738:	3ff00000 	.word	0x3ff00000
    b73c:	fffffc01 	.word	0xfffffc01
    b740:	fffffbef 	.word	0xfffffbef
    b744:	00000412 	.word	0x00000412
    b748:	fffffc0e 	.word	0xfffffc0e
    b74c:	fffffbee 	.word	0xfffffbee
    b750:	fe100000 	.word	0xfe100000
    b754:	3ff80000 	.word	0x3ff80000
    b758:	636f4361 	.word	0x636f4361
    b75c:	3fd287a7 	.word	0x3fd287a7
    b760:	8b60c8b3 	.word	0x8b60c8b3
    b764:	3fc68a28 	.word	0x3fc68a28
    b768:	509f79fb 	.word	0x509f79fb
    b76c:	3fd34413 	.word	0x3fd34413
    b770:	0000e5e8 	.word	0x0000e5e8
    b774:	0000e6b0 	.word	0x0000e6b0
    b778:	9006      	str	r0, [sp, #24]
    b77a:	9107      	str	r1, [sp, #28]
    b77c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    b77e:	2b00      	cmp	r3, #0
    b780:	d01e      	beq.n	b7c0 <_dtoa_r+0x41c>
    b782:	9c06      	ldr	r4, [sp, #24]
    b784:	9d07      	ldr	r5, [sp, #28]
    b786:	2200      	movs	r2, #0
    b788:	1c20      	adds	r0, r4, #0
    b78a:	1c29      	adds	r1, r5, #0
    b78c:	4bce      	ldr	r3, [pc, #824]	; (bac8 <_dtoa_r+0x724>)
    b78e:	f7f9 feb7 	bl	5500 <__aeabi_dcmplt>
    b792:	2800      	cmp	r0, #0
    b794:	d014      	beq.n	b7c0 <_dtoa_r+0x41c>
    b796:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b798:	2b00      	cmp	r3, #0
    b79a:	d011      	beq.n	b7c0 <_dtoa_r+0x41c>
    b79c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b79e:	2b00      	cmp	r3, #0
    b7a0:	dc00      	bgt.n	b7a4 <_dtoa_r+0x400>
    b7a2:	e0e9      	b.n	b978 <_dtoa_r+0x5d4>
    b7a4:	9b03      	ldr	r3, [sp, #12]
    b7a6:	1c29      	adds	r1, r5, #0
    b7a8:	3b01      	subs	r3, #1
    b7aa:	9311      	str	r3, [sp, #68]	; 0x44
    b7ac:	1c20      	adds	r0, r4, #0
    b7ae:	2200      	movs	r2, #0
    b7b0:	4bc6      	ldr	r3, [pc, #792]	; (bacc <_dtoa_r+0x728>)
    b7b2:	f7fb fd83 	bl	72bc <__aeabi_dmul>
    b7b6:	3701      	adds	r7, #1
    b7b8:	9006      	str	r0, [sp, #24]
    b7ba:	9107      	str	r1, [sp, #28]
    b7bc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    b7be:	e002      	b.n	b7c6 <_dtoa_r+0x422>
    b7c0:	9b03      	ldr	r3, [sp, #12]
    b7c2:	9d09      	ldr	r5, [sp, #36]	; 0x24
    b7c4:	9311      	str	r3, [sp, #68]	; 0x44
    b7c6:	1c38      	adds	r0, r7, #0
    b7c8:	9b06      	ldr	r3, [sp, #24]
    b7ca:	9c07      	ldr	r4, [sp, #28]
    b7cc:	9304      	str	r3, [sp, #16]
    b7ce:	9405      	str	r4, [sp, #20]
    b7d0:	f7fc fbbe 	bl	7f50 <__aeabi_i2d>
    b7d4:	9a04      	ldr	r2, [sp, #16]
    b7d6:	9b05      	ldr	r3, [sp, #20]
    b7d8:	f7fb fd70 	bl	72bc <__aeabi_dmul>
    b7dc:	2200      	movs	r2, #0
    b7de:	4bbc      	ldr	r3, [pc, #752]	; (bad0 <_dtoa_r+0x72c>)
    b7e0:	f7fa fe06 	bl	63f0 <__aeabi_dadd>
    b7e4:	9006      	str	r0, [sp, #24]
    b7e6:	9107      	str	r1, [sp, #28]
    b7e8:	9e06      	ldr	r6, [sp, #24]
    b7ea:	9f07      	ldr	r7, [sp, #28]
    b7ec:	9b07      	ldr	r3, [sp, #28]
    b7ee:	4ab9      	ldr	r2, [pc, #740]	; (bad4 <_dtoa_r+0x730>)
    b7f0:	189c      	adds	r4, r3, r2
    b7f2:	2d00      	cmp	r5, #0
    b7f4:	d11c      	bne.n	b830 <_dtoa_r+0x48c>
    b7f6:	9804      	ldr	r0, [sp, #16]
    b7f8:	9905      	ldr	r1, [sp, #20]
    b7fa:	2200      	movs	r2, #0
    b7fc:	4bb6      	ldr	r3, [pc, #728]	; (bad8 <_dtoa_r+0x734>)
    b7fe:	f7fb fff7 	bl	77f0 <__aeabi_dsub>
    b802:	1c32      	adds	r2, r6, #0
    b804:	1c23      	adds	r3, r4, #0
    b806:	9004      	str	r0, [sp, #16]
    b808:	9105      	str	r1, [sp, #20]
    b80a:	f7f9 fe8d 	bl	5528 <__aeabi_dcmpgt>
    b80e:	2800      	cmp	r0, #0
    b810:	d000      	beq.n	b814 <_dtoa_r+0x470>
    b812:	e263      	b.n	bcdc <_dtoa_r+0x938>
    b814:	9804      	ldr	r0, [sp, #16]
    b816:	9905      	ldr	r1, [sp, #20]
    b818:	1c32      	adds	r2, r6, #0
    b81a:	4eb0      	ldr	r6, [pc, #704]	; (badc <_dtoa_r+0x738>)
    b81c:	9c07      	ldr	r4, [sp, #28]
    b81e:	46b4      	mov	ip, r6
    b820:	4464      	add	r4, ip
    b822:	1c23      	adds	r3, r4, #0
    b824:	f7f9 fe6c 	bl	5500 <__aeabi_dcmplt>
    b828:	2800      	cmp	r0, #0
    b82a:	d000      	beq.n	b82e <_dtoa_r+0x48a>
    b82c:	e24c      	b.n	bcc8 <_dtoa_r+0x924>
    b82e:	e0a3      	b.n	b978 <_dtoa_r+0x5d4>
    b830:	4aab      	ldr	r2, [pc, #684]	; (bae0 <_dtoa_r+0x73c>)
    b832:	1e6b      	subs	r3, r5, #1
    b834:	9910      	ldr	r1, [sp, #64]	; 0x40
    b836:	00db      	lsls	r3, r3, #3
    b838:	18d3      	adds	r3, r2, r3
    b83a:	2900      	cmp	r1, #0
    b83c:	d04e      	beq.n	b8dc <_dtoa_r+0x538>
    b83e:	681a      	ldr	r2, [r3, #0]
    b840:	685b      	ldr	r3, [r3, #4]
    b842:	2000      	movs	r0, #0
    b844:	49a7      	ldr	r1, [pc, #668]	; (bae4 <_dtoa_r+0x740>)
    b846:	f7fb f8fb 	bl	6a40 <__aeabi_ddiv>
    b84a:	1c32      	adds	r2, r6, #0
    b84c:	1c23      	adds	r3, r4, #0
    b84e:	f7fb ffcf 	bl	77f0 <__aeabi_dsub>
    b852:	9e04      	ldr	r6, [sp, #16]
    b854:	9f05      	ldr	r7, [sp, #20]
    b856:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b858:	9006      	str	r0, [sp, #24]
    b85a:	9107      	str	r1, [sp, #28]
    b85c:	9304      	str	r3, [sp, #16]
    b85e:	1c39      	adds	r1, r7, #0
    b860:	1c30      	adds	r0, r6, #0
    b862:	f7fc fb3f 	bl	7ee4 <__aeabi_d2iz>
    b866:	1c04      	adds	r4, r0, #0
    b868:	f7fc fb72 	bl	7f50 <__aeabi_i2d>
    b86c:	1c02      	adds	r2, r0, #0
    b86e:	1c0b      	adds	r3, r1, #0
    b870:	1c30      	adds	r0, r6, #0
    b872:	1c39      	adds	r1, r7, #0
    b874:	f7fb ffbc 	bl	77f0 <__aeabi_dsub>
    b878:	9b04      	ldr	r3, [sp, #16]
    b87a:	3430      	adds	r4, #48	; 0x30
    b87c:	3301      	adds	r3, #1
    b87e:	9304      	str	r3, [sp, #16]
    b880:	3b01      	subs	r3, #1
    b882:	701c      	strb	r4, [r3, #0]
    b884:	9a06      	ldr	r2, [sp, #24]
    b886:	9b07      	ldr	r3, [sp, #28]
    b888:	1c06      	adds	r6, r0, #0
    b88a:	1c0f      	adds	r7, r1, #0
    b88c:	f7f9 fe38 	bl	5500 <__aeabi_dcmplt>
    b890:	2800      	cmp	r0, #0
    b892:	d000      	beq.n	b896 <_dtoa_r+0x4f2>
    b894:	e361      	b.n	bf5a <_dtoa_r+0xbb6>
    b896:	1c32      	adds	r2, r6, #0
    b898:	1c3b      	adds	r3, r7, #0
    b89a:	2000      	movs	r0, #0
    b89c:	498a      	ldr	r1, [pc, #552]	; (bac8 <_dtoa_r+0x724>)
    b89e:	f7fb ffa7 	bl	77f0 <__aeabi_dsub>
    b8a2:	9a06      	ldr	r2, [sp, #24]
    b8a4:	9b07      	ldr	r3, [sp, #28]
    b8a6:	f7f9 fe2b 	bl	5500 <__aeabi_dcmplt>
    b8aa:	2800      	cmp	r0, #0
    b8ac:	d000      	beq.n	b8b0 <_dtoa_r+0x50c>
    b8ae:	e0cd      	b.n	ba4c <_dtoa_r+0x6a8>
    b8b0:	9b04      	ldr	r3, [sp, #16]
    b8b2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    b8b4:	1a9b      	subs	r3, r3, r2
    b8b6:	42ab      	cmp	r3, r5
    b8b8:	da5e      	bge.n	b978 <_dtoa_r+0x5d4>
    b8ba:	9806      	ldr	r0, [sp, #24]
    b8bc:	9907      	ldr	r1, [sp, #28]
    b8be:	2200      	movs	r2, #0
    b8c0:	4b82      	ldr	r3, [pc, #520]	; (bacc <_dtoa_r+0x728>)
    b8c2:	f7fb fcfb 	bl	72bc <__aeabi_dmul>
    b8c6:	2200      	movs	r2, #0
    b8c8:	9006      	str	r0, [sp, #24]
    b8ca:	9107      	str	r1, [sp, #28]
    b8cc:	4b7f      	ldr	r3, [pc, #508]	; (bacc <_dtoa_r+0x728>)
    b8ce:	1c30      	adds	r0, r6, #0
    b8d0:	1c39      	adds	r1, r7, #0
    b8d2:	f7fb fcf3 	bl	72bc <__aeabi_dmul>
    b8d6:	1c06      	adds	r6, r0, #0
    b8d8:	1c0f      	adds	r7, r1, #0
    b8da:	e7c0      	b.n	b85e <_dtoa_r+0x4ba>
    b8dc:	6818      	ldr	r0, [r3, #0]
    b8de:	6859      	ldr	r1, [r3, #4]
    b8e0:	1c32      	adds	r2, r6, #0
    b8e2:	1c23      	adds	r3, r4, #0
    b8e4:	f7fb fcea 	bl	72bc <__aeabi_dmul>
    b8e8:	9e04      	ldr	r6, [sp, #16]
    b8ea:	9f05      	ldr	r7, [sp, #20]
    b8ec:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    b8ee:	9006      	str	r0, [sp, #24]
    b8f0:	9107      	str	r1, [sp, #28]
    b8f2:	1963      	adds	r3, r4, r5
    b8f4:	9304      	str	r3, [sp, #16]
    b8f6:	1c39      	adds	r1, r7, #0
    b8f8:	1c30      	adds	r0, r6, #0
    b8fa:	f7fc faf3 	bl	7ee4 <__aeabi_d2iz>
    b8fe:	1c05      	adds	r5, r0, #0
    b900:	f7fc fb26 	bl	7f50 <__aeabi_i2d>
    b904:	1c0b      	adds	r3, r1, #0
    b906:	1c02      	adds	r2, r0, #0
    b908:	1c39      	adds	r1, r7, #0
    b90a:	1c30      	adds	r0, r6, #0
    b90c:	f7fb ff70 	bl	77f0 <__aeabi_dsub>
    b910:	3530      	adds	r5, #48	; 0x30
    b912:	9b04      	ldr	r3, [sp, #16]
    b914:	7025      	strb	r5, [r4, #0]
    b916:	3401      	adds	r4, #1
    b918:	1c06      	adds	r6, r0, #0
    b91a:	1c0f      	adds	r7, r1, #0
    b91c:	42a3      	cmp	r3, r4
    b91e:	d124      	bne.n	b96a <_dtoa_r+0x5c6>
    b920:	2200      	movs	r2, #0
    b922:	9806      	ldr	r0, [sp, #24]
    b924:	9907      	ldr	r1, [sp, #28]
    b926:	4b6f      	ldr	r3, [pc, #444]	; (bae4 <_dtoa_r+0x740>)
    b928:	f7fa fd62 	bl	63f0 <__aeabi_dadd>
    b92c:	1c02      	adds	r2, r0, #0
    b92e:	1c0b      	adds	r3, r1, #0
    b930:	1c30      	adds	r0, r6, #0
    b932:	1c39      	adds	r1, r7, #0
    b934:	f7f9 fdf8 	bl	5528 <__aeabi_dcmpgt>
    b938:	2800      	cmp	r0, #0
    b93a:	d000      	beq.n	b93e <_dtoa_r+0x59a>
    b93c:	e086      	b.n	ba4c <_dtoa_r+0x6a8>
    b93e:	9a06      	ldr	r2, [sp, #24]
    b940:	9b07      	ldr	r3, [sp, #28]
    b942:	2000      	movs	r0, #0
    b944:	4967      	ldr	r1, [pc, #412]	; (bae4 <_dtoa_r+0x740>)
    b946:	f7fb ff53 	bl	77f0 <__aeabi_dsub>
    b94a:	1c02      	adds	r2, r0, #0
    b94c:	1c0b      	adds	r3, r1, #0
    b94e:	1c30      	adds	r0, r6, #0
    b950:	1c39      	adds	r1, r7, #0
    b952:	f7f9 fdd5 	bl	5500 <__aeabi_dcmplt>
    b956:	2800      	cmp	r0, #0
    b958:	d00e      	beq.n	b978 <_dtoa_r+0x5d4>
    b95a:	9b04      	ldr	r3, [sp, #16]
    b95c:	3b01      	subs	r3, #1
    b95e:	781a      	ldrb	r2, [r3, #0]
    b960:	2a30      	cmp	r2, #48	; 0x30
    b962:	d000      	beq.n	b966 <_dtoa_r+0x5c2>
    b964:	e2f9      	b.n	bf5a <_dtoa_r+0xbb6>
    b966:	9304      	str	r3, [sp, #16]
    b968:	e7f7      	b.n	b95a <_dtoa_r+0x5b6>
    b96a:	2200      	movs	r2, #0
    b96c:	4b57      	ldr	r3, [pc, #348]	; (bacc <_dtoa_r+0x728>)
    b96e:	f7fb fca5 	bl	72bc <__aeabi_dmul>
    b972:	1c06      	adds	r6, r0, #0
    b974:	1c0f      	adds	r7, r1, #0
    b976:	e7be      	b.n	b8f6 <_dtoa_r+0x552>
    b978:	9b14      	ldr	r3, [sp, #80]	; 0x50
    b97a:	9c15      	ldr	r4, [sp, #84]	; 0x54
    b97c:	9306      	str	r3, [sp, #24]
    b97e:	9407      	str	r4, [sp, #28]
    b980:	9b19      	ldr	r3, [sp, #100]	; 0x64
    b982:	2b00      	cmp	r3, #0
    b984:	da00      	bge.n	b988 <_dtoa_r+0x5e4>
    b986:	e086      	b.n	ba96 <_dtoa_r+0x6f2>
    b988:	9a03      	ldr	r2, [sp, #12]
    b98a:	2a0e      	cmp	r2, #14
    b98c:	dd00      	ble.n	b990 <_dtoa_r+0x5ec>
    b98e:	e082      	b.n	ba96 <_dtoa_r+0x6f2>
    b990:	00d3      	lsls	r3, r2, #3
    b992:	4a53      	ldr	r2, [pc, #332]	; (bae0 <_dtoa_r+0x73c>)
    b994:	18d3      	adds	r3, r2, r3
    b996:	681e      	ldr	r6, [r3, #0]
    b998:	685f      	ldr	r7, [r3, #4]
    b99a:	9b21      	ldr	r3, [sp, #132]	; 0x84
    b99c:	2b00      	cmp	r3, #0
    b99e:	da14      	bge.n	b9ca <_dtoa_r+0x626>
    b9a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b9a2:	2b00      	cmp	r3, #0
    b9a4:	dc11      	bgt.n	b9ca <_dtoa_r+0x626>
    b9a6:	d000      	beq.n	b9aa <_dtoa_r+0x606>
    b9a8:	e190      	b.n	bccc <_dtoa_r+0x928>
    b9aa:	1c30      	adds	r0, r6, #0
    b9ac:	1c39      	adds	r1, r7, #0
    b9ae:	2200      	movs	r2, #0
    b9b0:	4b49      	ldr	r3, [pc, #292]	; (bad8 <_dtoa_r+0x734>)
    b9b2:	f7fb fc83 	bl	72bc <__aeabi_dmul>
    b9b6:	9a06      	ldr	r2, [sp, #24]
    b9b8:	9b07      	ldr	r3, [sp, #28]
    b9ba:	f7f9 fdbf 	bl	553c <__aeabi_dcmpge>
    b9be:	9f09      	ldr	r7, [sp, #36]	; 0x24
    b9c0:	1c3e      	adds	r6, r7, #0
    b9c2:	2800      	cmp	r0, #0
    b9c4:	d000      	beq.n	b9c8 <_dtoa_r+0x624>
    b9c6:	e183      	b.n	bcd0 <_dtoa_r+0x92c>
    b9c8:	e18c      	b.n	bce4 <_dtoa_r+0x940>
    b9ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b9cc:	9c06      	ldr	r4, [sp, #24]
    b9ce:	9d07      	ldr	r5, [sp, #28]
    b9d0:	9304      	str	r3, [sp, #16]
    b9d2:	1c32      	adds	r2, r6, #0
    b9d4:	1c3b      	adds	r3, r7, #0
    b9d6:	1c20      	adds	r0, r4, #0
    b9d8:	1c29      	adds	r1, r5, #0
    b9da:	f7fb f831 	bl	6a40 <__aeabi_ddiv>
    b9de:	f7fc fa81 	bl	7ee4 <__aeabi_d2iz>
    b9e2:	9006      	str	r0, [sp, #24]
    b9e4:	f7fc fab4 	bl	7f50 <__aeabi_i2d>
    b9e8:	1c32      	adds	r2, r6, #0
    b9ea:	1c3b      	adds	r3, r7, #0
    b9ec:	f7fb fc66 	bl	72bc <__aeabi_dmul>
    b9f0:	1c02      	adds	r2, r0, #0
    b9f2:	1c0b      	adds	r3, r1, #0
    b9f4:	1c20      	adds	r0, r4, #0
    b9f6:	1c29      	adds	r1, r5, #0
    b9f8:	f7fb fefa 	bl	77f0 <__aeabi_dsub>
    b9fc:	1c0b      	adds	r3, r1, #0
    b9fe:	9904      	ldr	r1, [sp, #16]
    ba00:	1c02      	adds	r2, r0, #0
    ba02:	9806      	ldr	r0, [sp, #24]
    ba04:	3101      	adds	r1, #1
    ba06:	9104      	str	r1, [sp, #16]
    ba08:	3030      	adds	r0, #48	; 0x30
    ba0a:	3901      	subs	r1, #1
    ba0c:	7008      	strb	r0, [r1, #0]
    ba0e:	980c      	ldr	r0, [sp, #48]	; 0x30
    ba10:	9904      	ldr	r1, [sp, #16]
    ba12:	1a09      	subs	r1, r1, r0
    ba14:	9809      	ldr	r0, [sp, #36]	; 0x24
    ba16:	4281      	cmp	r1, r0
    ba18:	d12e      	bne.n	ba78 <_dtoa_r+0x6d4>
    ba1a:	1c10      	adds	r0, r2, #0
    ba1c:	1c19      	adds	r1, r3, #0
    ba1e:	f7fa fce7 	bl	63f0 <__aeabi_dadd>
    ba22:	1c32      	adds	r2, r6, #0
    ba24:	1c3b      	adds	r3, r7, #0
    ba26:	1c04      	adds	r4, r0, #0
    ba28:	1c0d      	adds	r5, r1, #0
    ba2a:	f7f9 fd7d 	bl	5528 <__aeabi_dcmpgt>
    ba2e:	2800      	cmp	r0, #0
    ba30:	d110      	bne.n	ba54 <_dtoa_r+0x6b0>
    ba32:	1c20      	adds	r0, r4, #0
    ba34:	1c29      	adds	r1, r5, #0
    ba36:	1c32      	adds	r2, r6, #0
    ba38:	1c3b      	adds	r3, r7, #0
    ba3a:	f7f9 fd5b 	bl	54f4 <__aeabi_dcmpeq>
    ba3e:	2800      	cmp	r0, #0
    ba40:	d100      	bne.n	ba44 <_dtoa_r+0x6a0>
    ba42:	e28c      	b.n	bf5e <_dtoa_r+0xbba>
    ba44:	9b06      	ldr	r3, [sp, #24]
    ba46:	07db      	lsls	r3, r3, #31
    ba48:	d404      	bmi.n	ba54 <_dtoa_r+0x6b0>
    ba4a:	e288      	b.n	bf5e <_dtoa_r+0xbba>
    ba4c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    ba4e:	9303      	str	r3, [sp, #12]
    ba50:	e000      	b.n	ba54 <_dtoa_r+0x6b0>
    ba52:	9304      	str	r3, [sp, #16]
    ba54:	9b04      	ldr	r3, [sp, #16]
    ba56:	3b01      	subs	r3, #1
    ba58:	781a      	ldrb	r2, [r3, #0]
    ba5a:	2a39      	cmp	r2, #57	; 0x39
    ba5c:	d108      	bne.n	ba70 <_dtoa_r+0x6cc>
    ba5e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    ba60:	4293      	cmp	r3, r2
    ba62:	d1f6      	bne.n	ba52 <_dtoa_r+0x6ae>
    ba64:	9b03      	ldr	r3, [sp, #12]
    ba66:	3301      	adds	r3, #1
    ba68:	9303      	str	r3, [sp, #12]
    ba6a:	2330      	movs	r3, #48	; 0x30
    ba6c:	7013      	strb	r3, [r2, #0]
    ba6e:	1c13      	adds	r3, r2, #0
    ba70:	781a      	ldrb	r2, [r3, #0]
    ba72:	3201      	adds	r2, #1
    ba74:	701a      	strb	r2, [r3, #0]
    ba76:	e272      	b.n	bf5e <_dtoa_r+0xbba>
    ba78:	1c10      	adds	r0, r2, #0
    ba7a:	1c19      	adds	r1, r3, #0
    ba7c:	2200      	movs	r2, #0
    ba7e:	4b13      	ldr	r3, [pc, #76]	; (bacc <_dtoa_r+0x728>)
    ba80:	f7fb fc1c 	bl	72bc <__aeabi_dmul>
    ba84:	2200      	movs	r2, #0
    ba86:	2300      	movs	r3, #0
    ba88:	1c04      	adds	r4, r0, #0
    ba8a:	1c0d      	adds	r5, r1, #0
    ba8c:	f7f9 fd32 	bl	54f4 <__aeabi_dcmpeq>
    ba90:	2800      	cmp	r0, #0
    ba92:	d09e      	beq.n	b9d2 <_dtoa_r+0x62e>
    ba94:	e263      	b.n	bf5e <_dtoa_r+0xbba>
    ba96:	9a10      	ldr	r2, [sp, #64]	; 0x40
    ba98:	2a00      	cmp	r2, #0
    ba9a:	d044      	beq.n	bb26 <_dtoa_r+0x782>
    ba9c:	9a20      	ldr	r2, [sp, #128]	; 0x80
    ba9e:	2a01      	cmp	r2, #1
    baa0:	dc0b      	bgt.n	baba <_dtoa_r+0x716>
    baa2:	9a16      	ldr	r2, [sp, #88]	; 0x58
    baa4:	2a00      	cmp	r2, #0
    baa6:	d002      	beq.n	baae <_dtoa_r+0x70a>
    baa8:	4a0f      	ldr	r2, [pc, #60]	; (bae8 <_dtoa_r+0x744>)
    baaa:	189b      	adds	r3, r3, r2
    baac:	e002      	b.n	bab4 <_dtoa_r+0x710>
    baae:	2336      	movs	r3, #54	; 0x36
    bab0:	9a18      	ldr	r2, [sp, #96]	; 0x60
    bab2:	1a9b      	subs	r3, r3, r2
    bab4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
    bab6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    bab8:	e029      	b.n	bb0e <_dtoa_r+0x76a>
    baba:	9b09      	ldr	r3, [sp, #36]	; 0x24
    babc:	1e5d      	subs	r5, r3, #1
    babe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    bac0:	42ab      	cmp	r3, r5
    bac2:	db13      	blt.n	baec <_dtoa_r+0x748>
    bac4:	1b5d      	subs	r5, r3, r5
    bac6:	e018      	b.n	bafa <_dtoa_r+0x756>
    bac8:	3ff00000 	.word	0x3ff00000
    bacc:	40240000 	.word	0x40240000
    bad0:	401c0000 	.word	0x401c0000
    bad4:	fcc00000 	.word	0xfcc00000
    bad8:	40140000 	.word	0x40140000
    badc:	7cc00000 	.word	0x7cc00000
    bae0:	0000e5e8 	.word	0x0000e5e8
    bae4:	3fe00000 	.word	0x3fe00000
    bae8:	00000433 	.word	0x00000433
    baec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    baee:	950f      	str	r5, [sp, #60]	; 0x3c
    baf0:	1aea      	subs	r2, r5, r3
    baf2:	2500      	movs	r5, #0
    baf4:	9b12      	ldr	r3, [sp, #72]	; 0x48
    baf6:	189b      	adds	r3, r3, r2
    baf8:	9312      	str	r3, [sp, #72]	; 0x48
    bafa:	9b09      	ldr	r3, [sp, #36]	; 0x24
    bafc:	2b00      	cmp	r3, #0
    bafe:	da04      	bge.n	bb0a <_dtoa_r+0x766>
    bb00:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    bb02:	9a09      	ldr	r2, [sp, #36]	; 0x24
    bb04:	1a9c      	subs	r4, r3, r2
    bb06:	2300      	movs	r3, #0
    bb08:	e001      	b.n	bb0e <_dtoa_r+0x76a>
    bb0a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    bb0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    bb0e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    bb10:	9808      	ldr	r0, [sp, #32]
    bb12:	18d2      	adds	r2, r2, r3
    bb14:	920d      	str	r2, [sp, #52]	; 0x34
    bb16:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    bb18:	2101      	movs	r1, #1
    bb1a:	18d3      	adds	r3, r2, r3
    bb1c:	930e      	str	r3, [sp, #56]	; 0x38
    bb1e:	f000 fef8 	bl	c912 <__i2b>
    bb22:	1c06      	adds	r6, r0, #0
    bb24:	e002      	b.n	bb2c <_dtoa_r+0x788>
    bb26:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
    bb28:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    bb2a:	9e10      	ldr	r6, [sp, #64]	; 0x40
    bb2c:	2c00      	cmp	r4, #0
    bb2e:	d00c      	beq.n	bb4a <_dtoa_r+0x7a6>
    bb30:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    bb32:	2b00      	cmp	r3, #0
    bb34:	dd09      	ble.n	bb4a <_dtoa_r+0x7a6>
    bb36:	42a3      	cmp	r3, r4
    bb38:	dd00      	ble.n	bb3c <_dtoa_r+0x798>
    bb3a:	1c23      	adds	r3, r4, #0
    bb3c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    bb3e:	1ae4      	subs	r4, r4, r3
    bb40:	1ad2      	subs	r2, r2, r3
    bb42:	920d      	str	r2, [sp, #52]	; 0x34
    bb44:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    bb46:	1ad3      	subs	r3, r2, r3
    bb48:	930e      	str	r3, [sp, #56]	; 0x38
    bb4a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    bb4c:	2b00      	cmp	r3, #0
    bb4e:	dd21      	ble.n	bb94 <_dtoa_r+0x7f0>
    bb50:	9b10      	ldr	r3, [sp, #64]	; 0x40
    bb52:	2b00      	cmp	r3, #0
    bb54:	d018      	beq.n	bb88 <_dtoa_r+0x7e4>
    bb56:	2d00      	cmp	r5, #0
    bb58:	dd10      	ble.n	bb7c <_dtoa_r+0x7d8>
    bb5a:	1c31      	adds	r1, r6, #0
    bb5c:	1c2a      	adds	r2, r5, #0
    bb5e:	9808      	ldr	r0, [sp, #32]
    bb60:	f000 ff6e 	bl	ca40 <__pow5mult>
    bb64:	1c06      	adds	r6, r0, #0
    bb66:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    bb68:	1c31      	adds	r1, r6, #0
    bb6a:	9808      	ldr	r0, [sp, #32]
    bb6c:	f000 feda 	bl	c924 <__multiply>
    bb70:	1c07      	adds	r7, r0, #0
    bb72:	990a      	ldr	r1, [sp, #40]	; 0x28
    bb74:	9808      	ldr	r0, [sp, #32]
    bb76:	f000 fded 	bl	c754 <_Bfree>
    bb7a:	970a      	str	r7, [sp, #40]	; 0x28
    bb7c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    bb7e:	1b5a      	subs	r2, r3, r5
    bb80:	d008      	beq.n	bb94 <_dtoa_r+0x7f0>
    bb82:	9808      	ldr	r0, [sp, #32]
    bb84:	990a      	ldr	r1, [sp, #40]	; 0x28
    bb86:	e002      	b.n	bb8e <_dtoa_r+0x7ea>
    bb88:	9808      	ldr	r0, [sp, #32]
    bb8a:	990a      	ldr	r1, [sp, #40]	; 0x28
    bb8c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    bb8e:	f000 ff57 	bl	ca40 <__pow5mult>
    bb92:	900a      	str	r0, [sp, #40]	; 0x28
    bb94:	9808      	ldr	r0, [sp, #32]
    bb96:	2101      	movs	r1, #1
    bb98:	f000 febb 	bl	c912 <__i2b>
    bb9c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    bb9e:	1c07      	adds	r7, r0, #0
    bba0:	2b00      	cmp	r3, #0
    bba2:	dd0a      	ble.n	bbba <_dtoa_r+0x816>
    bba4:	1c39      	adds	r1, r7, #0
    bba6:	1c1a      	adds	r2, r3, #0
    bba8:	9808      	ldr	r0, [sp, #32]
    bbaa:	f000 ff49 	bl	ca40 <__pow5mult>
    bbae:	9b20      	ldr	r3, [sp, #128]	; 0x80
    bbb0:	1c07      	adds	r7, r0, #0
    bbb2:	2500      	movs	r5, #0
    bbb4:	2b01      	cmp	r3, #1
    bbb6:	dc1b      	bgt.n	bbf0 <_dtoa_r+0x84c>
    bbb8:	e003      	b.n	bbc2 <_dtoa_r+0x81e>
    bbba:	9b20      	ldr	r3, [sp, #128]	; 0x80
    bbbc:	2500      	movs	r5, #0
    bbbe:	2b01      	cmp	r3, #1
    bbc0:	dc12      	bgt.n	bbe8 <_dtoa_r+0x844>
    bbc2:	2500      	movs	r5, #0
    bbc4:	9b06      	ldr	r3, [sp, #24]
    bbc6:	42ab      	cmp	r3, r5
    bbc8:	d10e      	bne.n	bbe8 <_dtoa_r+0x844>
    bbca:	9b07      	ldr	r3, [sp, #28]
    bbcc:	031b      	lsls	r3, r3, #12
    bbce:	42ab      	cmp	r3, r5
    bbd0:	d10a      	bne.n	bbe8 <_dtoa_r+0x844>
    bbd2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    bbd4:	9a07      	ldr	r2, [sp, #28]
    bbd6:	4213      	tst	r3, r2
    bbd8:	d006      	beq.n	bbe8 <_dtoa_r+0x844>
    bbda:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    bbdc:	3501      	adds	r5, #1
    bbde:	3301      	adds	r3, #1
    bbe0:	930d      	str	r3, [sp, #52]	; 0x34
    bbe2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    bbe4:	3301      	adds	r3, #1
    bbe6:	930e      	str	r3, [sp, #56]	; 0x38
    bbe8:	9b12      	ldr	r3, [sp, #72]	; 0x48
    bbea:	2001      	movs	r0, #1
    bbec:	2b00      	cmp	r3, #0
    bbee:	d008      	beq.n	bc02 <_dtoa_r+0x85e>
    bbf0:	693b      	ldr	r3, [r7, #16]
    bbf2:	3303      	adds	r3, #3
    bbf4:	009b      	lsls	r3, r3, #2
    bbf6:	18fb      	adds	r3, r7, r3
    bbf8:	6858      	ldr	r0, [r3, #4]
    bbfa:	f000 fe40 	bl	c87e <__hi0bits>
    bbfe:	2320      	movs	r3, #32
    bc00:	1a18      	subs	r0, r3, r0
    bc02:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    bc04:	18c0      	adds	r0, r0, r3
    bc06:	231f      	movs	r3, #31
    bc08:	4018      	ands	r0, r3
    bc0a:	d009      	beq.n	bc20 <_dtoa_r+0x87c>
    bc0c:	3301      	adds	r3, #1
    bc0e:	1a1b      	subs	r3, r3, r0
    bc10:	2b04      	cmp	r3, #4
    bc12:	dd02      	ble.n	bc1a <_dtoa_r+0x876>
    bc14:	231c      	movs	r3, #28
    bc16:	1a18      	subs	r0, r3, r0
    bc18:	e003      	b.n	bc22 <_dtoa_r+0x87e>
    bc1a:	2b04      	cmp	r3, #4
    bc1c:	d008      	beq.n	bc30 <_dtoa_r+0x88c>
    bc1e:	1c18      	adds	r0, r3, #0
    bc20:	301c      	adds	r0, #28
    bc22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    bc24:	1824      	adds	r4, r4, r0
    bc26:	181b      	adds	r3, r3, r0
    bc28:	930d      	str	r3, [sp, #52]	; 0x34
    bc2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    bc2c:	181b      	adds	r3, r3, r0
    bc2e:	930e      	str	r3, [sp, #56]	; 0x38
    bc30:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    bc32:	2b00      	cmp	r3, #0
    bc34:	dd05      	ble.n	bc42 <_dtoa_r+0x89e>
    bc36:	9808      	ldr	r0, [sp, #32]
    bc38:	990a      	ldr	r1, [sp, #40]	; 0x28
    bc3a:	1c1a      	adds	r2, r3, #0
    bc3c:	f000 ff52 	bl	cae4 <__lshift>
    bc40:	900a      	str	r0, [sp, #40]	; 0x28
    bc42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    bc44:	2b00      	cmp	r3, #0
    bc46:	dd05      	ble.n	bc54 <_dtoa_r+0x8b0>
    bc48:	1c39      	adds	r1, r7, #0
    bc4a:	9808      	ldr	r0, [sp, #32]
    bc4c:	1c1a      	adds	r2, r3, #0
    bc4e:	f000 ff49 	bl	cae4 <__lshift>
    bc52:	1c07      	adds	r7, r0, #0
    bc54:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    bc56:	2b00      	cmp	r3, #0
    bc58:	d01e      	beq.n	bc98 <_dtoa_r+0x8f4>
    bc5a:	980a      	ldr	r0, [sp, #40]	; 0x28
    bc5c:	1c39      	adds	r1, r7, #0
    bc5e:	f000 ff93 	bl	cb88 <__mcmp>
    bc62:	2800      	cmp	r0, #0
    bc64:	da18      	bge.n	bc98 <_dtoa_r+0x8f4>
    bc66:	9b03      	ldr	r3, [sp, #12]
    bc68:	9808      	ldr	r0, [sp, #32]
    bc6a:	3b01      	subs	r3, #1
    bc6c:	9303      	str	r3, [sp, #12]
    bc6e:	990a      	ldr	r1, [sp, #40]	; 0x28
    bc70:	2300      	movs	r3, #0
    bc72:	220a      	movs	r2, #10
    bc74:	f000 fd87 	bl	c786 <__multadd>
    bc78:	9b10      	ldr	r3, [sp, #64]	; 0x40
    bc7a:	900a      	str	r0, [sp, #40]	; 0x28
    bc7c:	2b00      	cmp	r3, #0
    bc7e:	d100      	bne.n	bc82 <_dtoa_r+0x8de>
    bc80:	e17f      	b.n	bf82 <_dtoa_r+0xbde>
    bc82:	1c31      	adds	r1, r6, #0
    bc84:	2300      	movs	r3, #0
    bc86:	9808      	ldr	r0, [sp, #32]
    bc88:	220a      	movs	r2, #10
    bc8a:	f000 fd7c 	bl	c786 <__multadd>
    bc8e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    bc90:	1c06      	adds	r6, r0, #0
    bc92:	2b00      	cmp	r3, #0
    bc94:	dc3c      	bgt.n	bd10 <_dtoa_r+0x96c>
    bc96:	e17d      	b.n	bf94 <_dtoa_r+0xbf0>
    bc98:	9b09      	ldr	r3, [sp, #36]	; 0x24
    bc9a:	2b00      	cmp	r3, #0
    bc9c:	dc2e      	bgt.n	bcfc <_dtoa_r+0x958>
    bc9e:	9b20      	ldr	r3, [sp, #128]	; 0x80
    bca0:	2b02      	cmp	r3, #2
    bca2:	dd2b      	ble.n	bcfc <_dtoa_r+0x958>
    bca4:	9b09      	ldr	r3, [sp, #36]	; 0x24
    bca6:	930b      	str	r3, [sp, #44]	; 0x2c
    bca8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    bcaa:	2b00      	cmp	r3, #0
    bcac:	d110      	bne.n	bcd0 <_dtoa_r+0x92c>
    bcae:	1c39      	adds	r1, r7, #0
    bcb0:	9808      	ldr	r0, [sp, #32]
    bcb2:	2205      	movs	r2, #5
    bcb4:	f000 fd67 	bl	c786 <__multadd>
    bcb8:	1c07      	adds	r7, r0, #0
    bcba:	980a      	ldr	r0, [sp, #40]	; 0x28
    bcbc:	1c39      	adds	r1, r7, #0
    bcbe:	f000 ff63 	bl	cb88 <__mcmp>
    bcc2:	2800      	cmp	r0, #0
    bcc4:	dc0e      	bgt.n	bce4 <_dtoa_r+0x940>
    bcc6:	e003      	b.n	bcd0 <_dtoa_r+0x92c>
    bcc8:	1c2f      	adds	r7, r5, #0
    bcca:	e000      	b.n	bcce <_dtoa_r+0x92a>
    bccc:	2700      	movs	r7, #0
    bcce:	1c3e      	adds	r6, r7, #0
    bcd0:	9b21      	ldr	r3, [sp, #132]	; 0x84
    bcd2:	43db      	mvns	r3, r3
    bcd4:	9303      	str	r3, [sp, #12]
    bcd6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bcd8:	9304      	str	r3, [sp, #16]
    bcda:	e00c      	b.n	bcf6 <_dtoa_r+0x952>
    bcdc:	1c2f      	adds	r7, r5, #0
    bcde:	1c2e      	adds	r6, r5, #0
    bce0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    bce2:	9303      	str	r3, [sp, #12]
    bce4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bce6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    bce8:	3301      	adds	r3, #1
    bcea:	9304      	str	r3, [sp, #16]
    bcec:	2331      	movs	r3, #49	; 0x31
    bcee:	7013      	strb	r3, [r2, #0]
    bcf0:	9b03      	ldr	r3, [sp, #12]
    bcf2:	3301      	adds	r3, #1
    bcf4:	9303      	str	r3, [sp, #12]
    bcf6:	9609      	str	r6, [sp, #36]	; 0x24
    bcf8:	2600      	movs	r6, #0
    bcfa:	e11a      	b.n	bf32 <_dtoa_r+0xb8e>
    bcfc:	9b10      	ldr	r3, [sp, #64]	; 0x40
    bcfe:	2b00      	cmp	r3, #0
    bd00:	d104      	bne.n	bd0c <_dtoa_r+0x968>
    bd02:	9b09      	ldr	r3, [sp, #36]	; 0x24
    bd04:	930b      	str	r3, [sp, #44]	; 0x2c
    bd06:	9d0c      	ldr	r5, [sp, #48]	; 0x30
    bd08:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    bd0a:	e0d0      	b.n	beae <_dtoa_r+0xb0a>
    bd0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    bd0e:	930b      	str	r3, [sp, #44]	; 0x2c
    bd10:	2c00      	cmp	r4, #0
    bd12:	dd05      	ble.n	bd20 <_dtoa_r+0x97c>
    bd14:	1c31      	adds	r1, r6, #0
    bd16:	9808      	ldr	r0, [sp, #32]
    bd18:	1c22      	adds	r2, r4, #0
    bd1a:	f000 fee3 	bl	cae4 <__lshift>
    bd1e:	1c06      	adds	r6, r0, #0
    bd20:	9609      	str	r6, [sp, #36]	; 0x24
    bd22:	2d00      	cmp	r5, #0
    bd24:	d012      	beq.n	bd4c <_dtoa_r+0x9a8>
    bd26:	6871      	ldr	r1, [r6, #4]
    bd28:	9808      	ldr	r0, [sp, #32]
    bd2a:	f000 fcdb 	bl	c6e4 <_Balloc>
    bd2e:	1c31      	adds	r1, r6, #0
    bd30:	1c04      	adds	r4, r0, #0
    bd32:	6933      	ldr	r3, [r6, #16]
    bd34:	310c      	adds	r1, #12
    bd36:	1c9a      	adds	r2, r3, #2
    bd38:	0092      	lsls	r2, r2, #2
    bd3a:	300c      	adds	r0, #12
    bd3c:	f7fc fe27 	bl	898e <memcpy>
    bd40:	9808      	ldr	r0, [sp, #32]
    bd42:	1c21      	adds	r1, r4, #0
    bd44:	2201      	movs	r2, #1
    bd46:	f000 fecd 	bl	cae4 <__lshift>
    bd4a:	9009      	str	r0, [sp, #36]	; 0x24
    bd4c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bd4e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    bd50:	930e      	str	r3, [sp, #56]	; 0x38
    bd52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    bd54:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    bd56:	3b01      	subs	r3, #1
    bd58:	18d3      	adds	r3, r2, r3
    bd5a:	9310      	str	r3, [sp, #64]	; 0x40
    bd5c:	1c39      	adds	r1, r7, #0
    bd5e:	1c20      	adds	r0, r4, #0
    bd60:	f7ff fa98 	bl	b294 <quorem>
    bd64:	1c03      	adds	r3, r0, #0
    bd66:	900f      	str	r0, [sp, #60]	; 0x3c
    bd68:	3330      	adds	r3, #48	; 0x30
    bd6a:	1c31      	adds	r1, r6, #0
    bd6c:	1c20      	adds	r0, r4, #0
    bd6e:	930d      	str	r3, [sp, #52]	; 0x34
    bd70:	f000 ff0a 	bl	cb88 <__mcmp>
    bd74:	1c39      	adds	r1, r7, #0
    bd76:	900b      	str	r0, [sp, #44]	; 0x2c
    bd78:	9a09      	ldr	r2, [sp, #36]	; 0x24
    bd7a:	9808      	ldr	r0, [sp, #32]
    bd7c:	f000 ff1f 	bl	cbbe <__mdiff>
    bd80:	2301      	movs	r3, #1
    bd82:	9304      	str	r3, [sp, #16]
    bd84:	68c3      	ldr	r3, [r0, #12]
    bd86:	1c05      	adds	r5, r0, #0
    bd88:	2b00      	cmp	r3, #0
    bd8a:	d104      	bne.n	bd96 <_dtoa_r+0x9f2>
    bd8c:	1c20      	adds	r0, r4, #0
    bd8e:	1c29      	adds	r1, r5, #0
    bd90:	f000 fefa 	bl	cb88 <__mcmp>
    bd94:	9004      	str	r0, [sp, #16]
    bd96:	9808      	ldr	r0, [sp, #32]
    bd98:	1c29      	adds	r1, r5, #0
    bd9a:	f000 fcdb 	bl	c754 <_Bfree>
    bd9e:	9b04      	ldr	r3, [sp, #16]
    bda0:	9a20      	ldr	r2, [sp, #128]	; 0x80
    bda2:	4313      	orrs	r3, r2
    bda4:	d110      	bne.n	bdc8 <_dtoa_r+0xa24>
    bda6:	9a06      	ldr	r2, [sp, #24]
    bda8:	3301      	adds	r3, #1
    bdaa:	4213      	tst	r3, r2
    bdac:	d10c      	bne.n	bdc8 <_dtoa_r+0xa24>
    bdae:	980d      	ldr	r0, [sp, #52]	; 0x34
    bdb0:	940a      	str	r4, [sp, #40]	; 0x28
    bdb2:	2839      	cmp	r0, #57	; 0x39
    bdb4:	d03d      	beq.n	be32 <_dtoa_r+0xa8e>
    bdb6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    bdb8:	2b00      	cmp	r3, #0
    bdba:	dd01      	ble.n	bdc0 <_dtoa_r+0xa1c>
    bdbc:	980f      	ldr	r0, [sp, #60]	; 0x3c
    bdbe:	3031      	adds	r0, #49	; 0x31
    bdc0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    bdc2:	3301      	adds	r3, #1
    bdc4:	9304      	str	r3, [sp, #16]
    bdc6:	e03e      	b.n	be46 <_dtoa_r+0xaa2>
    bdc8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    bdca:	2b00      	cmp	r3, #0
    bdcc:	da05      	bge.n	bdda <_dtoa_r+0xa36>
    bdce:	9b04      	ldr	r3, [sp, #16]
    bdd0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    bdd2:	940a      	str	r4, [sp, #40]	; 0x28
    bdd4:	2b00      	cmp	r3, #0
    bdd6:	dc09      	bgt.n	bdec <_dtoa_r+0xa48>
    bdd8:	e01c      	b.n	be14 <_dtoa_r+0xa70>
    bdda:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    bddc:	9b20      	ldr	r3, [sp, #128]	; 0x80
    bdde:	431d      	orrs	r5, r3
    bde0:	d11e      	bne.n	be20 <_dtoa_r+0xa7c>
    bde2:	2301      	movs	r3, #1
    bde4:	9a06      	ldr	r2, [sp, #24]
    bde6:	4213      	tst	r3, r2
    bde8:	d11a      	bne.n	be20 <_dtoa_r+0xa7c>
    bdea:	e7f0      	b.n	bdce <_dtoa_r+0xa2a>
    bdec:	1c21      	adds	r1, r4, #0
    bdee:	9808      	ldr	r0, [sp, #32]
    bdf0:	2201      	movs	r2, #1
    bdf2:	f000 fe77 	bl	cae4 <__lshift>
    bdf6:	1c39      	adds	r1, r7, #0
    bdf8:	900a      	str	r0, [sp, #40]	; 0x28
    bdfa:	f000 fec5 	bl	cb88 <__mcmp>
    bdfe:	2800      	cmp	r0, #0
    be00:	dc03      	bgt.n	be0a <_dtoa_r+0xa66>
    be02:	d107      	bne.n	be14 <_dtoa_r+0xa70>
    be04:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    be06:	07db      	lsls	r3, r3, #31
    be08:	d504      	bpl.n	be14 <_dtoa_r+0xa70>
    be0a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    be0c:	2b39      	cmp	r3, #57	; 0x39
    be0e:	d010      	beq.n	be32 <_dtoa_r+0xa8e>
    be10:	1c1d      	adds	r5, r3, #0
    be12:	3501      	adds	r5, #1
    be14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    be16:	3301      	adds	r3, #1
    be18:	9304      	str	r3, [sp, #16]
    be1a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    be1c:	701d      	strb	r5, [r3, #0]
    be1e:	e088      	b.n	bf32 <_dtoa_r+0xb8e>
    be20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    be22:	1c5d      	adds	r5, r3, #1
    be24:	9b04      	ldr	r3, [sp, #16]
    be26:	2b00      	cmp	r3, #0
    be28:	dd10      	ble.n	be4c <_dtoa_r+0xaa8>
    be2a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    be2c:	940a      	str	r4, [sp, #40]	; 0x28
    be2e:	2b39      	cmp	r3, #57	; 0x39
    be30:	d106      	bne.n	be40 <_dtoa_r+0xa9c>
    be32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    be34:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    be36:	3301      	adds	r3, #1
    be38:	9304      	str	r3, [sp, #16]
    be3a:	2339      	movs	r3, #57	; 0x39
    be3c:	7013      	strb	r3, [r2, #0]
    be3e:	e060      	b.n	bf02 <_dtoa_r+0xb5e>
    be40:	980d      	ldr	r0, [sp, #52]	; 0x34
    be42:	9504      	str	r5, [sp, #16]
    be44:	3001      	adds	r0, #1
    be46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    be48:	7018      	strb	r0, [r3, #0]
    be4a:	e072      	b.n	bf32 <_dtoa_r+0xb8e>
    be4c:	466a      	mov	r2, sp
    be4e:	2134      	movs	r1, #52	; 0x34
    be50:	1852      	adds	r2, r2, r1
    be52:	7812      	ldrb	r2, [r2, #0]
    be54:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    be56:	9504      	str	r5, [sp, #16]
    be58:	701a      	strb	r2, [r3, #0]
    be5a:	9a10      	ldr	r2, [sp, #64]	; 0x40
    be5c:	4293      	cmp	r3, r2
    be5e:	d03f      	beq.n	bee0 <_dtoa_r+0xb3c>
    be60:	1c21      	adds	r1, r4, #0
    be62:	220a      	movs	r2, #10
    be64:	2300      	movs	r3, #0
    be66:	9808      	ldr	r0, [sp, #32]
    be68:	f000 fc8d 	bl	c786 <__multadd>
    be6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    be6e:	1c04      	adds	r4, r0, #0
    be70:	1c31      	adds	r1, r6, #0
    be72:	9808      	ldr	r0, [sp, #32]
    be74:	220a      	movs	r2, #10
    be76:	429e      	cmp	r6, r3
    be78:	d105      	bne.n	be86 <_dtoa_r+0xae2>
    be7a:	2300      	movs	r3, #0
    be7c:	f000 fc83 	bl	c786 <__multadd>
    be80:	1c06      	adds	r6, r0, #0
    be82:	9009      	str	r0, [sp, #36]	; 0x24
    be84:	e00a      	b.n	be9c <_dtoa_r+0xaf8>
    be86:	2300      	movs	r3, #0
    be88:	f000 fc7d 	bl	c786 <__multadd>
    be8c:	9909      	ldr	r1, [sp, #36]	; 0x24
    be8e:	1c06      	adds	r6, r0, #0
    be90:	220a      	movs	r2, #10
    be92:	9808      	ldr	r0, [sp, #32]
    be94:	2300      	movs	r3, #0
    be96:	f000 fc76 	bl	c786 <__multadd>
    be9a:	9009      	str	r0, [sp, #36]	; 0x24
    be9c:	950e      	str	r5, [sp, #56]	; 0x38
    be9e:	e75d      	b.n	bd5c <_dtoa_r+0x9b8>
    bea0:	1c21      	adds	r1, r4, #0
    bea2:	9808      	ldr	r0, [sp, #32]
    bea4:	220a      	movs	r2, #10
    bea6:	2300      	movs	r3, #0
    bea8:	f000 fc6d 	bl	c786 <__multadd>
    beac:	1c04      	adds	r4, r0, #0
    beae:	1c20      	adds	r0, r4, #0
    beb0:	1c39      	adds	r1, r7, #0
    beb2:	f7ff f9ef 	bl	b294 <quorem>
    beb6:	2234      	movs	r2, #52	; 0x34
    beb8:	466b      	mov	r3, sp
    beba:	3030      	adds	r0, #48	; 0x30
    bebc:	189b      	adds	r3, r3, r2
    bebe:	900d      	str	r0, [sp, #52]	; 0x34
    bec0:	781b      	ldrb	r3, [r3, #0]
    bec2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    bec4:	702b      	strb	r3, [r5, #0]
    bec6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bec8:	3501      	adds	r5, #1
    beca:	1aeb      	subs	r3, r5, r3
    becc:	4293      	cmp	r3, r2
    bece:	dbe7      	blt.n	bea0 <_dtoa_r+0xafc>
    bed0:	1e13      	subs	r3, r2, #0
    bed2:	dc00      	bgt.n	bed6 <_dtoa_r+0xb32>
    bed4:	2301      	movs	r3, #1
    bed6:	9609      	str	r6, [sp, #36]	; 0x24
    bed8:	2600      	movs	r6, #0
    beda:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    bedc:	18d3      	adds	r3, r2, r3
    bede:	9304      	str	r3, [sp, #16]
    bee0:	1c21      	adds	r1, r4, #0
    bee2:	9808      	ldr	r0, [sp, #32]
    bee4:	2201      	movs	r2, #1
    bee6:	f000 fdfd 	bl	cae4 <__lshift>
    beea:	1c39      	adds	r1, r7, #0
    beec:	900a      	str	r0, [sp, #40]	; 0x28
    beee:	f000 fe4b 	bl	cb88 <__mcmp>
    bef2:	2800      	cmp	r0, #0
    bef4:	dc05      	bgt.n	bf02 <_dtoa_r+0xb5e>
    bef6:	d115      	bne.n	bf24 <_dtoa_r+0xb80>
    bef8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    befa:	07db      	lsls	r3, r3, #31
    befc:	d401      	bmi.n	bf02 <_dtoa_r+0xb5e>
    befe:	e011      	b.n	bf24 <_dtoa_r+0xb80>
    bf00:	9304      	str	r3, [sp, #16]
    bf02:	9b04      	ldr	r3, [sp, #16]
    bf04:	3b01      	subs	r3, #1
    bf06:	781a      	ldrb	r2, [r3, #0]
    bf08:	2a39      	cmp	r2, #57	; 0x39
    bf0a:	d108      	bne.n	bf1e <_dtoa_r+0xb7a>
    bf0c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    bf0e:	4293      	cmp	r3, r2
    bf10:	d1f6      	bne.n	bf00 <_dtoa_r+0xb5c>
    bf12:	9b03      	ldr	r3, [sp, #12]
    bf14:	3301      	adds	r3, #1
    bf16:	9303      	str	r3, [sp, #12]
    bf18:	2331      	movs	r3, #49	; 0x31
    bf1a:	7013      	strb	r3, [r2, #0]
    bf1c:	e009      	b.n	bf32 <_dtoa_r+0xb8e>
    bf1e:	3201      	adds	r2, #1
    bf20:	701a      	strb	r2, [r3, #0]
    bf22:	e006      	b.n	bf32 <_dtoa_r+0xb8e>
    bf24:	9b04      	ldr	r3, [sp, #16]
    bf26:	3b01      	subs	r3, #1
    bf28:	781a      	ldrb	r2, [r3, #0]
    bf2a:	2a30      	cmp	r2, #48	; 0x30
    bf2c:	d101      	bne.n	bf32 <_dtoa_r+0xb8e>
    bf2e:	9304      	str	r3, [sp, #16]
    bf30:	e7f8      	b.n	bf24 <_dtoa_r+0xb80>
    bf32:	9808      	ldr	r0, [sp, #32]
    bf34:	1c39      	adds	r1, r7, #0
    bf36:	f000 fc0d 	bl	c754 <_Bfree>
    bf3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    bf3c:	2b00      	cmp	r3, #0
    bf3e:	d00e      	beq.n	bf5e <_dtoa_r+0xbba>
    bf40:	2e00      	cmp	r6, #0
    bf42:	d005      	beq.n	bf50 <_dtoa_r+0xbac>
    bf44:	429e      	cmp	r6, r3
    bf46:	d003      	beq.n	bf50 <_dtoa_r+0xbac>
    bf48:	9808      	ldr	r0, [sp, #32]
    bf4a:	1c31      	adds	r1, r6, #0
    bf4c:	f000 fc02 	bl	c754 <_Bfree>
    bf50:	9808      	ldr	r0, [sp, #32]
    bf52:	9909      	ldr	r1, [sp, #36]	; 0x24
    bf54:	f000 fbfe 	bl	c754 <_Bfree>
    bf58:	e001      	b.n	bf5e <_dtoa_r+0xbba>
    bf5a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    bf5c:	9303      	str	r3, [sp, #12]
    bf5e:	9808      	ldr	r0, [sp, #32]
    bf60:	990a      	ldr	r1, [sp, #40]	; 0x28
    bf62:	f000 fbf7 	bl	c754 <_Bfree>
    bf66:	2300      	movs	r3, #0
    bf68:	9a04      	ldr	r2, [sp, #16]
    bf6a:	980c      	ldr	r0, [sp, #48]	; 0x30
    bf6c:	7013      	strb	r3, [r2, #0]
    bf6e:	9b03      	ldr	r3, [sp, #12]
    bf70:	9a22      	ldr	r2, [sp, #136]	; 0x88
    bf72:	3301      	adds	r3, #1
    bf74:	6013      	str	r3, [r2, #0]
    bf76:	9b24      	ldr	r3, [sp, #144]	; 0x90
    bf78:	2b00      	cmp	r3, #0
    bf7a:	d010      	beq.n	bf9e <_dtoa_r+0xbfa>
    bf7c:	9a04      	ldr	r2, [sp, #16]
    bf7e:	601a      	str	r2, [r3, #0]
    bf80:	e00d      	b.n	bf9e <_dtoa_r+0xbfa>
    bf82:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    bf84:	2b00      	cmp	r3, #0
    bf86:	dd00      	ble.n	bf8a <_dtoa_r+0xbe6>
    bf88:	e6bd      	b.n	bd06 <_dtoa_r+0x962>
    bf8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
    bf8c:	2b02      	cmp	r3, #2
    bf8e:	dd00      	ble.n	bf92 <_dtoa_r+0xbee>
    bf90:	e68a      	b.n	bca8 <_dtoa_r+0x904>
    bf92:	e6b8      	b.n	bd06 <_dtoa_r+0x962>
    bf94:	9b20      	ldr	r3, [sp, #128]	; 0x80
    bf96:	2b02      	cmp	r3, #2
    bf98:	dd00      	ble.n	bf9c <_dtoa_r+0xbf8>
    bf9a:	e685      	b.n	bca8 <_dtoa_r+0x904>
    bf9c:	e6b8      	b.n	bd10 <_dtoa_r+0x96c>
    bf9e:	b01b      	add	sp, #108	; 0x6c
    bfa0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    bfa2:	46c0      	nop			; (mov r8, r8)

0000bfa4 <__sflags>:
    bfa4:	780b      	ldrb	r3, [r1, #0]
    bfa6:	b530      	push	{r4, r5, lr}
    bfa8:	2b72      	cmp	r3, #114	; 0x72
    bfaa:	d00e      	beq.n	bfca <__sflags+0x26>
    bfac:	2b77      	cmp	r3, #119	; 0x77
    bfae:	d007      	beq.n	bfc0 <__sflags+0x1c>
    bfb0:	2b61      	cmp	r3, #97	; 0x61
    bfb2:	d10e      	bne.n	bfd2 <__sflags+0x2e>
    bfb4:	2582      	movs	r5, #130	; 0x82
    bfb6:	2084      	movs	r0, #132	; 0x84
    bfb8:	00ad      	lsls	r5, r5, #2
    bfba:	2301      	movs	r3, #1
    bfbc:	0040      	lsls	r0, r0, #1
    bfbe:	e01b      	b.n	bff8 <__sflags+0x54>
    bfc0:	25c0      	movs	r5, #192	; 0xc0
    bfc2:	2301      	movs	r3, #1
    bfc4:	00ed      	lsls	r5, r5, #3
    bfc6:	2008      	movs	r0, #8
    bfc8:	e016      	b.n	bff8 <__sflags+0x54>
    bfca:	2500      	movs	r5, #0
    bfcc:	2004      	movs	r0, #4
    bfce:	1c2b      	adds	r3, r5, #0
    bfd0:	e012      	b.n	bff8 <__sflags+0x54>
    bfd2:	2316      	movs	r3, #22
    bfd4:	6003      	str	r3, [r0, #0]
    bfd6:	2000      	movs	r0, #0
    bfd8:	e01b      	b.n	c012 <__sflags+0x6e>
    bfda:	2c62      	cmp	r4, #98	; 0x62
    bfdc:	d011      	beq.n	c002 <__sflags+0x5e>
    bfde:	2c78      	cmp	r4, #120	; 0x78
    bfe0:	d012      	beq.n	c008 <__sflags+0x64>
    bfe2:	2c2b      	cmp	r4, #43	; 0x2b
    bfe4:	d108      	bne.n	bff8 <__sflags+0x54>
    bfe6:	3c0f      	subs	r4, #15
    bfe8:	43a0      	bics	r0, r4
    bfea:	3c0c      	subs	r4, #12
    bfec:	4320      	orrs	r0, r4
    bfee:	3c0d      	subs	r4, #13
    bff0:	43a3      	bics	r3, r4
    bff2:	1c1c      	adds	r4, r3, #0
    bff4:	2302      	movs	r3, #2
    bff6:	4323      	orrs	r3, r4
    bff8:	3101      	adds	r1, #1
    bffa:	780c      	ldrb	r4, [r1, #0]
    bffc:	2c00      	cmp	r4, #0
    bffe:	d1ec      	bne.n	bfda <__sflags+0x36>
    c000:	e005      	b.n	c00e <__sflags+0x6a>
    c002:	2480      	movs	r4, #128	; 0x80
    c004:	0264      	lsls	r4, r4, #9
    c006:	e7f6      	b.n	bff6 <__sflags+0x52>
    c008:	2480      	movs	r4, #128	; 0x80
    c00a:	0124      	lsls	r4, r4, #4
    c00c:	e7f3      	b.n	bff6 <__sflags+0x52>
    c00e:	432b      	orrs	r3, r5
    c010:	6013      	str	r3, [r2, #0]
    c012:	bd30      	pop	{r4, r5, pc}

0000c014 <_fstat_r>:
    c014:	b538      	push	{r3, r4, r5, lr}
    c016:	2300      	movs	r3, #0
    c018:	4c06      	ldr	r4, [pc, #24]	; (c034 <_fstat_r+0x20>)
    c01a:	1c05      	adds	r5, r0, #0
    c01c:	1c08      	adds	r0, r1, #0
    c01e:	1c11      	adds	r1, r2, #0
    c020:	6023      	str	r3, [r4, #0]
    c022:	f7f6 fdfd 	bl	2c20 <_fstat>
    c026:	1c43      	adds	r3, r0, #1
    c028:	d103      	bne.n	c032 <_fstat_r+0x1e>
    c02a:	6823      	ldr	r3, [r4, #0]
    c02c:	2b00      	cmp	r3, #0
    c02e:	d000      	beq.n	c032 <_fstat_r+0x1e>
    c030:	602b      	str	r3, [r5, #0]
    c032:	bd38      	pop	{r3, r4, r5, pc}
    c034:	20004488 	.word	0x20004488

0000c038 <rshift>:
    c038:	b5f0      	push	{r4, r5, r6, r7, lr}
    c03a:	1c06      	adds	r6, r0, #0
    c03c:	6905      	ldr	r5, [r0, #16]
    c03e:	3614      	adds	r6, #20
    c040:	114a      	asrs	r2, r1, #5
    c042:	1c34      	adds	r4, r6, #0
    c044:	42aa      	cmp	r2, r5
    c046:	da25      	bge.n	c094 <rshift+0x5c>
    c048:	231f      	movs	r3, #31
    c04a:	00ad      	lsls	r5, r5, #2
    c04c:	0092      	lsls	r2, r2, #2
    c04e:	4019      	ands	r1, r3
    c050:	1975      	adds	r5, r6, r5
    c052:	18b2      	adds	r2, r6, r2
    c054:	1c33      	adds	r3, r6, #0
    c056:	2900      	cmp	r1, #0
    c058:	d016      	beq.n	c088 <rshift+0x50>
    c05a:	1c13      	adds	r3, r2, #0
    c05c:	cb04      	ldmia	r3!, {r2}
    c05e:	2720      	movs	r7, #32
    c060:	40ca      	lsrs	r2, r1
    c062:	46b4      	mov	ip, r6
    c064:	1a7f      	subs	r7, r7, r1
    c066:	4664      	mov	r4, ip
    c068:	42ab      	cmp	r3, r5
    c06a:	d208      	bcs.n	c07e <rshift+0x46>
    c06c:	681c      	ldr	r4, [r3, #0]
    c06e:	40bc      	lsls	r4, r7
    c070:	4322      	orrs	r2, r4
    c072:	4664      	mov	r4, ip
    c074:	c404      	stmia	r4!, {r2}
    c076:	cb04      	ldmia	r3!, {r2}
    c078:	46a4      	mov	ip, r4
    c07a:	40ca      	lsrs	r2, r1
    c07c:	e7f3      	b.n	c066 <rshift+0x2e>
    c07e:	6022      	str	r2, [r4, #0]
    c080:	2a00      	cmp	r2, #0
    c082:	d007      	beq.n	c094 <rshift+0x5c>
    c084:	3404      	adds	r4, #4
    c086:	e005      	b.n	c094 <rshift+0x5c>
    c088:	1c1c      	adds	r4, r3, #0
    c08a:	42aa      	cmp	r2, r5
    c08c:	d202      	bcs.n	c094 <rshift+0x5c>
    c08e:	ca02      	ldmia	r2!, {r1}
    c090:	c302      	stmia	r3!, {r1}
    c092:	e7f9      	b.n	c088 <rshift+0x50>
    c094:	1ba3      	subs	r3, r4, r6
    c096:	109b      	asrs	r3, r3, #2
    c098:	6103      	str	r3, [r0, #16]
    c09a:	d100      	bne.n	c09e <rshift+0x66>
    c09c:	6143      	str	r3, [r0, #20]
    c09e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000c0a0 <__hexdig_fun>:
    c0a0:	1c03      	adds	r3, r0, #0
    c0a2:	3b30      	subs	r3, #48	; 0x30
    c0a4:	2b09      	cmp	r3, #9
    c0a6:	d801      	bhi.n	c0ac <__hexdig_fun+0xc>
    c0a8:	3820      	subs	r0, #32
    c0aa:	e00b      	b.n	c0c4 <__hexdig_fun+0x24>
    c0ac:	1c03      	adds	r3, r0, #0
    c0ae:	3b61      	subs	r3, #97	; 0x61
    c0b0:	2b05      	cmp	r3, #5
    c0b2:	d801      	bhi.n	c0b8 <__hexdig_fun+0x18>
    c0b4:	3847      	subs	r0, #71	; 0x47
    c0b6:	e005      	b.n	c0c4 <__hexdig_fun+0x24>
    c0b8:	1c02      	adds	r2, r0, #0
    c0ba:	3a41      	subs	r2, #65	; 0x41
    c0bc:	2300      	movs	r3, #0
    c0be:	2a05      	cmp	r2, #5
    c0c0:	d801      	bhi.n	c0c6 <__hexdig_fun+0x26>
    c0c2:	3827      	subs	r0, #39	; 0x27
    c0c4:	b2c3      	uxtb	r3, r0
    c0c6:	1c18      	adds	r0, r3, #0
    c0c8:	4770      	bx	lr

0000c0ca <__gethex>:
    c0ca:	b5f0      	push	{r4, r5, r6, r7, lr}
    c0cc:	b08d      	sub	sp, #52	; 0x34
    c0ce:	9109      	str	r1, [sp, #36]	; 0x24
    c0d0:	9202      	str	r2, [sp, #8]
    c0d2:	930a      	str	r3, [sp, #40]	; 0x28
    c0d4:	9005      	str	r0, [sp, #20]
    c0d6:	f000 fad9 	bl	c68c <_localeconv_r>
    c0da:	6803      	ldr	r3, [r0, #0]
    c0dc:	1c18      	adds	r0, r3, #0
    c0de:	9307      	str	r3, [sp, #28]
    c0e0:	f7fe f822 	bl	a128 <strlen>
    c0e4:	9b07      	ldr	r3, [sp, #28]
    c0e6:	9004      	str	r0, [sp, #16]
    c0e8:	181b      	adds	r3, r3, r0
    c0ea:	3b01      	subs	r3, #1
    c0ec:	781b      	ldrb	r3, [r3, #0]
    c0ee:	930b      	str	r3, [sp, #44]	; 0x2c
    c0f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    c0f2:	6819      	ldr	r1, [r3, #0]
    c0f4:	1c8a      	adds	r2, r1, #2
    c0f6:	9201      	str	r2, [sp, #4]
    c0f8:	9801      	ldr	r0, [sp, #4]
    c0fa:	1a53      	subs	r3, r2, r1
    c0fc:	7800      	ldrb	r0, [r0, #0]
    c0fe:	3b02      	subs	r3, #2
    c100:	3201      	adds	r2, #1
    c102:	2830      	cmp	r0, #48	; 0x30
    c104:	d0f7      	beq.n	c0f6 <__gethex+0x2c>
    c106:	9308      	str	r3, [sp, #32]
    c108:	f7ff ffca 	bl	c0a0 <__hexdig_fun>
    c10c:	1e06      	subs	r6, r0, #0
    c10e:	d120      	bne.n	c152 <__gethex+0x88>
    c110:	9801      	ldr	r0, [sp, #4]
    c112:	9907      	ldr	r1, [sp, #28]
    c114:	9a04      	ldr	r2, [sp, #16]
    c116:	f7fe f80e 	bl	a136 <strncmp>
    c11a:	2800      	cmp	r0, #0
    c11c:	d13c      	bne.n	c198 <__gethex+0xce>
    c11e:	9b01      	ldr	r3, [sp, #4]
    c120:	9a04      	ldr	r2, [sp, #16]
    c122:	189c      	adds	r4, r3, r2
    c124:	7820      	ldrb	r0, [r4, #0]
    c126:	f7ff ffbb 	bl	c0a0 <__hexdig_fun>
    c12a:	2800      	cmp	r0, #0
    c12c:	d037      	beq.n	c19e <__gethex+0xd4>
    c12e:	9401      	str	r4, [sp, #4]
    c130:	9b01      	ldr	r3, [sp, #4]
    c132:	7818      	ldrb	r0, [r3, #0]
    c134:	2830      	cmp	r0, #48	; 0x30
    c136:	d103      	bne.n	c140 <__gethex+0x76>
    c138:	9b01      	ldr	r3, [sp, #4]
    c13a:	3301      	adds	r3, #1
    c13c:	9301      	str	r3, [sp, #4]
    c13e:	e7f7      	b.n	c130 <__gethex+0x66>
    c140:	f7ff ffae 	bl	c0a0 <__hexdig_fun>
    c144:	4243      	negs	r3, r0
    c146:	4143      	adcs	r3, r0
    c148:	9303      	str	r3, [sp, #12]
    c14a:	2301      	movs	r3, #1
    c14c:	1c26      	adds	r6, r4, #0
    c14e:	9308      	str	r3, [sp, #32]
    c150:	e002      	b.n	c158 <__gethex+0x8e>
    c152:	2300      	movs	r3, #0
    c154:	1c1e      	adds	r6, r3, #0
    c156:	9303      	str	r3, [sp, #12]
    c158:	9c01      	ldr	r4, [sp, #4]
    c15a:	7820      	ldrb	r0, [r4, #0]
    c15c:	f7ff ffa0 	bl	c0a0 <__hexdig_fun>
    c160:	2800      	cmp	r0, #0
    c162:	d001      	beq.n	c168 <__gethex+0x9e>
    c164:	3401      	adds	r4, #1
    c166:	e7f8      	b.n	c15a <__gethex+0x90>
    c168:	1c20      	adds	r0, r4, #0
    c16a:	9907      	ldr	r1, [sp, #28]
    c16c:	9a04      	ldr	r2, [sp, #16]
    c16e:	f7fd ffe2 	bl	a136 <strncmp>
    c172:	2800      	cmp	r0, #0
    c174:	d10b      	bne.n	c18e <__gethex+0xc4>
    c176:	2e00      	cmp	r6, #0
    c178:	d10b      	bne.n	c192 <__gethex+0xc8>
    c17a:	9b04      	ldr	r3, [sp, #16]
    c17c:	18e6      	adds	r6, r4, r3
    c17e:	1c34      	adds	r4, r6, #0
    c180:	7820      	ldrb	r0, [r4, #0]
    c182:	f7ff ff8d 	bl	c0a0 <__hexdig_fun>
    c186:	2800      	cmp	r0, #0
    c188:	d001      	beq.n	c18e <__gethex+0xc4>
    c18a:	3401      	adds	r4, #1
    c18c:	e7f8      	b.n	c180 <__gethex+0xb6>
    c18e:	1e37      	subs	r7, r6, #0
    c190:	d008      	beq.n	c1a4 <__gethex+0xda>
    c192:	1b36      	subs	r6, r6, r4
    c194:	00b7      	lsls	r7, r6, #2
    c196:	e005      	b.n	c1a4 <__gethex+0xda>
    c198:	9c01      	ldr	r4, [sp, #4]
    c19a:	1c37      	adds	r7, r6, #0
    c19c:	e000      	b.n	c1a0 <__gethex+0xd6>
    c19e:	1c07      	adds	r7, r0, #0
    c1a0:	2301      	movs	r3, #1
    c1a2:	9303      	str	r3, [sp, #12]
    c1a4:	7823      	ldrb	r3, [r4, #0]
    c1a6:	2b50      	cmp	r3, #80	; 0x50
    c1a8:	d001      	beq.n	c1ae <__gethex+0xe4>
    c1aa:	2b70      	cmp	r3, #112	; 0x70
    c1ac:	d128      	bne.n	c200 <__gethex+0x136>
    c1ae:	7863      	ldrb	r3, [r4, #1]
    c1b0:	2b2b      	cmp	r3, #43	; 0x2b
    c1b2:	d007      	beq.n	c1c4 <__gethex+0xfa>
    c1b4:	2b2d      	cmp	r3, #45	; 0x2d
    c1b6:	d003      	beq.n	c1c0 <__gethex+0xf6>
    c1b8:	2300      	movs	r3, #0
    c1ba:	1c65      	adds	r5, r4, #1
    c1bc:	9306      	str	r3, [sp, #24]
    c1be:	e004      	b.n	c1ca <__gethex+0x100>
    c1c0:	2301      	movs	r3, #1
    c1c2:	e000      	b.n	c1c6 <__gethex+0xfc>
    c1c4:	2300      	movs	r3, #0
    c1c6:	9306      	str	r3, [sp, #24]
    c1c8:	1ca5      	adds	r5, r4, #2
    c1ca:	7828      	ldrb	r0, [r5, #0]
    c1cc:	f7ff ff68 	bl	c0a0 <__hexdig_fun>
    c1d0:	1e43      	subs	r3, r0, #1
    c1d2:	b2db      	uxtb	r3, r3
    c1d4:	2b18      	cmp	r3, #24
    c1d6:	d813      	bhi.n	c200 <__gethex+0x136>
    c1d8:	3810      	subs	r0, #16
    c1da:	3501      	adds	r5, #1
    c1dc:	1c06      	adds	r6, r0, #0
    c1de:	7828      	ldrb	r0, [r5, #0]
    c1e0:	f7ff ff5e 	bl	c0a0 <__hexdig_fun>
    c1e4:	1e43      	subs	r3, r0, #1
    c1e6:	b2db      	uxtb	r3, r3
    c1e8:	2b18      	cmp	r3, #24
    c1ea:	d803      	bhi.n	c1f4 <__gethex+0x12a>
    c1ec:	230a      	movs	r3, #10
    c1ee:	435e      	muls	r6, r3
    c1f0:	1830      	adds	r0, r6, r0
    c1f2:	e7f1      	b.n	c1d8 <__gethex+0x10e>
    c1f4:	9b06      	ldr	r3, [sp, #24]
    c1f6:	2b00      	cmp	r3, #0
    c1f8:	d000      	beq.n	c1fc <__gethex+0x132>
    c1fa:	4276      	negs	r6, r6
    c1fc:	19bf      	adds	r7, r7, r6
    c1fe:	e000      	b.n	c202 <__gethex+0x138>
    c200:	1c25      	adds	r5, r4, #0
    c202:	9b09      	ldr	r3, [sp, #36]	; 0x24
    c204:	601d      	str	r5, [r3, #0]
    c206:	9b03      	ldr	r3, [sp, #12]
    c208:	2b00      	cmp	r3, #0
    c20a:	d006      	beq.n	c21a <__gethex+0x150>
    c20c:	2000      	movs	r0, #0
    c20e:	9b08      	ldr	r3, [sp, #32]
    c210:	4283      	cmp	r3, r0
    c212:	d000      	beq.n	c216 <__gethex+0x14c>
    c214:	e17b      	b.n	c50e <__gethex+0x444>
    c216:	3006      	adds	r0, #6
    c218:	e179      	b.n	c50e <__gethex+0x444>
    c21a:	9b01      	ldr	r3, [sp, #4]
    c21c:	9903      	ldr	r1, [sp, #12]
    c21e:	1ae3      	subs	r3, r4, r3
    c220:	3b01      	subs	r3, #1
    c222:	2b07      	cmp	r3, #7
    c224:	dd02      	ble.n	c22c <__gethex+0x162>
    c226:	3101      	adds	r1, #1
    c228:	105b      	asrs	r3, r3, #1
    c22a:	e7fa      	b.n	c222 <__gethex+0x158>
    c22c:	9805      	ldr	r0, [sp, #20]
    c22e:	f000 fa59 	bl	c6e4 <_Balloc>
    c232:	1c03      	adds	r3, r0, #0
    c234:	2600      	movs	r6, #0
    c236:	1c05      	adds	r5, r0, #0
    c238:	3314      	adds	r3, #20
    c23a:	9303      	str	r3, [sp, #12]
    c23c:	9308      	str	r3, [sp, #32]
    c23e:	9606      	str	r6, [sp, #24]
    c240:	9b01      	ldr	r3, [sp, #4]
    c242:	429c      	cmp	r4, r3
    c244:	d92a      	bls.n	c29c <__gethex+0x1d2>
    c246:	1e63      	subs	r3, r4, #1
    c248:	9309      	str	r3, [sp, #36]	; 0x24
    c24a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    c24c:	781b      	ldrb	r3, [r3, #0]
    c24e:	4293      	cmp	r3, r2
    c250:	d009      	beq.n	c266 <__gethex+0x19c>
    c252:	9b06      	ldr	r3, [sp, #24]
    c254:	2b20      	cmp	r3, #32
    c256:	d114      	bne.n	c282 <__gethex+0x1b8>
    c258:	9b08      	ldr	r3, [sp, #32]
    c25a:	601e      	str	r6, [r3, #0]
    c25c:	2600      	movs	r6, #0
    c25e:	3304      	adds	r3, #4
    c260:	9308      	str	r3, [sp, #32]
    c262:	9606      	str	r6, [sp, #24]
    c264:	e00d      	b.n	c282 <__gethex+0x1b8>
    c266:	9b09      	ldr	r3, [sp, #36]	; 0x24
    c268:	9a04      	ldr	r2, [sp, #16]
    c26a:	1a9c      	subs	r4, r3, r2
    c26c:	9b01      	ldr	r3, [sp, #4]
    c26e:	3401      	adds	r4, #1
    c270:	429c      	cmp	r4, r3
    c272:	d3ee      	bcc.n	c252 <__gethex+0x188>
    c274:	1c20      	adds	r0, r4, #0
    c276:	9907      	ldr	r1, [sp, #28]
    c278:	f7fd ff5d 	bl	a136 <strncmp>
    c27c:	2800      	cmp	r0, #0
    c27e:	d0df      	beq.n	c240 <__gethex+0x176>
    c280:	e7e7      	b.n	c252 <__gethex+0x188>
    c282:	9b09      	ldr	r3, [sp, #36]	; 0x24
    c284:	7818      	ldrb	r0, [r3, #0]
    c286:	f7ff ff0b 	bl	c0a0 <__hexdig_fun>
    c28a:	230f      	movs	r3, #15
    c28c:	4018      	ands	r0, r3
    c28e:	9b06      	ldr	r3, [sp, #24]
    c290:	9c09      	ldr	r4, [sp, #36]	; 0x24
    c292:	4098      	lsls	r0, r3
    c294:	3304      	adds	r3, #4
    c296:	4306      	orrs	r6, r0
    c298:	9306      	str	r3, [sp, #24]
    c29a:	e7d1      	b.n	c240 <__gethex+0x176>
    c29c:	9c08      	ldr	r4, [sp, #32]
    c29e:	9b03      	ldr	r3, [sp, #12]
    c2a0:	c440      	stmia	r4!, {r6}
    c2a2:	1ae4      	subs	r4, r4, r3
    c2a4:	10a4      	asrs	r4, r4, #2
    c2a6:	612c      	str	r4, [r5, #16]
    c2a8:	1c30      	adds	r0, r6, #0
    c2aa:	f000 fae8 	bl	c87e <__hi0bits>
    c2ae:	9b02      	ldr	r3, [sp, #8]
    c2b0:	0164      	lsls	r4, r4, #5
    c2b2:	681b      	ldr	r3, [r3, #0]
    c2b4:	1a26      	subs	r6, r4, r0
    c2b6:	9301      	str	r3, [sp, #4]
    c2b8:	429e      	cmp	r6, r3
    c2ba:	dd25      	ble.n	c308 <__gethex+0x23e>
    c2bc:	1af6      	subs	r6, r6, r3
    c2be:	1c28      	adds	r0, r5, #0
    c2c0:	1c31      	adds	r1, r6, #0
    c2c2:	f000 fdf1 	bl	cea8 <__any_on>
    c2c6:	2400      	movs	r4, #0
    c2c8:	42a0      	cmp	r0, r4
    c2ca:	d017      	beq.n	c2fc <__gethex+0x232>
    c2cc:	231f      	movs	r3, #31
    c2ce:	3401      	adds	r4, #1
    c2d0:	1c20      	adds	r0, r4, #0
    c2d2:	1e72      	subs	r2, r6, #1
    c2d4:	4013      	ands	r3, r2
    c2d6:	4098      	lsls	r0, r3
    c2d8:	1c03      	adds	r3, r0, #0
    c2da:	1151      	asrs	r1, r2, #5
    c2dc:	9803      	ldr	r0, [sp, #12]
    c2de:	0089      	lsls	r1, r1, #2
    c2e0:	5809      	ldr	r1, [r1, r0]
    c2e2:	4219      	tst	r1, r3
    c2e4:	d00a      	beq.n	c2fc <__gethex+0x232>
    c2e6:	42a2      	cmp	r2, r4
    c2e8:	dc01      	bgt.n	c2ee <__gethex+0x224>
    c2ea:	2402      	movs	r4, #2
    c2ec:	e006      	b.n	c2fc <__gethex+0x232>
    c2ee:	1eb1      	subs	r1, r6, #2
    c2f0:	1c28      	adds	r0, r5, #0
    c2f2:	f000 fdd9 	bl	cea8 <__any_on>
    c2f6:	2800      	cmp	r0, #0
    c2f8:	d0f7      	beq.n	c2ea <__gethex+0x220>
    c2fa:	2403      	movs	r4, #3
    c2fc:	1c28      	adds	r0, r5, #0
    c2fe:	1c31      	adds	r1, r6, #0
    c300:	f7ff fe9a 	bl	c038 <rshift>
    c304:	19bf      	adds	r7, r7, r6
    c306:	e00e      	b.n	c326 <__gethex+0x25c>
    c308:	9b01      	ldr	r3, [sp, #4]
    c30a:	2400      	movs	r4, #0
    c30c:	429e      	cmp	r6, r3
    c30e:	da0a      	bge.n	c326 <__gethex+0x25c>
    c310:	1b9e      	subs	r6, r3, r6
    c312:	1c29      	adds	r1, r5, #0
    c314:	9805      	ldr	r0, [sp, #20]
    c316:	1c32      	adds	r2, r6, #0
    c318:	f000 fbe4 	bl	cae4 <__lshift>
    c31c:	1c03      	adds	r3, r0, #0
    c31e:	1c05      	adds	r5, r0, #0
    c320:	3314      	adds	r3, #20
    c322:	1bbf      	subs	r7, r7, r6
    c324:	9303      	str	r3, [sp, #12]
    c326:	9b02      	ldr	r3, [sp, #8]
    c328:	689b      	ldr	r3, [r3, #8]
    c32a:	9304      	str	r3, [sp, #16]
    c32c:	429f      	cmp	r7, r3
    c32e:	dd08      	ble.n	c342 <__gethex+0x278>
    c330:	9805      	ldr	r0, [sp, #20]
    c332:	1c29      	adds	r1, r5, #0
    c334:	f000 fa0e 	bl	c754 <_Bfree>
    c338:	2300      	movs	r3, #0
    c33a:	9a12      	ldr	r2, [sp, #72]	; 0x48
    c33c:	20a3      	movs	r0, #163	; 0xa3
    c33e:	6013      	str	r3, [r2, #0]
    c340:	e0e5      	b.n	c50e <__gethex+0x444>
    c342:	9b02      	ldr	r3, [sp, #8]
    c344:	685e      	ldr	r6, [r3, #4]
    c346:	42b7      	cmp	r7, r6
    c348:	da5a      	bge.n	c400 <__gethex+0x336>
    c34a:	9b01      	ldr	r3, [sp, #4]
    c34c:	1bf6      	subs	r6, r6, r7
    c34e:	429e      	cmp	r6, r3
    c350:	db32      	blt.n	c3b8 <__gethex+0x2ee>
    c352:	9b02      	ldr	r3, [sp, #8]
    c354:	68db      	ldr	r3, [r3, #12]
    c356:	2b02      	cmp	r3, #2
    c358:	d01e      	beq.n	c398 <__gethex+0x2ce>
    c35a:	2b03      	cmp	r3, #3
    c35c:	d020      	beq.n	c3a0 <__gethex+0x2d6>
    c35e:	2b01      	cmp	r3, #1
    c360:	d121      	bne.n	c3a6 <__gethex+0x2dc>
    c362:	9b01      	ldr	r3, [sp, #4]
    c364:	429e      	cmp	r6, r3
    c366:	d11e      	bne.n	c3a6 <__gethex+0x2dc>
    c368:	2b01      	cmp	r3, #1
    c36a:	dc0d      	bgt.n	c388 <__gethex+0x2be>
    c36c:	9b02      	ldr	r3, [sp, #8]
    c36e:	2062      	movs	r0, #98	; 0x62
    c370:	685b      	ldr	r3, [r3, #4]
    c372:	9301      	str	r3, [sp, #4]
    c374:	9a01      	ldr	r2, [sp, #4]
    c376:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    c378:	601a      	str	r2, [r3, #0]
    c37a:	2301      	movs	r3, #1
    c37c:	9a03      	ldr	r2, [sp, #12]
    c37e:	612b      	str	r3, [r5, #16]
    c380:	6013      	str	r3, [r2, #0]
    c382:	9b12      	ldr	r3, [sp, #72]	; 0x48
    c384:	601d      	str	r5, [r3, #0]
    c386:	e0c2      	b.n	c50e <__gethex+0x444>
    c388:	9901      	ldr	r1, [sp, #4]
    c38a:	1c28      	adds	r0, r5, #0
    c38c:	3901      	subs	r1, #1
    c38e:	f000 fd8b 	bl	cea8 <__any_on>
    c392:	2800      	cmp	r0, #0
    c394:	d1ea      	bne.n	c36c <__gethex+0x2a2>
    c396:	e006      	b.n	c3a6 <__gethex+0x2dc>
    c398:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    c39a:	2b00      	cmp	r3, #0
    c39c:	d0e6      	beq.n	c36c <__gethex+0x2a2>
    c39e:	e002      	b.n	c3a6 <__gethex+0x2dc>
    c3a0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    c3a2:	2b00      	cmp	r3, #0
    c3a4:	d1e2      	bne.n	c36c <__gethex+0x2a2>
    c3a6:	9805      	ldr	r0, [sp, #20]
    c3a8:	1c29      	adds	r1, r5, #0
    c3aa:	f000 f9d3 	bl	c754 <_Bfree>
    c3ae:	2300      	movs	r3, #0
    c3b0:	9a12      	ldr	r2, [sp, #72]	; 0x48
    c3b2:	2050      	movs	r0, #80	; 0x50
    c3b4:	6013      	str	r3, [r2, #0]
    c3b6:	e0aa      	b.n	c50e <__gethex+0x444>
    c3b8:	1e77      	subs	r7, r6, #1
    c3ba:	2c00      	cmp	r4, #0
    c3bc:	d107      	bne.n	c3ce <__gethex+0x304>
    c3be:	2f00      	cmp	r7, #0
    c3c0:	dd06      	ble.n	c3d0 <__gethex+0x306>
    c3c2:	1c28      	adds	r0, r5, #0
    c3c4:	1c39      	adds	r1, r7, #0
    c3c6:	f000 fd6f 	bl	cea8 <__any_on>
    c3ca:	1c04      	adds	r4, r0, #0
    c3cc:	e000      	b.n	c3d0 <__gethex+0x306>
    c3ce:	2401      	movs	r4, #1
    c3d0:	231f      	movs	r3, #31
    c3d2:	117a      	asrs	r2, r7, #5
    c3d4:	401f      	ands	r7, r3
    c3d6:	3b1e      	subs	r3, #30
    c3d8:	40bb      	lsls	r3, r7
    c3da:	1c1f      	adds	r7, r3, #0
    c3dc:	9b03      	ldr	r3, [sp, #12]
    c3de:	0092      	lsls	r2, r2, #2
    c3e0:	58d3      	ldr	r3, [r2, r3]
    c3e2:	423b      	tst	r3, r7
    c3e4:	d001      	beq.n	c3ea <__gethex+0x320>
    c3e6:	2302      	movs	r3, #2
    c3e8:	431c      	orrs	r4, r3
    c3ea:	9b01      	ldr	r3, [sp, #4]
    c3ec:	1c31      	adds	r1, r6, #0
    c3ee:	1b9b      	subs	r3, r3, r6
    c3f0:	1c28      	adds	r0, r5, #0
    c3f2:	9301      	str	r3, [sp, #4]
    c3f4:	f7ff fe20 	bl	c038 <rshift>
    c3f8:	9b02      	ldr	r3, [sp, #8]
    c3fa:	2602      	movs	r6, #2
    c3fc:	685f      	ldr	r7, [r3, #4]
    c3fe:	e000      	b.n	c402 <__gethex+0x338>
    c400:	2601      	movs	r6, #1
    c402:	2c00      	cmp	r4, #0
    c404:	d07e      	beq.n	c504 <__gethex+0x43a>
    c406:	9b02      	ldr	r3, [sp, #8]
    c408:	68db      	ldr	r3, [r3, #12]
    c40a:	2b02      	cmp	r3, #2
    c40c:	d00b      	beq.n	c426 <__gethex+0x35c>
    c40e:	2b03      	cmp	r3, #3
    c410:	d00d      	beq.n	c42e <__gethex+0x364>
    c412:	2b01      	cmp	r3, #1
    c414:	d174      	bne.n	c500 <__gethex+0x436>
    c416:	07a2      	lsls	r2, r4, #30
    c418:	d572      	bpl.n	c500 <__gethex+0x436>
    c41a:	9a03      	ldr	r2, [sp, #12]
    c41c:	6812      	ldr	r2, [r2, #0]
    c41e:	4314      	orrs	r4, r2
    c420:	421c      	tst	r4, r3
    c422:	d107      	bne.n	c434 <__gethex+0x36a>
    c424:	e06c      	b.n	c500 <__gethex+0x436>
    c426:	2301      	movs	r3, #1
    c428:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    c42a:	1a9b      	subs	r3, r3, r2
    c42c:	9313      	str	r3, [sp, #76]	; 0x4c
    c42e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    c430:	2b00      	cmp	r3, #0
    c432:	d065      	beq.n	c500 <__gethex+0x436>
    c434:	692c      	ldr	r4, [r5, #16]
    c436:	00a3      	lsls	r3, r4, #2
    c438:	9303      	str	r3, [sp, #12]
    c43a:	1c2b      	adds	r3, r5, #0
    c43c:	9a03      	ldr	r2, [sp, #12]
    c43e:	3314      	adds	r3, #20
    c440:	1899      	adds	r1, r3, r2
    c442:	681a      	ldr	r2, [r3, #0]
    c444:	1c50      	adds	r0, r2, #1
    c446:	d002      	beq.n	c44e <__gethex+0x384>
    c448:	3201      	adds	r2, #1
    c44a:	601a      	str	r2, [r3, #0]
    c44c:	e021      	b.n	c492 <__gethex+0x3c8>
    c44e:	2200      	movs	r2, #0
    c450:	c304      	stmia	r3!, {r2}
    c452:	4299      	cmp	r1, r3
    c454:	d8f5      	bhi.n	c442 <__gethex+0x378>
    c456:	68ab      	ldr	r3, [r5, #8]
    c458:	429c      	cmp	r4, r3
    c45a:	db12      	blt.n	c482 <__gethex+0x3b8>
    c45c:	686b      	ldr	r3, [r5, #4]
    c45e:	9805      	ldr	r0, [sp, #20]
    c460:	1c59      	adds	r1, r3, #1
    c462:	f000 f93f 	bl	c6e4 <_Balloc>
    c466:	1c29      	adds	r1, r5, #0
    c468:	692b      	ldr	r3, [r5, #16]
    c46a:	9004      	str	r0, [sp, #16]
    c46c:	1c9a      	adds	r2, r3, #2
    c46e:	310c      	adds	r1, #12
    c470:	0092      	lsls	r2, r2, #2
    c472:	300c      	adds	r0, #12
    c474:	f7fc fa8b 	bl	898e <memcpy>
    c478:	1c29      	adds	r1, r5, #0
    c47a:	9805      	ldr	r0, [sp, #20]
    c47c:	f000 f96a 	bl	c754 <_Bfree>
    c480:	9d04      	ldr	r5, [sp, #16]
    c482:	692b      	ldr	r3, [r5, #16]
    c484:	1c5a      	adds	r2, r3, #1
    c486:	612a      	str	r2, [r5, #16]
    c488:	2201      	movs	r2, #1
    c48a:	3304      	adds	r3, #4
    c48c:	009b      	lsls	r3, r3, #2
    c48e:	18eb      	adds	r3, r5, r3
    c490:	605a      	str	r2, [r3, #4]
    c492:	1c2b      	adds	r3, r5, #0
    c494:	3314      	adds	r3, #20
    c496:	2e02      	cmp	r6, #2
    c498:	d111      	bne.n	c4be <__gethex+0x3f4>
    c49a:	9a02      	ldr	r2, [sp, #8]
    c49c:	9901      	ldr	r1, [sp, #4]
    c49e:	6812      	ldr	r2, [r2, #0]
    c4a0:	3a01      	subs	r2, #1
    c4a2:	4291      	cmp	r1, r2
    c4a4:	d12a      	bne.n	c4fc <__gethex+0x432>
    c4a6:	114a      	asrs	r2, r1, #5
    c4a8:	211f      	movs	r1, #31
    c4aa:	9801      	ldr	r0, [sp, #4]
    c4ac:	0092      	lsls	r2, r2, #2
    c4ae:	4001      	ands	r1, r0
    c4b0:	2001      	movs	r0, #1
    c4b2:	1c04      	adds	r4, r0, #0
    c4b4:	408c      	lsls	r4, r1
    c4b6:	58d3      	ldr	r3, [r2, r3]
    c4b8:	4223      	tst	r3, r4
    c4ba:	d01f      	beq.n	c4fc <__gethex+0x432>
    c4bc:	e00c      	b.n	c4d8 <__gethex+0x40e>
    c4be:	692a      	ldr	r2, [r5, #16]
    c4c0:	42a2      	cmp	r2, r4
    c4c2:	dd0b      	ble.n	c4dc <__gethex+0x412>
    c4c4:	1c28      	adds	r0, r5, #0
    c4c6:	2101      	movs	r1, #1
    c4c8:	f7ff fdb6 	bl	c038 <rshift>
    c4cc:	9b02      	ldr	r3, [sp, #8]
    c4ce:	3701      	adds	r7, #1
    c4d0:	689b      	ldr	r3, [r3, #8]
    c4d2:	429f      	cmp	r7, r3
    c4d4:	dd00      	ble.n	c4d8 <__gethex+0x40e>
    c4d6:	e72b      	b.n	c330 <__gethex+0x266>
    c4d8:	2601      	movs	r6, #1
    c4da:	e00f      	b.n	c4fc <__gethex+0x432>
    c4dc:	241f      	movs	r4, #31
    c4de:	9a01      	ldr	r2, [sp, #4]
    c4e0:	2601      	movs	r6, #1
    c4e2:	4022      	ands	r2, r4
    c4e4:	1e14      	subs	r4, r2, #0
    c4e6:	d009      	beq.n	c4fc <__gethex+0x432>
    c4e8:	9a03      	ldr	r2, [sp, #12]
    c4ea:	189b      	adds	r3, r3, r2
    c4ec:	3b04      	subs	r3, #4
    c4ee:	6818      	ldr	r0, [r3, #0]
    c4f0:	f000 f9c5 	bl	c87e <__hi0bits>
    c4f4:	2120      	movs	r1, #32
    c4f6:	1b0c      	subs	r4, r1, r4
    c4f8:	42a0      	cmp	r0, r4
    c4fa:	dbe3      	blt.n	c4c4 <__gethex+0x3fa>
    c4fc:	2320      	movs	r3, #32
    c4fe:	e000      	b.n	c502 <__gethex+0x438>
    c500:	2310      	movs	r3, #16
    c502:	431e      	orrs	r6, r3
    c504:	1c30      	adds	r0, r6, #0
    c506:	9b12      	ldr	r3, [sp, #72]	; 0x48
    c508:	601d      	str	r5, [r3, #0]
    c50a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    c50c:	601f      	str	r7, [r3, #0]
    c50e:	b00d      	add	sp, #52	; 0x34
    c510:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000c512 <L_shift>:
    c512:	2308      	movs	r3, #8
    c514:	b570      	push	{r4, r5, r6, lr}
    c516:	2520      	movs	r5, #32
    c518:	1a9a      	subs	r2, r3, r2
    c51a:	0092      	lsls	r2, r2, #2
    c51c:	1aad      	subs	r5, r5, r2
    c51e:	6843      	ldr	r3, [r0, #4]
    c520:	6806      	ldr	r6, [r0, #0]
    c522:	1c1c      	adds	r4, r3, #0
    c524:	40ac      	lsls	r4, r5
    c526:	40d3      	lsrs	r3, r2
    c528:	4334      	orrs	r4, r6
    c52a:	6004      	str	r4, [r0, #0]
    c52c:	6043      	str	r3, [r0, #4]
    c52e:	3004      	adds	r0, #4
    c530:	4288      	cmp	r0, r1
    c532:	d3f4      	bcc.n	c51e <L_shift+0xc>
    c534:	bd70      	pop	{r4, r5, r6, pc}

0000c536 <__hexnan>:
    c536:	b5f0      	push	{r4, r5, r6, r7, lr}
    c538:	b089      	sub	sp, #36	; 0x24
    c53a:	9200      	str	r2, [sp, #0]
    c53c:	680a      	ldr	r2, [r1, #0]
    c53e:	9900      	ldr	r1, [sp, #0]
    c540:	1153      	asrs	r3, r2, #5
    c542:	009b      	lsls	r3, r3, #2
    c544:	18cb      	adds	r3, r1, r3
    c546:	9302      	str	r3, [sp, #8]
    c548:	231f      	movs	r3, #31
    c54a:	401a      	ands	r2, r3
    c54c:	9007      	str	r0, [sp, #28]
    c54e:	9205      	str	r2, [sp, #20]
    c550:	d002      	beq.n	c558 <__hexnan+0x22>
    c552:	9b02      	ldr	r3, [sp, #8]
    c554:	3304      	adds	r3, #4
    c556:	9302      	str	r3, [sp, #8]
    c558:	9b02      	ldr	r3, [sp, #8]
    c55a:	2500      	movs	r5, #0
    c55c:	1f1e      	subs	r6, r3, #4
    c55e:	1c37      	adds	r7, r6, #0
    c560:	1c34      	adds	r4, r6, #0
    c562:	9b07      	ldr	r3, [sp, #28]
    c564:	6035      	str	r5, [r6, #0]
    c566:	681b      	ldr	r3, [r3, #0]
    c568:	9506      	str	r5, [sp, #24]
    c56a:	9303      	str	r3, [sp, #12]
    c56c:	9501      	str	r5, [sp, #4]
    c56e:	9b03      	ldr	r3, [sp, #12]
    c570:	3301      	adds	r3, #1
    c572:	9303      	str	r3, [sp, #12]
    c574:	781b      	ldrb	r3, [r3, #0]
    c576:	9304      	str	r3, [sp, #16]
    c578:	2b00      	cmp	r3, #0
    c57a:	d03b      	beq.n	c5f4 <__hexnan+0xbe>
    c57c:	9804      	ldr	r0, [sp, #16]
    c57e:	f7ff fd8f 	bl	c0a0 <__hexdig_fun>
    c582:	2800      	cmp	r0, #0
    c584:	d122      	bne.n	c5cc <__hexnan+0x96>
    c586:	9b04      	ldr	r3, [sp, #16]
    c588:	2b20      	cmp	r3, #32
    c58a:	d817      	bhi.n	c5bc <__hexnan+0x86>
    c58c:	9b06      	ldr	r3, [sp, #24]
    c58e:	9a01      	ldr	r2, [sp, #4]
    c590:	4293      	cmp	r3, r2
    c592:	daec      	bge.n	c56e <__hexnan+0x38>
    c594:	42bc      	cmp	r4, r7
    c596:	d206      	bcs.n	c5a6 <__hexnan+0x70>
    c598:	2d07      	cmp	r5, #7
    c59a:	dc04      	bgt.n	c5a6 <__hexnan+0x70>
    c59c:	1c20      	adds	r0, r4, #0
    c59e:	1c39      	adds	r1, r7, #0
    c5a0:	1c2a      	adds	r2, r5, #0
    c5a2:	f7ff ffb6 	bl	c512 <L_shift>
    c5a6:	9b00      	ldr	r3, [sp, #0]
    c5a8:	2508      	movs	r5, #8
    c5aa:	429c      	cmp	r4, r3
    c5ac:	d9df      	bls.n	c56e <__hexnan+0x38>
    c5ae:	2500      	movs	r5, #0
    c5b0:	9b01      	ldr	r3, [sp, #4]
    c5b2:	1f27      	subs	r7, r4, #4
    c5b4:	603d      	str	r5, [r7, #0]
    c5b6:	9306      	str	r3, [sp, #24]
    c5b8:	1c3c      	adds	r4, r7, #0
    c5ba:	e7d8      	b.n	c56e <__hexnan+0x38>
    c5bc:	9b04      	ldr	r3, [sp, #16]
    c5be:	2b29      	cmp	r3, #41	; 0x29
    c5c0:	d14c      	bne.n	c65c <__hexnan+0x126>
    c5c2:	9b03      	ldr	r3, [sp, #12]
    c5c4:	9a07      	ldr	r2, [sp, #28]
    c5c6:	3301      	adds	r3, #1
    c5c8:	6013      	str	r3, [r2, #0]
    c5ca:	e013      	b.n	c5f4 <__hexnan+0xbe>
    c5cc:	9b01      	ldr	r3, [sp, #4]
    c5ce:	3501      	adds	r5, #1
    c5d0:	3301      	adds	r3, #1
    c5d2:	9301      	str	r3, [sp, #4]
    c5d4:	2d08      	cmp	r5, #8
    c5d6:	dd06      	ble.n	c5e6 <__hexnan+0xb0>
    c5d8:	9b00      	ldr	r3, [sp, #0]
    c5da:	429c      	cmp	r4, r3
    c5dc:	d9c7      	bls.n	c56e <__hexnan+0x38>
    c5de:	2300      	movs	r3, #0
    c5e0:	2501      	movs	r5, #1
    c5e2:	3c04      	subs	r4, #4
    c5e4:	6023      	str	r3, [r4, #0]
    c5e6:	6823      	ldr	r3, [r4, #0]
    c5e8:	011a      	lsls	r2, r3, #4
    c5ea:	230f      	movs	r3, #15
    c5ec:	4018      	ands	r0, r3
    c5ee:	4310      	orrs	r0, r2
    c5f0:	6020      	str	r0, [r4, #0]
    c5f2:	e7bc      	b.n	c56e <__hexnan+0x38>
    c5f4:	9b01      	ldr	r3, [sp, #4]
    c5f6:	2b00      	cmp	r3, #0
    c5f8:	d030      	beq.n	c65c <__hexnan+0x126>
    c5fa:	42bc      	cmp	r4, r7
    c5fc:	d206      	bcs.n	c60c <__hexnan+0xd6>
    c5fe:	2d07      	cmp	r5, #7
    c600:	dc04      	bgt.n	c60c <__hexnan+0xd6>
    c602:	1c20      	adds	r0, r4, #0
    c604:	1c39      	adds	r1, r7, #0
    c606:	1c2a      	adds	r2, r5, #0
    c608:	f7ff ff83 	bl	c512 <L_shift>
    c60c:	9b00      	ldr	r3, [sp, #0]
    c60e:	429c      	cmp	r4, r3
    c610:	d90a      	bls.n	c628 <__hexnan+0xf2>
    c612:	3304      	adds	r3, #4
    c614:	cc02      	ldmia	r4!, {r1}
    c616:	1f1a      	subs	r2, r3, #4
    c618:	6011      	str	r1, [r2, #0]
    c61a:	42a6      	cmp	r6, r4
    c61c:	d2f9      	bcs.n	c612 <__hexnan+0xdc>
    c61e:	2200      	movs	r2, #0
    c620:	c304      	stmia	r3!, {r2}
    c622:	429e      	cmp	r6, r3
    c624:	d2fb      	bcs.n	c61e <__hexnan+0xe8>
    c626:	e00e      	b.n	c646 <__hexnan+0x110>
    c628:	9b05      	ldr	r3, [sp, #20]
    c62a:	2b00      	cmp	r3, #0
    c62c:	d00b      	beq.n	c646 <__hexnan+0x110>
    c62e:	2220      	movs	r2, #32
    c630:	9905      	ldr	r1, [sp, #20]
    c632:	9b02      	ldr	r3, [sp, #8]
    c634:	1a52      	subs	r2, r2, r1
    c636:	2101      	movs	r1, #1
    c638:	4249      	negs	r1, r1
    c63a:	40d1      	lsrs	r1, r2
    c63c:	1c0a      	adds	r2, r1, #0
    c63e:	3b04      	subs	r3, #4
    c640:	6819      	ldr	r1, [r3, #0]
    c642:	400a      	ands	r2, r1
    c644:	601a      	str	r2, [r3, #0]
    c646:	6833      	ldr	r3, [r6, #0]
    c648:	2b00      	cmp	r3, #0
    c64a:	d109      	bne.n	c660 <__hexnan+0x12a>
    c64c:	9b00      	ldr	r3, [sp, #0]
    c64e:	429e      	cmp	r6, r3
    c650:	d102      	bne.n	c658 <__hexnan+0x122>
    c652:	2301      	movs	r3, #1
    c654:	6033      	str	r3, [r6, #0]
    c656:	e003      	b.n	c660 <__hexnan+0x12a>
    c658:	3e04      	subs	r6, #4
    c65a:	e7f4      	b.n	c646 <__hexnan+0x110>
    c65c:	2004      	movs	r0, #4
    c65e:	e000      	b.n	c662 <__hexnan+0x12c>
    c660:	2005      	movs	r0, #5
    c662:	b009      	add	sp, #36	; 0x24
    c664:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0000c668 <_isatty_r>:
    c668:	b538      	push	{r3, r4, r5, lr}
    c66a:	2300      	movs	r3, #0
    c66c:	4c06      	ldr	r4, [pc, #24]	; (c688 <_isatty_r+0x20>)
    c66e:	1c05      	adds	r5, r0, #0
    c670:	1c08      	adds	r0, r1, #0
    c672:	6023      	str	r3, [r4, #0]
    c674:	f7f6 faac 	bl	2bd0 <_isatty>
    c678:	1c43      	adds	r3, r0, #1
    c67a:	d103      	bne.n	c684 <_isatty_r+0x1c>
    c67c:	6823      	ldr	r3, [r4, #0]
    c67e:	2b00      	cmp	r3, #0
    c680:	d000      	beq.n	c684 <_isatty_r+0x1c>
    c682:	602b      	str	r3, [r5, #0]
    c684:	bd38      	pop	{r3, r4, r5, pc}
    c686:	46c0      	nop			; (mov r8, r8)
    c688:	20004488 	.word	0x20004488

0000c68c <_localeconv_r>:
    c68c:	4800      	ldr	r0, [pc, #0]	; (c690 <_localeconv_r+0x4>)
    c68e:	4770      	bx	lr
    c690:	2000013c 	.word	0x2000013c

0000c694 <_lseek_r>:
    c694:	b538      	push	{r3, r4, r5, lr}
    c696:	1c05      	adds	r5, r0, #0
    c698:	2000      	movs	r0, #0
    c69a:	4c07      	ldr	r4, [pc, #28]	; (c6b8 <_lseek_r+0x24>)
    c69c:	6020      	str	r0, [r4, #0]
    c69e:	1c08      	adds	r0, r1, #0
    c6a0:	1c11      	adds	r1, r2, #0
    c6a2:	1c1a      	adds	r2, r3, #0
    c6a4:	f7f6 faa8 	bl	2bf8 <_lseek>
    c6a8:	1c43      	adds	r3, r0, #1
    c6aa:	d103      	bne.n	c6b4 <_lseek_r+0x20>
    c6ac:	6823      	ldr	r3, [r4, #0]
    c6ae:	2b00      	cmp	r3, #0
    c6b0:	d000      	beq.n	c6b4 <_lseek_r+0x20>
    c6b2:	602b      	str	r3, [r5, #0]
    c6b4:	bd38      	pop	{r3, r4, r5, pc}
    c6b6:	46c0      	nop			; (mov r8, r8)
    c6b8:	20004488 	.word	0x20004488

0000c6bc <memmove>:
    c6bc:	b510      	push	{r4, lr}
    c6be:	4281      	cmp	r1, r0
    c6c0:	d208      	bcs.n	c6d4 <memmove+0x18>
    c6c2:	188b      	adds	r3, r1, r2
    c6c4:	4298      	cmp	r0, r3
    c6c6:	d205      	bcs.n	c6d4 <memmove+0x18>
    c6c8:	1a9b      	subs	r3, r3, r2
    c6ca:	3a01      	subs	r2, #1
    c6cc:	d309      	bcc.n	c6e2 <memmove+0x26>
    c6ce:	5c99      	ldrb	r1, [r3, r2]
    c6d0:	5481      	strb	r1, [r0, r2]
    c6d2:	e7fa      	b.n	c6ca <memmove+0xe>
    c6d4:	2300      	movs	r3, #0
    c6d6:	4293      	cmp	r3, r2
    c6d8:	d003      	beq.n	c6e2 <memmove+0x26>
    c6da:	5ccc      	ldrb	r4, [r1, r3]
    c6dc:	54c4      	strb	r4, [r0, r3]
    c6de:	3301      	adds	r3, #1
    c6e0:	e7f9      	b.n	c6d6 <memmove+0x1a>
    c6e2:	bd10      	pop	{r4, pc}

0000c6e4 <_Balloc>:
    c6e4:	b570      	push	{r4, r5, r6, lr}
    c6e6:	6a46      	ldr	r6, [r0, #36]	; 0x24
    c6e8:	1c04      	adds	r4, r0, #0
    c6ea:	1c0d      	adds	r5, r1, #0
    c6ec:	2e00      	cmp	r6, #0
    c6ee:	d107      	bne.n	c700 <_Balloc+0x1c>
    c6f0:	2010      	movs	r0, #16
    c6f2:	f7fc f92d 	bl	8950 <malloc>
    c6f6:	6260      	str	r0, [r4, #36]	; 0x24
    c6f8:	6046      	str	r6, [r0, #4]
    c6fa:	6086      	str	r6, [r0, #8]
    c6fc:	6006      	str	r6, [r0, #0]
    c6fe:	60c6      	str	r6, [r0, #12]
    c700:	6a66      	ldr	r6, [r4, #36]	; 0x24
    c702:	68f3      	ldr	r3, [r6, #12]
    c704:	2b00      	cmp	r3, #0
    c706:	d009      	beq.n	c71c <_Balloc+0x38>
    c708:	6a62      	ldr	r2, [r4, #36]	; 0x24
    c70a:	00ab      	lsls	r3, r5, #2
    c70c:	68d2      	ldr	r2, [r2, #12]
    c70e:	18d3      	adds	r3, r2, r3
    c710:	6818      	ldr	r0, [r3, #0]
    c712:	2800      	cmp	r0, #0
    c714:	d00e      	beq.n	c734 <_Balloc+0x50>
    c716:	6802      	ldr	r2, [r0, #0]
    c718:	601a      	str	r2, [r3, #0]
    c71a:	e017      	b.n	c74c <_Balloc+0x68>
    c71c:	1c20      	adds	r0, r4, #0
    c71e:	2104      	movs	r1, #4
    c720:	2221      	movs	r2, #33	; 0x21
    c722:	f000 fbe2 	bl	ceea <_calloc_r>
    c726:	6a63      	ldr	r3, [r4, #36]	; 0x24
    c728:	60f0      	str	r0, [r6, #12]
    c72a:	68db      	ldr	r3, [r3, #12]
    c72c:	2b00      	cmp	r3, #0
    c72e:	d1eb      	bne.n	c708 <_Balloc+0x24>
    c730:	2000      	movs	r0, #0
    c732:	e00e      	b.n	c752 <_Balloc+0x6e>
    c734:	2101      	movs	r1, #1
    c736:	1c0e      	adds	r6, r1, #0
    c738:	40ae      	lsls	r6, r5
    c73a:	1d72      	adds	r2, r6, #5
    c73c:	0092      	lsls	r2, r2, #2
    c73e:	1c20      	adds	r0, r4, #0
    c740:	f000 fbd3 	bl	ceea <_calloc_r>
    c744:	2800      	cmp	r0, #0
    c746:	d0f3      	beq.n	c730 <_Balloc+0x4c>
    c748:	6045      	str	r5, [r0, #4]
    c74a:	6086      	str	r6, [r0, #8]
    c74c:	2300      	movs	r3, #0
    c74e:	6103      	str	r3, [r0, #16]
    c750:	60c3      	str	r3, [r0, #12]
    c752:	bd70      	pop	{r4, r5, r6, pc}

0000c754 <_Bfree>:
    c754:	b570      	push	{r4, r5, r6, lr}
    c756:	6a45      	ldr	r5, [r0, #36]	; 0x24
    c758:	1c06      	adds	r6, r0, #0
    c75a:	1c0c      	adds	r4, r1, #0
    c75c:	2d00      	cmp	r5, #0
    c75e:	d107      	bne.n	c770 <_Bfree+0x1c>
    c760:	2010      	movs	r0, #16
    c762:	f7fc f8f5 	bl	8950 <malloc>
    c766:	6270      	str	r0, [r6, #36]	; 0x24
    c768:	6045      	str	r5, [r0, #4]
    c76a:	6085      	str	r5, [r0, #8]
    c76c:	6005      	str	r5, [r0, #0]
    c76e:	60c5      	str	r5, [r0, #12]
    c770:	2c00      	cmp	r4, #0
    c772:	d007      	beq.n	c784 <_Bfree+0x30>
    c774:	6a72      	ldr	r2, [r6, #36]	; 0x24
    c776:	6863      	ldr	r3, [r4, #4]
    c778:	68d2      	ldr	r2, [r2, #12]
    c77a:	009b      	lsls	r3, r3, #2
    c77c:	18d3      	adds	r3, r2, r3
    c77e:	681a      	ldr	r2, [r3, #0]
    c780:	6022      	str	r2, [r4, #0]
    c782:	601c      	str	r4, [r3, #0]
    c784:	bd70      	pop	{r4, r5, r6, pc}

0000c786 <__multadd>:
    c786:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    c788:	1c1e      	adds	r6, r3, #0
    c78a:	2314      	movs	r3, #20
    c78c:	469c      	mov	ip, r3
    c78e:	1c07      	adds	r7, r0, #0
    c790:	1c0c      	adds	r4, r1, #0
    c792:	2000      	movs	r0, #0
    c794:	690d      	ldr	r5, [r1, #16]
    c796:	448c      	add	ip, r1
    c798:	4663      	mov	r3, ip
    c79a:	8819      	ldrh	r1, [r3, #0]
    c79c:	681b      	ldr	r3, [r3, #0]
    c79e:	4351      	muls	r1, r2
    c7a0:	0c1b      	lsrs	r3, r3, #16
    c7a2:	4353      	muls	r3, r2
    c7a4:	1989      	adds	r1, r1, r6
    c7a6:	0c0e      	lsrs	r6, r1, #16
    c7a8:	18f3      	adds	r3, r6, r3
    c7aa:	b289      	uxth	r1, r1
    c7ac:	0c1e      	lsrs	r6, r3, #16
    c7ae:	041b      	lsls	r3, r3, #16
    c7b0:	185b      	adds	r3, r3, r1
    c7b2:	4661      	mov	r1, ip
    c7b4:	3001      	adds	r0, #1
    c7b6:	c108      	stmia	r1!, {r3}
    c7b8:	468c      	mov	ip, r1
    c7ba:	42a8      	cmp	r0, r5
    c7bc:	dbec      	blt.n	c798 <__multadd+0x12>
    c7be:	2e00      	cmp	r6, #0
    c7c0:	d01b      	beq.n	c7fa <__multadd+0x74>
    c7c2:	68a3      	ldr	r3, [r4, #8]
    c7c4:	429d      	cmp	r5, r3
    c7c6:	db12      	blt.n	c7ee <__multadd+0x68>
    c7c8:	6863      	ldr	r3, [r4, #4]
    c7ca:	1c38      	adds	r0, r7, #0
    c7cc:	1c59      	adds	r1, r3, #1
    c7ce:	f7ff ff89 	bl	c6e4 <_Balloc>
    c7d2:	1c21      	adds	r1, r4, #0
    c7d4:	6923      	ldr	r3, [r4, #16]
    c7d6:	9001      	str	r0, [sp, #4]
    c7d8:	1c9a      	adds	r2, r3, #2
    c7da:	310c      	adds	r1, #12
    c7dc:	0092      	lsls	r2, r2, #2
    c7de:	300c      	adds	r0, #12
    c7e0:	f7fc f8d5 	bl	898e <memcpy>
    c7e4:	1c21      	adds	r1, r4, #0
    c7e6:	1c38      	adds	r0, r7, #0
    c7e8:	f7ff ffb4 	bl	c754 <_Bfree>
    c7ec:	9c01      	ldr	r4, [sp, #4]
    c7ee:	1d2b      	adds	r3, r5, #4
    c7f0:	009b      	lsls	r3, r3, #2
    c7f2:	18e3      	adds	r3, r4, r3
    c7f4:	3501      	adds	r5, #1
    c7f6:	605e      	str	r6, [r3, #4]
    c7f8:	6125      	str	r5, [r4, #16]
    c7fa:	1c20      	adds	r0, r4, #0
    c7fc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0000c7fe <__s2b>:
    c7fe:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    c800:	1c06      	adds	r6, r0, #0
    c802:	1c18      	adds	r0, r3, #0
    c804:	1c0c      	adds	r4, r1, #0
    c806:	3008      	adds	r0, #8
    c808:	2109      	movs	r1, #9
    c80a:	9301      	str	r3, [sp, #4]
    c80c:	1c15      	adds	r5, r2, #0
    c80e:	f7f8 fd6f 	bl	52f0 <__aeabi_idiv>
    c812:	2301      	movs	r3, #1
    c814:	2100      	movs	r1, #0
    c816:	4298      	cmp	r0, r3
    c818:	dd02      	ble.n	c820 <__s2b+0x22>
    c81a:	005b      	lsls	r3, r3, #1
    c81c:	3101      	adds	r1, #1
    c81e:	e7fa      	b.n	c816 <__s2b+0x18>
    c820:	1c30      	adds	r0, r6, #0
    c822:	f7ff ff5f 	bl	c6e4 <_Balloc>
    c826:	9b08      	ldr	r3, [sp, #32]
    c828:	1c01      	adds	r1, r0, #0
    c82a:	6143      	str	r3, [r0, #20]
    c82c:	2301      	movs	r3, #1
    c82e:	6103      	str	r3, [r0, #16]
    c830:	2d09      	cmp	r5, #9
    c832:	dd12      	ble.n	c85a <__s2b+0x5c>
    c834:	1c23      	adds	r3, r4, #0
    c836:	3309      	adds	r3, #9
    c838:	1c1f      	adds	r7, r3, #0
    c83a:	9300      	str	r3, [sp, #0]
    c83c:	1964      	adds	r4, r4, r5
    c83e:	783b      	ldrb	r3, [r7, #0]
    c840:	1c30      	adds	r0, r6, #0
    c842:	3b30      	subs	r3, #48	; 0x30
    c844:	220a      	movs	r2, #10
    c846:	f7ff ff9e 	bl	c786 <__multadd>
    c84a:	3701      	adds	r7, #1
    c84c:	1c01      	adds	r1, r0, #0
    c84e:	42a7      	cmp	r7, r4
    c850:	d1f5      	bne.n	c83e <__s2b+0x40>
    c852:	9b00      	ldr	r3, [sp, #0]
    c854:	195c      	adds	r4, r3, r5
    c856:	3c08      	subs	r4, #8
    c858:	e001      	b.n	c85e <__s2b+0x60>
    c85a:	2509      	movs	r5, #9
    c85c:	340a      	adds	r4, #10
    c85e:	1c2f      	adds	r7, r5, #0
    c860:	9b01      	ldr	r3, [sp, #4]
    c862:	429f      	cmp	r7, r3
    c864:	da09      	bge.n	c87a <__s2b+0x7c>
    c866:	1b63      	subs	r3, r4, r5
    c868:	5ddb      	ldrb	r3, [r3, r7]
    c86a:	1c30      	adds	r0, r6, #0
    c86c:	3b30      	subs	r3, #48	; 0x30
    c86e:	220a      	movs	r2, #10
    c870:	f7ff ff89 	bl	c786 <__multadd>
    c874:	3701      	adds	r7, #1
    c876:	1c01      	adds	r1, r0, #0
    c878:	e7f2      	b.n	c860 <__s2b+0x62>
    c87a:	1c08      	adds	r0, r1, #0
    c87c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0000c87e <__hi0bits>:
    c87e:	2200      	movs	r2, #0
    c880:	1c03      	adds	r3, r0, #0
    c882:	0c01      	lsrs	r1, r0, #16
    c884:	4291      	cmp	r1, r2
    c886:	d101      	bne.n	c88c <__hi0bits+0xe>
    c888:	0403      	lsls	r3, r0, #16
    c88a:	3210      	adds	r2, #16
    c88c:	0e19      	lsrs	r1, r3, #24
    c88e:	d101      	bne.n	c894 <__hi0bits+0x16>
    c890:	3208      	adds	r2, #8
    c892:	021b      	lsls	r3, r3, #8
    c894:	0f19      	lsrs	r1, r3, #28
    c896:	d101      	bne.n	c89c <__hi0bits+0x1e>
    c898:	3204      	adds	r2, #4
    c89a:	011b      	lsls	r3, r3, #4
    c89c:	0f99      	lsrs	r1, r3, #30
    c89e:	d101      	bne.n	c8a4 <__hi0bits+0x26>
    c8a0:	3202      	adds	r2, #2
    c8a2:	009b      	lsls	r3, r3, #2
    c8a4:	1c10      	adds	r0, r2, #0
    c8a6:	2b00      	cmp	r3, #0
    c8a8:	db03      	blt.n	c8b2 <__hi0bits+0x34>
    c8aa:	2020      	movs	r0, #32
    c8ac:	005b      	lsls	r3, r3, #1
    c8ae:	d500      	bpl.n	c8b2 <__hi0bits+0x34>
    c8b0:	1c50      	adds	r0, r2, #1
    c8b2:	4770      	bx	lr

0000c8b4 <__lo0bits>:
    c8b4:	2207      	movs	r2, #7
    c8b6:	6803      	ldr	r3, [r0, #0]
    c8b8:	b510      	push	{r4, lr}
    c8ba:	1c01      	adds	r1, r0, #0
    c8bc:	401a      	ands	r2, r3
    c8be:	d00c      	beq.n	c8da <__lo0bits+0x26>
    c8c0:	2401      	movs	r4, #1
    c8c2:	2000      	movs	r0, #0
    c8c4:	4223      	tst	r3, r4
    c8c6:	d123      	bne.n	c910 <__lo0bits+0x5c>
    c8c8:	2202      	movs	r2, #2
    c8ca:	4213      	tst	r3, r2
    c8cc:	d003      	beq.n	c8d6 <__lo0bits+0x22>
    c8ce:	40e3      	lsrs	r3, r4
    c8d0:	1c20      	adds	r0, r4, #0
    c8d2:	600b      	str	r3, [r1, #0]
    c8d4:	e01c      	b.n	c910 <__lo0bits+0x5c>
    c8d6:	089b      	lsrs	r3, r3, #2
    c8d8:	e018      	b.n	c90c <__lo0bits+0x58>
    c8da:	b298      	uxth	r0, r3
    c8dc:	2800      	cmp	r0, #0
    c8de:	d101      	bne.n	c8e4 <__lo0bits+0x30>
    c8e0:	2210      	movs	r2, #16
    c8e2:	0c1b      	lsrs	r3, r3, #16
    c8e4:	b2d8      	uxtb	r0, r3
    c8e6:	2800      	cmp	r0, #0
    c8e8:	d101      	bne.n	c8ee <__lo0bits+0x3a>
    c8ea:	3208      	adds	r2, #8
    c8ec:	0a1b      	lsrs	r3, r3, #8
    c8ee:	0718      	lsls	r0, r3, #28
    c8f0:	d101      	bne.n	c8f6 <__lo0bits+0x42>
    c8f2:	3204      	adds	r2, #4
    c8f4:	091b      	lsrs	r3, r3, #4
    c8f6:	0798      	lsls	r0, r3, #30
    c8f8:	d101      	bne.n	c8fe <__lo0bits+0x4a>
    c8fa:	3202      	adds	r2, #2
    c8fc:	089b      	lsrs	r3, r3, #2
    c8fe:	07d8      	lsls	r0, r3, #31
    c900:	d404      	bmi.n	c90c <__lo0bits+0x58>
    c902:	085b      	lsrs	r3, r3, #1
    c904:	2020      	movs	r0, #32
    c906:	2b00      	cmp	r3, #0
    c908:	d002      	beq.n	c910 <__lo0bits+0x5c>
    c90a:	3201      	adds	r2, #1
    c90c:	1c10      	adds	r0, r2, #0
    c90e:	600b      	str	r3, [r1, #0]
    c910:	bd10      	pop	{r4, pc}

0000c912 <__i2b>:
    c912:	b510      	push	{r4, lr}
    c914:	1c0c      	adds	r4, r1, #0
    c916:	2101      	movs	r1, #1
    c918:	f7ff fee4 	bl	c6e4 <_Balloc>
    c91c:	2301      	movs	r3, #1
    c91e:	6144      	str	r4, [r0, #20]
    c920:	6103      	str	r3, [r0, #16]
    c922:	bd10      	pop	{r4, pc}

0000c924 <__multiply>:
    c924:	b5f0      	push	{r4, r5, r6, r7, lr}
    c926:	690b      	ldr	r3, [r1, #16]
    c928:	1c14      	adds	r4, r2, #0
    c92a:	6912      	ldr	r2, [r2, #16]
    c92c:	b089      	sub	sp, #36	; 0x24
    c92e:	1c0d      	adds	r5, r1, #0
    c930:	4293      	cmp	r3, r2
    c932:	da01      	bge.n	c938 <__multiply+0x14>
    c934:	1c25      	adds	r5, r4, #0
    c936:	1c0c      	adds	r4, r1, #0
    c938:	692f      	ldr	r7, [r5, #16]
    c93a:	6926      	ldr	r6, [r4, #16]
    c93c:	68aa      	ldr	r2, [r5, #8]
    c93e:	19bb      	adds	r3, r7, r6
    c940:	6869      	ldr	r1, [r5, #4]
    c942:	9300      	str	r3, [sp, #0]
    c944:	4293      	cmp	r3, r2
    c946:	dd00      	ble.n	c94a <__multiply+0x26>
    c948:	3101      	adds	r1, #1
    c94a:	f7ff fecb 	bl	c6e4 <_Balloc>
    c94e:	1c01      	adds	r1, r0, #0
    c950:	9b00      	ldr	r3, [sp, #0]
    c952:	3114      	adds	r1, #20
    c954:	4684      	mov	ip, r0
    c956:	0098      	lsls	r0, r3, #2
    c958:	1c0b      	adds	r3, r1, #0
    c95a:	1808      	adds	r0, r1, r0
    c95c:	4283      	cmp	r3, r0
    c95e:	d202      	bcs.n	c966 <__multiply+0x42>
    c960:	2200      	movs	r2, #0
    c962:	c304      	stmia	r3!, {r2}
    c964:	e7fa      	b.n	c95c <__multiply+0x38>
    c966:	3514      	adds	r5, #20
    c968:	00bf      	lsls	r7, r7, #2
    c96a:	19eb      	adds	r3, r5, r7
    c96c:	3414      	adds	r4, #20
    c96e:	00b6      	lsls	r6, r6, #2
    c970:	9304      	str	r3, [sp, #16]
    c972:	19a3      	adds	r3, r4, r6
    c974:	9502      	str	r5, [sp, #8]
    c976:	9306      	str	r3, [sp, #24]
    c978:	9b06      	ldr	r3, [sp, #24]
    c97a:	429c      	cmp	r4, r3
    c97c:	d256      	bcs.n	ca2c <__multiply+0x108>
    c97e:	8823      	ldrh	r3, [r4, #0]
    c980:	9303      	str	r3, [sp, #12]
    c982:	2b00      	cmp	r3, #0
    c984:	d022      	beq.n	c9cc <__multiply+0xa8>
    c986:	1c0e      	adds	r6, r1, #0
    c988:	2700      	movs	r7, #0
    c98a:	9b02      	ldr	r3, [sp, #8]
    c98c:	9301      	str	r3, [sp, #4]
    c98e:	9b01      	ldr	r3, [sp, #4]
    c990:	9d03      	ldr	r5, [sp, #12]
    c992:	cb04      	ldmia	r3!, {r2}
    c994:	9605      	str	r6, [sp, #20]
    c996:	9301      	str	r3, [sp, #4]
    c998:	8833      	ldrh	r3, [r6, #0]
    c99a:	9307      	str	r3, [sp, #28]
    c99c:	b293      	uxth	r3, r2
    c99e:	436b      	muls	r3, r5
    c9a0:	9d07      	ldr	r5, [sp, #28]
    c9a2:	0c12      	lsrs	r2, r2, #16
    c9a4:	18eb      	adds	r3, r5, r3
    c9a6:	6835      	ldr	r5, [r6, #0]
    c9a8:	19db      	adds	r3, r3, r7
    c9aa:	0c2f      	lsrs	r7, r5, #16
    c9ac:	9d03      	ldr	r5, [sp, #12]
    c9ae:	436a      	muls	r2, r5
    c9b0:	18ba      	adds	r2, r7, r2
    c9b2:	0c1f      	lsrs	r7, r3, #16
    c9b4:	19d2      	adds	r2, r2, r7
    c9b6:	0c17      	lsrs	r7, r2, #16
    c9b8:	b29b      	uxth	r3, r3
    c9ba:	0412      	lsls	r2, r2, #16
    c9bc:	4313      	orrs	r3, r2
    c9be:	c608      	stmia	r6!, {r3}
    c9c0:	9a01      	ldr	r2, [sp, #4]
    c9c2:	9b04      	ldr	r3, [sp, #16]
    c9c4:	429a      	cmp	r2, r3
    c9c6:	d3e2      	bcc.n	c98e <__multiply+0x6a>
    c9c8:	9b05      	ldr	r3, [sp, #20]
    c9ca:	605f      	str	r7, [r3, #4]
    c9cc:	6823      	ldr	r3, [r4, #0]
    c9ce:	0c1b      	lsrs	r3, r3, #16
    c9d0:	9301      	str	r3, [sp, #4]
    c9d2:	d021      	beq.n	ca18 <__multiply+0xf4>
    c9d4:	2200      	movs	r2, #0
    c9d6:	1c0d      	adds	r5, r1, #0
    c9d8:	680b      	ldr	r3, [r1, #0]
    c9da:	9f02      	ldr	r7, [sp, #8]
    c9dc:	9203      	str	r2, [sp, #12]
    c9de:	883e      	ldrh	r6, [r7, #0]
    c9e0:	9a01      	ldr	r2, [sp, #4]
    c9e2:	b29b      	uxth	r3, r3
    c9e4:	4356      	muls	r6, r2
    c9e6:	682a      	ldr	r2, [r5, #0]
    c9e8:	9505      	str	r5, [sp, #20]
    c9ea:	0c12      	lsrs	r2, r2, #16
    c9ec:	18b2      	adds	r2, r6, r2
    c9ee:	9e03      	ldr	r6, [sp, #12]
    c9f0:	1992      	adds	r2, r2, r6
    c9f2:	0416      	lsls	r6, r2, #16
    c9f4:	4333      	orrs	r3, r6
    c9f6:	602b      	str	r3, [r5, #0]
    c9f8:	cf08      	ldmia	r7!, {r3}
    c9fa:	9e01      	ldr	r6, [sp, #4]
    c9fc:	0c1b      	lsrs	r3, r3, #16
    c9fe:	4373      	muls	r3, r6
    ca00:	88ae      	ldrh	r6, [r5, #4]
    ca02:	0c12      	lsrs	r2, r2, #16
    ca04:	199b      	adds	r3, r3, r6
    ca06:	189b      	adds	r3, r3, r2
    ca08:	0c1a      	lsrs	r2, r3, #16
    ca0a:	9203      	str	r2, [sp, #12]
    ca0c:	9a04      	ldr	r2, [sp, #16]
    ca0e:	3504      	adds	r5, #4
    ca10:	42ba      	cmp	r2, r7
    ca12:	d8e4      	bhi.n	c9de <__multiply+0xba>
    ca14:	9a05      	ldr	r2, [sp, #20]
    ca16:	6053      	str	r3, [r2, #4]
    ca18:	3404      	adds	r4, #4
    ca1a:	3104      	adds	r1, #4
    ca1c:	e7ac      	b.n	c978 <__multiply+0x54>
    ca1e:	3804      	subs	r0, #4
    ca20:	6803      	ldr	r3, [r0, #0]
    ca22:	2b00      	cmp	r3, #0
    ca24:	d105      	bne.n	ca32 <__multiply+0x10e>
    ca26:	9b00      	ldr	r3, [sp, #0]
    ca28:	3b01      	subs	r3, #1
    ca2a:	9300      	str	r3, [sp, #0]
    ca2c:	9b00      	ldr	r3, [sp, #0]
    ca2e:	2b00      	cmp	r3, #0
    ca30:	dcf5      	bgt.n	ca1e <__multiply+0xfa>
    ca32:	4663      	mov	r3, ip
    ca34:	4660      	mov	r0, ip
    ca36:	9a00      	ldr	r2, [sp, #0]
    ca38:	611a      	str	r2, [r3, #16]
    ca3a:	b009      	add	sp, #36	; 0x24
    ca3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0000ca40 <__pow5mult>:
    ca40:	2303      	movs	r3, #3
    ca42:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    ca44:	4013      	ands	r3, r2
    ca46:	1c05      	adds	r5, r0, #0
    ca48:	1c0e      	adds	r6, r1, #0
    ca4a:	1c14      	adds	r4, r2, #0
    ca4c:	2b00      	cmp	r3, #0
    ca4e:	d007      	beq.n	ca60 <__pow5mult+0x20>
    ca50:	4a22      	ldr	r2, [pc, #136]	; (cadc <__pow5mult+0x9c>)
    ca52:	3b01      	subs	r3, #1
    ca54:	009b      	lsls	r3, r3, #2
    ca56:	589a      	ldr	r2, [r3, r2]
    ca58:	2300      	movs	r3, #0
    ca5a:	f7ff fe94 	bl	c786 <__multadd>
    ca5e:	1c06      	adds	r6, r0, #0
    ca60:	10a3      	asrs	r3, r4, #2
    ca62:	9301      	str	r3, [sp, #4]
    ca64:	d037      	beq.n	cad6 <__pow5mult+0x96>
    ca66:	6a6c      	ldr	r4, [r5, #36]	; 0x24
    ca68:	2c00      	cmp	r4, #0
    ca6a:	d107      	bne.n	ca7c <__pow5mult+0x3c>
    ca6c:	2010      	movs	r0, #16
    ca6e:	f7fb ff6f 	bl	8950 <malloc>
    ca72:	6268      	str	r0, [r5, #36]	; 0x24
    ca74:	6044      	str	r4, [r0, #4]
    ca76:	6084      	str	r4, [r0, #8]
    ca78:	6004      	str	r4, [r0, #0]
    ca7a:	60c4      	str	r4, [r0, #12]
    ca7c:	6a6f      	ldr	r7, [r5, #36]	; 0x24
    ca7e:	68bc      	ldr	r4, [r7, #8]
    ca80:	2c00      	cmp	r4, #0
    ca82:	d110      	bne.n	caa6 <__pow5mult+0x66>
    ca84:	1c28      	adds	r0, r5, #0
    ca86:	4916      	ldr	r1, [pc, #88]	; (cae0 <__pow5mult+0xa0>)
    ca88:	f7ff ff43 	bl	c912 <__i2b>
    ca8c:	2300      	movs	r3, #0
    ca8e:	60b8      	str	r0, [r7, #8]
    ca90:	1c04      	adds	r4, r0, #0
    ca92:	6003      	str	r3, [r0, #0]
    ca94:	e007      	b.n	caa6 <__pow5mult+0x66>
    ca96:	9b01      	ldr	r3, [sp, #4]
    ca98:	105b      	asrs	r3, r3, #1
    ca9a:	9301      	str	r3, [sp, #4]
    ca9c:	d01b      	beq.n	cad6 <__pow5mult+0x96>
    ca9e:	6820      	ldr	r0, [r4, #0]
    caa0:	2800      	cmp	r0, #0
    caa2:	d00f      	beq.n	cac4 <__pow5mult+0x84>
    caa4:	1c04      	adds	r4, r0, #0
    caa6:	9b01      	ldr	r3, [sp, #4]
    caa8:	07db      	lsls	r3, r3, #31
    caaa:	d5f4      	bpl.n	ca96 <__pow5mult+0x56>
    caac:	1c31      	adds	r1, r6, #0
    caae:	1c22      	adds	r2, r4, #0
    cab0:	1c28      	adds	r0, r5, #0
    cab2:	f7ff ff37 	bl	c924 <__multiply>
    cab6:	1c07      	adds	r7, r0, #0
    cab8:	1c31      	adds	r1, r6, #0
    caba:	1c28      	adds	r0, r5, #0
    cabc:	f7ff fe4a 	bl	c754 <_Bfree>
    cac0:	1c3e      	adds	r6, r7, #0
    cac2:	e7e8      	b.n	ca96 <__pow5mult+0x56>
    cac4:	1c28      	adds	r0, r5, #0
    cac6:	1c21      	adds	r1, r4, #0
    cac8:	1c22      	adds	r2, r4, #0
    caca:	f7ff ff2b 	bl	c924 <__multiply>
    cace:	2300      	movs	r3, #0
    cad0:	6020      	str	r0, [r4, #0]
    cad2:	6003      	str	r3, [r0, #0]
    cad4:	e7e6      	b.n	caa4 <__pow5mult+0x64>
    cad6:	1c30      	adds	r0, r6, #0
    cad8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    cada:	46c0      	nop			; (mov r8, r8)
    cadc:	0000e6d8 	.word	0x0000e6d8
    cae0:	00000271 	.word	0x00000271

0000cae4 <__lshift>:
    cae4:	b5f0      	push	{r4, r5, r6, r7, lr}
    cae6:	1c0c      	adds	r4, r1, #0
    cae8:	1c17      	adds	r7, r2, #0
    caea:	6923      	ldr	r3, [r4, #16]
    caec:	1155      	asrs	r5, r2, #5
    caee:	b085      	sub	sp, #20
    caf0:	18eb      	adds	r3, r5, r3
    caf2:	9301      	str	r3, [sp, #4]
    caf4:	3301      	adds	r3, #1
    caf6:	9300      	str	r3, [sp, #0]
    caf8:	6849      	ldr	r1, [r1, #4]
    cafa:	68a3      	ldr	r3, [r4, #8]
    cafc:	9002      	str	r0, [sp, #8]
    cafe:	9a00      	ldr	r2, [sp, #0]
    cb00:	429a      	cmp	r2, r3
    cb02:	dd02      	ble.n	cb0a <__lshift+0x26>
    cb04:	3101      	adds	r1, #1
    cb06:	005b      	lsls	r3, r3, #1
    cb08:	e7f9      	b.n	cafe <__lshift+0x1a>
    cb0a:	9802      	ldr	r0, [sp, #8]
    cb0c:	f7ff fdea 	bl	c6e4 <_Balloc>
    cb10:	1c02      	adds	r2, r0, #0
    cb12:	1c06      	adds	r6, r0, #0
    cb14:	2300      	movs	r3, #0
    cb16:	3214      	adds	r2, #20
    cb18:	42ab      	cmp	r3, r5
    cb1a:	da04      	bge.n	cb26 <__lshift+0x42>
    cb1c:	2000      	movs	r0, #0
    cb1e:	0099      	lsls	r1, r3, #2
    cb20:	5050      	str	r0, [r2, r1]
    cb22:	3301      	adds	r3, #1
    cb24:	e7f8      	b.n	cb18 <__lshift+0x34>
    cb26:	43eb      	mvns	r3, r5
    cb28:	17db      	asrs	r3, r3, #31
    cb2a:	401d      	ands	r5, r3
    cb2c:	1c23      	adds	r3, r4, #0
    cb2e:	00ad      	lsls	r5, r5, #2
    cb30:	1955      	adds	r5, r2, r5
    cb32:	6922      	ldr	r2, [r4, #16]
    cb34:	3314      	adds	r3, #20
    cb36:	0092      	lsls	r2, r2, #2
    cb38:	189a      	adds	r2, r3, r2
    cb3a:	4694      	mov	ip, r2
    cb3c:	221f      	movs	r2, #31
    cb3e:	4017      	ands	r7, r2
    cb40:	d014      	beq.n	cb6c <__lshift+0x88>
    cb42:	3201      	adds	r2, #1
    cb44:	1bd2      	subs	r2, r2, r7
    cb46:	9203      	str	r2, [sp, #12]
    cb48:	2200      	movs	r2, #0
    cb4a:	6819      	ldr	r1, [r3, #0]
    cb4c:	1c28      	adds	r0, r5, #0
    cb4e:	40b9      	lsls	r1, r7
    cb50:	430a      	orrs	r2, r1
    cb52:	c504      	stmia	r5!, {r2}
    cb54:	cb04      	ldmia	r3!, {r2}
    cb56:	9903      	ldr	r1, [sp, #12]
    cb58:	40ca      	lsrs	r2, r1
    cb5a:	459c      	cmp	ip, r3
    cb5c:	d8f5      	bhi.n	cb4a <__lshift+0x66>
    cb5e:	6042      	str	r2, [r0, #4]
    cb60:	2a00      	cmp	r2, #0
    cb62:	d007      	beq.n	cb74 <__lshift+0x90>
    cb64:	9b01      	ldr	r3, [sp, #4]
    cb66:	3302      	adds	r3, #2
    cb68:	9300      	str	r3, [sp, #0]
    cb6a:	e003      	b.n	cb74 <__lshift+0x90>
    cb6c:	cb04      	ldmia	r3!, {r2}
    cb6e:	c504      	stmia	r5!, {r2}
    cb70:	459c      	cmp	ip, r3
    cb72:	d8fb      	bhi.n	cb6c <__lshift+0x88>
    cb74:	9b00      	ldr	r3, [sp, #0]
    cb76:	9802      	ldr	r0, [sp, #8]
    cb78:	3b01      	subs	r3, #1
    cb7a:	6133      	str	r3, [r6, #16]
    cb7c:	1c21      	adds	r1, r4, #0
    cb7e:	f7ff fde9 	bl	c754 <_Bfree>
    cb82:	1c30      	adds	r0, r6, #0
    cb84:	b005      	add	sp, #20
    cb86:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000cb88 <__mcmp>:
    cb88:	6903      	ldr	r3, [r0, #16]
    cb8a:	690a      	ldr	r2, [r1, #16]
    cb8c:	b510      	push	{r4, lr}
    cb8e:	1a9b      	subs	r3, r3, r2
    cb90:	1c04      	adds	r4, r0, #0
    cb92:	1e18      	subs	r0, r3, #0
    cb94:	d112      	bne.n	cbbc <__mcmp+0x34>
    cb96:	0093      	lsls	r3, r2, #2
    cb98:	3414      	adds	r4, #20
    cb9a:	3114      	adds	r1, #20
    cb9c:	18e2      	adds	r2, r4, r3
    cb9e:	18c9      	adds	r1, r1, r3
    cba0:	3a04      	subs	r2, #4
    cba2:	3904      	subs	r1, #4
    cba4:	6813      	ldr	r3, [r2, #0]
    cba6:	6808      	ldr	r0, [r1, #0]
    cba8:	4283      	cmp	r3, r0
    cbaa:	d004      	beq.n	cbb6 <__mcmp+0x2e>
    cbac:	4283      	cmp	r3, r0
    cbae:	419b      	sbcs	r3, r3
    cbb0:	2001      	movs	r0, #1
    cbb2:	4318      	orrs	r0, r3
    cbb4:	e002      	b.n	cbbc <__mcmp+0x34>
    cbb6:	42a2      	cmp	r2, r4
    cbb8:	d8f2      	bhi.n	cba0 <__mcmp+0x18>
    cbba:	2000      	movs	r0, #0
    cbbc:	bd10      	pop	{r4, pc}

0000cbbe <__mdiff>:
    cbbe:	b5f0      	push	{r4, r5, r6, r7, lr}
    cbc0:	1c07      	adds	r7, r0, #0
    cbc2:	b085      	sub	sp, #20
    cbc4:	1c08      	adds	r0, r1, #0
    cbc6:	1c0c      	adds	r4, r1, #0
    cbc8:	1c11      	adds	r1, r2, #0
    cbca:	1c15      	adds	r5, r2, #0
    cbcc:	f7ff ffdc 	bl	cb88 <__mcmp>
    cbd0:	1e06      	subs	r6, r0, #0
    cbd2:	d107      	bne.n	cbe4 <__mdiff+0x26>
    cbd4:	1c38      	adds	r0, r7, #0
    cbd6:	1c31      	adds	r1, r6, #0
    cbd8:	f7ff fd84 	bl	c6e4 <_Balloc>
    cbdc:	2301      	movs	r3, #1
    cbde:	6146      	str	r6, [r0, #20]
    cbe0:	6103      	str	r3, [r0, #16]
    cbe2:	e055      	b.n	cc90 <__mdiff+0xd2>
    cbe4:	2300      	movs	r3, #0
    cbe6:	9301      	str	r3, [sp, #4]
    cbe8:	4298      	cmp	r0, r3
    cbea:	da04      	bge.n	cbf6 <__mdiff+0x38>
    cbec:	1c23      	adds	r3, r4, #0
    cbee:	1c2c      	adds	r4, r5, #0
    cbf0:	1c1d      	adds	r5, r3, #0
    cbf2:	2301      	movs	r3, #1
    cbf4:	9301      	str	r3, [sp, #4]
    cbf6:	1c38      	adds	r0, r7, #0
    cbf8:	6861      	ldr	r1, [r4, #4]
    cbfa:	f7ff fd73 	bl	c6e4 <_Balloc>
    cbfe:	9b01      	ldr	r3, [sp, #4]
    cc00:	6926      	ldr	r6, [r4, #16]
    cc02:	1c2f      	adds	r7, r5, #0
    cc04:	60c3      	str	r3, [r0, #12]
    cc06:	3414      	adds	r4, #20
    cc08:	00b3      	lsls	r3, r6, #2
    cc0a:	18e3      	adds	r3, r4, r3
    cc0c:	1c02      	adds	r2, r0, #0
    cc0e:	9302      	str	r3, [sp, #8]
    cc10:	692b      	ldr	r3, [r5, #16]
    cc12:	2500      	movs	r5, #0
    cc14:	3714      	adds	r7, #20
    cc16:	009b      	lsls	r3, r3, #2
    cc18:	18fb      	adds	r3, r7, r3
    cc1a:	9303      	str	r3, [sp, #12]
    cc1c:	3214      	adds	r2, #20
    cc1e:	cc08      	ldmia	r4!, {r3}
    cc20:	4669      	mov	r1, sp
    cc22:	469c      	mov	ip, r3
    cc24:	cf08      	ldmia	r7!, {r3}
    cc26:	3204      	adds	r2, #4
    cc28:	9300      	str	r3, [sp, #0]
    cc2a:	4663      	mov	r3, ip
    cc2c:	808b      	strh	r3, [r1, #4]
    cc2e:	888b      	ldrh	r3, [r1, #4]
    cc30:	195d      	adds	r5, r3, r5
    cc32:	9b00      	ldr	r3, [sp, #0]
    cc34:	b29b      	uxth	r3, r3
    cc36:	1aeb      	subs	r3, r5, r3
    cc38:	4665      	mov	r5, ip
    cc3a:	9301      	str	r3, [sp, #4]
    cc3c:	9b00      	ldr	r3, [sp, #0]
    cc3e:	0c2d      	lsrs	r5, r5, #16
    cc40:	0c19      	lsrs	r1, r3, #16
    cc42:	9b01      	ldr	r3, [sp, #4]
    cc44:	1a69      	subs	r1, r5, r1
    cc46:	141d      	asrs	r5, r3, #16
    cc48:	1f13      	subs	r3, r2, #4
    cc4a:	469c      	mov	ip, r3
    cc4c:	466b      	mov	r3, sp
    cc4e:	1949      	adds	r1, r1, r5
    cc50:	889b      	ldrh	r3, [r3, #4]
    cc52:	140d      	asrs	r5, r1, #16
    cc54:	0409      	lsls	r1, r1, #16
    cc56:	430b      	orrs	r3, r1
    cc58:	4661      	mov	r1, ip
    cc5a:	600b      	str	r3, [r1, #0]
    cc5c:	9b03      	ldr	r3, [sp, #12]
    cc5e:	429f      	cmp	r7, r3
    cc60:	d3dd      	bcc.n	cc1e <__mdiff+0x60>
    cc62:	9902      	ldr	r1, [sp, #8]
    cc64:	1c13      	adds	r3, r2, #0
    cc66:	428c      	cmp	r4, r1
    cc68:	d20b      	bcs.n	cc82 <__mdiff+0xc4>
    cc6a:	cc08      	ldmia	r4!, {r3}
    cc6c:	b299      	uxth	r1, r3
    cc6e:	1949      	adds	r1, r1, r5
    cc70:	140d      	asrs	r5, r1, #16
    cc72:	0c1b      	lsrs	r3, r3, #16
    cc74:	18eb      	adds	r3, r5, r3
    cc76:	141d      	asrs	r5, r3, #16
    cc78:	b289      	uxth	r1, r1
    cc7a:	041b      	lsls	r3, r3, #16
    cc7c:	430b      	orrs	r3, r1
    cc7e:	c208      	stmia	r2!, {r3}
    cc80:	e7ef      	b.n	cc62 <__mdiff+0xa4>
    cc82:	3b04      	subs	r3, #4
    cc84:	681a      	ldr	r2, [r3, #0]
    cc86:	2a00      	cmp	r2, #0
    cc88:	d101      	bne.n	cc8e <__mdiff+0xd0>
    cc8a:	3e01      	subs	r6, #1
    cc8c:	e7f9      	b.n	cc82 <__mdiff+0xc4>
    cc8e:	6106      	str	r6, [r0, #16]
    cc90:	b005      	add	sp, #20
    cc92:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000cc94 <__ulp>:
    cc94:	4b0f      	ldr	r3, [pc, #60]	; (ccd4 <__ulp+0x40>)
    cc96:	b510      	push	{r4, lr}
    cc98:	4019      	ands	r1, r3
    cc9a:	4b0f      	ldr	r3, [pc, #60]	; (ccd8 <__ulp+0x44>)
    cc9c:	18c9      	adds	r1, r1, r3
    cc9e:	2900      	cmp	r1, #0
    cca0:	dd02      	ble.n	cca8 <__ulp+0x14>
    cca2:	2200      	movs	r2, #0
    cca4:	1c0b      	adds	r3, r1, #0
    cca6:	e011      	b.n	cccc <__ulp+0x38>
    cca8:	4249      	negs	r1, r1
    ccaa:	1509      	asrs	r1, r1, #20
    ccac:	2200      	movs	r2, #0
    ccae:	2300      	movs	r3, #0
    ccb0:	2913      	cmp	r1, #19
    ccb2:	dc04      	bgt.n	ccbe <__ulp+0x2a>
    ccb4:	2080      	movs	r0, #128	; 0x80
    ccb6:	0300      	lsls	r0, r0, #12
    ccb8:	4108      	asrs	r0, r1
    ccba:	1c03      	adds	r3, r0, #0
    ccbc:	e006      	b.n	cccc <__ulp+0x38>
    ccbe:	2001      	movs	r0, #1
    ccc0:	2932      	cmp	r1, #50	; 0x32
    ccc2:	dc02      	bgt.n	ccca <__ulp+0x36>
    ccc4:	2433      	movs	r4, #51	; 0x33
    ccc6:	1a61      	subs	r1, r4, r1
    ccc8:	4088      	lsls	r0, r1
    ccca:	1c02      	adds	r2, r0, #0
    cccc:	1c10      	adds	r0, r2, #0
    ccce:	1c19      	adds	r1, r3, #0
    ccd0:	bd10      	pop	{r4, pc}
    ccd2:	46c0      	nop			; (mov r8, r8)
    ccd4:	7ff00000 	.word	0x7ff00000
    ccd8:	fcc00000 	.word	0xfcc00000

0000ccdc <__b2d>:
    ccdc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    ccde:	1c06      	adds	r6, r0, #0
    cce0:	6903      	ldr	r3, [r0, #16]
    cce2:	3614      	adds	r6, #20
    cce4:	009b      	lsls	r3, r3, #2
    cce6:	18f3      	adds	r3, r6, r3
    cce8:	1f1d      	subs	r5, r3, #4
    ccea:	682c      	ldr	r4, [r5, #0]
    ccec:	1c0f      	adds	r7, r1, #0
    ccee:	1c20      	adds	r0, r4, #0
    ccf0:	9301      	str	r3, [sp, #4]
    ccf2:	f7ff fdc4 	bl	c87e <__hi0bits>
    ccf6:	2320      	movs	r3, #32
    ccf8:	1a1b      	subs	r3, r3, r0
    ccfa:	603b      	str	r3, [r7, #0]
    ccfc:	491f      	ldr	r1, [pc, #124]	; (cd7c <__b2d+0xa0>)
    ccfe:	280a      	cmp	r0, #10
    cd00:	dc13      	bgt.n	cd2a <__b2d+0x4e>
    cd02:	230b      	movs	r3, #11
    cd04:	1c27      	adds	r7, r4, #0
    cd06:	1a1b      	subs	r3, r3, r0
    cd08:	40df      	lsrs	r7, r3
    cd0a:	4339      	orrs	r1, r7
    cd0c:	469c      	mov	ip, r3
    cd0e:	1c0b      	adds	r3, r1, #0
    cd10:	2100      	movs	r1, #0
    cd12:	42b5      	cmp	r5, r6
    cd14:	d902      	bls.n	cd1c <__b2d+0x40>
    cd16:	9901      	ldr	r1, [sp, #4]
    cd18:	3908      	subs	r1, #8
    cd1a:	6809      	ldr	r1, [r1, #0]
    cd1c:	4665      	mov	r5, ip
    cd1e:	3015      	adds	r0, #21
    cd20:	40e9      	lsrs	r1, r5
    cd22:	4084      	lsls	r4, r0
    cd24:	4321      	orrs	r1, r4
    cd26:	1c0a      	adds	r2, r1, #0
    cd28:	e024      	b.n	cd74 <__b2d+0x98>
    cd2a:	2700      	movs	r7, #0
    cd2c:	42b5      	cmp	r5, r6
    cd2e:	d902      	bls.n	cd36 <__b2d+0x5a>
    cd30:	9d01      	ldr	r5, [sp, #4]
    cd32:	3d08      	subs	r5, #8
    cd34:	682f      	ldr	r7, [r5, #0]
    cd36:	230b      	movs	r3, #11
    cd38:	425b      	negs	r3, r3
    cd3a:	469c      	mov	ip, r3
    cd3c:	4484      	add	ip, r0
    cd3e:	4663      	mov	r3, ip
    cd40:	2b00      	cmp	r3, #0
    cd42:	d014      	beq.n	cd6e <__b2d+0x92>
    cd44:	232b      	movs	r3, #43	; 0x2b
    cd46:	1a18      	subs	r0, r3, r0
    cd48:	4663      	mov	r3, ip
    cd4a:	409c      	lsls	r4, r3
    cd4c:	4321      	orrs	r1, r4
    cd4e:	1c3c      	adds	r4, r7, #0
    cd50:	40c4      	lsrs	r4, r0
    cd52:	4321      	orrs	r1, r4
    cd54:	1c0b      	adds	r3, r1, #0
    cd56:	2400      	movs	r4, #0
    cd58:	42b5      	cmp	r5, r6
    cd5a:	d901      	bls.n	cd60 <__b2d+0x84>
    cd5c:	3d04      	subs	r5, #4
    cd5e:	682c      	ldr	r4, [r5, #0]
    cd60:	40c4      	lsrs	r4, r0
    cd62:	4661      	mov	r1, ip
    cd64:	1c20      	adds	r0, r4, #0
    cd66:	408f      	lsls	r7, r1
    cd68:	4338      	orrs	r0, r7
    cd6a:	1c02      	adds	r2, r0, #0
    cd6c:	e002      	b.n	cd74 <__b2d+0x98>
    cd6e:	4321      	orrs	r1, r4
    cd70:	1c0b      	adds	r3, r1, #0
    cd72:	1c3a      	adds	r2, r7, #0
    cd74:	1c10      	adds	r0, r2, #0
    cd76:	1c19      	adds	r1, r3, #0
    cd78:	b003      	add	sp, #12
    cd7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    cd7c:	3ff00000 	.word	0x3ff00000

0000cd80 <__d2b>:
    cd80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    cd82:	1c1d      	adds	r5, r3, #0
    cd84:	2101      	movs	r1, #1
    cd86:	9f08      	ldr	r7, [sp, #32]
    cd88:	1c14      	adds	r4, r2, #0
    cd8a:	f7ff fcab 	bl	c6e4 <_Balloc>
    cd8e:	032b      	lsls	r3, r5, #12
    cd90:	006d      	lsls	r5, r5, #1
    cd92:	1c06      	adds	r6, r0, #0
    cd94:	0b1b      	lsrs	r3, r3, #12
    cd96:	0d6d      	lsrs	r5, r5, #21
    cd98:	d002      	beq.n	cda0 <__d2b+0x20>
    cd9a:	2280      	movs	r2, #128	; 0x80
    cd9c:	0352      	lsls	r2, r2, #13
    cd9e:	4313      	orrs	r3, r2
    cda0:	9301      	str	r3, [sp, #4]
    cda2:	2c00      	cmp	r4, #0
    cda4:	d018      	beq.n	cdd8 <__d2b+0x58>
    cda6:	4668      	mov	r0, sp
    cda8:	9400      	str	r4, [sp, #0]
    cdaa:	f7ff fd83 	bl	c8b4 <__lo0bits>
    cdae:	9c00      	ldr	r4, [sp, #0]
    cdb0:	2800      	cmp	r0, #0
    cdb2:	d009      	beq.n	cdc8 <__d2b+0x48>
    cdb4:	2320      	movs	r3, #32
    cdb6:	9a01      	ldr	r2, [sp, #4]
    cdb8:	1a19      	subs	r1, r3, r0
    cdba:	1c13      	adds	r3, r2, #0
    cdbc:	408b      	lsls	r3, r1
    cdbe:	40c2      	lsrs	r2, r0
    cdc0:	4323      	orrs	r3, r4
    cdc2:	6173      	str	r3, [r6, #20]
    cdc4:	9201      	str	r2, [sp, #4]
    cdc6:	e000      	b.n	cdca <__d2b+0x4a>
    cdc8:	6174      	str	r4, [r6, #20]
    cdca:	9c01      	ldr	r4, [sp, #4]
    cdcc:	61b4      	str	r4, [r6, #24]
    cdce:	1e63      	subs	r3, r4, #1
    cdd0:	419c      	sbcs	r4, r3
    cdd2:	3401      	adds	r4, #1
    cdd4:	6134      	str	r4, [r6, #16]
    cdd6:	e007      	b.n	cde8 <__d2b+0x68>
    cdd8:	a801      	add	r0, sp, #4
    cdda:	f7ff fd6b 	bl	c8b4 <__lo0bits>
    cdde:	2401      	movs	r4, #1
    cde0:	9b01      	ldr	r3, [sp, #4]
    cde2:	6134      	str	r4, [r6, #16]
    cde4:	6173      	str	r3, [r6, #20]
    cde6:	3020      	adds	r0, #32
    cde8:	2d00      	cmp	r5, #0
    cdea:	d006      	beq.n	cdfa <__d2b+0x7a>
    cdec:	4b0b      	ldr	r3, [pc, #44]	; (ce1c <__d2b+0x9c>)
    cdee:	18ed      	adds	r5, r5, r3
    cdf0:	2335      	movs	r3, #53	; 0x35
    cdf2:	182d      	adds	r5, r5, r0
    cdf4:	603d      	str	r5, [r7, #0]
    cdf6:	1a18      	subs	r0, r3, r0
    cdf8:	e00b      	b.n	ce12 <__d2b+0x92>
    cdfa:	4b09      	ldr	r3, [pc, #36]	; (ce20 <__d2b+0xa0>)
    cdfc:	18c0      	adds	r0, r0, r3
    cdfe:	4b09      	ldr	r3, [pc, #36]	; (ce24 <__d2b+0xa4>)
    ce00:	6038      	str	r0, [r7, #0]
    ce02:	18e3      	adds	r3, r4, r3
    ce04:	009b      	lsls	r3, r3, #2
    ce06:	18f3      	adds	r3, r6, r3
    ce08:	6958      	ldr	r0, [r3, #20]
    ce0a:	f7ff fd38 	bl	c87e <__hi0bits>
    ce0e:	0164      	lsls	r4, r4, #5
    ce10:	1a20      	subs	r0, r4, r0
    ce12:	9b09      	ldr	r3, [sp, #36]	; 0x24
    ce14:	6018      	str	r0, [r3, #0]
    ce16:	1c30      	adds	r0, r6, #0
    ce18:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    ce1a:	46c0      	nop			; (mov r8, r8)
    ce1c:	fffffbcd 	.word	0xfffffbcd
    ce20:	fffffbce 	.word	0xfffffbce
    ce24:	3fffffff 	.word	0x3fffffff

0000ce28 <__ratio>:
    ce28:	b5f0      	push	{r4, r5, r6, r7, lr}
    ce2a:	b087      	sub	sp, #28
    ce2c:	1c0e      	adds	r6, r1, #0
    ce2e:	a904      	add	r1, sp, #16
    ce30:	1c07      	adds	r7, r0, #0
    ce32:	f7ff ff53 	bl	ccdc <__b2d>
    ce36:	1c04      	adds	r4, r0, #0
    ce38:	1c0d      	adds	r5, r1, #0
    ce3a:	1c30      	adds	r0, r6, #0
    ce3c:	a905      	add	r1, sp, #20
    ce3e:	9400      	str	r4, [sp, #0]
    ce40:	9501      	str	r5, [sp, #4]
    ce42:	f7ff ff4b 	bl	ccdc <__b2d>
    ce46:	9b04      	ldr	r3, [sp, #16]
    ce48:	9a05      	ldr	r2, [sp, #20]
    ce4a:	693f      	ldr	r7, [r7, #16]
    ce4c:	1a9a      	subs	r2, r3, r2
    ce4e:	6933      	ldr	r3, [r6, #16]
    ce50:	9002      	str	r0, [sp, #8]
    ce52:	9103      	str	r1, [sp, #12]
    ce54:	1afb      	subs	r3, r7, r3
    ce56:	015b      	lsls	r3, r3, #5
    ce58:	18d3      	adds	r3, r2, r3
    ce5a:	2b00      	cmp	r3, #0
    ce5c:	dd03      	ble.n	ce66 <__ratio+0x3e>
    ce5e:	051b      	lsls	r3, r3, #20
    ce60:	195b      	adds	r3, r3, r5
    ce62:	9301      	str	r3, [sp, #4]
    ce64:	e002      	b.n	ce6c <__ratio+0x44>
    ce66:	051b      	lsls	r3, r3, #20
    ce68:	1acb      	subs	r3, r1, r3
    ce6a:	9303      	str	r3, [sp, #12]
    ce6c:	9800      	ldr	r0, [sp, #0]
    ce6e:	9901      	ldr	r1, [sp, #4]
    ce70:	9a02      	ldr	r2, [sp, #8]
    ce72:	9b03      	ldr	r3, [sp, #12]
    ce74:	f7f9 fde4 	bl	6a40 <__aeabi_ddiv>
    ce78:	b007      	add	sp, #28
    ce7a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000ce7c <__copybits>:
    ce7c:	1c13      	adds	r3, r2, #0
    ce7e:	3901      	subs	r1, #1
    ce80:	b510      	push	{r4, lr}
    ce82:	1149      	asrs	r1, r1, #5
    ce84:	6912      	ldr	r2, [r2, #16]
    ce86:	3101      	adds	r1, #1
    ce88:	0089      	lsls	r1, r1, #2
    ce8a:	3314      	adds	r3, #20
    ce8c:	0092      	lsls	r2, r2, #2
    ce8e:	1841      	adds	r1, r0, r1
    ce90:	189a      	adds	r2, r3, r2
    ce92:	4293      	cmp	r3, r2
    ce94:	d202      	bcs.n	ce9c <__copybits+0x20>
    ce96:	cb10      	ldmia	r3!, {r4}
    ce98:	c010      	stmia	r0!, {r4}
    ce9a:	e7fa      	b.n	ce92 <__copybits+0x16>
    ce9c:	4288      	cmp	r0, r1
    ce9e:	d202      	bcs.n	cea6 <__copybits+0x2a>
    cea0:	2300      	movs	r3, #0
    cea2:	c008      	stmia	r0!, {r3}
    cea4:	e7fa      	b.n	ce9c <__copybits+0x20>
    cea6:	bd10      	pop	{r4, pc}

0000cea8 <__any_on>:
    cea8:	b530      	push	{r4, r5, lr}
    ceaa:	1c04      	adds	r4, r0, #0
    ceac:	6902      	ldr	r2, [r0, #16]
    ceae:	3414      	adds	r4, #20
    ceb0:	114b      	asrs	r3, r1, #5
    ceb2:	4293      	cmp	r3, r2
    ceb4:	dc0c      	bgt.n	ced0 <__any_on+0x28>
    ceb6:	da0c      	bge.n	ced2 <__any_on+0x2a>
    ceb8:	221f      	movs	r2, #31
    ceba:	4011      	ands	r1, r2
    cebc:	d009      	beq.n	ced2 <__any_on+0x2a>
    cebe:	009a      	lsls	r2, r3, #2
    cec0:	5915      	ldr	r5, [r2, r4]
    cec2:	2001      	movs	r0, #1
    cec4:	1c2a      	adds	r2, r5, #0
    cec6:	40ca      	lsrs	r2, r1
    cec8:	408a      	lsls	r2, r1
    ceca:	42aa      	cmp	r2, r5
    cecc:	d10c      	bne.n	cee8 <__any_on+0x40>
    cece:	e000      	b.n	ced2 <__any_on+0x2a>
    ced0:	1c13      	adds	r3, r2, #0
    ced2:	009b      	lsls	r3, r3, #2
    ced4:	18e3      	adds	r3, r4, r3
    ced6:	42a3      	cmp	r3, r4
    ced8:	d905      	bls.n	cee6 <__any_on+0x3e>
    ceda:	3b04      	subs	r3, #4
    cedc:	681a      	ldr	r2, [r3, #0]
    cede:	2a00      	cmp	r2, #0
    cee0:	d0f9      	beq.n	ced6 <__any_on+0x2e>
    cee2:	2001      	movs	r0, #1
    cee4:	e000      	b.n	cee8 <__any_on+0x40>
    cee6:	2000      	movs	r0, #0
    cee8:	bd30      	pop	{r4, r5, pc}

0000ceea <_calloc_r>:
    ceea:	434a      	muls	r2, r1
    ceec:	b538      	push	{r3, r4, r5, lr}
    ceee:	1c11      	adds	r1, r2, #0
    cef0:	1c14      	adds	r4, r2, #0
    cef2:	f7fb fda3 	bl	8a3c <_malloc_r>
    cef6:	1e05      	subs	r5, r0, #0
    cef8:	d003      	beq.n	cf02 <_calloc_r+0x18>
    cefa:	2100      	movs	r1, #0
    cefc:	1c22      	adds	r2, r4, #0
    cefe:	f7fb fd4f 	bl	89a0 <memset>
    cf02:	1c28      	adds	r0, r5, #0
    cf04:	bd38      	pop	{r3, r4, r5, pc}

0000cf06 <_realloc_r>:
    cf06:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    cf08:	1c06      	adds	r6, r0, #0
    cf0a:	1c0c      	adds	r4, r1, #0
    cf0c:	1c15      	adds	r5, r2, #0
    cf0e:	2900      	cmp	r1, #0
    cf10:	d104      	bne.n	cf1c <_realloc_r+0x16>
    cf12:	1c11      	adds	r1, r2, #0
    cf14:	f7fb fd92 	bl	8a3c <_malloc_r>
    cf18:	1c04      	adds	r4, r0, #0
    cf1a:	e018      	b.n	cf4e <_realloc_r+0x48>
    cf1c:	2a00      	cmp	r2, #0
    cf1e:	d103      	bne.n	cf28 <_realloc_r+0x22>
    cf20:	f7fb fd46 	bl	89b0 <_free_r>
    cf24:	1c2c      	adds	r4, r5, #0
    cf26:	e012      	b.n	cf4e <_realloc_r+0x48>
    cf28:	f000 fb52 	bl	d5d0 <_malloc_usable_size_r>
    cf2c:	42a8      	cmp	r0, r5
    cf2e:	d20e      	bcs.n	cf4e <_realloc_r+0x48>
    cf30:	1c30      	adds	r0, r6, #0
    cf32:	1c29      	adds	r1, r5, #0
    cf34:	f7fb fd82 	bl	8a3c <_malloc_r>
    cf38:	1e07      	subs	r7, r0, #0
    cf3a:	d007      	beq.n	cf4c <_realloc_r+0x46>
    cf3c:	1c21      	adds	r1, r4, #0
    cf3e:	1c2a      	adds	r2, r5, #0
    cf40:	f7fb fd25 	bl	898e <memcpy>
    cf44:	1c30      	adds	r0, r6, #0
    cf46:	1c21      	adds	r1, r4, #0
    cf48:	f7fb fd32 	bl	89b0 <_free_r>
    cf4c:	1c3c      	adds	r4, r7, #0
    cf4e:	1c20      	adds	r0, r4, #0
    cf50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0000cf54 <__ssputs_r>:
    cf54:	b5f0      	push	{r4, r5, r6, r7, lr}
    cf56:	688e      	ldr	r6, [r1, #8]
    cf58:	b085      	sub	sp, #20
    cf5a:	1c07      	adds	r7, r0, #0
    cf5c:	1c0c      	adds	r4, r1, #0
    cf5e:	9203      	str	r2, [sp, #12]
    cf60:	9301      	str	r3, [sp, #4]
    cf62:	42b3      	cmp	r3, r6
    cf64:	d345      	bcc.n	cff2 <__ssputs_r+0x9e>
    cf66:	2390      	movs	r3, #144	; 0x90
    cf68:	898a      	ldrh	r2, [r1, #12]
    cf6a:	00db      	lsls	r3, r3, #3
    cf6c:	421a      	tst	r2, r3
    cf6e:	d03d      	beq.n	cfec <__ssputs_r+0x98>
    cf70:	2503      	movs	r5, #3
    cf72:	6909      	ldr	r1, [r1, #16]
    cf74:	6823      	ldr	r3, [r4, #0]
    cf76:	9801      	ldr	r0, [sp, #4]
    cf78:	1a5b      	subs	r3, r3, r1
    cf7a:	9302      	str	r3, [sp, #8]
    cf7c:	6963      	ldr	r3, [r4, #20]
    cf7e:	435d      	muls	r5, r3
    cf80:	0feb      	lsrs	r3, r5, #31
    cf82:	195d      	adds	r5, r3, r5
    cf84:	9b02      	ldr	r3, [sp, #8]
    cf86:	106d      	asrs	r5, r5, #1
    cf88:	3301      	adds	r3, #1
    cf8a:	181b      	adds	r3, r3, r0
    cf8c:	429d      	cmp	r5, r3
    cf8e:	d200      	bcs.n	cf92 <__ssputs_r+0x3e>
    cf90:	1c1d      	adds	r5, r3, #0
    cf92:	1c38      	adds	r0, r7, #0
    cf94:	0553      	lsls	r3, r2, #21
    cf96:	d50f      	bpl.n	cfb8 <__ssputs_r+0x64>
    cf98:	1c29      	adds	r1, r5, #0
    cf9a:	f7fb fd4f 	bl	8a3c <_malloc_r>
    cf9e:	1e06      	subs	r6, r0, #0
    cfa0:	d013      	beq.n	cfca <__ssputs_r+0x76>
    cfa2:	9a02      	ldr	r2, [sp, #8]
    cfa4:	6921      	ldr	r1, [r4, #16]
    cfa6:	f7fb fcf2 	bl	898e <memcpy>
    cfaa:	89a2      	ldrh	r2, [r4, #12]
    cfac:	4b18      	ldr	r3, [pc, #96]	; (d010 <__ssputs_r+0xbc>)
    cfae:	4013      	ands	r3, r2
    cfb0:	2280      	movs	r2, #128	; 0x80
    cfb2:	4313      	orrs	r3, r2
    cfb4:	81a3      	strh	r3, [r4, #12]
    cfb6:	e011      	b.n	cfdc <__ssputs_r+0x88>
    cfb8:	1c2a      	adds	r2, r5, #0
    cfba:	f7ff ffa4 	bl	cf06 <_realloc_r>
    cfbe:	1e06      	subs	r6, r0, #0
    cfc0:	d10c      	bne.n	cfdc <__ssputs_r+0x88>
    cfc2:	1c38      	adds	r0, r7, #0
    cfc4:	6921      	ldr	r1, [r4, #16]
    cfc6:	f7fb fcf3 	bl	89b0 <_free_r>
    cfca:	230c      	movs	r3, #12
    cfcc:	2240      	movs	r2, #64	; 0x40
    cfce:	2001      	movs	r0, #1
    cfd0:	603b      	str	r3, [r7, #0]
    cfd2:	89a3      	ldrh	r3, [r4, #12]
    cfd4:	4240      	negs	r0, r0
    cfd6:	4313      	orrs	r3, r2
    cfd8:	81a3      	strh	r3, [r4, #12]
    cfda:	e017      	b.n	d00c <__ssputs_r+0xb8>
    cfdc:	9b02      	ldr	r3, [sp, #8]
    cfde:	6126      	str	r6, [r4, #16]
    cfe0:	18f6      	adds	r6, r6, r3
    cfe2:	6026      	str	r6, [r4, #0]
    cfe4:	6165      	str	r5, [r4, #20]
    cfe6:	9e01      	ldr	r6, [sp, #4]
    cfe8:	1aed      	subs	r5, r5, r3
    cfea:	60a5      	str	r5, [r4, #8]
    cfec:	9b01      	ldr	r3, [sp, #4]
    cfee:	42b3      	cmp	r3, r6
    cff0:	d200      	bcs.n	cff4 <__ssputs_r+0xa0>
    cff2:	9e01      	ldr	r6, [sp, #4]
    cff4:	1c32      	adds	r2, r6, #0
    cff6:	6820      	ldr	r0, [r4, #0]
    cff8:	9903      	ldr	r1, [sp, #12]
    cffa:	f7ff fb5f 	bl	c6bc <memmove>
    cffe:	2000      	movs	r0, #0
    d000:	68a3      	ldr	r3, [r4, #8]
    d002:	1b9b      	subs	r3, r3, r6
    d004:	60a3      	str	r3, [r4, #8]
    d006:	6823      	ldr	r3, [r4, #0]
    d008:	199e      	adds	r6, r3, r6
    d00a:	6026      	str	r6, [r4, #0]
    d00c:	b005      	add	sp, #20
    d00e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    d010:	fffffb7f 	.word	0xfffffb7f

0000d014 <_svfiprintf_r>:
    d014:	b5f0      	push	{r4, r5, r6, r7, lr}
    d016:	b09f      	sub	sp, #124	; 0x7c
    d018:	9002      	str	r0, [sp, #8]
    d01a:	9305      	str	r3, [sp, #20]
    d01c:	898b      	ldrh	r3, [r1, #12]
    d01e:	1c0e      	adds	r6, r1, #0
    d020:	1c17      	adds	r7, r2, #0
    d022:	061b      	lsls	r3, r3, #24
    d024:	d510      	bpl.n	d048 <_svfiprintf_r+0x34>
    d026:	690b      	ldr	r3, [r1, #16]
    d028:	2b00      	cmp	r3, #0
    d02a:	d10d      	bne.n	d048 <_svfiprintf_r+0x34>
    d02c:	2140      	movs	r1, #64	; 0x40
    d02e:	f7fb fd05 	bl	8a3c <_malloc_r>
    d032:	6030      	str	r0, [r6, #0]
    d034:	6130      	str	r0, [r6, #16]
    d036:	2800      	cmp	r0, #0
    d038:	d104      	bne.n	d044 <_svfiprintf_r+0x30>
    d03a:	230c      	movs	r3, #12
    d03c:	9a02      	ldr	r2, [sp, #8]
    d03e:	3801      	subs	r0, #1
    d040:	6013      	str	r3, [r2, #0]
    d042:	e0d0      	b.n	d1e6 <_svfiprintf_r+0x1d2>
    d044:	2340      	movs	r3, #64	; 0x40
    d046:	6173      	str	r3, [r6, #20]
    d048:	2300      	movs	r3, #0
    d04a:	ad06      	add	r5, sp, #24
    d04c:	616b      	str	r3, [r5, #20]
    d04e:	3320      	adds	r3, #32
    d050:	766b      	strb	r3, [r5, #25]
    d052:	3310      	adds	r3, #16
    d054:	76ab      	strb	r3, [r5, #26]
    d056:	1c3c      	adds	r4, r7, #0
    d058:	7823      	ldrb	r3, [r4, #0]
    d05a:	2b00      	cmp	r3, #0
    d05c:	d103      	bne.n	d066 <_svfiprintf_r+0x52>
    d05e:	1be3      	subs	r3, r4, r7
    d060:	9304      	str	r3, [sp, #16]
    d062:	d012      	beq.n	d08a <_svfiprintf_r+0x76>
    d064:	e003      	b.n	d06e <_svfiprintf_r+0x5a>
    d066:	2b25      	cmp	r3, #37	; 0x25
    d068:	d0f9      	beq.n	d05e <_svfiprintf_r+0x4a>
    d06a:	3401      	adds	r4, #1
    d06c:	e7f4      	b.n	d058 <_svfiprintf_r+0x44>
    d06e:	9b04      	ldr	r3, [sp, #16]
    d070:	9802      	ldr	r0, [sp, #8]
    d072:	1c31      	adds	r1, r6, #0
    d074:	1c3a      	adds	r2, r7, #0
    d076:	f7ff ff6d 	bl	cf54 <__ssputs_r>
    d07a:	1c43      	adds	r3, r0, #1
    d07c:	d100      	bne.n	d080 <_svfiprintf_r+0x6c>
    d07e:	e0ac      	b.n	d1da <_svfiprintf_r+0x1c6>
    d080:	696a      	ldr	r2, [r5, #20]
    d082:	9b04      	ldr	r3, [sp, #16]
    d084:	4694      	mov	ip, r2
    d086:	4463      	add	r3, ip
    d088:	616b      	str	r3, [r5, #20]
    d08a:	7823      	ldrb	r3, [r4, #0]
    d08c:	2b00      	cmp	r3, #0
    d08e:	d100      	bne.n	d092 <_svfiprintf_r+0x7e>
    d090:	e0a3      	b.n	d1da <_svfiprintf_r+0x1c6>
    d092:	2201      	movs	r2, #1
    d094:	2300      	movs	r3, #0
    d096:	4252      	negs	r2, r2
    d098:	606a      	str	r2, [r5, #4]
    d09a:	a902      	add	r1, sp, #8
    d09c:	3254      	adds	r2, #84	; 0x54
    d09e:	1852      	adds	r2, r2, r1
    d0a0:	3401      	adds	r4, #1
    d0a2:	602b      	str	r3, [r5, #0]
    d0a4:	60eb      	str	r3, [r5, #12]
    d0a6:	60ab      	str	r3, [r5, #8]
    d0a8:	7013      	strb	r3, [r2, #0]
    d0aa:	65ab      	str	r3, [r5, #88]	; 0x58
    d0ac:	4f4f      	ldr	r7, [pc, #316]	; (d1ec <_svfiprintf_r+0x1d8>)
    d0ae:	7821      	ldrb	r1, [r4, #0]
    d0b0:	1c38      	adds	r0, r7, #0
    d0b2:	2205      	movs	r2, #5
    d0b4:	f7fb fc60 	bl	8978 <memchr>
    d0b8:	2800      	cmp	r0, #0
    d0ba:	d008      	beq.n	d0ce <_svfiprintf_r+0xba>
    d0bc:	1bc0      	subs	r0, r0, r7
    d0be:	2701      	movs	r7, #1
    d0c0:	4087      	lsls	r7, r0
    d0c2:	1c38      	adds	r0, r7, #0
    d0c4:	682b      	ldr	r3, [r5, #0]
    d0c6:	3401      	adds	r4, #1
    d0c8:	4318      	orrs	r0, r3
    d0ca:	6028      	str	r0, [r5, #0]
    d0cc:	e7ee      	b.n	d0ac <_svfiprintf_r+0x98>
    d0ce:	682b      	ldr	r3, [r5, #0]
    d0d0:	06da      	lsls	r2, r3, #27
    d0d2:	d504      	bpl.n	d0de <_svfiprintf_r+0xca>
    d0d4:	2253      	movs	r2, #83	; 0x53
    d0d6:	2120      	movs	r1, #32
    d0d8:	a802      	add	r0, sp, #8
    d0da:	1812      	adds	r2, r2, r0
    d0dc:	7011      	strb	r1, [r2, #0]
    d0de:	071a      	lsls	r2, r3, #28
    d0e0:	d504      	bpl.n	d0ec <_svfiprintf_r+0xd8>
    d0e2:	2253      	movs	r2, #83	; 0x53
    d0e4:	212b      	movs	r1, #43	; 0x2b
    d0e6:	a802      	add	r0, sp, #8
    d0e8:	1812      	adds	r2, r2, r0
    d0ea:	7011      	strb	r1, [r2, #0]
    d0ec:	7822      	ldrb	r2, [r4, #0]
    d0ee:	2a2a      	cmp	r2, #42	; 0x2a
    d0f0:	d001      	beq.n	d0f6 <_svfiprintf_r+0xe2>
    d0f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    d0f4:	e00e      	b.n	d114 <_svfiprintf_r+0x100>
    d0f6:	9a05      	ldr	r2, [sp, #20]
    d0f8:	1d11      	adds	r1, r2, #4
    d0fa:	6812      	ldr	r2, [r2, #0]
    d0fc:	9105      	str	r1, [sp, #20]
    d0fe:	2a00      	cmp	r2, #0
    d100:	db01      	blt.n	d106 <_svfiprintf_r+0xf2>
    d102:	9209      	str	r2, [sp, #36]	; 0x24
    d104:	e004      	b.n	d110 <_svfiprintf_r+0xfc>
    d106:	4252      	negs	r2, r2
    d108:	60ea      	str	r2, [r5, #12]
    d10a:	2202      	movs	r2, #2
    d10c:	4313      	orrs	r3, r2
    d10e:	602b      	str	r3, [r5, #0]
    d110:	3401      	adds	r4, #1
    d112:	e009      	b.n	d128 <_svfiprintf_r+0x114>
    d114:	7822      	ldrb	r2, [r4, #0]
    d116:	3a30      	subs	r2, #48	; 0x30
    d118:	2a09      	cmp	r2, #9
    d11a:	d804      	bhi.n	d126 <_svfiprintf_r+0x112>
    d11c:	210a      	movs	r1, #10
    d11e:	434b      	muls	r3, r1
    d120:	3401      	adds	r4, #1
    d122:	189b      	adds	r3, r3, r2
    d124:	e7f6      	b.n	d114 <_svfiprintf_r+0x100>
    d126:	9309      	str	r3, [sp, #36]	; 0x24
    d128:	7823      	ldrb	r3, [r4, #0]
    d12a:	2b2e      	cmp	r3, #46	; 0x2e
    d12c:	d118      	bne.n	d160 <_svfiprintf_r+0x14c>
    d12e:	7863      	ldrb	r3, [r4, #1]
    d130:	2b2a      	cmp	r3, #42	; 0x2a
    d132:	d109      	bne.n	d148 <_svfiprintf_r+0x134>
    d134:	9b05      	ldr	r3, [sp, #20]
    d136:	3402      	adds	r4, #2
    d138:	1d1a      	adds	r2, r3, #4
    d13a:	681b      	ldr	r3, [r3, #0]
    d13c:	9205      	str	r2, [sp, #20]
    d13e:	2b00      	cmp	r3, #0
    d140:	da0d      	bge.n	d15e <_svfiprintf_r+0x14a>
    d142:	2301      	movs	r3, #1
    d144:	425b      	negs	r3, r3
    d146:	e00a      	b.n	d15e <_svfiprintf_r+0x14a>
    d148:	2300      	movs	r3, #0
    d14a:	3401      	adds	r4, #1
    d14c:	7822      	ldrb	r2, [r4, #0]
    d14e:	3a30      	subs	r2, #48	; 0x30
    d150:	2a09      	cmp	r2, #9
    d152:	d804      	bhi.n	d15e <_svfiprintf_r+0x14a>
    d154:	210a      	movs	r1, #10
    d156:	434b      	muls	r3, r1
    d158:	3401      	adds	r4, #1
    d15a:	189b      	adds	r3, r3, r2
    d15c:	e7f6      	b.n	d14c <_svfiprintf_r+0x138>
    d15e:	9307      	str	r3, [sp, #28]
    d160:	4f23      	ldr	r7, [pc, #140]	; (d1f0 <_svfiprintf_r+0x1dc>)
    d162:	7821      	ldrb	r1, [r4, #0]
    d164:	1c38      	adds	r0, r7, #0
    d166:	2203      	movs	r2, #3
    d168:	f7fb fc06 	bl	8978 <memchr>
    d16c:	2800      	cmp	r0, #0
    d16e:	d007      	beq.n	d180 <_svfiprintf_r+0x16c>
    d170:	1bc0      	subs	r0, r0, r7
    d172:	2740      	movs	r7, #64	; 0x40
    d174:	4087      	lsls	r7, r0
    d176:	1c38      	adds	r0, r7, #0
    d178:	682b      	ldr	r3, [r5, #0]
    d17a:	3401      	adds	r4, #1
    d17c:	4318      	orrs	r0, r3
    d17e:	6028      	str	r0, [r5, #0]
    d180:	7821      	ldrb	r1, [r4, #0]
    d182:	481c      	ldr	r0, [pc, #112]	; (d1f4 <_svfiprintf_r+0x1e0>)
    d184:	2206      	movs	r2, #6
    d186:	1c67      	adds	r7, r4, #1
    d188:	7629      	strb	r1, [r5, #24]
    d18a:	f7fb fbf5 	bl	8978 <memchr>
    d18e:	2800      	cmp	r0, #0
    d190:	d012      	beq.n	d1b8 <_svfiprintf_r+0x1a4>
    d192:	4b19      	ldr	r3, [pc, #100]	; (d1f8 <_svfiprintf_r+0x1e4>)
    d194:	2b00      	cmp	r3, #0
    d196:	d106      	bne.n	d1a6 <_svfiprintf_r+0x192>
    d198:	2207      	movs	r2, #7
    d19a:	9b05      	ldr	r3, [sp, #20]
    d19c:	3307      	adds	r3, #7
    d19e:	4393      	bics	r3, r2
    d1a0:	3308      	adds	r3, #8
    d1a2:	9305      	str	r3, [sp, #20]
    d1a4:	e014      	b.n	d1d0 <_svfiprintf_r+0x1bc>
    d1a6:	ab05      	add	r3, sp, #20
    d1a8:	9300      	str	r3, [sp, #0]
    d1aa:	9802      	ldr	r0, [sp, #8]
    d1ac:	1c29      	adds	r1, r5, #0
    d1ae:	1c32      	adds	r2, r6, #0
    d1b0:	4b12      	ldr	r3, [pc, #72]	; (d1fc <_svfiprintf_r+0x1e8>)
    d1b2:	f7fb fe77 	bl	8ea4 <_printf_float>
    d1b6:	e007      	b.n	d1c8 <_svfiprintf_r+0x1b4>
    d1b8:	ab05      	add	r3, sp, #20
    d1ba:	9300      	str	r3, [sp, #0]
    d1bc:	9802      	ldr	r0, [sp, #8]
    d1be:	1c29      	adds	r1, r5, #0
    d1c0:	1c32      	adds	r2, r6, #0
    d1c2:	4b0e      	ldr	r3, [pc, #56]	; (d1fc <_svfiprintf_r+0x1e8>)
    d1c4:	f7fc f91a 	bl	93fc <_printf_i>
    d1c8:	9003      	str	r0, [sp, #12]
    d1ca:	9b03      	ldr	r3, [sp, #12]
    d1cc:	3301      	adds	r3, #1
    d1ce:	d004      	beq.n	d1da <_svfiprintf_r+0x1c6>
    d1d0:	696b      	ldr	r3, [r5, #20]
    d1d2:	9a03      	ldr	r2, [sp, #12]
    d1d4:	189b      	adds	r3, r3, r2
    d1d6:	616b      	str	r3, [r5, #20]
    d1d8:	e73d      	b.n	d056 <_svfiprintf_r+0x42>
    d1da:	89b3      	ldrh	r3, [r6, #12]
    d1dc:	980b      	ldr	r0, [sp, #44]	; 0x2c
    d1de:	065b      	lsls	r3, r3, #25
    d1e0:	d501      	bpl.n	d1e6 <_svfiprintf_r+0x1d2>
    d1e2:	2001      	movs	r0, #1
    d1e4:	4240      	negs	r0, r0
    d1e6:	b01f      	add	sp, #124	; 0x7c
    d1e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    d1ea:	46c0      	nop			; (mov r8, r8)
    d1ec:	0000e408 	.word	0x0000e408
    d1f0:	0000e40e 	.word	0x0000e40e
    d1f4:	0000e412 	.word	0x0000e412
    d1f8:	00008ea5 	.word	0x00008ea5
    d1fc:	0000cf55 	.word	0x0000cf55

0000d200 <_sungetc_r>:
    d200:	b538      	push	{r3, r4, r5, lr}
    d202:	1c14      	adds	r4, r2, #0
    d204:	1c4b      	adds	r3, r1, #1
    d206:	d102      	bne.n	d20e <_sungetc_r+0xe>
    d208:	2001      	movs	r0, #1
    d20a:	4240      	negs	r0, r0
    d20c:	e034      	b.n	d278 <_sungetc_r+0x78>
    d20e:	8993      	ldrh	r3, [r2, #12]
    d210:	2220      	movs	r2, #32
    d212:	4393      	bics	r3, r2
    d214:	6b62      	ldr	r2, [r4, #52]	; 0x34
    d216:	81a3      	strh	r3, [r4, #12]
    d218:	b2cd      	uxtb	r5, r1
    d21a:	6863      	ldr	r3, [r4, #4]
    d21c:	2a00      	cmp	r2, #0
    d21e:	d00f      	beq.n	d240 <_sungetc_r+0x40>
    d220:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    d222:	4293      	cmp	r3, r2
    d224:	da06      	bge.n	d234 <_sungetc_r+0x34>
    d226:	6823      	ldr	r3, [r4, #0]
    d228:	3b01      	subs	r3, #1
    d22a:	6023      	str	r3, [r4, #0]
    d22c:	701d      	strb	r5, [r3, #0]
    d22e:	6863      	ldr	r3, [r4, #4]
    d230:	3301      	adds	r3, #1
    d232:	e01f      	b.n	d274 <_sungetc_r+0x74>
    d234:	1c21      	adds	r1, r4, #0
    d236:	f7fd fefd 	bl	b034 <__submore>
    d23a:	2800      	cmp	r0, #0
    d23c:	d0f3      	beq.n	d226 <_sungetc_r+0x26>
    d23e:	e7e3      	b.n	d208 <_sungetc_r+0x8>
    d240:	6921      	ldr	r1, [r4, #16]
    d242:	6822      	ldr	r2, [r4, #0]
    d244:	2900      	cmp	r1, #0
    d246:	d009      	beq.n	d25c <_sungetc_r+0x5c>
    d248:	428a      	cmp	r2, r1
    d24a:	d907      	bls.n	d25c <_sungetc_r+0x5c>
    d24c:	1e51      	subs	r1, r2, #1
    d24e:	7808      	ldrb	r0, [r1, #0]
    d250:	42a8      	cmp	r0, r5
    d252:	d103      	bne.n	d25c <_sungetc_r+0x5c>
    d254:	3301      	adds	r3, #1
    d256:	6021      	str	r1, [r4, #0]
    d258:	6063      	str	r3, [r4, #4]
    d25a:	e00d      	b.n	d278 <_sungetc_r+0x78>
    d25c:	6423      	str	r3, [r4, #64]	; 0x40
    d25e:	1c23      	adds	r3, r4, #0
    d260:	3344      	adds	r3, #68	; 0x44
    d262:	6363      	str	r3, [r4, #52]	; 0x34
    d264:	2303      	movs	r3, #3
    d266:	63a3      	str	r3, [r4, #56]	; 0x38
    d268:	1c23      	adds	r3, r4, #0
    d26a:	3346      	adds	r3, #70	; 0x46
    d26c:	63e2      	str	r2, [r4, #60]	; 0x3c
    d26e:	701d      	strb	r5, [r3, #0]
    d270:	6023      	str	r3, [r4, #0]
    d272:	2301      	movs	r3, #1
    d274:	1c28      	adds	r0, r5, #0
    d276:	6063      	str	r3, [r4, #4]
    d278:	bd38      	pop	{r3, r4, r5, pc}

0000d27a <__ssrefill_r>:
    d27a:	b510      	push	{r4, lr}
    d27c:	1c0c      	adds	r4, r1, #0
    d27e:	6b49      	ldr	r1, [r1, #52]	; 0x34
    d280:	2900      	cmp	r1, #0
    d282:	d00e      	beq.n	d2a2 <__ssrefill_r+0x28>
    d284:	1c23      	adds	r3, r4, #0
    d286:	3344      	adds	r3, #68	; 0x44
    d288:	4299      	cmp	r1, r3
    d28a:	d001      	beq.n	d290 <__ssrefill_r+0x16>
    d28c:	f7fb fb90 	bl	89b0 <_free_r>
    d290:	2000      	movs	r0, #0
    d292:	6c23      	ldr	r3, [r4, #64]	; 0x40
    d294:	6360      	str	r0, [r4, #52]	; 0x34
    d296:	6063      	str	r3, [r4, #4]
    d298:	4283      	cmp	r3, r0
    d29a:	d002      	beq.n	d2a2 <__ssrefill_r+0x28>
    d29c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    d29e:	6023      	str	r3, [r4, #0]
    d2a0:	e009      	b.n	d2b6 <__ssrefill_r+0x3c>
    d2a2:	6923      	ldr	r3, [r4, #16]
    d2a4:	2220      	movs	r2, #32
    d2a6:	6023      	str	r3, [r4, #0]
    d2a8:	2300      	movs	r3, #0
    d2aa:	2001      	movs	r0, #1
    d2ac:	6063      	str	r3, [r4, #4]
    d2ae:	89a3      	ldrh	r3, [r4, #12]
    d2b0:	4240      	negs	r0, r0
    d2b2:	4313      	orrs	r3, r2
    d2b4:	81a3      	strh	r3, [r4, #12]
    d2b6:	bd10      	pop	{r4, pc}

0000d2b8 <__ssvfiscanf_r>:
    d2b8:	b5f0      	push	{r4, r5, r6, r7, lr}
    d2ba:	4cb5      	ldr	r4, [pc, #724]	; (d590 <__ssvfiscanf_r+0x2d8>)
    d2bc:	1c07      	adds	r7, r0, #0
    d2be:	44a5      	add	sp, r4
    d2c0:	9303      	str	r3, [sp, #12]
    d2c2:	2300      	movs	r3, #0
    d2c4:	2086      	movs	r0, #134	; 0x86
    d2c6:	9348      	str	r3, [sp, #288]	; 0x120
    d2c8:	9349      	str	r3, [sp, #292]	; 0x124
    d2ca:	ab05      	add	r3, sp, #20
    d2cc:	934a      	str	r3, [sp, #296]	; 0x128
    d2ce:	23be      	movs	r3, #190	; 0xbe
    d2d0:	0040      	lsls	r0, r0, #1
    d2d2:	1c0d      	adds	r5, r1, #0
    d2d4:	9201      	str	r2, [sp, #4]
    d2d6:	a902      	add	r1, sp, #8
    d2d8:	4aae      	ldr	r2, [pc, #696]	; (d594 <__ssvfiscanf_r+0x2dc>)
    d2da:	005b      	lsls	r3, r3, #1
    d2dc:	1809      	adds	r1, r1, r0
    d2de:	50ca      	str	r2, [r1, r3]
    d2e0:	4aad      	ldr	r2, [pc, #692]	; (d598 <__ssvfiscanf_r+0x2e0>)
    d2e2:	a902      	add	r1, sp, #8
    d2e4:	3304      	adds	r3, #4
    d2e6:	1809      	adds	r1, r1, r0
    d2e8:	50ca      	str	r2, [r1, r3]
    d2ea:	9b01      	ldr	r3, [sp, #4]
    d2ec:	781c      	ldrb	r4, [r3, #0]
    d2ee:	2c00      	cmp	r4, #0
    d2f0:	d100      	bne.n	d2f4 <__ssvfiscanf_r+0x3c>
    d2f2:	e144      	b.n	d57e <__ssvfiscanf_r+0x2c6>
    d2f4:	4ea9      	ldr	r6, [pc, #676]	; (d59c <__ssvfiscanf_r+0x2e4>)
    d2f6:	6833      	ldr	r3, [r6, #0]
    d2f8:	191b      	adds	r3, r3, r4
    d2fa:	785a      	ldrb	r2, [r3, #1]
    d2fc:	2308      	movs	r3, #8
    d2fe:	4013      	ands	r3, r2
    d300:	d023      	beq.n	d34a <__ssvfiscanf_r+0x92>
    d302:	686b      	ldr	r3, [r5, #4]
    d304:	2b00      	cmp	r3, #0
    d306:	dd10      	ble.n	d32a <__ssvfiscanf_r+0x72>
    d308:	682b      	ldr	r3, [r5, #0]
    d30a:	6831      	ldr	r1, [r6, #0]
    d30c:	781a      	ldrb	r2, [r3, #0]
    d30e:	188a      	adds	r2, r1, r2
    d310:	7852      	ldrb	r2, [r2, #1]
    d312:	0712      	lsls	r2, r2, #28
    d314:	d515      	bpl.n	d342 <__ssvfiscanf_r+0x8a>
    d316:	9a49      	ldr	r2, [sp, #292]	; 0x124
    d318:	3301      	adds	r3, #1
    d31a:	9202      	str	r2, [sp, #8]
    d31c:	3201      	adds	r2, #1
    d31e:	9249      	str	r2, [sp, #292]	; 0x124
    d320:	686a      	ldr	r2, [r5, #4]
    d322:	602b      	str	r3, [r5, #0]
    d324:	3a01      	subs	r2, #1
    d326:	606a      	str	r2, [r5, #4]
    d328:	e7eb      	b.n	d302 <__ssvfiscanf_r+0x4a>
    d32a:	2186      	movs	r1, #134	; 0x86
    d32c:	23c0      	movs	r3, #192	; 0xc0
    d32e:	0049      	lsls	r1, r1, #1
    d330:	aa02      	add	r2, sp, #8
    d332:	1852      	adds	r2, r2, r1
    d334:	005b      	lsls	r3, r3, #1
    d336:	58d3      	ldr	r3, [r2, r3]
    d338:	1c38      	adds	r0, r7, #0
    d33a:	1c29      	adds	r1, r5, #0
    d33c:	4798      	blx	r3
    d33e:	2800      	cmp	r0, #0
    d340:	d0e2      	beq.n	d308 <__ssvfiscanf_r+0x50>
    d342:	9e01      	ldr	r6, [sp, #4]
    d344:	3601      	adds	r6, #1
    d346:	9601      	str	r6, [sp, #4]
    d348:	e7cf      	b.n	d2ea <__ssvfiscanf_r+0x32>
    d34a:	9a01      	ldr	r2, [sp, #4]
    d34c:	1c56      	adds	r6, r2, #1
    d34e:	2c25      	cmp	r4, #37	; 0x25
    d350:	d14f      	bne.n	d3f2 <__ssvfiscanf_r+0x13a>
    d352:	9347      	str	r3, [sp, #284]	; 0x11c
    d354:	9345      	str	r3, [sp, #276]	; 0x114
    d356:	7853      	ldrb	r3, [r2, #1]
    d358:	2b2a      	cmp	r3, #42	; 0x2a
    d35a:	d102      	bne.n	d362 <__ssvfiscanf_r+0xaa>
    d35c:	3b1a      	subs	r3, #26
    d35e:	9345      	str	r3, [sp, #276]	; 0x114
    d360:	3601      	adds	r6, #1
    d362:	1c34      	adds	r4, r6, #0
    d364:	7821      	ldrb	r1, [r4, #0]
    d366:	1c0b      	adds	r3, r1, #0
    d368:	3b30      	subs	r3, #48	; 0x30
    d36a:	2b09      	cmp	r3, #9
    d36c:	d809      	bhi.n	d382 <__ssvfiscanf_r+0xca>
    d36e:	9b47      	ldr	r3, [sp, #284]	; 0x11c
    d370:	3401      	adds	r4, #1
    d372:	9301      	str	r3, [sp, #4]
    d374:	230a      	movs	r3, #10
    d376:	9a01      	ldr	r2, [sp, #4]
    d378:	4353      	muls	r3, r2
    d37a:	3b30      	subs	r3, #48	; 0x30
    d37c:	1859      	adds	r1, r3, r1
    d37e:	9147      	str	r1, [sp, #284]	; 0x11c
    d380:	e7f0      	b.n	d364 <__ssvfiscanf_r+0xac>
    d382:	4e87      	ldr	r6, [pc, #540]	; (d5a0 <__ssvfiscanf_r+0x2e8>)
    d384:	2203      	movs	r2, #3
    d386:	1c30      	adds	r0, r6, #0
    d388:	f7fb faf6 	bl	8978 <memchr>
    d38c:	2800      	cmp	r0, #0
    d38e:	d008      	beq.n	d3a2 <__ssvfiscanf_r+0xea>
    d390:	1b80      	subs	r0, r0, r6
    d392:	2601      	movs	r6, #1
    d394:	4086      	lsls	r6, r0
    d396:	1c30      	adds	r0, r6, #0
    d398:	9b45      	ldr	r3, [sp, #276]	; 0x114
    d39a:	3401      	adds	r4, #1
    d39c:	4318      	orrs	r0, r3
    d39e:	9301      	str	r3, [sp, #4]
    d3a0:	9045      	str	r0, [sp, #276]	; 0x114
    d3a2:	1c66      	adds	r6, r4, #1
    d3a4:	7824      	ldrb	r4, [r4, #0]
    d3a6:	2c67      	cmp	r4, #103	; 0x67
    d3a8:	d810      	bhi.n	d3cc <__ssvfiscanf_r+0x114>
    d3aa:	2c65      	cmp	r4, #101	; 0x65
    d3ac:	d300      	bcc.n	d3b0 <__ssvfiscanf_r+0xf8>
    d3ae:	e084      	b.n	d4ba <__ssvfiscanf_r+0x202>
    d3b0:	2c5b      	cmp	r4, #91	; 0x5b
    d3b2:	d05a      	beq.n	d46a <__ssvfiscanf_r+0x1b2>
    d3b4:	d805      	bhi.n	d3c2 <__ssvfiscanf_r+0x10a>
    d3b6:	2c00      	cmp	r4, #0
    d3b8:	d100      	bne.n	d3bc <__ssvfiscanf_r+0x104>
    d3ba:	e0e2      	b.n	d582 <__ssvfiscanf_r+0x2ca>
    d3bc:	2c25      	cmp	r4, #37	; 0x25
    d3be:	d018      	beq.n	d3f2 <__ssvfiscanf_r+0x13a>
    d3c0:	e07d      	b.n	d4be <__ssvfiscanf_r+0x206>
    d3c2:	2c63      	cmp	r4, #99	; 0x63
    d3c4:	d05f      	beq.n	d486 <__ssvfiscanf_r+0x1ce>
    d3c6:	2c64      	cmp	r4, #100	; 0x64
    d3c8:	d046      	beq.n	d458 <__ssvfiscanf_r+0x1a0>
    d3ca:	e078      	b.n	d4be <__ssvfiscanf_r+0x206>
    d3cc:	2c70      	cmp	r4, #112	; 0x70
    d3ce:	d034      	beq.n	d43a <__ssvfiscanf_r+0x182>
    d3d0:	d807      	bhi.n	d3e2 <__ssvfiscanf_r+0x12a>
    d3d2:	2c6e      	cmp	r4, #110	; 0x6e
    d3d4:	d05f      	beq.n	d496 <__ssvfiscanf_r+0x1de>
    d3d6:	d841      	bhi.n	d45c <__ssvfiscanf_r+0x1a4>
    d3d8:	2c69      	cmp	r4, #105	; 0x69
    d3da:	d170      	bne.n	d4be <__ssvfiscanf_r+0x206>
    d3dc:	2300      	movs	r3, #0
    d3de:	9346      	str	r3, [sp, #280]	; 0x118
    d3e0:	e041      	b.n	d466 <__ssvfiscanf_r+0x1ae>
    d3e2:	2c75      	cmp	r4, #117	; 0x75
    d3e4:	d038      	beq.n	d458 <__ssvfiscanf_r+0x1a0>
    d3e6:	2c78      	cmp	r4, #120	; 0x78
    d3e8:	d02d      	beq.n	d446 <__ssvfiscanf_r+0x18e>
    d3ea:	2c73      	cmp	r4, #115	; 0x73
    d3ec:	d167      	bne.n	d4be <__ssvfiscanf_r+0x206>
    d3ee:	2302      	movs	r3, #2
    d3f0:	e047      	b.n	d482 <__ssvfiscanf_r+0x1ca>
    d3f2:	686b      	ldr	r3, [r5, #4]
    d3f4:	2b00      	cmp	r3, #0
    d3f6:	dd0e      	ble.n	d416 <__ssvfiscanf_r+0x15e>
    d3f8:	682b      	ldr	r3, [r5, #0]
    d3fa:	781a      	ldrb	r2, [r3, #0]
    d3fc:	42a2      	cmp	r2, r4
    d3fe:	d000      	beq.n	d402 <__ssvfiscanf_r+0x14a>
    d400:	e0bd      	b.n	d57e <__ssvfiscanf_r+0x2c6>
    d402:	3301      	adds	r3, #1
    d404:	686a      	ldr	r2, [r5, #4]
    d406:	602b      	str	r3, [r5, #0]
    d408:	9b49      	ldr	r3, [sp, #292]	; 0x124
    d40a:	3a01      	subs	r2, #1
    d40c:	9301      	str	r3, [sp, #4]
    d40e:	3301      	adds	r3, #1
    d410:	606a      	str	r2, [r5, #4]
    d412:	9349      	str	r3, [sp, #292]	; 0x124
    d414:	e797      	b.n	d346 <__ssvfiscanf_r+0x8e>
    d416:	2186      	movs	r1, #134	; 0x86
    d418:	23c0      	movs	r3, #192	; 0xc0
    d41a:	0049      	lsls	r1, r1, #1
    d41c:	aa02      	add	r2, sp, #8
    d41e:	1852      	adds	r2, r2, r1
    d420:	005b      	lsls	r3, r3, #1
    d422:	58d3      	ldr	r3, [r2, r3]
    d424:	1c38      	adds	r0, r7, #0
    d426:	1c29      	adds	r1, r5, #0
    d428:	4798      	blx	r3
    d42a:	2800      	cmp	r0, #0
    d42c:	d0e4      	beq.n	d3f8 <__ssvfiscanf_r+0x140>
    d42e:	9848      	ldr	r0, [sp, #288]	; 0x120
    d430:	2800      	cmp	r0, #0
    d432:	d000      	beq.n	d436 <__ssvfiscanf_r+0x17e>
    d434:	e09f      	b.n	d576 <__ssvfiscanf_r+0x2be>
    d436:	3801      	subs	r0, #1
    d438:	e0a5      	b.n	d586 <__ssvfiscanf_r+0x2ce>
    d43a:	9b45      	ldr	r3, [sp, #276]	; 0x114
    d43c:	9301      	str	r3, [sp, #4]
    d43e:	2320      	movs	r3, #32
    d440:	9a01      	ldr	r2, [sp, #4]
    d442:	4313      	orrs	r3, r2
    d444:	9345      	str	r3, [sp, #276]	; 0x114
    d446:	9b45      	ldr	r3, [sp, #276]	; 0x114
    d448:	9301      	str	r3, [sp, #4]
    d44a:	2380      	movs	r3, #128	; 0x80
    d44c:	9a01      	ldr	r2, [sp, #4]
    d44e:	009b      	lsls	r3, r3, #2
    d450:	4313      	orrs	r3, r2
    d452:	9345      	str	r3, [sp, #276]	; 0x114
    d454:	2310      	movs	r3, #16
    d456:	e002      	b.n	d45e <__ssvfiscanf_r+0x1a6>
    d458:	230a      	movs	r3, #10
    d45a:	e000      	b.n	d45e <__ssvfiscanf_r+0x1a6>
    d45c:	2308      	movs	r3, #8
    d45e:	9346      	str	r3, [sp, #280]	; 0x118
    d460:	2304      	movs	r3, #4
    d462:	2c6e      	cmp	r4, #110	; 0x6e
    d464:	dc0d      	bgt.n	d482 <__ssvfiscanf_r+0x1ca>
    d466:	2303      	movs	r3, #3
    d468:	e00b      	b.n	d482 <__ssvfiscanf_r+0x1ca>
    d46a:	1c31      	adds	r1, r6, #0
    d46c:	a805      	add	r0, sp, #20
    d46e:	f7fc fcf3 	bl	9e58 <__sccl>
    d472:	9b45      	ldr	r3, [sp, #276]	; 0x114
    d474:	1c06      	adds	r6, r0, #0
    d476:	9301      	str	r3, [sp, #4]
    d478:	2340      	movs	r3, #64	; 0x40
    d47a:	9a01      	ldr	r2, [sp, #4]
    d47c:	4313      	orrs	r3, r2
    d47e:	9345      	str	r3, [sp, #276]	; 0x114
    d480:	2301      	movs	r3, #1
    d482:	934b      	str	r3, [sp, #300]	; 0x12c
    d484:	e01f      	b.n	d4c6 <__ssvfiscanf_r+0x20e>
    d486:	9b45      	ldr	r3, [sp, #276]	; 0x114
    d488:	9301      	str	r3, [sp, #4]
    d48a:	2340      	movs	r3, #64	; 0x40
    d48c:	9a01      	ldr	r2, [sp, #4]
    d48e:	4313      	orrs	r3, r2
    d490:	9345      	str	r3, [sp, #276]	; 0x114
    d492:	2300      	movs	r3, #0
    d494:	e7f5      	b.n	d482 <__ssvfiscanf_r+0x1ca>
    d496:	9945      	ldr	r1, [sp, #276]	; 0x114
    d498:	06cb      	lsls	r3, r1, #27
    d49a:	d500      	bpl.n	d49e <__ssvfiscanf_r+0x1e6>
    d49c:	e753      	b.n	d346 <__ssvfiscanf_r+0x8e>
    d49e:	9b03      	ldr	r3, [sp, #12]
    d4a0:	9a49      	ldr	r2, [sp, #292]	; 0x124
    d4a2:	07c8      	lsls	r0, r1, #31
    d4a4:	d504      	bpl.n	d4b0 <__ssvfiscanf_r+0x1f8>
    d4a6:	1d19      	adds	r1, r3, #4
    d4a8:	9103      	str	r1, [sp, #12]
    d4aa:	681b      	ldr	r3, [r3, #0]
    d4ac:	801a      	strh	r2, [r3, #0]
    d4ae:	e74a      	b.n	d346 <__ssvfiscanf_r+0x8e>
    d4b0:	1d19      	adds	r1, r3, #4
    d4b2:	9103      	str	r1, [sp, #12]
    d4b4:	681b      	ldr	r3, [r3, #0]
    d4b6:	601a      	str	r2, [r3, #0]
    d4b8:	e745      	b.n	d346 <__ssvfiscanf_r+0x8e>
    d4ba:	2305      	movs	r3, #5
    d4bc:	e7e1      	b.n	d482 <__ssvfiscanf_r+0x1ca>
    d4be:	2303      	movs	r3, #3
    d4c0:	934b      	str	r3, [sp, #300]	; 0x12c
    d4c2:	3307      	adds	r3, #7
    d4c4:	9346      	str	r3, [sp, #280]	; 0x118
    d4c6:	686b      	ldr	r3, [r5, #4]
    d4c8:	2b00      	cmp	r3, #0
    d4ca:	dd04      	ble.n	d4d6 <__ssvfiscanf_r+0x21e>
    d4cc:	9b45      	ldr	r3, [sp, #276]	; 0x114
    d4ce:	9301      	str	r3, [sp, #4]
    d4d0:	065b      	lsls	r3, r3, #25
    d4d2:	d518      	bpl.n	d506 <__ssvfiscanf_r+0x24e>
    d4d4:	e01f      	b.n	d516 <__ssvfiscanf_r+0x25e>
    d4d6:	2186      	movs	r1, #134	; 0x86
    d4d8:	23c0      	movs	r3, #192	; 0xc0
    d4da:	0049      	lsls	r1, r1, #1
    d4dc:	aa02      	add	r2, sp, #8
    d4de:	1852      	adds	r2, r2, r1
    d4e0:	005b      	lsls	r3, r3, #1
    d4e2:	58d3      	ldr	r3, [r2, r3]
    d4e4:	1c38      	adds	r0, r7, #0
    d4e6:	1c29      	adds	r1, r5, #0
    d4e8:	4798      	blx	r3
    d4ea:	2800      	cmp	r0, #0
    d4ec:	d0ee      	beq.n	d4cc <__ssvfiscanf_r+0x214>
    d4ee:	e79e      	b.n	d42e <__ssvfiscanf_r+0x176>
    d4f0:	9a49      	ldr	r2, [sp, #292]	; 0x124
    d4f2:	9201      	str	r2, [sp, #4]
    d4f4:	3201      	adds	r2, #1
    d4f6:	9249      	str	r2, [sp, #292]	; 0x124
    d4f8:	686a      	ldr	r2, [r5, #4]
    d4fa:	3a01      	subs	r2, #1
    d4fc:	606a      	str	r2, [r5, #4]
    d4fe:	2a00      	cmp	r2, #0
    d500:	dd13      	ble.n	d52a <__ssvfiscanf_r+0x272>
    d502:	3301      	adds	r3, #1
    d504:	602b      	str	r3, [r5, #0]
    d506:	682b      	ldr	r3, [r5, #0]
    d508:	4924      	ldr	r1, [pc, #144]	; (d59c <__ssvfiscanf_r+0x2e4>)
    d50a:	781a      	ldrb	r2, [r3, #0]
    d50c:	6809      	ldr	r1, [r1, #0]
    d50e:	188a      	adds	r2, r1, r2
    d510:	7852      	ldrb	r2, [r2, #1]
    d512:	0712      	lsls	r2, r2, #28
    d514:	d4ec      	bmi.n	d4f0 <__ssvfiscanf_r+0x238>
    d516:	9b4b      	ldr	r3, [sp, #300]	; 0x12c
    d518:	2b02      	cmp	r3, #2
    d51a:	dc13      	bgt.n	d544 <__ssvfiscanf_r+0x28c>
    d51c:	1c38      	adds	r0, r7, #0
    d51e:	a945      	add	r1, sp, #276	; 0x114
    d520:	1c2a      	adds	r2, r5, #0
    d522:	ab03      	add	r3, sp, #12
    d524:	f7fc fa6c 	bl	9a00 <_scanf_chars>
    d528:	e01f      	b.n	d56a <__ssvfiscanf_r+0x2b2>
    d52a:	2186      	movs	r1, #134	; 0x86
    d52c:	23c0      	movs	r3, #192	; 0xc0
    d52e:	0049      	lsls	r1, r1, #1
    d530:	aa02      	add	r2, sp, #8
    d532:	1852      	adds	r2, r2, r1
    d534:	005b      	lsls	r3, r3, #1
    d536:	58d3      	ldr	r3, [r2, r3]
    d538:	1c38      	adds	r0, r7, #0
    d53a:	1c29      	adds	r1, r5, #0
    d53c:	4798      	blx	r3
    d53e:	2800      	cmp	r0, #0
    d540:	d0e1      	beq.n	d506 <__ssvfiscanf_r+0x24e>
    d542:	e774      	b.n	d42e <__ssvfiscanf_r+0x176>
    d544:	2b04      	cmp	r3, #4
    d546:	dc06      	bgt.n	d556 <__ssvfiscanf_r+0x29e>
    d548:	1c38      	adds	r0, r7, #0
    d54a:	a945      	add	r1, sp, #276	; 0x114
    d54c:	1c2a      	adds	r2, r5, #0
    d54e:	ab03      	add	r3, sp, #12
    d550:	f7fc fab4 	bl	9abc <_scanf_i>
    d554:	e009      	b.n	d56a <__ssvfiscanf_r+0x2b2>
    d556:	4b13      	ldr	r3, [pc, #76]	; (d5a4 <__ssvfiscanf_r+0x2ec>)
    d558:	2b00      	cmp	r3, #0
    d55a:	d100      	bne.n	d55e <__ssvfiscanf_r+0x2a6>
    d55c:	e6f3      	b.n	d346 <__ssvfiscanf_r+0x8e>
    d55e:	1c38      	adds	r0, r7, #0
    d560:	a945      	add	r1, sp, #276	; 0x114
    d562:	1c2a      	adds	r2, r5, #0
    d564:	ab03      	add	r3, sp, #12
    d566:	f7fc f861 	bl	962c <_scanf_float>
    d56a:	2801      	cmp	r0, #1
    d56c:	d007      	beq.n	d57e <__ssvfiscanf_r+0x2c6>
    d56e:	2802      	cmp	r0, #2
    d570:	d000      	beq.n	d574 <__ssvfiscanf_r+0x2bc>
    d572:	e6e8      	b.n	d346 <__ssvfiscanf_r+0x8e>
    d574:	e75b      	b.n	d42e <__ssvfiscanf_r+0x176>
    d576:	89ab      	ldrh	r3, [r5, #12]
    d578:	065b      	lsls	r3, r3, #25
    d57a:	d504      	bpl.n	d586 <__ssvfiscanf_r+0x2ce>
    d57c:	e001      	b.n	d582 <__ssvfiscanf_r+0x2ca>
    d57e:	9848      	ldr	r0, [sp, #288]	; 0x120
    d580:	e001      	b.n	d586 <__ssvfiscanf_r+0x2ce>
    d582:	2001      	movs	r0, #1
    d584:	4240      	negs	r0, r0
    d586:	23a7      	movs	r3, #167	; 0xa7
    d588:	009b      	lsls	r3, r3, #2
    d58a:	449d      	add	sp, r3
    d58c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    d58e:	46c0      	nop			; (mov r8, r8)
    d590:	fffffd64 	.word	0xfffffd64
    d594:	0000d201 	.word	0x0000d201
    d598:	0000d27b 	.word	0x0000d27b
    d59c:	20000138 	.word	0x20000138
    d5a0:	0000e40e 	.word	0x0000e40e
    d5a4:	0000962d 	.word	0x0000962d

0000d5a8 <_read_r>:
    d5a8:	b538      	push	{r3, r4, r5, lr}
    d5aa:	1c05      	adds	r5, r0, #0
    d5ac:	2000      	movs	r0, #0
    d5ae:	4c07      	ldr	r4, [pc, #28]	; (d5cc <_read_r+0x24>)
    d5b0:	6020      	str	r0, [r4, #0]
    d5b2:	1c08      	adds	r0, r1, #0
    d5b4:	1c11      	adds	r1, r2, #0
    d5b6:	1c1a      	adds	r2, r3, #0
    d5b8:	f7f5 fae6 	bl	2b88 <_read>
    d5bc:	1c43      	adds	r3, r0, #1
    d5be:	d103      	bne.n	d5c8 <_read_r+0x20>
    d5c0:	6823      	ldr	r3, [r4, #0]
    d5c2:	2b00      	cmp	r3, #0
    d5c4:	d000      	beq.n	d5c8 <_read_r+0x20>
    d5c6:	602b      	str	r3, [r5, #0]
    d5c8:	bd38      	pop	{r3, r4, r5, pc}
    d5ca:	46c0      	nop			; (mov r8, r8)
    d5cc:	20004488 	.word	0x20004488

0000d5d0 <_malloc_usable_size_r>:
    d5d0:	1f0b      	subs	r3, r1, #4
    d5d2:	681a      	ldr	r2, [r3, #0]
    d5d4:	1f10      	subs	r0, r2, #4
    d5d6:	2a00      	cmp	r2, #0
    d5d8:	da04      	bge.n	d5e4 <_malloc_usable_size_r+0x14>
    d5da:	1889      	adds	r1, r1, r2
    d5dc:	3904      	subs	r1, #4
    d5de:	680b      	ldr	r3, [r1, #0]
    d5e0:	18d0      	adds	r0, r2, r3
    d5e2:	3804      	subs	r0, #4
    d5e4:	4770      	bx	lr
	...

0000d5e8 <__gnu_thumb1_case_uqi>:
    d5e8:	b402      	push	{r1}
    d5ea:	4671      	mov	r1, lr
    d5ec:	0849      	lsrs	r1, r1, #1
    d5ee:	0049      	lsls	r1, r1, #1
    d5f0:	5c09      	ldrb	r1, [r1, r0]
    d5f2:	0049      	lsls	r1, r1, #1
    d5f4:	448e      	add	lr, r1
    d5f6:	bc02      	pop	{r1}
    d5f8:	4770      	bx	lr
    d5fa:	46c0      	nop			; (mov r8, r8)
    d5fc:	454c4449 	.word	0x454c4449
    d600:	00000000 	.word	0x00000000
    d604:	2d6a626f 	.word	0x2d6a626f
    d608:	6e69703e 	.word	0x6e69703e
    d60c:	203d2120 	.word	0x203d2120
    d610:	6e695028 	.word	0x6e695028
    d614:	656d614e 	.word	0x656d614e
    d618:	00434e29 	.word	0x00434e29
    d61c:	2e2f2e2e 	.word	0x2e2f2e2e
    d620:	65626d2f 	.word	0x65626d2f
    d624:	41542f64 	.word	0x41542f64
    d628:	54454752 	.word	0x54454752
    d62c:	4d41535f 	.word	0x4d41535f
    d630:	47313252 	.word	0x47313252
    d634:	2f413831 	.word	0x2f413831
    d638:	47524154 	.word	0x47524154
    d63c:	415f5445 	.word	0x415f5445
    d640:	6c656d74 	.word	0x6c656d74
    d644:	5241542f 	.word	0x5241542f
    d648:	5f544547 	.word	0x5f544547
    d64c:	5f4d4153 	.word	0x5f4d4153
    d650:	74726f43 	.word	0x74726f43
    d654:	304d7865 	.word	0x304d7865
    d658:	70672f50 	.word	0x70672f50
    d65c:	6f5f6f69 	.word	0x6f5f6f69
    d660:	63656a62 	.word	0x63656a62
    d664:	00682e74 	.word	0x00682e74
    d668:	20737067 	.word	0x20737067
    d66c:	74726155 	.word	0x74726155
    d670:	73617420 	.word	0x73617420
    d674:	00002e6b 	.word	0x00002e6b
    d678:	65746e69 	.word	0x65746e69
    d67c:	6c616e72 	.word	0x6c616e72
    d680:	6f6c6320 	.word	0x6f6c6320
    d684:	63206b63 	.word	0x63206b63
    d688:	69666e6f 	.word	0x69666e6f
    d68c:	00000d67 	.word	0x00000d67
    d690:	20737070 	.word	0x20737070
    d694:	666e6f63 	.word	0x666e6f63
    d698:	000d6769 	.word	0x000d6769
    d69c:	7774656e 	.word	0x7774656e
    d6a0:	206b726f 	.word	0x206b726f
    d6a4:	666e6f63 	.word	0x666e6f63
    d6a8:	000d6769 	.word	0x000d6769
    d6ac:	6e72656b 	.word	0x6e72656b
    d6b0:	63206c65 	.word	0x63206c65
    d6b4:	69666e6f 	.word	0x69666e6f
    d6b8:	00000d67 	.word	0x00000d67
    d6bc:	0a0d0a0d 	.word	0x0a0d0a0d
    d6c0:	2a2a2a2a 	.word	0x2a2a2a2a
    d6c4:	2a2a2a2a 	.word	0x2a2a2a2a
    d6c8:	2a2a2a2a 	.word	0x2a2a2a2a
    d6cc:	2a2a2a2a 	.word	0x2a2a2a2a
    d6d0:	2a2a2a2a 	.word	0x2a2a2a2a
    d6d4:	2a2a2a2a 	.word	0x2a2a2a2a
    d6d8:	2a2a2a2a 	.word	0x2a2a2a2a
    d6dc:	2a2a2a2a 	.word	0x2a2a2a2a
    d6e0:	2a2a2a2a 	.word	0x2a2a2a2a
    d6e4:	2a2a2a2a 	.word	0x2a2a2a2a
    d6e8:	2a2a2a2a 	.word	0x2a2a2a2a
    d6ec:	2a2a2a2a 	.word	0x2a2a2a2a
    d6f0:	2a2a2a2a 	.word	0x2a2a2a2a
    d6f4:	2a2a2a2a 	.word	0x2a2a2a2a
    d6f8:	2a2a2a2a 	.word	0x2a2a2a2a
    d6fc:	2a2a2a2a 	.word	0x2a2a2a2a
    d700:	2a2a2a2a 	.word	0x2a2a2a2a
    d704:	000d2a2a 	.word	0x000d2a2a
    d708:	6b636974 	.word	0x6b636974
    d70c:	6d697420 	.word	0x6d697420
    d710:	25203a65 	.word	0x25203a65
    d714:	6d20756c 	.word	0x6d20756c
    d718:	000a0d73 	.word	0x000a0d73
    d71c:	7473614d 	.word	0x7473614d
    d720:	63207265 	.word	0x63207265
    d724:	6b636f6c 	.word	0x6b636f6c
    d728:	00000a0d 	.word	0x00000a0d
    d72c:	20646e65 	.word	0x20646e65
    d730:	666e6f63 	.word	0x666e6f63
    d734:	61206769 	.word	0x61206769
    d738:	696c7070 	.word	0x696c7070
    d73c:	69746163 	.word	0x69746163
    d740:	62206e6f 	.word	0x62206e6f
    d744:	6e696765 	.word	0x6e696765
    d748:	00000a0d 	.word	0x00000a0d
    d74c:	2a2a0a0d 	.word	0x2a2a0a0d
    d750:	2a2a2a2a 	.word	0x2a2a2a2a
    d754:	2a2a2a2a 	.word	0x2a2a2a2a
    d758:	2a2a2a2a 	.word	0x2a2a2a2a
    d75c:	2a2a2a2a 	.word	0x2a2a2a2a
    d760:	2a2a2a2a 	.word	0x2a2a2a2a
    d764:	2a2a2a2a 	.word	0x2a2a2a2a
    d768:	2a2a2a2a 	.word	0x2a2a2a2a
    d76c:	2a2a2a2a 	.word	0x2a2a2a2a
    d770:	2a2a2a2a 	.word	0x2a2a2a2a
    d774:	2a2a2a2a 	.word	0x2a2a2a2a
    d778:	2a2a2a2a 	.word	0x2a2a2a2a
    d77c:	2a2a2a2a 	.word	0x2a2a2a2a
    d780:	2a2a2a2a 	.word	0x2a2a2a2a
    d784:	2a2a2a2a 	.word	0x2a2a2a2a
    d788:	2a2a2a2a 	.word	0x2a2a2a2a
    d78c:	2a2a2a2a 	.word	0x2a2a2a2a
    d790:	2a2a2a2a 	.word	0x2a2a2a2a
    d794:	0a0d0a0d 	.word	0x0a0d0a0d
    d798:	00000000 	.word	0x00000000
    d79c:	6b736174 	.word	0x6b736174
    d7a0:	65726320 	.word	0x65726320
    d7a4:	6f697461 	.word	0x6f697461
    d7a8:	0a0d206e 	.word	0x0a0d206e
    d7ac:	00000000 	.word	0x00000000
    d7b0:	00494d48 	.word	0x00494d48
    d7b4:	656d6974 	.word	0x656d6974
    d7b8:	00000000 	.word	0x00000000
    d7bc:	00737067 	.word	0x00737067
    d7c0:	666f5309 	.word	0x666f5309
    d7c4:	72617774 	.word	0x72617774
    d7c8:	6f432065 	.word	0x6f432065
    d7cc:	63657272 	.word	0x63657272
    d7d0:	6e6f6974 	.word	0x6e6f6974
    d7d4:	00000020 	.word	0x00000020
    d7d8:	70750909 	.word	0x70750909
    d7dc:	65746164 	.word	0x65746164
    d7e0:	6d697420 	.word	0x6d697420
    d7e4:	6f632065 	.word	0x6f632065
    d7e8:	203a7272 	.word	0x203a7272
    d7ec:	25286425 	.word	0x25286425
    d7f0:	73202964 	.word	0x73202964
    d7f4:	206e6769 	.word	0x206e6769
    d7f8:	6425203a 	.word	0x6425203a
    d7fc:	74697720 	.word	0x74697720
    d800:	64252068 	.word	0x64252068
    d804:	6d617320 	.word	0x6d617320
    d808:	00656c70 	.word	0x00656c70
    d80c:	646e6509 	.word	0x646e6509
    d810:	666f5320 	.word	0x666f5320
    d814:	72617774 	.word	0x72617774
    d818:	6f632065 	.word	0x6f632065
    d81c:	63657272 	.word	0x63657272
    d820:	6e6f6974 	.word	0x6e6f6974
    d824:	00000000 	.word	0x00000000
    d828:	72614809 	.word	0x72614809
    d82c:	72617764 	.word	0x72617764
    d830:	6f632065 	.word	0x6f632065
    d834:	63657272 	.word	0x63657272
    d838:	6e6f6974 	.word	0x6e6f6974
    d83c:	00000000 	.word	0x00000000
    d840:	62460909 	.word	0x62460909
    d844:	3a747365 	.word	0x3a747365
    d848:	20752520 	.word	0x20752520
    d84c:	202c7a48 	.word	0x202c7a48
    d850:	65737546 	.word	0x65737546
    d854:	7525203d 	.word	0x7525203d
    d858:	207a4820 	.word	0x207a4820
    d85c:	6e756f63 	.word	0x6e756f63
    d860:	64253d74 	.word	0x64253d74
    d864:	00000000 	.word	0x00000000
    d868:	646e6509 	.word	0x646e6509
    d86c:	726f6320 	.word	0x726f6320
    d870:	74636572 	.word	0x74636572
    d874:	006e6f69 	.word	0x006e6f69
    d878:	20756c25 	.word	0x20756c25
    d87c:	75252c73 	.word	0x75252c73
    d880:	00000a0d 	.word	0x00000a0d
    d884:	756c252d 	.word	0x756c252d
    d888:	252c7320 	.word	0x252c7320
    d88c:	000a0d75 	.word	0x000a0d75
    d890:	70750909 	.word	0x70750909
    d894:	65746164 	.word	0x65746164
    d898:	6f6c6320 	.word	0x6f6c6320
    d89c:	6f206b63 	.word	0x6f206b63
    d8a0:	65736666 	.word	0x65736666
    d8a4:	2b203a74 	.word	0x2b203a74
    d8a8:	73756c25 	.word	0x73756c25
    d8ac:	646c252c 	.word	0x646c252c
    d8b0:	6c252b5b 	.word	0x6c252b5b
    d8b4:	252c7375 	.word	0x252c7375
    d8b8:	6d20756c 	.word	0x6d20756c
    d8bc:	257e2c73 	.word	0x257e2c73
    d8c0:	7520756c 	.word	0x7520756c
    d8c4:	74095d73 	.word	0x74095d73
    d8c8:	6c25203a 	.word	0x6c25203a
    d8cc:	6c252c75 	.word	0x6c252c75
    d8d0:	00000075 	.word	0x00000075
    d8d4:	70750909 	.word	0x70750909
    d8d8:	65746164 	.word	0x65746164
    d8dc:	6f6c6320 	.word	0x6f6c6320
    d8e0:	6f206b63 	.word	0x6f206b63
    d8e4:	65736666 	.word	0x65736666
    d8e8:	2d203a74 	.word	0x2d203a74
    d8ec:	73756c25 	.word	0x73756c25
    d8f0:	646c252c 	.word	0x646c252c
    d8f4:	6c252d5b 	.word	0x6c252d5b
    d8f8:	252c7375 	.word	0x252c7375
    d8fc:	736d756c 	.word	0x736d756c
    d900:	6c257e2c 	.word	0x6c257e2c
    d904:	73752075 	.word	0x73752075
    d908:	3a74095d 	.word	0x3a74095d
    d90c:	756c2520 	.word	0x756c2520
    d910:	756c252c 	.word	0x756c252c
    d914:	00000000 	.word	0x00000000
    d918:	72724509 	.word	0x72724509
    d91c:	20727565 	.word	0x20727565
    d920:	00637263 	.word	0x00637263
    d924:	6c656409 	.word	0x6c656409
    d928:	72207961 	.word	0x72207961
    d92c:	65757165 	.word	0x65757165
    d930:	72207473 	.word	0x72207473
    d934:	69656365 	.word	0x69656365
    d938:	00006576 	.word	0x00006576
    d93c:	72724509 	.word	0x72724509
    d940:	20727565 	.word	0x20727565
    d944:	65707974 	.word	0x65707974
    d948:	6b6e7520 	.word	0x6b6e7520
    d94c:	00776f6e 	.word	0x00776f6e
    d950:	6e797309 	.word	0x6e797309
    d954:	65732063 	.word	0x65732063
    d958:	0000646e 	.word	0x0000646e
    d95c:	6c656409 	.word	0x6c656409
    d960:	72207961 	.word	0x72207961
    d964:	6f707365 	.word	0x6f707365
    d968:	2065736e 	.word	0x2065736e
    d96c:	646e6573 	.word	0x646e6573
    d970:	64692820 	.word	0x64692820
    d974:	6425203a 	.word	0x6425203a
    d978:	00000029 	.word	0x00000029

0000d97c <__stdin_name>:
    d97c:	6474732f 00006e69                       /stdin..

0000d984 <__stderr_name>:
    d984:	6474732f 00727265                       /stderr.

0000d98c <__stdout_name>:
    d98c:	6474732f 0074756f 00000000              /stdout.....

0000d998 <_ZTVN4mbed10FileHandleE>:
	...
    d9a0:	00002c41 00002c41 00002c41 00002c41     A,..A,..A,..A,..
    d9b0:	00002c41 00002c41 00002995 00000000     A,..A,...)......
    d9c0:	00000000 0070253a 65637845 6f697470     ....:%p.Exceptio
    d9d0:	0000006e 0c0b0a09 00000e0d              n...........

0000d9dc <CSWTCH.41>:
    d9dc:	00100000 00200000 00300000 006a626f     ...... ...0.obj.
    d9ec:	4a5c3a43 696b6e65 775c736e 736b726f     C:\Jenkins\works
    d9fc:	65636170 65626d5c 2d322d64 6c697562     pace\mbed-2-buil
    da0c:	696c2d64 72617262 61685c79 61745c6c     d-library\hal\ta
    da1c:	74656772 61685c73 41545c6c 54454752     rgets\hal\TARGET
    da2c:	6d74415f 545c6c65 45475241 41535f54     _Atmel\TARGET_SA
    da3c:	6f435f4d 78657472 5c50304d 69726573     M_CortexM0P\seri
    da4c:	615f6c61 632e6970 00000000 75616228     al_api.c....(bau
    da5c:	74617264 3d3d2065 30313120 7c7c2029     drate == 110) ||
    da6c:	61622820 61726475 3d206574 3531203d      (baudrate == 15
    da7c:	7c202930 6228207c 72647561 20657461     0) || (baudrate 
    da8c:	33203d3d 20293030 28207c7c 64756162     == 300) || (baud
    da9c:	65746172 203d3d20 30303231 7c7c2029     rate == 1200) ||
    daac:	61622820 61726475 3d206574 3432203d      (baudrate == 24
    dabc:	20293030 28207c7c 64756162 65746172     00) || (baudrate
    dacc:	203d3d20 30303834 7c7c2029 61622820      == 4800) || (ba
    dadc:	61726475 3d206574 3639203d 20293030     udrate == 9600) 
    daec:	28207c7c 64756162 65746172 203d3d20     || (baudrate == 
    dafc:	30323931 7c202930 6228207c 72647561     19200) || (baudr
    db0c:	20657461 33203d3d 30303438 7c7c2029     ate == 38400) ||
    db1c:	61622820 61726475 3d206574 3735203d      (baudrate == 57
    db2c:	29303036 207c7c20 75616228 74617264     600) || (baudrat
    db3c:	3d3d2065 35313120 29303032 207c7c20     e == 115200) || 
    db4c:	75616228 74617264 3d3d2065 30333220     (baudrate == 230
    db5c:	29303034 207c7c20 75616228 74617264     400) || (baudrat
    db6c:	3d3d2065 30363420 29303038 207c7c20     e == 460800) || 
    db7c:	75616228 74617264 3d3d2065 31323920     (baudrate == 921
    db8c:	29303036 00000000 6f747328 69625f70     600)....(stop_bi
    db9c:	3d207374 2931203d 207c7c20 6f747328     ts == 1) || (sto
    dbac:	69625f70 3d207374 2932203d 00000000     p_bits == 2)....
    dbbc:	72617028 20797469 50203d3d 74697261     (parity == Parit
    dbcc:	6e6f4e79 7c202965 7028207c 74697261     yNone) || (parit
    dbdc:	3d3d2079 72615020 4f797469 20296464     y == ParityOdd) 
    dbec:	28207c7c 69726170 3d207974 6150203d     || (parity == Pa
    dbfc:	79746972 6e657645 00000029 74616428     rityEven)...(dat
    dc0c:	69625f61 3d207374 2935203d 207c7c20     a_bits == 5) || 
    dc1c:	74616428 69625f61 3d207374 2936203d     (data_bits == 6)
    dc2c:	207c7c20 74616428 69625f61 3d207374      || (data_bits =
    dc3c:	2937203d 207c7c20 74616428 69625f61     = 7) || (data_bi
    dc4c:	3d207374 2938203d 00000000 21207874     ts == 8)....tx !
    dc5c:	7628203d 2a64696f 00003029 74646977     = (void*)0..widt
    dc6c:	3d3d2068 00003820 21207872 7628203d     h == 8..rx != (v
    dc7c:	2a64696f 00003029 00000000              oid*)0......

0000dc88 <_ZTVN4mbed6SerialE>:
	...
    dc90:	000027bd 000028b1 00003e89 00003ea1     .'...(...>...>..
    dca0:	ffffff24 00000000 00004019 00004015     $........@...@..
    dcb0:	00004045 00004075 00004071 00004079     E@..u@..q@..y@..
    dcc0:	0000407d 000027e5 000028e5 00003ea9     }@...'...(...>..
    dcd0:	00003e91 ffffff20 00000000 000027f5     .>.. ........'..
    dce0:	000028f5 00000000                       .(......

0000dce8 <_ZTVN4mbed10SerialBaseE>:
	...
    dcf0:	000027b9 00002805                       .'...(..

0000dcf8 <_ZTVN4mbed6StreamE>:
	...
    dd00:	00004019 00004015 00004045 00004075     .@...@..E@..u@..
    dd10:	00004071 00004079 0000407d 00000000     q@..y@..}@......
    dd20:	00000000 00002c41 00002c41 fffffffc     ....A,..A,......
	...
    dd3c:	00002b77 6465626d 73736120 61747265     w+..mbed asserta
    dd4c:	6e6f6974 69616620 3a64656c 2c732520     tion failed: %s,
    dd5c:	6c696620 25203a65 6c202c73 20656e69      file: %s, line 
    dd6c:	0a206425 00000000 4a5c3a43 696b6e65     %d .....C:\Jenki
    dd7c:	775c736e 736b726f 65636170 65626d5c     ns\workspace\mbe
    dd8c:	2d322d64 6c697562 696c2d64 72617262     d-2-build-librar
    dd9c:	622e5c79 646c6975 65626d5c 41545c64     y\.build\mbed\TA
    ddac:	54454752 4d41535f 47313252 5c413831     RGET_SAMR21G18A\
    ddbc:	47524154 415f5445 6c656d74 5241545c     TARGET_Atmel\TAR
    ddcc:	5f544547 5f4d4153 74726f43 304d7865     GET_SAM_CortexM0
    dddc:	70672f50 6f5f6f69 63656a62 00682e74     P/gpio_object.h.
    ddec:	6c756f63 6f6e2064 69702074 74756f6e     could not pinout
    ddfc:	00000000 6d6e6970 6d207061 6d2d7369     ....pinmap mis-m
    de0c:	68637461 00000000 6d6e6970 6e207061     atch....pinmap n
    de1c:	6620746f 646e756f 726f6620 72657020     ot found for per
    de2c:	65687069 006c6172 6d6e6970 6e207061     ipheral.pinmap n
    de3c:	6620746f 646e756f 726f6620 6e756620     ot found for fun
    de4c:	6f697463 0000006e                       ction...

0000de54 <PinMap_SERCOM_PADEx>:
    de54:	00000008 00000002 00000003 00000009     ................
    de64:	00000012 00000003 00000010 00000003     ................
    de74:	00000003 00000011 00000013 00000003     ................
    de84:	00000012 00000023 00000003 00000013     ....#...........
    de94:	00000033 00000003 00000016 00000005     3...............
    dea4:	00000003 00000017 00000015 00000003     ................
    deb4:	00000018 00000025 00000003 00000019     ....%...........
    dec4:	00000035 00000003 000000ff ffffffff     5...............
    ded4:	ffffffff                                ....

0000ded8 <PinMap_SERCOM_PAD>:
    ded8:	00000000 00000001 00000003 00000001     ................
    dee8:	00000011 00000003 00000004 00000000     ................
    def8:	00000003 00000005 00000010 00000003     ................
    df08:	00000006 00000020 00000003 00000007     .... ...........
    df18:	00000030 00000003 00000008 00000000     0...............
    df28:	00000002 00000009 00000010 00000002     ................
    df38:	0000000c 00000002 00000002 0000000d     ................
    df48:	00000012 00000002 0000000e 00000022     ............"...
    df58:	00000002 0000000f 00000032 00000002     ........2.......
    df68:	00000010 00000001 00000002 00000011     ................
    df78:	00000011 00000002 00000012 00000021     ............!...
    df88:	00000002 00000013 00000031 00000002     ........1.......
    df98:	00000016 00000003 00000002 00000017     ................
    dfa8:	00000013 00000002 00000018 00000023     ............#...
    dfb8:	00000002 00000019 00000033 00000002     ........3.......
    dfc8:	0000001b 00000003 00000005 0000001c     ................
    dfd8:	00000013 00000005 0000001e 00000021     ............!...
    dfe8:	00000003 0000001f 00000031 00000003     ........1.......
    dff8:	00000022 00000005 00000003 00000023     "...........#...
    e008:	00000015 00000003 00000036 00000025     ........6...%...
    e018:	00000003 00000037 00000035 00000003     ....7...5.......
    e028:	0000003e 00000024 00000005 0000003f     >...$.......?...
    e038:	00000014 00000005 00000052 00000034     ........R...4...
    e048:	00000005 00000053 00000004 00000005     ....S...........
    e058:	000000ff ffffffff ffffffff 42000800     ...............B
    e068:	42000c00 42001000 42001400 42001800     ...B...B...B...B
    e078:	42001c00 000045e8 00004600 00004600     ...B.E...F...F..
    e088:	000045ae 000045ae 000045b4 000045ba     .E...E...E...E..
    e098:	000045ca 000045ee 000046a4 000046b2     .E...E...F...F..
    e0a8:	000046b2 00004636 0000463a 00004648     .F..6F..:F..HF..
    e0b8:	00004656 00004664 00004694 206e6970     VF..dF...F..pin 
    e0c8:	28203d21 4e6e6950 29656d61 0000434e     != (PinName)NC..
    e0d8:	4a5c3a43 696b6e65 775c736e 736b726f     C:\Jenkins\works
    e0e8:	65636170 65626d5c 2d322d64 6c697562     pace\mbed-2-buil
    e0f8:	696c2d64 72617262 61685c79 61745c6c     d-library\hal\ta
    e108:	74656772 61685c73 41545c6c 54454752     rgets\hal\TARGET
    e118:	6d74415f 545c6c65 45475241 41535f54     _Atmel\TARGET_SA
    e128:	6f435f4d 78657472 5c50304d 6f697067     M_CortexM0P\gpio
    e138:	6970615f 0000632e 42000800 42000c00     _api.c.....B...B
    e148:	42001000 42001400 42001800 42001c00     ...B...B...B...B
    e158:	6c637963 705f7365 755f7265 203e2073     cycles_per_us > 
    e168:	00000030 4a5c3a43 696b6e65 775c736e     0...C:\Jenkins\w
    e178:	736b726f 65636170 65626d5c 2d322d64     orkspace\mbed-2-
    e188:	6c697562 696c2d64 72617262 61685c79     build-library\ha
    e198:	61745c6c 74656772 61685c73 41545c6c     l\targets\hal\TA
    e1a8:	54454752 6d74415f 545c6c65 45475241     RGET_Atmel\TARGE
    e1b8:	41535f54 6f435f4d 78657472 5c50304d     T_SAM_CortexM0P\
    e1c8:	745f7375 656b6369 00632e72 75646f6d     us_ticker.c.modu
    e1d8:	0000656c                                le..

0000e1dc <tc_interrupt_vectors.12802>:
    e1dc:	00141312                                ....

0000e1e0 <_ZTVN4mbed8FileBaseE>:
	...
    e1e8:	00004bfd 00004c31                       .K..1L..

0000e1f0 <_ZTVN4mbed8FileLikeE>:
	...
    e1f8:	00002c41 00002c41 00002c41 00002c41     A,..A,..A,..A,..
    e208:	00002c41 00002c41 00002995 00000000     A,..A,...)......
    e218:	00000000 fffffffc 00000000 00000000     ................
    e228:	00000000                                ....

0000e22c <us_interface>:
    e22c:	00004b1d 00004b31 00004bb9 00004bdd     .K..1K...K...K..
    e23c:	00004b51                                QK..

0000e240 <us_data>:
    e240:	0000e22c 200043ac 42002c00 42003000     ,....C. .,.B.0.B
    e250:	42003400 001c1c1b 10000800 00002000     .4.B......... ..
    e260:	00005aa2 00005a6a 00005a86 00005a5e     .Z..jZ...Z..^Z..
    e270:	00005a86 000059ca 00005a86 00005a5e     .Z...Y...Z..^Z..
    e280:	00005a6a 00005a6a 000059ca 00005a5e     jZ..jZ...Y..^Z..
    e290:	00005b08 00005b08 00005b08 00005a8c     .[...[...[...Z..
    e2a0:	00005a6a 00005a6a 00005b52 00005a5c     jZ..jZ..R[..\Z..
    e2b0:	00005b52 000059ca 00005b52 00005a5c     R[...Y..R[..\Z..
    e2c0:	00005a6a 00005a6a 000059ca 00005a5c     jZ..jZ...Y..\Z..
    e2d0:	00005b08 00005b08 00005b08 00005b36     .[...[...[..6[..
    e2e0:	00005e6a 00005e62 00005e62 00005e5a     j^..b^..b^..Z^..
    e2f0:	00005dac 00005dac 00005e50 00005e5a     .]...]..P^..Z^..
    e300:	00005dac 00005e50 00005dac 00005e5a     .]..P^...]..Z^..
    e310:	00005dae 00005dae 00005dae 00005ef4     .]...]...]...^..
    e320:	00006c14 00006b02 00006be8 00006aee     .l...k...k...j..
    e330:	00006be8 00006bf2 00006be8 00006aee     .k...k...k...j..
    e340:	00006b02 00006b02 00006bf2 00006aee     .k...k...k...j..
    e350:	00006af8 00006af8 00006af8 00006e5a     .j...j...j..Zn..
    e360:	000074a8 00007486 00007486 0000747a     .t...t...t..zt..
    e370:	0000736e 0000736e 0000746e 0000747a     ns..ns..nt..zt..
    e380:	0000736e 0000746e 0000736e 0000747a     ns..nt..ns..zt..
    e390:	00007372 00007372 00007372 00007688     rs..rs..rs...v..

0000e3a0 <__sf_fake_stdin>:
	...

0000e3c0 <__sf_fake_stdout>:
	...

0000e3e0 <__sf_fake_stderr>:
	...
    e400:	00000043                                C...

0000e404 <_global_impure_ptr>:
    e404:	200000d4 2b302d23 6c680020 6665004c     ... #-0+ .hlL.ef
    e414:	47464567 464e4900 666e6900 4e414e00     gEFG.INF.inf.NAN
    e424:	6e616e00 32313000 36353433 41393837     .nan.0123456789A
    e434:	45444342 31300046 35343332 39383736     BCDEF.0123456789
    e444:	64636261 65006665 00646c25 0000e46e     abcdef.e%ld.n...
    e454:	0000e471 0000e474 61462d41 3938662d     q...t...A-Fa-f89
    e464:	33323130 37363534 2d2b005d 00303000     01234567].+-.00.
    e474:	00005878                                xX..

0000e478 <fpinan.5315>:
    e478:	00000034 fffffbce 000003cb 00000001     4...............
	...

0000e490 <tinytens>:
    e490:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
    e4a0:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
    e4b0:	64ac6f43 11680628                       Co.d(.h.

0000e4b8 <fpi.5279>:
    e4b8:	00000035 fffffbce 000003cb 00000001     5...............
    e4c8:	00000000                                ....

0000e4cc <_ctype_>:
    e4cc:	20202000 20202020 28282020 20282828     .         ((((( 
    e4dc:	20202020 20202020 20202020 20202020                     
    e4ec:	10108820 10101010 10101010 10101010      ...............
    e4fc:	04040410 04040404 10040404 10101010     ................
    e50c:	41411010 41414141 01010101 01010101     ..AAAAAA........
    e51c:	01010101 01010101 01010101 10101010     ................
    e52c:	42421010 42424242 02020202 02020202     ..BBBBBB........
    e53c:	02020202 02020202 02020202 10101010     ................
    e54c:	00000020 00000000 00000000 00000000      ...............
	...
    e5cc:	666e4900 74696e69 614e0079 4f50004e     .Infinity.NaN.PO
    e5dc:	00584953 0000002e 00000000              SIX.........

0000e5e8 <__mprec_tens>:
    e5e8:	00000000 3ff00000 00000000 40240000     .......?......$@
    e5f8:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    e608:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    e618:	00000000 412e8480 00000000 416312d0     .......A......cA
    e628:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    e638:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    e648:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    e658:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    e668:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    e678:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    e688:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    e698:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    e6a8:	79d99db4 44ea7843                       ...yCx.D

0000e6b0 <__mprec_bigtens>:
    e6b0:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    e6c0:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    e6d0:	7f73bf3c 75154fdd                       <.s..O.u

0000e6d8 <p05.5314>:
    e6d8:	00000005 00000019 0000007d              ........}...

0000e6e4 <_init>:
    e6e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    e6e6:	46c0      	nop			; (mov r8, r8)
    e6e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
    e6ea:	bc08      	pop	{r3}
    e6ec:	469e      	mov	lr, r3
    e6ee:	4770      	bx	lr

0000e6f0 <__init_array_start>:
    e6f0:	000000dd 	.word	0x000000dd
    e6f4:	000016fd 	.word	0x000016fd
    e6f8:	00002905 	.word	0x00002905

0000e6fc <_fini>:
    e6fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    e6fe:	46c0      	nop			; (mov r8, r8)
    e700:	bcf8      	pop	{r3, r4, r5, r6, r7}
    e702:	bc08      	pop	{r3}
    e704:	469e      	mov	lr, r3
    e706:	4770      	bx	lr

0000e708 <__fini_array_start>:
    e708:	000000b5 	.word	0x000000b5
